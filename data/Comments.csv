Id,PostId,Score,Text,CreationDate,UserId
"107579302","10999165","0","@Eric-Brotto For your answer to be complete, you need to add the `git fetch -p` command to fetch changes on other machines","2020-03-22 08:54:54","5649639"
"45056138","21890252","0","I was hoping the following would work, it doesn't quite: `f(){c=$(git rev-list ${1}..head --count); git reset --soft HEAD~$c && git commit --edit -m\""$(git log --format=%B --reverse ${1}..head)\""; }`","2015-02-06 12:04:29","1240268"
"45056506","21402241","3","That centers it vertically.","2015-02-06 12:24:56","274561"
"45061280","373848","14","What slier said:  you cannot `git reset --hard <commit hash> <filename>`. This will error with `fatal: Cannot do hard reset with paths.` What Motti Strom said: use `git checkout <commit hash> <filename>`","2015-02-06 05:36:26","99717"
"45061523","727725","59","The '--' is not only a git convention, but something you find in various places in on the *nix commandline.  `rm -- -f` (remove a file named `-f`) seems to be the canonical example. [More detail here](http://stackoverflow.com/a/1192194/99717)","2015-02-06 05:49:24","99717"
"29436734","64966","2","Note that -x or -X flags remove the files ignored by .gitignore, but not those ignored by `update-index --assume-unchanged`.","2013-11-05 10:52:37","134536"
"6187","67458","12","Another reason to use double quotes is in case $DIRECTORY is not set for some reason.","2008-09-15 10:41:21","1438"
"6207","67712","1","You can run git commands with or without the hyphen. Both ""git-branch"" and ""git branch"" will work.","2008-09-15 10:55:19","9360"
"91655809","11766839","0","But how can you use PUT to create a new resource if it doesn't exist, while your ID generation method is on Auto Increment ? Usually ORM's does auto generate the ID for you, like the way you want it to be in a POST for example. Does it mean that if you want to implement PUT the right way you have to change your id auto generation ? This is awkward if the answer is yes.","2018-09-16 03:28:21","1183020"
"9652","79988","17","A recommendation to avoid using the heap is pretty strong. Modern systems have good heap managers, and modern dynamic languages use the heap extensively (without the programmer really worrying about it). I'd say use the heap, but with a manual allocator, don't forget to free!","2008-09-17 04:31:42","893"
"9662","79988","2","If you can use the stack or the heap, use the stack. If you can't use the stack, really no choice. I use both a lot, and of course using std::vector or similar hits the heap. For a novice, you avoid the heap because the stack is simply so easy!!","2008-09-17 04:35:51","11440"
"9666","79997","2","Also worth mentioning here that intel heavily optimizes stack accesses, especially things such as predicting where you return from a function.","2008-09-17 04:37:38","11440"
"10572","67748","15","You don't need refs/remotes here. git checkout -b dev origin/dev will work fine.","2008-09-17 01:10:34","12089"
"107589354","348170","0","if readers like to use GUI, you can right-click a file and click reset, or unstage","2020-03-23 09:04:17","964196"
"18916","105078","9","Note that this isn't a GUID in the technical sense, because it does nothing to guarantee uniqueness.  That may or may not matter depending on your application.","2008-09-19 08:07:33","7154"
"19012","105074","204","Actually, the RFC allows for UUIDs that are created from random numbers. You just have to twiddle a couple of bits to identify it as such.

See section 4.4. Algorithms for Creating a UUID from Truly Random or Pseudo-Random Numbers:

http://www.rfc-archive.org/getrfc.php?rfc=4122","2008-09-19 08:28:33","6159"
"19046","105034","24","GUIDs when repesented as as strings are at least 36 and no more than 38 characters in length and match the pattern ^\{?[a-zA-Z0-9]{36}?\}$ and hence are always ascii.","2008-09-19 08:35:06","17516"
"91663526","244858","0","Just capturing a relevant excerpt from the first link that @MichaelBurr provided (the second is seemingly irretrievable): ""Suppose you are using JSON to keep configuration files, which you would like to annotate. Go ahead and insert all the comments you like. Then pipe it through `JSMin` before handing it to your JSON parser.""--Douglas Crockford","2018-09-17 12:45:34","148680"
"24284","116252","4","That's exactly what I said.  Both paragraphs are addressed in the snippet of FAQ I posted.","2008-09-22 05:36:50","8454"
"24399","105078","3","A quick note about performance. This solution creates 36 strings total to get a single result. If performance is critical, consider creating an array and joining as recommended by:

http://tinyurl.com/y37xtx

Further research indicates it may not matter, so YMMV:

http://tinyurl.com/3l7945","2008-09-22 06:14:32","17834"
"25060","116252","1","I think the aside is unteresting and useful to know -- it can be fixed, just don't expect it anytime soon when there's such an easy workaround for most cases.","2008-09-22 10:10:36","15464"
"25994","116252","0","Sorry, I didn’t read the last paragraph, and while I did read the first paragraph, well, I’m not sure why I repeated that information.","2008-09-23 07:37:13","9410"
"29409","116252","2","Of course, this extra answer does serve to point out the fact.","2008-09-24 06:44:42","17688"
"60278562","59916","1","@mattb This version failed with directory names that contain special chars and double quote char. e.g. **mkdir ""$(printf ""\1\2\3\4\5\6\7\10\11\12\13\14\15\16\17\20\21\22\23\24\25\26\27\30\31\32\33\34\35\36\37\40\41\42\43\44\45\46\47testdir"" """")""**","2016-03-31 08:32:41","6010343"
"35080","134853","69","The way to avoid that is to return false in the onclick event handler.","2008-09-25 09:22:54","16800"
"36161","135248","133","This approach restricts the 'link' to a mouse only operation.  An anchor can be visited via the keyboard and its 'onclick' event is fired when the enter key is pressed.","2008-09-26 07:09:01","17516"
"36167","135139","1","The blog entry does not cite the reference as to why javascript:void(0) should be avoided.","2008-09-26 07:20:27","17516"
"36239","134865","20","So in user agents with JavaScript enabled and the function supported this run a JavaScript function, falling back (for user agents where the JS fails for whatever reason) to a link to the top of the page? This is rarely a sensible fallback.","2008-09-26 08:09:21","19068"
"36242","134853","35","Returning false in the event handler doesn't avoid that if JavaScript the JS doesn't run successfully.","2008-09-26 08:10:02","19068"
"36456","136138","776","A staticmethod isn't useless - it's a way of putting a function into a class (because it logically belongs there), while indicating that it does not require access to the class.","2008-09-26 10:10:35","4966"
"36738","136103","3","The only downside with this (from memory, I may be wrong) is that IE doesn't consider an A to be an A if you don't have a href inside it. (So CSS rules won't work)","2008-09-26 12:01:55","11410"
"37041","136138","149","Hence only 'basically' useless. Such organization, as well as dependency injection, are valid uses of staticmethods, but since modules, not classes like in Java, are the basic elements of code organization in Python, their use and usefulness is rare.","2008-09-26 01:40:00","17624"
"37437","134865","23","""ideally with a real link to follow in case the user has JavaScript disabled"", it should be going to a useful page not #, even if it's just an explanation that the site needs JS to work. as for failing, I would expect the developer to use proper browser feature detection, etc before deploying.","2008-09-26 03:41:58","9128"
"39044","134853","31","using ""#someNonExistantAnchorName"" works well because it has nowhere to jump to.","2008-09-27 02:46:32","6144"
"45077839","22654961","38","I don't know why this is not rated higher. Dead simple, and without the small but potential danger of git reset --hard.","2015-02-06 02:56:24","584503"
"60385","176269","0","I thought it was the other way around. A URL refers to a concrete object, and a URI can refer to that or a concept or anything else.","2008-10-06 09:30:00","5697"
"60392","176269","4","A URL locates a resource and is a kind of URI, which identifies a resource.","2008-10-06 09:33:40","1659"
"60413","176274","16","Only URIs with the urn: scheme are URNs. A URI could be a classic URL, a URN, or just a URI that doesn't start with ""urn:"" and doesn't refer to a location of a resource.","2008-10-06 09:38:57","1659"
"60439","176274","0","One example are InfoPath URNs, which are important i.e. in Sharepoint Workflows: urn:schemas-microsoft-com:office:infopath:blogsample:-myXSD-2004-05-19T20-48-18","2008-10-06 09:49:54","91"
"14442258","10563611","1","So, if the name of the branch you `checkout` is the identical to the name of the remote branch, everything after the ""/"", then git will create a branch of the same name, everything after the ""/"", ""tracking"" that remote? And by tracking, we mean: `git push`, `git pull`, etc. will be done on that remote? If this is correct, then expand on your answer with more information, because I aggree with @Daniel, this answer deserves more rep.","2012-06-14 10:08:23","934739"
"45082482","8212184","1","""The notion of ""a value that might be a value of type T OR nothing"" is its own type, and should be represented as such (e.g. Maybe<T> or Optional<T>)"" - you may think that all references in Java are Optional<T> and you may switch to DefinetlyInitialized<T> by for using underused final keyword or introduce Mandatory<T>. So what's the difference?.. Anyway I like current Java defaults more because things around us are rather optional. It is optional for 'the kettle to be filled with water before cooking', and that 'there is some fuel in the car before you leave' etc.","2015-02-06 05:03:37","448078"
"71122","179123","868","For those somewhat new to git: Laurie's point about having not yet pushed is important.  Like rebasing, this is changing the history.  If someone has cloned/pulled from your repo between the original and rewritten history then they won't be able to pull after the rewrite (for that branch).","2008-10-10 08:12:17","825"
"91693787","1202969","4","I am not familiar with Nice, but Kotlin implements the same idea, have nullable and not-null types build into the language's type system. A lot more concise than Optionals or null Object pattern.","2018-09-17 07:29:03","2583402"
"107623680","59901196","4","This regex fails on 'user+addition@gmail.com' and on 'user@email.longdomain'. Do not use.","2020-03-24 11:15:49","2060993"
"45094055","28057591","2","This will work for very common, basic email addresses, but there are certain edge cases where this will reject valid email addresses. If you've read the other 36(!) answers on here, you would have known that by now.","2015-02-07 12:12:43","2074608"
"45095703","2341539","3","If your page loads jQuery then use `$.isEmptyObject()`, don't waste cycles with non-obvious conversions.","2015-02-07 02:17:01","1162195"
"107629225","927358","4","@YiminRong Undo *what* exactly? There are dozens of very different functional cases where ""undoing"" means something **completely** different. I'd bet adding a new fancy ""magic wand"" would only confuse things more.","2020-03-24 02:27:03","1057485"
"85806","215266","0","You don't need to prefix System to use String.","2008-10-18 07:24:16","4092"
"60309994","11444416","10","`let` at the top level scope is *not* identical to `var` -- `let` explicitly will not create globally-scoped references: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let#Scoping_rules","2016-03-31 09:28:39","438992"
"60310094","30606474","44","@stimpy77	 It explicitly states ""let is scoped to the nearest enclosing block""; does every way that manifests need to be included?","2016-03-31 09:32:13","438992"
"60310270","30606474","8","there were a lot of examples and none of them properly demonstrated the matter .. I might've upvoted both the accepted answer and this one?","2016-03-31 09:38:33","11398"
"45107223","487278","0","_""In comparing search algorithms we decide that this comparison is our 'n'.""_ Slight wording tweak needed. I think you mean that the comparison is ""the operation we care about"", not ""our 'n'"". 'n' is the number of items, in this case, the number of names in the phone book. Overall, great answer.","2015-02-07 04:49:47","80112"
"107638945","1274447","2","It would help if the answer also specified how to avoid the removal of files that are now untracked and added to gitignore when someone else performs a git pull.  Also, when switching branches, the files will be removed.  this is highly problematic if you have tmp files that represent a state (eg in terraform) that get blown away.","2020-03-24 07:59:26","1692999"
"97117","59916","30","For portability beyond bash, $0 may not always be enough.  You may need to substitute ""type -p $0"" to make this work if the command was found on the path.","2008-10-23 08:15:01","22704"
"99470","231778","115","This is close, but not correct.  Every time you call a function with a yield statement in it, it returns a brand new generator object.  It's only when you call that generator's .next() method that execution resumes after the last yield.","2008-10-24 06:11:04","30153"
"14471527","9849276","0","It returns true if ""b"" is in the array ""a""... I don't know how else to explain it...","2012-06-16 12:41:36","1145932"
"100409","231801","1","`__getitem__` could be defined instead of `__iter__`. For example: `class it: pass; it.__getitem__ = lambda self, i: i*10 if i < 10 else [][0]; for i in it(): print(i)`, It will print: 0, 10, 20, ..., 90","2008-10-25 02:03:38","4279"
"29489200","4200724","2","Nice solution, but some refactoring will be better! :)","2013-11-07 09:10:08","661933"
"29489572","1375234","1","or shorter: `return type.GetFields().Where(x => x.IsLiteral).Select(x => x.GetValue(null)).Cast<Enum>();`","2013-11-07 09:21:54","661933"
"29489695","105402","161","@Jessy this *does* work in case of duplicate situations like `enum E {A = 0, B = 0}`. `Enum.GetValues` results in two values being returned, though they are the same. `E.A == E.B` is true, so there is not distinction. If you want individual names, then you should look for `Enum.GetNames`.","2013-11-07 09:25:53","661933"
"106892","244777","184","@StingyJack:  To explain things that may not be obvious, or whatever else one might do with comments.  I for one often have comments in data files.  XML, ini files, and many other formats include provisions for comments.","2008-10-28 08:51:29","12711"
"107955","66271","10","You can do it all in one line like this:

DIRECTORY=$(cd `dirname $0` && pwd)","2008-10-29 08:38:07","7412"
"29495904","16620746","0","Try this as well - this worked for me: 	InputMethodManager imm = ((InputMethodManager) getSystemService(Activity.INPUT_METHOD_SERVICE));
	imm.hideSoftInputFromWindow(getWindow().getCurrentFocus().getWindowToken(), 0);","2013-11-07 12:20:58","1414726"
"75226936","11444416","3","This answer does not address part of the question: ""When should `let` be used over `var`?"".  

I've attempted to answer that along with collecting a lot of the useful material in other answers [below](/questions/762011/#44103318).  If some kind soul is willing to see this put into the community wiki, I will not object to copy-paste in whole or in part.","2017-05-22 01:27:09","643826"
"107644601","53183593","3","Why isn't this the accepted answer? Is there any difference using `realpath` from resolving ""manually"" with a loop of `readlink`? Even the `readlink` man page says `Note realpath(1) is the preferred command to use for canonicalization functionality.`","2020-03-25 01:14:16","7420421"
"107644834","53183593","1","And by the way shouldn't we apply `realpath` before `dirname`, not after? If the script file itself is a symlink... It would give something like `DIR=""$(dirname ""$(realpath ""${BASH_SOURCE[0]}"")"")""`. Actually very close to the answer proposed by Simon.","2020-03-25 01:32:10","7420421"
"107645376","55291427","0","@Dev not in all the cases Dev, I had to update recently since using bitbucket and codecommit, step 3 is necessary","2020-03-25 02:19:52","5661594"
"126666","273208","22","with the try/except, you will mask errors in directory creation, in the case when the directory didn't exist but for some reason you can't make it","2008-11-07 07:09:55","1199"
"126884","273227","8","The race condition is a good point, but the approach in http://stackoverflow.com/questions/273192/#273208, will mask a failure to create the directory. Don't feel bad for voting down - you don't like the answer. It's what votes are for.","2008-11-07 08:35:41","1199"
"75234175","28865728","5","This answer is a lot more easy to understand. I can see the clearly pictures of real example of the URLs & URN. And for anyone to read more about this... https://danielmiessler.com/study/url-uri/","2017-05-22 07:41:58","128761"
"14486649","105402","107","This doesn't work if you have duplicate values in the enumerator list.","2012-06-17 03:50:38","652038"
"45131477","176264","38","There still seems to be a lot of confusion about URI vs URL, even by those who attempted to answer the question. It would benefit everyone to see practical examples of URLs that are not URIs, examples of URIs that are not URLs, and examples that are URLs *and* URIs.","2015-02-08 06:43:00","72321"
"60338414","6591218","3","After doing this, you should also run `git push origin :<old_name> <new_name>` to update your remote branch names.","2016-04-01 02:52:32","4926060"
"107658442","927358","24","@YiminRong Not buying it. People would still fumble and undo things not to be undone. But more importantly, `git reflog` is already close to what you describe, but gives the user more control on what's to be (un)done. But please, no, ""undo"" does not work the same everywhere, and people would *expect* many different things for the feature to achieve. Undo last commit? Undo last action? If last action was a push, undo how exactly, (reset and push) or (revert and push)?","2020-03-25 01:23:33","1057485"
"91736655","100146","30","ppperry he obviously meant you can't recreate type without using type itself as a metaclass. Which is fair enough to say.","2018-09-18 11:24:10","7513138"
"14499679","7216269","1","Agree with @test - I found this answer very useful. I had problems with a repository where I had a replace which broke the history, but it worked with this method. Thanks a lot for mention this method Dave !","2012-06-18 03:13:57","907892"
"107666216","36344404","3","Step by step: https://github.com/desktop/desktop/issues/1785#issuecomment-483011281","2020-03-25 05:03:10","1154773"
"14500851","9849276","4","This part I dont understand ""!!~"". And I think this will not work in IE8 because IE8 doesnt support indexOf() on Array object.","2012-06-18 05:29:51","126414"
"14506669","487278","76","_""By the time you get to 200 towns there isn't enough time left in the universe to solve the problem with traditional computers.""_ When the universe is going to end?","2012-06-18 10:43:39","161640"
"91749097","32299832","0","@kojow7 As opposed to ""layered"". Instead of text floating on top of the other elements. It is similar to the difference between SVG and PNG images.","2018-09-19 09:35:59","1009901"
"29518769","671132","2","It's amazing how an answer that's completely misleading and misses the point completely is so popular. This answer isn't merely incomplete, as the author suggests in the edit. It's absolutely wrong.","2013-11-07 11:12:12","1202421"
"91760121","10442532","0","Probably `input.getContext().getSystemService(Context.INPUT_METHOD_SERVICE)`.","2018-09-19 02:28:11","2914140"
"14515425","487278","1","""For two one million digit numbers we need to do one trillion (1012) multiplications and two million adds.""  Given that there are at most 10 unique numerals in each million digit number, memoization means that you need to do at most 20 * 1 million digits multiplications if you have O(n) space.","2012-06-18 04:01:07","20394"
"29527140","671132","0","thanks for your instance. It may be about some operatoins on the resources. However,in the most common implementation scenario, operations stand for the GET/POST/PUT/DELETE/PATCH method in HTTP and the parameter is URI which stands for the resources.","2013-11-08 07:30:00","1889327"
"75277213","549","0","What about using time, that is needed to fill in the form? One should do some research, present a website to bots like meat an observe the time needed to fill the form and submit. Should be under a second. Then observe what time human users need. Simply take the average or even do a bayes classification to differenciate the one from another...","2017-05-23 08:19:28","1056644"
"14521615","762018","55","@olliej, actually Mozilla is just ahead of the game. See page 19 of http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf","2012-06-18 08:16:29","652722"
"60370665","11892411","0","And it never occurred to me that no test can be conclusive, unless it runs as root.  `test -d /unreadable/exists` will fail, even if the argument exists.","2016-04-02 05:32:46","667820"
"14524625","67699","148","The accepted answer here (`git branch -a`) shows you the branches in the remote, but if you attempt to check any of those out you will be in a 'detached HEAD' state. The next answer down (second most upvotes) answers a different question (to wit: how to pull all branches, and, again, this only works for those you're tracking locally). Several of the comments point out that you could parse the `git branch -a` results with a shell script that would locally track all the remote branches. Summary: There's no git native way to do what you want and it might not be all that great an idea anyway.","2012-06-18 10:43:52","955159"
"14527744","7244456","110","As your fork only exists on github, and github does not have tools for doing merges through the web interface, then the right answer is to do the upstream merge locally and push the changes back to your fork.","2012-06-19 03:50:50","9279"
"14527784","7244456","33","Here is a great tutorial I found on working with github: http://gun.io/blog/how-to-github-fork-branch-and-pull-request/","2012-06-19 03:55:04","9279"
"45166739","22345808","468","Posting here to hopefully catch people that don't quite think this through, but both ^ and ~ assumes you can trust minor and point releases from your dependencies.  If you are publishing a library and want other people to trust you, DO NOT BLINDLY ACCEPT DOWNSTREAM DEPENDENCIES. A bad dot release from your dependency can cause a chain reaction upstream, and will have people knocking at YOUR door when things go pear shaped.   This is another huge reason to use npm shrinkwrap on your production code.","2015-02-09 06:33:52","1226657"
"29544475","15315403","0","That's a good point alex!. I thing that we both agree that this method isn't thread-safe in many ways. Even the input stream operations aren't thread-safe.","2013-11-08 04:19:44","903998"
"202429","373834","25","Git never removes anything. Your old commits are still there but unless there is a branch tip pointing at them they are not reachable anymore. git reflog will still show them until you clean your repository with git-gc.","2008-12-17 09:15:21","43582"
"29547456","5201642","213","Ha! I like this method.  It is the one closes to the spirit of the problem.  It's a pity that it requires so much voodoo.  Something like this should be added to one of the basic commands.  Possibly `git rebase --squash-recent`, or even `git commit --amend-many`.","2013-11-08 05:50:16","658298"
"107708215","59418364","0","Please put the information from the comments into your answer (by [editing your answer](https://stackoverflow.com/posts/59418364/edit)). Stack Overflow is [not a forum](http://meta.stackexchange.com/a/92115). Thanks in advance.","2020-03-27 12:11:37","63550"
"107708802","51023211","0","What is the difference? Will it work with spaces in the file path?","2020-03-27 12:59:23","63550"
"14542367","9849276","63","""~"" is an operator that floors, inverts and subtracts 1 from a number. indexOf returns -1 if it fails, so ""~"" turns -1 into ""0"". using ""!!"" turns numbers into boleans (!!0===false)","2012-06-19 02:41:37","1145932"
"107715134","2432799","0","If you are using Intellij Idea, simply open the terminal and change the command. It will work right there to set the origin. Thanks for sharing this!","2020-03-27 08:33:41","2293479"
"29556901","6866485","141","Missing a crucial point: If the said commit was previously 'pushed' to the remote, any 'undo' operation, no matter how simple, will cause enormous pain and suffering to the rest of the users who have this commit in their local copy, when they do a 'git pull' in the future.

So, if the commit was already 'pushed', do this instead:

    git revert <bad-commit-sha1-id>
    git push origin :","2013-11-08 11:43:18","175169"
"29557201","6866485","27","@FractalSpace, it won't cause ""enormous pain and suffering.""  I've done a few force pushes when using Git with a team.  All it takes is communication.","2013-11-09 12:00:10","5486"
"91801040","64966","4","After struggling and cursing for 45 solid minutes, I found @EduardoBezerra's comment... I think the OP should edit his answer to emphasize git clean's behavior - of only deleting stuff in the directory you are - and subdirectories thereof. It's not clear from git help or from the answer itself.","2018-09-20 03:43:29","609285"
"75303632","11828573","21","if you don't have permissions on the file but have sudo permissions `:w ! sudo tee %`","2017-05-23 06:53:12","704087"
"29559369","6866485","25","@Kyralessa In my workplace, messing up entire team's workflow and then telling them how to fix sh*t is not called 'communication'. git history re-write is a destructive operation that results in trashing of parts of the repo. Insisting on its use, while clear and safe alternatives are available is simply irresponsible.","2013-11-09 03:02:51","175169"
"75305553","31028197","8","@cavalcade This is an extremely general method of ensuring the editor is in normal mode then safely quitting.  In normal usage all you need is `:q` or `:wq`","2017-05-23 07:55:36","125415"
"91805349","89255","0","If you want to **create a list out of a command with parameters**, a list which can be used with `subprocess` when `shell=False`, then use `shlex.split` for an easy way to do this https://docs.python.org/2/library/shlex.html#shlex.split (it's the recommended way according to the docs https://docs.python.org/2/library/subprocess.html#popen-constructor)","2018-09-20 06:07:21","277267"
"75308701","231855","532","`yield` is not as magical this answer suggests. When you call a function that contains a `yield` statement anywhere, you get a generator object, but no code runs. Then each time you extract an object from the generator, Python executes code in the function until it comes to a `yield` statement, then pauses and delivers the object. When you extract another object, Python resumes just after the `yield` and continues until it reaches another `yield` (often the same one, but one iteration later). This continues until the function runs off the end, at which point the generator is deemed exhausted.","2017-05-23 09:41:53","3830997"
"75310149","2389361","0","Git - a story of 3 trees (head, index, and working tree explained in a very helpful way): [Reset Demystified](https://git-scm.com/blog/2011/07/11/reset.html)","2017-05-23 10:51:30","1107226"
"91812219","24827594","2","Working in Node >=8.10 for AWS Node.js Lambda, so this is great.  Very clean and simple solution! 👍🏻","2018-09-20 10:48:50","1623926"
"75313991","11828270","105","To prevent `git commit` sending you to vim in the future:                            
`git config --global core.editor=""nano""`","2017-05-24 03:19:49","4216625"
"75314585","11828270","2","Not mentioned yet; but if you are working in a GUI, you can use gvim and close the window. (If there are unsaved changes it will prompt Save/Discard/Cancel).","2017-05-24 04:02:05","1505939"
"75316359","2610497","3","I can see no problem here ... The placeholder's text color is now red.  Maybe other modern browsers now support it.","2017-05-24 05:28:18","4942925"
"75316479","31028197","7","Not general enough! What about if I (a beginner) typed `i<Ctrl-O>gQ<Ctrl-R>=<Ctrl-K>`?","2017-05-24 05:33:56","10311"
"75317467","31028197","1","@porges thanks for the test case! There are also some other test cases which prove that the original method was woeful. I edited the answer to be more general now.","2017-05-24 06:07:53","310344"
"75320223","31028197","0","@HeikkiNaski at least for me I need Enter after Ctrl-C as well (to escape the expression register)","2017-05-24 07:26:23","10311"
"250042","426273","0","you can also go
 $(""#myTable input:checkbox"").each(...);","2009-01-08 10:37:51","9443"
"250074","426276","1","Yes this is setting the attribute value, and uncheck by removing the attribute. I have updated my answer to show this.","2009-01-08 10:48:52","4642"
"250306","426314","4","top one will fail...checked is not a jquery object member","2009-01-09 12:20:07","6440"
"107734470","29505062","0","better, because of [ ! -d directory/path to a directory ]","2020-03-27 07:46:42","1855805"
"29583474","3407920","26","@mmell Only on a rebase, apparently. See [`this question`](http://stackoverflow.com/questions/2959443/why-is-the-meaning-of-ours-and-theirs-reversed-with-git-svn)","2013-11-10 06:19:14","703382"
"60423263","271526","2","Nulls should be avoided in high-level code. Tony Hoare, who invented null references, calls them ""a billion-dollar mistake"". Take a look [here](http://www.softwaregeek.net/2016/04/how-to-avoid-null-checks-in-java.html) for some ideas.","2016-04-04 01:05:50","1856235"
"107740652","7244456","0","what if there is some conflicts after `git rebase upstream/master`? how to solve the conflict?","2020-03-28 03:17:51","6169688"
"91823624","31733623","0","@pspi your answer is lot more clear than any other answers here","2018-09-21 09:16:22","3156006"
"14584427","246128","0","Short version does not work in cygwin when the path is like ""C:\..."". Output of cd is `: No such file or directoryabc` where `abc` is the end of the directory name that contains the script. Second version works though.","2012-06-20 09:59:29","22820"
"60429249","52713","4","@MichałTrybus to clean the whole repository regardless of where you are inside it, you can use `git checkout -- :/` (I was looking for this myself!)","2016-04-04 03:20:52","266309"
"278816","555","1","Given the recent MITM vulnerability surrounding signed SSL certificates (https://blog.startcom.org/?p=145) so a combination of SSL and some kind of Challenge response authentication (There are alternatives to SRP) is probably a better solution.","2009-01-20 12:20:23","13834"
"45200382","22537629","5","I find the most user-friendly configuration format is still INI. It's straightforward and not very syntax heavy. This makes it less intimidating for users just dipping their toes in the configuration pond.","2015-02-10 03:15:18","3774368"
"75334864","122102","12","Note that `JSON` method will loose any Javascript types that have no equivalent in JSON. For example: `JSON.parse(JSON.stringify({a:null,b:NaN,c:Infinity,d:undefined,e:function(){},f:Number,g:false}))` will generate `{a: null, b: null, c: null, g: false}`","2017-05-24 01:06:47","3356679"
"91831513","51515986","0","Exactly! It resets your changes to the HEAD of the branch! Not doing one by one","2018-09-21 01:05:29","1272263"
"60433322","35737150","3","This will also remove valid changes to tracked files. I wouldn't recommend it.","2016-04-04 05:06:21","4594973"
"29587123","14415881","15","I know this doesn't answer your question in a theoretical sense, but practically speaking, nobody's looking at your socks.  Not pairing them is O(k).","2013-11-10 11:25:32","929845"
"14589550","630471","4","`POST /items` adds a new item to an already defined resource ('item'). It does not, as the answer says, ""create a group."" I don't understand why this has 12 votes.","2012-06-21 05:26:07","109618"
"14589578","630471","0","Out of the box, Rails does not support 'creating a group' via REST. To 'create a group' by which I mean 'create a resource' you have to do it via the source code.","2012-06-21 05:28:13","109618"
"107765594","59498318","0","Nice, others answers didn't work, this did using MainActivity with EditText control","2020-03-29 08:34:10","1423608"
"45215639","8888015","12","Commits that weren't pushes before the hard reset can be recovered using `git reflog`, which list all commits, also those without a base. Until you cleanup your local copy using `git gc`, then all is lost","2015-02-10 10:24:27","189431"
"14604510","630471","0","It has 12 votes because it predates the change that was made that added the group thing. I've reverted the change.","2012-06-21 03:20:37","722"
"303010","555","0","a lot of this stuff is situational. i tend not to use session cookies at all. cookies getting hijacked is almost always the servers fault. man in the middle / packet sniffing arent that common","2009-01-28 05:26:01","26"
"303545","487271","6","A hashtable requires an algorithm to run to calculate the index of the  actual array ( depending on the implementation ). And an array just have O(1) because it's just an adress. But this has nothing to do with the question, just an observation :)","2009-01-28 11:29:54","39106"
"303554","487271","7","jon's explanation has very much todo with the question i think. it's exactly how one could explain it to some mum, and she would eventually understand it i think :) i like the clothes example (in particular the last, where it explains the exponential growth of complexity)","2009-01-28 11:32:26","34509"
"303556","487271","0","Oh i don't mean the whole answer, just the hashtable lookup and that it can, actually, Never be as fast as a direct adressing :)","2009-01-28 11:34:04","39106"
"303563","487279","2","It's not about space.  It's about complexity which means time.","2009-01-28 11:35:02","10661"
"303566","487271","4","Filip: I'm not talking about address an array by index, I'm talking about finding a matching entry in an array. Could you reread the answer and see if that's still unclear?","2009-01-28 11:35:58","22656"
"303591","487278","607","While the other answers focus on explaining the differences between O(1), O(n^2) et al.... yours is the one which details how algorithms can get classified into n^2, nlog(n) etc. +1 for a good answer that helped me understand Big O notation as well","2009-01-28 11:42:39","54440"
"303642","487258","1","If this is a duplicate of anything, it is: http://stackoverflow.com/questions/107165/big-o-for-eight-year-olds","2009-01-28 12:03:01","2635"
"303686","487278","0","I like the explanation. It is important to note that big O is about worst-case complexity, e.g. For sorting - for the sequence which requires the most operations, For multiplication - probably the largest possible input numbers, etc.","2009-01-28 12:25:11","1702"
"303696","487278","0","It's not about ""worst-case"" it's used to define best-, worst- and general-case.","2009-01-28 12:29:15","39106"
"303759","487279","14","I have always believed it can be about time OR space. but not about both at the same time.","2009-01-28 12:58:59","47026"
"60445207","35737150","2","Yeah, you'd want to commit changes to tracked files first.","2016-04-05 12:01:29","304712"
"309811","487278","1","A couple of other points here is that the complexity can be either time or space and that one can talk about the big-O of best, average, or worst case scenarios, or at least that is what I remember from school.","2009-01-30 01:05:12","8745"
"75358918","11828573","1","What's the difference between ""Save and quit"" and ""Write and quit""?","2017-05-25 03:20:50","3357935"
"75360901","16047306","30","Docker isn't a virtual machine - it is a configuration management tool.","2017-05-25 05:19:33","150050"
"313253","487278","1","...NP-complete...: That's not correct - a problem that is solvable in n^a time is said to be in P, polynomial time. A problem that is NP-complete means that if this problem is solvable in P time, then every NP problem is solvable in P time. NP-hard just means that it's harder than the hardest NP.","2009-01-30 10:16:23","39808"
"75361526","11828573","2","If you have only read only permissions to the file, `:wq!` won't write it. If that happened, it would be a security flaw in the OS.","2017-05-25 05:48:03","2613444"
"45228250","16957175","11","ack or ack-grep has nice highlights, but find+grep when proper used is much better in performance","2015-02-11 09:00:16","1416144"
"319208","487278","24","one might want to add that big-O represents an upper bound (given by an algorithm), big-Omega give a lower bound (usually given as a proof independent from a specific algorithm) and big-Theta means that an ""optimal"" algorithm reaching that lower bound is known.","2009-02-02 07:16:22","25318"
"29603857","5801728","1","Actually, these are accurate examples.  On the Web, this is very often the difference.","2013-11-11 03:49:38","1188377"
"14626749","6866485","0","Doesn't work with OS x. - I get ""ambiguous argument 'HEAD^' ... Unknow revision or  path not in the working tree"". Using he tilde version makes no difference. But git log and git status both appear to show there is a valid commit in place","2012-06-22 10:53:40","153422"
"14629085","6866485","1","@Kyralessa - yes, I think that might be the problem. In this case, I committed something I thought was small - and when I tried to Push, I found it was 400 MB of data (!) (a deep nested Resources folder containing video and music files). So, I need to undo the commit, but keep the source files, and I'll commit them later, when I have better net connection - or to a different repo.","2012-06-22 12:35:31","153422"
"75374188","43672227","0","for '==' dataType  is not important","2017-05-25 12:04:43","6180115"
"14631942","178450","24","Here's a simple benchmark testing is() against regexp:http://jsperf.com/jquery-is-vs-regexp-for-css-visibility. Conclusion: if you're out for performance, use regexp over is() (since is() looks for all hidden nodes first before looking at the actual element).","2012-06-22 02:12:11","219324"
"91864751","47475081","1","Well most of the js devs are web developers, and we won't understand what bitwise operators do, because we don't use them most of the times we develop. Actually I never needed any of them, and I am a js dev since '97. So your example code is still totally unreadable to the average web developer who will read it. Not to mention that you still use single letter variable names, which makes it even more cryptic. Probably read Clean Code, maybe that helps: https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882","2018-09-22 10:16:42","607033"
"336039","522569","10","That should probably be `xrange` for pre-3.0.","2009-02-06 10:52:56","46387"
"75387346","11227877","6","I would recommend a look at: https://en.wikibooks.org/wiki/Optimizing_C%2B%2B/Writing_efficient_code/Performance_improving_features  which provides a good discussion with examples of this topic including some that are not mentioned in any comments that i have seen regarding this question.","2017-05-25 05:51:33","7886227"
"45257825","19506355","15","@MichaelMcGinnis After merging locally, you would have to push your changes to github. `git push origin master`","2015-02-11 10:50:56","405096"
"60472239","682343","2","Why not just delete the hidden .git folder lol.. and do git init again... (assuming you're making the git repo for the FIRST time and have not done any commits)","2016-04-05 02:16:48","2669960"
"29624617","10314837","6","Why not `bool(cond)` instead of `cond is True`?  The former checks the truthiness of `cond`, the latter checks for pointer-equality with the `True` object.  As highlighted by @AndrewCecil, `""blob""` is truthy but it `is not True`.","2013-11-11 04:11:06","58668"
"14647029","5361169","24","**FINALLY**. git clean -f -d  is handy when make clean fails to clean everything.","2012-06-23 04:32:08","416646"
"60478262","2003515","14","@KolobCanyon You only have to use -D if the branch has not been merged into another branch.","2016-04-05 04:27:15","1198190"
"60483599","52719","0","@T.J.Crowder How in the world does Git know how to revert an untracked file? Does it just delete it?","2016-04-05 06:44:19","937377"
"45268993","27275530","1","This solution is better because you have not to control which EditText pass as a parameter to hideSoftInputFromWindow() method. It works great!!","2015-02-12 08:20:14","2335052"
"45271957","14479678","0","After I wrote this, I use it every time. It helped me to became a bit more efficient and the job is less boring now.","2015-02-12 09:48:34","897373"
"107816278","419185","3","@user471651 In the food for thought section, `from foo2 import functionB` will trigger the Python interpreter to reload `foo2.py` a second time, but this second time it'll have `__name__='foo2'` instead of `__name__='__main__'`. There will be *two* copies of `functionB` in RAM. `functionA` in `__main__` will call the version loaded as `foo2.functionB`, not the `__main__.functionB` copy.","2020-03-30 10:49:19","25050"
"29647012","16693578","17","This implementation is incorrect. Certain characters of the GUID require special treatment (e.g. the 13th digit needs to be the number 4).","2013-11-12 08:12:27","1945651"
"60501201","52719","1","@NathanArthur: Right. Git puts the untracked file in the stash, and then deletes it from the working tree. Restoring the stash copies the untracked file into the working tree, so it shows up as a new untracked file again.","2016-04-06 07:02:47","157247"
"91892826","1125968","3","Short answer: delete and re-create branch.
1. Delete branch: `git branch <branch> -D`
2. Reset to a commit before the conflict: `git reset <commit> --hard`
3. Re-create the branch: `git branch <branch>`
4. Set tracking to the server: `git --set-upstream-to=origin/<branch> <branch>
5. Pull: `git pull`","2018-09-24 08:54:52","8186898"
"107824954","1125968","0","You may be looking for this question instead: instead https://stackoverflow.com/q/1628088/1148030
""Reset local repository branch to be just like remote repository HEAD""
For example if the remote has been force pushed and you want pull it and discard the previous incarnation of the branch that you have. (Some other questions point to this question as their duplicate, but I think they should point to this other question.)","2020-03-31 08:05:23","1148030"
"14664387","8743292","9","It ""didn't work"" because `'false'` was converted to boolean value which resulted in `true` - empty string evaluates to `false` thus it ""worked"". See [this fiddle](http://jsfiddle.net/rDt2P/) for example of what I mean.","2012-06-24 11:41:31","447356"
"75410509","24248152","1","You may want to add `|| typeof target[name] !== ""undefined""` when testing `if (target === to_add[name]) { continue; }` to not overwrite the existing members of `target`. For example `var a={hello:""world"", foo:""bar""}; var b={hello:""you""}; extend(b, a);` we expect to find `b => {hello:""you"", foo:""bar""}`, but with your code we find: `b => {hello:""world"", foo:""bar""}`","2017-05-26 10:05:43","1134119"
"75423088","394814","1","what if there are multiple conditions ?","2017-05-26 03:31:44","6275103"
"14679419","8439617","0","@Simon, the text-transform capitalizes first letter of every word and this is what Robert wants","2012-06-25 08:42:58","229461"
"60520433","22537629","23","Whenever you need json as config (where comments _are_ needed) - name your file "".js"" instead of "".json"".. js can of course handle any valid json object and additionally _can_ handle comments.. That's the reason why it is ""webpack.config.js"" and not ""webpack.config.json"" (well there's a lot more reasons for that too in webpack :P)","2016-04-06 02:20:46","1214508"
"410738","135248","44","Hardcoding colors in your CSS would prevent the browser from using custom colors the user may define, which can be a problem with accessibility.","2009-02-28 07:21:02","41283"
"45310820","21197260","1","Thank you! You saved half a day of my work. However I could not exit reflog mode with any command.","2015-02-13 08:42:55","1576481"
"45316205","19572740","13","ahahah :) it's up to you: use -d if you want to see git crying or -D if you want to cry.","2015-02-13 11:21:07","450148"
"91931368","22345808","0","This answer is unsalvageable because it is formed around quoting nonsense. The answer from pspi is correct and should be voted up. 
The terminology is not somehow misleading. It is nonsense. If you call a dog a horse, and then you say that horses eat meat and bark you're not talking something somehow misleading.","2018-09-25 10:02:01","5479362"
"60539116","1628584","18","**This answer causes commits to be lost:** next time you `git rebase`, the 3 commits will be silently discarded from `newbranch`. See [my answer](http://stackoverflow.com/a/36463546/691281) for details and safer alternatives.","2016-04-06 10:47:19","691281"
"60539119","6796816","13","**This answer causes commits to be lost:** next time you `git rebase`, the 3 commits will be silently discarded from `newbranch`. See [my answer](http://stackoverflow.com/a/36463546/691281) for details and safer alternatives.","2016-04-06 10:47:36","691281"
"60539147","36463546","0","I think I'd be more satisfied with this answer if you could demonstrate what the ""wrong"" state of reflog would be as opposed to the right state in this circumstance.","2016-04-06 10:49:31","1079354"
"14700802","8439617","18","Incorrect, Dinesh. He said *the first character of the string*.","2012-06-26 12:02:22","195835"
"60539842","36463546","0","In your scenario, if I keep M2 and M3 in my topic branch and then try to merge my topic branch back into master, then don't I reintroduce the edits someone else tried to delete (i.e. M2)? It would seem that this is undesired behavior, no? To me it makes sense that if someone is going to re-write history, you will want your topic branch to track the new history so you don't un-re-write history when you merge.","2016-04-06 11:27:19","2288986"
"29681522","115992","24","I've seen a lot of repos that use an empty file called `.gitkeep` for this purpose.","2013-11-13 01:38:54","227176"
"60543516","6796816","19","@John, that's nonsense.  Rebasing without knowing what you're doing causes commits to be lost.  If you lost commits, I'm sorry for you, but this answer didn't lose your commits.  Note that `origin/master` doesn't appear in the above diagram.  If you pushed to `origin/master` and then made the changes above, sure, things would go funny.  But that's a ""Doctor, it hurts when I do this"" kind of problem.  And it's out of scope for what the original question asked.  I suggest you write your own question to explore your scenario instead of hijacking this one.","2016-04-07 03:20:31","5486"
"75458356","44201563","10","Thank you, the image is very helpful. However, for me `w` doesn't change from Ex to Command mode, but `Esc` does. What am I doing wrong?","2017-05-28 05:24:24","2790048"
"75458456","44201563","2","If you write w-Enter that saves your file and goes back to COMMAND mode. I wrote it to have a full picture of save & quit commands.","2017-05-28 05:35:26","1697709"
"75461829","44201563","3","oh, so you mean `:w`. Then it makes perfect sense. By the way, is there a command to reload from disk (that is, to revert changes but not close the file)? If so, it could be next to `w` in the diagram.","2017-05-28 09:50:30","2790048"
"75462385","43766002","4","Could you explain how the `if (--expecting === 0)` part of the code works please? The callback version of your solution is working great for me, I just don't understand how, with that statement, you are checking the number of responses completed. Appreciate it's just lack of knowledge on my part. Is there an alternative way that check could be written?","2017-05-28 10:21:35","1984868"
"75465134","19506355","1","I have to do it for all branches separately `git merge upstream/master`, then check out to develop branch and do `git merge upstream/develop`","2017-05-28 01:02:03","2693543"
"75471166","43766002","4","@Sarah: `expecting` starts out with the value of `array.length`, which is how many requests we're going to make. We know the callback won't be called until all of those requests are started. In the callback, `if (--expecting === 0)` does this: 1. Decrements `expecting` (we've received a response, so we're expecting one fewer response) and if the value *after* the decrement is 0 (we're not expecting any more responses), we're done!","2017-05-28 06:31:11","157247"
"443250","630475","1133","I think one cannot stress enough the fact that PUT is idempotent: if the network is botched and the client is not sure whether his request made it through, it can just send it a second (or 100th) time, and it is guaranteed by the HTTP spec that this has exactly the same effect as sending once.","2009-03-10 03:17:07","2988"
"60562089","6796816","0","@Kyralessa: The question asked for `newbranch` to be based off their existing local branch (which happens to be called `master`), implying that it should track it as a local upstream. After splitting the 3 commits off into `newbranch`, if the existing local branch is later changed (e.g. new commits are added locally, or pulled in from origin/master), then `git rebase` is a correct and reasonable way to incorporate those changes from the existing local branch into `newbranch`. (Merging is a valid alternative, but leads to more complicated history).","2016-04-07 12:20:54","691281"
"60570148","6796816","1","@John, in your answer, you said ""Don't do this!  `git branch -t newbranch`"".  Go back and read the answers again.  *Nobody* suggested doing that.","2016-04-07 03:02:55","5486"
"60571505","6796816","1","@Kyralessa, sure, but if you look at the diagram in the question, it's clear that they want `newbranch` to be based off their existing local `master` branch. After performing the accepted answer, when the user gets around to running `git rebase` in `newbranch`, git will remind them that they forgot to set the upstream branch, so they'll run `git branch --set-upstream-to=master` then `git rebase` and have the same problem. They may as well use `git branch -t newbranch` in the first place.","2016-04-07 03:32:55","691281"
"60573240","34928694","1","But then you have to deal with the revert scenario, which, depending on your circumstance, can be a lot trickier. If you revert a commit on the branch, Git will still see those commits as have taken place, so in order to undo that, you have to revert the revert.  This burns quite a few people, especially when they revert a merge and try to merge the branch back, only to find that Git believes that it's already merged that branch in (which is entirely true).","2016-04-07 04:15:37","1079354"
"60575554","34928694","1","That's why I cherry-pick the commits at the end, onto a new branch. That way git sees them as new commits, which solves your issue.","2016-04-07 05:18:57","686638"
"60576604","30929199","0","Wouldn't you want to use clone = `Object.create(Object.getPrototypeOf(source))`, instead of inheriting properties which you also overwrite?","2016-04-07 05:47:46","1114"
"107905179","3407920","0","I dont feel ta da at all, it so hard. And also scary","2020-04-02 12:52:25","2003821"
"60580179","34928694","0","This is more dangerous than it first seems, since you're changing the state of the repository's history without really understanding the implications of this state.","2016-04-07 07:25:22","1079354"
"473953","79936","34","The pointer pBuffer and the value of b are located on the stack, and are mostly likely allocated at the entrance to the function.  Depending on the compiler, buffer may be allocated at the function entrance, as well.","2009-03-18 10:48:52","66542"
"75485483","5343267","1","git reset --hard origin/<your-branch>","2017-05-29 08:34:46","379173"
"107912178","60987167","19","When adding an answer to a ten year old question with twenty one other answers it is really important to include an explanation of your answer and to point out what new aspect of the question your answer addresses. With answers that are a series of commands it is useful to explain what each is doing and how to undo the effects of each of them if that is possible. The undo is important in case someone is able to perform the first few steps, but then encounters an error on a later step.","2020-04-02 04:01:06","214143"
"107913149","60141523","3","I think Java Language Architect, who is leading Project Amber and Project Valhalla is a credible source to claim that it is not pass by value.","2020-04-02 04:28:05","5486740"
"45359307","477578","1","@jameshfisher "" more than just saying that this is ""useless"", it should be made very clear that this is a security flaw. This makes the hash password equivalent, and means that the server, by storing the password hash, is effectively storing the password"" It's only a security flaw if you don't also use a separate salted hash on the server side. If you simple hash on the client side, then salted hash on the server side, the password itself is never in transit, and cracking the database still doesn't mean being able to authenticate.","2015-02-14 11:11:27","3680301"
"484634","671132","181","No.  REST didn't just pop up as another buzzword.  It came about as a means of describing an alternative to SOAP-based data exchange.  The term REST helps frame the discussion about how to transfer and access data.","2009-03-22 03:11:52","12950"
"484642","671132","112","Nonetheless, the heart of REST (in practical application) is ""don't use GET to make changes, use POST/PUT/DELETE"", which is advice I've been hearing (and following) since long before SOAP appeared.  REST *has* always been there, it just didn't get a name beyond ""the way to do it"" until recently.","2009-03-22 03:16:54","18914"
"484674","671134","2","but not straight-forward .. makes it more complicated that it needs to be.","2009-03-22 03:38:08","35364"
"484702","671134","4","Also, even though the terms REST and RESTful are used almost exclusively in the realm of web applications right now, technically there's nothing tying REST to HTTP.","2009-03-22 03:52:50","4203"
"484704","671132","38","Don't forget ""Hypertext as the engine of application state"".","2009-03-22 03:54:39","4203"
"484706","671159","19","That's ""using HTTP properly"", which is not the same as ""restful"" (although it's related to it)","2009-03-22 03:56:25","50543"
"484726","671132","0","SOAP is another protocol for transfering data through HTTP. The SOAP-data is exchanged using a special XML schema, which, as all other XML-formats, produce heavy overhead. WebServices can be implemented using SOAP. Wikipidia got some nice info on SOAP :)","2009-03-22 04:15:34","2372835"
"484781","671258","7","so .... how would that example be restful? how would you change the url to make it restful?","2009-03-22 04:49:09","35364"
"484814","671258","0","Yes. But it might be ""coming"" from hypertext, right? Also, keep in mind that hypertext can mean much more than HTML links -- consider URI templates, for instance.","2009-03-22 05:12:20","50543"
"484823","671258","1","hasen: Using one resource for all operations might be *necessary* for RESTfulness, but isn't *sufficient*.","2009-03-22 05:20:17","80950"
"485102","671258","18","ok well .. could you explain further? What's the point of saying ""no these guys are wrong .. I know what's right"" without saying what you know (or think) to be right?","2009-03-22 08:55:14","35364"
"107916806","60141523","0","First, I don't think he's more credible than James Gosling, the creator of Java who clearly state in his book, ""THE Java Programming Language"", that Java is indeed Pass-by-value (Chapter 2, section 2.6.5).  Second, although Goetz says it's neither PBV or PBR, he then goes on to say that references are PASSED BY VALUE, thereby contradicting himself. If you know Java, you also know that primitives are also PASSED BY VALUE. Since everything in Java is passed by value, Java is a PASS BY VALUE language.","2020-04-02 06:17:58","1028560"
"107917786","60141523","0","Other sources who are way more credible than Goetz are Aho, Lam, Sethi, and Ullman who are well known for their book ""Compilers: Principles, Techniques, and Tools"", the standard college text book for compiler construction. The 2nd eddition section 1.6.6 of this book also states that Java is Pass-by-value.","2020-04-02 06:49:52","1028560"
"485627","671258","5","I gave the link to Fielding's description.  I thought I said exactly the relevant diff to the other responses: needs to be driven by hypertext.  If ""/user/123"" comes from some out-of-band API documentation, then it's not RESTful.  If it comes from a resource identifier in your hypertext, then it is.","2009-03-23 02:08:07","80950"
"91989771","23275699","1","For greater comment density, couldn't you encode your comment in ternary and use space, tab, and newline to steg it?","2018-09-26 07:44:28","8753669"
"91991696","47043798","0","is this still considered the best way to return a value from a promise or async/await?","2018-09-26 08:58:21","3537898"
"492629","237148","0","actually, there is an example of the an implementation of the indexOf extension for browsers that do not support it on the developer.mozilla.org page you linked to.","2009-03-24 09:24:00","21807"
"60599737","31250734","21","This should be the accepted answer... the first one doesn't actually provide hard limits for each browser which is what the questions asks for.","2016-04-08 09:23:08","3249501"
"494533","681238","6","`toSource()` is non-standard and doesn't work in IE or Opera (and potentially other browsers I didn't check)","2009-03-25 12:21:39","48015"
"496839","681238","0","This is standard in ECMA-262. There are non-standard browsers though.","2009-03-25 08:46:45","8559"
"497250","681238","4","@Thevs: perhaps you have a different copy of the current version of ECMA-262, but mine does not list a `toSource` property in section 15.2.4; according to MDC, it was introduced in JS1.3 (i.e. Netscape Navigator 4.06), but it's NOT in ECMA-262, 3rd edition!","2009-03-25 10:47:32","48015"
"498436","681238","0","@Christoph: How do you think 3 other browsers would implement the same  'non-standard' feature if that wouldn't be a standard? :)","2009-03-26 09:20:59","8559"
"498470","681238","4","@Thevs: well, at least 2 important browser vendors didn't implement it, so it's hardly a de-facto-standard, and as it's not  in ECMA-262, it's not a real one either...","2009-03-26 09:34:06","48015"
"498480","681238","0","...and as for how features get implemented across different browsers without being standard: ever heard of innovation and a thing called copying? It's how the standard was developed ion the first place (JavaScript and JScript predate ECMAScript)","2009-03-26 09:35:31","48015"
"60602288","34928694","6","I don't follow your argument - the point of this answer is that you're not changing history, simply adding new commits (which effectively undo the redo the changes). These new commits can be pushed and merged as normal.","2016-04-08 10:33:01","686638"
"107930122","53689911","1","Both comments above seem to ignore the general algorithmic issues and complexity, in favor of advocating specialized hardware with special machine instructions. I find the first one particularly petty in that it blithely dismisses the important general insights in this answer in blind favor of specialized machine instructions.","2020-04-03 06:44:26","2297550"
"107930630","2389423","0","@ Max Williams this was most helpful tip for me. Thanks.","2020-04-03 07:05:57","239129"
"107940711","59498318","0","The best answer I could use it with DataBinding either, thanks.","2020-04-03 01:07:32","9469090"
"92007109","50405997","0","What he is trying to say is that the `let` outside the `if` defines the variable `x=1`. The `if`-statement will trigger (since `x===1 is true`. Now comes the tricky part, which is also the main reason you need to keep track of `let` vs `var`. Inside the `if` he is trying to set `x=2`, which in the `console.log(x)` will print 2, HOWEVER, `x` ""on the outside"" of the if still has has the value `1`, so the other `console.log(x)` gives 1, since the value of `x` ""globally"" is still `1`. The answer does not explain this, so should not be considered a good answer in my opinion.","2018-09-27 09:41:21","4462462"
"107948750","82841","6","Generally, not good practise to name variables the same as method names.","2020-04-03 05:10:44","962891"
"92015408","682343","1","This is also a wrong answer. I don't know why people post answers, and even less why they upvote wrong answers....","2018-09-27 01:22:37","2066895"
"14784848","487278","8","My concern is similar to @jimifiki.  Big-O is only useful when N is large.  When N is small, the prefactor often matters a lot.  A good example is with [insertion sort](http://en.wikipedia.org/wiki/Insertion_sort).  Insertion sort is O(N^2), but has very good cache-locality.  This makes it faster than many O(N log N) algorithms when the list is small (< 10 elements).  Similarly, for small N, lookup in a binary tree is often faster than a hash table.  Good hash functions can chew through a good number of cycles, making the prefactor quite significant.","2012-06-28 05:50:55","1430833"
"107954274","23961231","4","I've read all the answers down to here and this is for sure the best answer I've read so far!--(and probably the best one on this page, period). This is especially true because it's the only answer which states this REALLY IMPORTANT fact that I never knew before: ""**there are 3 different branches to delete!**"" I had no idea! This all makes so much more sense now, and it sheds so much light on all the other answers here now too. Thanks!","2020-04-03 08:35:28","4561887"
"107954310","2003505","14","Skip the first few answers and just jump down to the best one: https://stackoverflow.com/a/23961231/4561887. To delete a git branch, there are actually **3 different branches to delete!** This answer makes that fact clear.","2020-04-03 08:37:23","4561887"
"75544068","22417539","2","For (1), I've found `git branch your-feature && git reset --hard HEAD~N` the most convenient way. However, it does involve git reset again, which this answer tried to avoid.","2017-05-30 05:01:44","365237"
"92031562","244858","2","One of the links in my June 2012 comment no longer works.  Another reader (@douglasgross) has provided this current link: https://groups.yahoo.com/neo/groups/json/conversations/topics/156","2018-09-27 10:20:49","12711"
"75545700","3104376","4","Interesting the removal of commenting ability from JSON. Everywhere and always I am reminded to comment my code. Now I have a huge config/data file in JSON that cannot be commented for future reference because for some reason someone thought commenting unnecessary/silly.","2017-05-30 05:56:03","4534815"
"92037095","25534469","0","I assume they want to know how to encapsulate. That's the big part which would show the difference between them but you did not answer.","2018-09-28 05:43:40","8438999"
"92037202","40058417","0","@Teomanshipahi If all these containers could use the same kernel provided by host, yes, they will all run successfully.","2018-09-28 05:49:27","8438999"
"29786593","59839","0","For some reason, I'm getting an error with this:  
    ``if [ -d ""$TARGET_DIR/$DATE1"" ]; then 
        $RSYNC_PARAMS=""$RSYNC_PARAMS --link-dest=$TARGET_DIR/$DATE1""
    fi``","2013-11-15 04:02:57","1183884"
"29786842","59839","0","``DATE1='date -I -d ""1 day ago""'`` ; ``TARGET_DIR=""/backup""`` which is a link; ``RSYNC_PARAMS=""-azrtplH""``","2013-11-15 04:09:37","1183884"
"560398","487278","1","I think there is a mistake in the sentence ""accounting for 0.00002% of the total operations by that stage"". It should be 0.0002%, not 0.00002%.","2009-04-14 07:45:56","54964"
"14812892","10305968","21","Another difference between `visibility:hidden` and `opacity:0` is that the element will still respond to events (like clicks) with `opacity:0`. I learned that trick making a custom button for file uploads.","2012-06-29 06:15:21","1382949"
"92049752","40058417","0","If I use docker for windows on my local, can I deploy and run same way in linux/mac?","2018-09-28 12:42:34","929902"
"29795750","4704411","12","name=""Null"" is of course usefull, and I dont see how it should be related to NaN.","2013-11-15 09:01:05","13189"
"92053686","5480292","0","Apparently (at least in GitLab) changing (and thus deleting) tags is a capability disjoint from that of creating a tag: `remote: GitLab: You are not allowed to change existing tags on this project.` (in response to trying to remove a tag that I erroneously created).","2018-09-28 02:34:36","318902"
"75557024","5032238","2","Downvoted. The source code of `mkdirs` actually warns *against* checking for EEXIST: https://github.com/python/cpython/blob/e304e33c16e060932d1e2cc8a030d42b02b429b5/Lib/os.py#L195","2017-05-31 02:41:30","695591"
"573935","762018","5","The key bit of text from the linked document seems to be, ""let works very much like var. The main difference is that the scope of a var variable is the entire enclosing function"".","2009-04-17 08:25:25","12711"
"29802938","10361980","3","Same concept, but update all the names in the database and preface then with some character (1Null, 1Smith). Strip off that character in the client. Of course this might be mite work than Reboog's solution.","2013-11-16 04:30:38","308709"
"107990767","60141523","3","And the most relevant reference of all is the Java Language Specification which states *""The effect of this is to assign the argument values to corresponding freshly created parameter variables of the method""*.  (15.12.4.5).  Note that it is avoiding the terminological confusion by not saying ""pass by ..."" at all. (FWIW, I disagree with the Goetz's characterization of ""pass by value"" and ""pass references by value"" as being semantically different.  And I agree that he is contradicting himself.)","2020-04-05 11:40:51","139985"
"581383","681238","0","BTW, toSource() is implemented in IE _internally_, but nor exposed to outside. Think why?","2009-04-20 08:13:10","8559"
"92067476","52493763","3","Why was this not upvoted? If true, this is a critical distinction is it not?","2018-09-29 03:02:01","2521899"
"92069376","52493763","2","I faced it when implementing API for the profile update, which includes user profile pic upload. Then I tested it with the postman, Ajax, PHP curl and laravel 5.6 as backend.","2018-09-29 06:54:18","6700273"
"107999384","59839","0","Is there any difference between `-L` and `-h`? This website https://www.gnu.org/savannah-checkouts/gnu/bash/manual/bash.html#Bash-Conditional-Expressions says they're both `True if file exists and is a symbolic link.` So what's the difference?","2020-04-05 05:41:08","7784017"
"590050","41454","57","Also note that if a HashMap is modified, iterators pointing to it are rendered invalid.","2009-04-22 10:03:03","51789"
"45441778","20388370","16","@RomanAllenstein: not necessarily. It could be that you create a repo with a given structure which can become populated later. Those files will be added to the repo as soon as they are created, and it will be annoying to start deleting or editing .gitignore files (and dangerous, because probably you do not even realize that they are not being tracked: git is ignoring them)","2015-02-17 04:06:18","647991"
"45441881","20388370","0","Another usecase: I keep my /etc in version control. Some directories there are empty, but I want to track them in my repo (they must be there, otherwise some tools will simply not work). But I do not want to ignore the files there: as soon as I `apt-get update ; apt-get upgrade` new files can appear, which I for sure do not want to ignore.","2015-02-17 04:08:48","647991"
"60694604","2389407","0","will it reset local changes as well ? #PleaseUpdate.","2016-04-11 11:07:39","2624806"
"108004238","59839","0","The spaces within `[` and `]`, around the `-d` or `! -d` are important, otherwise script will fail with command not found.","2020-04-05 09:11:55","763419"
"596303","785768","4","That'll report also true, when, for instance, a JavaScript library extends `Object` with a method through the prototype chain, because that's enumerable and the `for in` statement loops through enumerable properties.","2009-04-24 01:20:29","73603"
"60709594","30929199","0","Interesting. Though, using `getPrototypeOf` on an `Array` turns its indexes into keys of a new `Object`.","2016-04-11 04:47:55","923745"
"14856170","237104","55","just tested: your way is actually the fastest for across browsers: http://jsperf.com/find-element-in-obj-vs-array/2 (apart from pre-saving a.length in a variable) while using indexOf (as in $.inArray) is much slower","2012-07-02 11:56:14","818732"
"92086061","43901924","0","BTW, why does it generate only numbers and not characters as well? much less secure","2018-09-30 06:27:23","104380"
"29829142","662454","0","are all memories designed in such way, with stack and heap ?","2013-11-17 12:07:49","926460"
"602473","477578","68","Well, I don't really agree with the Captcha part, yes Captchas are annoying and they can be broken (except recaptcha but this is barely solvable by humans!) but this is exactly like saying don't use a spam filter because it has less than 0.1% false negatives .. this very site uses Captchas, they are not perfect but they cut a considerable amount of spam and there's simply no good alternative to them","2009-04-27 02:44:59","676066"
"14860599","4682612","0","Yeah, I agree with @infosec812... This answer doesn't explain the actual cloning / checking out process, which is done with `git checkout -b <localbranch> <remotebranch>`, where `remotebranch` is the name of the remote as it appears in `git branch -r` (or also `git branch -a`).","2012-07-02 02:39:38","781938"
"29839634","10367169","0","Yes, there are a number of possibilities here which will require more debugging to narrow down.  1) Is the WSDL used here expressive enough to distinguish between ""NULL"" as a string value and an actual null (or omitted) value?  2) If so, is the client encoding the last name correctly (as a string and not a null literal)  3) If so, is the service properly interpreting ""NULL"" as a string, or coercing it to a null value?","2013-11-17 09:24:32","101189"
"29840912","67716","3","I appreciate your note ""all branches and tags are fetched"". I was going to comment on your answer being wrong, but then I checked it and found, you are perfectly right. So in a way, you have provided the shortest answer - if you cloned, you already have it. Nice. One could try to add: try `$ git branch -a` to learn, what remote branches are already available.","2013-11-17 10:39:47","346478"
"29841361","662454","2","@Timeless stack and heap are two common ways of allocating memory and can be found on pretty much any computing platform. That said there are other concepts in memory allocation too, some which operate at lower (physical to virtual memory mapping) or higher (data structures) levels.","2013-11-17 11:03:39","53212"
"108022233","246128","0","dirname executes an extra process. consider ${BASH_SOURCE[0]%/*} instead.","2020-04-06 12:14:44","525578"
"75599872","11444416","0","I'm observing that redeclaration behavior remains same even without `'use strict';` mode. So it seems redeclaring a variable with same name using `let` keyword will *always* result in error no matter whether we are using strict mode or not. I'm using chrome version 58.","2017-06-01 01:08:00","465053"
"92098248","630475","2","Isn't author's claim that POST can be used to modify/update incorrect? For example he is using `POST /questions/<existing_question> ` which means that the POST request is aware of the location of the resource which is `<existing_question>` but this means POST is showing `idempotent behavior` cause no matter how many time we make this request the same resource(`<existing_question>`) will be accessed at the server which is not correct as POST is supposed to be `non-idempotent` which means every time we invoke this it should change the state of the server.","2018-09-30 07:48:51","6407858"
"60718982","477578","0","@KostaKontos you'll need to trigger an asychronous timeout which runs on the server side, that's all. How you display that to the user is only a UI problem, since the security measure isn't on the front end at all.","2016-04-11 09:07:14","57068"
"29845981","662454","0","@thomasrutter thanks, and who decided the way that we should alloc memory in such way? hardware designers?","2013-11-18 04:32:51","926460"
"29847324","662454","1","@Timeless Practical reasons.  A stack works that way because it's very fast and simple for the processor to do and it matches our paradigms of local variables pushed when entering a function and popped when exiting, etc.  Heaps work that way because we needed a way of randomly allocating and de-allocating memory or arbitrary length without it needing to be consecutive and without needing to de-allocate it in the reverse order it was allocated.","2013-11-18 05:57:09","53212"
"29847708","8212184","0","The problem with your example is that getPhotoOfThePerson really has no business deciding whether or not to return a photo or how to deal with a null person -- a straightforward reading of the method name indicates that it returns a photo of a person.  It shouldn't return null because it doesn't (and shouldn't) know how the caller will handle a null photo.  The caller on the other hand should know what to do when the person is null.  Java doesn't have null propogation, which would eliminate the problem, as then it would know enough about how nulls are handled to go ahead and use it.","2013-11-18 06:18:21","234954"
"75606499","487258","1","If you really want to learn about Landau notation, I recommend you head over to [cs.SE], starting with [our reference questions](https://cs.meta.stackexchange.com/questions/599/reference-answers-to-frequently-asked-questions/846#846). While we don't pretend to be able to explain a mathematical concept accurately *and* in ""plain English"", we also won't teach you falsehoods. (Hopefully.)","2017-06-01 07:03:46","539599"
"29860966","59853","0","Hi Niel. Your idea may be useful to check the existence of directories depending on a pattern like: `find -maxdepth 1 -type d -name 'pattern'`. Do you mind if I append in your answer this trick? Cheers ;)","2013-11-18 01:54:50","938111"
"635582","826814","0","While I agree that it changes behaviour the user expects, it would make sense for things like the ""Add Comment"" button that is sitting next to this form field ...","2009-05-05 08:40:33","13986"
"635625","826814","0","@anon: Most users will probably not try to select the text of your button, so in practice, it shouldn't really matter much. Besides, in order to do so, they will have to start selecting *outside* of the button—if they click inside the button itself, the onclick handler will activate instead. Plus, certain browsers (e.g. Safari) actually let you select the text of normal buttons…","2009-05-05 08:49:07","90155"
"29867996","19655633","15","You've emulated an INI file structure in JSON. Please, put down your Golden Hammer.","2013-11-18 04:53:10","572370"
"75624772","24839354","0","I really thought there was no point going on to the second page of answers for this question but this is EXACTLY what I was looking for and works flawlessly! thanks.","2017-06-01 02:04:38","799759"
"14885634","10563611","5","@BullfrogBlues, the answer to all your questions appears to be yes (I'm using git v1.7.7.4). I agree this behavior should be better known. (It's not in the manual for this version of git.) I actually don't like this behavior, I'd rather get an error and have to say `git checkout --track origin/somebranch` explicitly.","2012-07-03 01:05:56","272427"
"14885874","4754797","0","tweaked: `for branch in \`git branch -a | sed -n '\=/HEAD$=d; \=/master$=d;s=<SPACE><SPACE>remotes/==p'\`; do ...`","2012-07-03 01:13:13","272427"
"14886318","67748","4","This will always work: `git checkout -b newlocaldev --track origin/dev`. If you want the local branch has the same name as the remote one, and the remote one doesn't have a tricky name, you can omit the `-b newlocaldev`. With the default `branch.autosetupmerge` config setting, and assuming you don't have a local branch named `dev`, these two commands may do the same thing: `git checkout -b dev origin/dev` and just plain `git checkout dev`. Finally, `git checkout origin/dev` doesn't create a new branch, but just puts you in detached HEAD state.","2012-07-03 01:27:25","272427"
"14886601","72156","0","@milesmeow see my comment on Luuk Paulussen's answer below. You can skip `--track` when you're starting from a remote branch and are using the default setting for the `branch.autosetupmerge` config.","2012-07-03 01:36:12","272427"
"29874753","59916","0","DIR=""$( cd ""$( dirname ""${BASH_SOURCE[0]}"" )"" && pwd )""; [ -h ""$DIR/$0"" ] && DIR=`readlink -n ""$DIR/$0"" `","2013-11-18 08:16:29","310678"
"108046102","57205151","2","Be careful!  git merge --abort ""can only be run after the merge has resulted in conflicts. git merge --abort will abort the merge process and try to reconstruct the pre-merge state""","2020-04-07 04:30:07","1264663"
"75644113","44103318","9","#5 is not caused by a race condition. By using `var` instead of `let`, the code is equivalent to: `var i = 0; while (i < 5) { doSomethingLater(); i++; }` `i` is outside the closure, and by the time that `doSomethingLater()` is executed, `i` has already been incremented 5 times, hence the output is `i is 5` five times. By using `let`, the variable `i` is within the closure, so each async call gets its own copy of `i` instead of using the 'global' one that's created with `var`.","2017-06-02 01:12:01","135318"
"45495510","7244456","1","this is better than github's help [here](https://help.github.com/articles/merging-an-upstream-repository-into-your-fork/) which does not set up upstream.","2015-02-18 09:40:25","311567"
"14924134","178386","28","On pages 21 to 28 it shows how slow :hidden or :visible is compared to other selectors. Thanks for pointing this.","2012-07-04 08:12:04","437217"
"108071090","39924727","2","Why not just use `filter` then? `array.filter((_, index) => index !== removedIndex);`.","2020-04-07 06:30:04","4642212"
"108071991","135139","0","`javascript:void(0);` is also not good if you want to use a strict Content Security Policy that disables inline JavaScript.","2020-04-07 06:59:49","3251463"
"108074847","39924727","0","@user4642212 you are right! also, I liked the underscore of Golang style","2020-04-07 08:37:15","747579"
"687430","397740","73","mmm, what is the difference? p.getAge() would throw the same NPE with less overhead and a clearer stack trace. What am I missing?","2009-05-18 11:26:20","27241"
"14941011","9713750","2","Also, after just stumbling across this you would probably want to swap the return true/false statements.  The function 'isEmpty' should return false once it finds a property, because that means that it is _not_ empty.  Semantics, but would probably be a good idea.","2012-07-05 01:59:56","697370"
"14945297","10701801","2","Aww, I came up with this on my own one day, and as you mentioned, once I applied it to my contact forms across multiple websites it has absolutely blocked spam for over a year. Love it, but I was dreading the day when I saw it mentioned on a high visibility website. ;)","2012-07-05 04:33:43","433327"
"92160350","522563","65","Note that indexes in python start from 0, so the indexes for your example list are 0 to 4 not 1 to 5","2018-10-02 04:54:06","5083516"
"75674530","2610497","1","Since this is a **hot topic**, I came up with another approach, to [___simulate a placeholder___](https://stackoverflow.com/questions/44333727/simulation-of-a-placeholder/44333787#44333787), which might be of interest","2017-06-02 06:30:56","2827823"
"75681631","12184274","0","You have to be at the root of your git repository for this to work correctly.","2017-06-03 12:06:32","2671441"
"714984","487278","1","Good writeup.  Two suggestions:  Mention that e.g. the Travelling Salesman can be approximated to within a proven factor of the minimal answer if e.g. it can be assumed that going directly from A to B is shorter than going A-C-B.  Also mention that NP is polynomial (P) _IFF_ the computer magically picks the correct posibillity everytime it has to make a choice.","2009-05-25 04:09:43","53897"
"92173453","51522896","12","This answer is completely incorrect and only creates confusion. Java is a pure pass-by-value language. What confuses you is that the value can be a pointer to an object. Pass-by-reference means one would be able to change the identity of an object at the caller's side. E.g. assigning a new object to a method parameter would also affect the pointer that was passed in the code that called the method.","2018-10-03 04:40:21","1047418"
"45533254","25501002","7","jQuery and [fetch](https://github.com/github/fetch) methods both return promises as well.  I would suggest revising your answer.  Though jQuery's isn't quite the same (then is there, but catch isn't).","2015-02-19 07:24:49","43906"
"718115","452820","21","I think this is wrong.  There should be a way to specify that a given variable is ALWAYS non-null.","2009-05-26 11:54:03","53897"
"718130","397740","16","It is better to throw an IllegalArgumentException(""e == null"") in your example as it clearly indicates that it is a programmer-intended exception (along with enough information to actually allow the maintainer to identify the problem).  NullPointerExceptions should be reserved for the JVM, as it then clearly indicates that this was unintentional (and usually happens somewhere hard to identify)","2009-05-26 11:56:17","53897"
"60807917","4682612","2","@basZero `git pull --all;git push remoteUrl2 --all; cd newDir; git clone remoteUrl2; cd repo; git branch -a` will show *only* the master branch, therefore the question has *not* been answered as dozens of branches have been dropped.","2016-04-13 05:25:39","3338098"
"60808362","16047306","13","Docker vs KVM performance analysis:  http://bodenr.blogspot.com/2014/05/kvm-and-docker-lxc-benchmarking-with.html","2016-04-13 05:39:02","218028"
"75696896","4456438","2","At least it doesn't involve Chuck Norris.  Here's why to stay away from him in code:  http://codesqueeze.com/the-ultimate-top-25-chuck-norris-the-programmer-jokes/","2017-06-03 06:12:55","5093068"
"75703900","7244456","25","@jww: You ask why Git needs to be told about the original GitHub repository. It is because Git is a decentralized version control system and is not tied to GitHub in any way; it is probably obvious that Git was created before GitHub. When you create a forked repository on GitHub and clone it, GitHub knows that the repository is a fork; Git has no reason to, and does not. (Why doesn't the clone copy the Git remotes? Git is decentralized; different people will want different remotes; it would make no sense to do this.) See https://github.com/github/hub for GitHub integration in Git.","2017-06-04 04:43:42","3538165"
"45551042","25355080","2","@aborz: Also very cool anonymous function syntax in the second example. It's just what I'm used to in C#. I've learned something today.","2015-02-20 08:59:24","378472"
"92196138","47043798","7","@edwardsmarkf Personally I don't think there's a best way as such. I use promises with then/catch , async/await as well as generators for async portions of my code. It largely depends on the context of usage.","2018-10-03 04:12:28","5013932"
"29949417","8212184","24","I'd downvote if I had the reputation. Not only is null not necessary, it's a hole in the type system. Assigning a Tree to a List is a type error because trees are not values of type List; by that same logic, assigning null should be a type error because null is not a value of type Object, or any useful type for that matter. [Even the man that invented null](http://en.wikipedia.org/wiki/Tony_Hoare) considers it his ""billion-dollar mistake"". The notion of ""a value that might be a value of type T OR nothing"" is its own type, and should be represented as such (e.g. Maybe<T> or Optional<T>).","2013-11-20 03:57:25","1272233"
"92201575","21163930","1","What is difference between first 2 methods?","2018-10-03 07:13:57","1121249"
"108129642","23853061","0","Best answer so far. It is interesting that I've intuitively moved to PR tab to do this, without too much thinking. However, I think it would be best to have REBASE FORK button next to (or instead) the FORK button. That was the first thing I've searched for - Rebase Fork button","2020-04-09 12:09:29","1487875"
"750244","671159","2","You could also use /user/del/2 and /user/remove/2 or... GET/DELETE/PUT/POST are just the standardised, ""proper"" way to do such things (and as Julian says, that's not all there is to REST)","2009-06-02 09:32:20","745"
"92211364","2025282","2","Material design with pixel-density https://material.io/design/layout/understanding-layout.html#pixel-density","2018-10-04 05:19:28","5788247"
"29959576","8439617","0","This capitalizes every word's first letter.","2013-11-20 08:35:13","605960"
"755770","671159","1","Sure, but that's no reason to avoid them.. REST just saves you reinventing the wheel each time. For an API, REST is great (consistency!), but for structuring a random website it doesn't really matter I'd say (it can be more hassle than it's worth)","2009-06-03 10:34:09","745"
"759824","72156","135","How can someone create automatically all the remote branches, e.g. experimental for origin/experimental?","2009-06-04 04:33:36","12892"
"108142281","50367409","1","Why extend([l]) instead of append(l)?","2020-04-09 06:31:12","3261450"
"92224207","4089452","0","Note: the approach `git remote show origin` doesn't work if the stored credentials do no longer have required access rights to the original repository. In such case, try `git remote -v`","2018-10-04 11:59:13","4845615"
"92230158","8888015","0","isn't it easier just to rm -rf /folder and do git clone again, if you want to discard all your local changes?","2018-10-04 02:24:59","1887912"
"92231189","44325931","0","IE 11 is still a current browser in 2018, sadly and it doesn't support `await/async`","2018-10-04 02:51:34","227299"
"92231423","44325931","0","IE11 is not a current browser. It was released 5 years ago, has a worldwide market share of 2.5% according to caniuse, and unless someone is doubling your budget to ignore all current tech then it's not worth most people's time.","2018-10-04 02:57:29","123671"
"60866588","27581592","0","So, this answer works. Great. **Iff** the path isn't that of a file. Is that what the question was about? No.","2016-04-14 11:33:56","1692706"
"60867668","394814","15","The point was if you want to perform additional evaluations *after* the conditional is evaluated, like adding a value to the result, you'll either need to add the additional expression to both sides (`z = 3 + x if x < y else 3 + y`), or group the conditional (`z = 3 + (x if x < y else y)` or `z = (x if x < y else y) + 3`)","2016-04-15 12:36:05","359340"
"45601561","8743292","1","use true and false values for boolean, do not use 'true' or 'false' (strings).","2015-02-21 10:34:07","359253"
"108155646","59787784","0","a lot of this doesn't make sense because you're basing everything on a return of false and or true. Sometimes programming needs an if statement or a ternary operator. just fyi","2020-04-10 07:32:03","2084798"
"30003354","10434949","9","@Reboog711 The employee's last name is literally the string ""Null"" as in, ""My name is Pat Null"" Your answer fails to pass the employee's last name. You answer just hides the fact that ""Null"" is being inappropriately coerced into the language concept of null by the appendChild() method as described by Ben Burns. The result is still failure of the system to deal with Mr. or Ms. Null.","2013-11-21 09:19:29","302122"
"75770303","11551718","1","A few firefox versions ago I generated a 2MB URI image. You could display it on a page, but pasting it to the address field\opening in a new tab, resulted in a crash every time I tried.","2017-06-06 08:40:20","2123652"
"30004738","10434949","2","@MaxxDaymon I think you misconstrue what my answer actually is.  It doesn't present a solution; but rather an explanation of why the problem occurs; and quotes relevant code from the Flex Framework.  My more recent edit is perhaps misplaced; as it discusses an alternate approach and is not directly related to the original question.","2013-11-21 10:01:48","133840"
"45641929","1743591","5","The compiler should take care of this, though.","2015-02-23 12:57:55","3978539"
"45653017","1743591","0","@StephanBijzitter Wow, you're reading pretty far down on this one :-) I agree, the compiler should make my solution unnecessary.","2015-02-23 05:52:10","200985"
"60922030","9180445","3","For the refs, you can usually use 3-5 hexits; however many it takes Git to uniquely identify the commit. Also, you can use `master~3..master` to refer to the last 3 commits on `master` instead of hashes.","2016-04-16 01:56:39","405550"
"60922068","22654961","1","Great answer! You can also use `@~3` in place of `HEAD~3`.","2016-04-16 01:58:50","405550"
"30036557","67699","24","Rather than saying ""I've cloned, pulled, and fetched,"" much better to show us the *exact commands* that you executed.","2013-11-22 06:17:25","887124"
"92266288","927358","27","@YiminRong That can be done with Git's `alias` feature: https://git-scm.com/book/en/v2/Git-Basics-Git-Aliases","2018-10-05 02:50:08","6782707"
"75793195","8888015","1","Note that you can abbreviate the branch name by `@{u}`, which is much shorter.","2017-06-06 05:56:04","1420279"
"836452","1026098","5","Use String.substring() or String.slice() ... Don't use substr() - it's deprecated.","2009-06-22 11:11:45","21677"
"30043382","8888015","1","I lost all local commits that weren't in the `origin/master` tree after a rebase. It's very possible to shoot yourself in the foot, here.","2013-11-22 10:22:07","633310"
"30044172","671132","1","The hypermedia constraint is much more important than those 2 constraints you wrote down.","2013-11-22 10:53:30","607033"
"15077226","237148","1","actually, if you add indexof to the prototype of Array for browsers that don't support it (i.e. IE7) they will also try to loop over this function when looping through the items in the array. nasty.","2012-07-11 09:13:32","196732"
"60931677","36463546","20","This answer says ""Do NOT do this!"" above something that no one suggested doing.","2016-04-16 09:41:32","5486"
"45669151","14415881","5","How do you account for the sock without its pair that the dryer monster ate?","2015-02-24 05:07:57","3148478"
"75805433","34998848","3","is this similar to generator functions? https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function*","2017-06-07 03:19:47","1680627"
"30058931","18243587","16","This post was helpful to me in understanding that POST adds ""something"" as a child to the given collection (URI), whereas PUT explicitly defines the ""something"" at the given URI location.","2013-11-23 04:33:19","429733"
"108185676","161813","0","https://gist.github.com/karenyyng/f19ff75c60f18b4b8149. This git mergetool tutorial might help.","2020-04-11 07:08:49","10315163"
"30071746","246128","1","In my experience, it is not necessary to add quotes around `$()` expressions.  Thus: `FILES=$(ls -1)` and `FILES=""$(ls -1)""` are exactly the same.","2013-11-24 07:19:27","257299"
"15093300","762018","0","@TylerCrompton that's just the set of words that have been reserved for years.  When mozilla added let it was purely a mozilla extension, with no related spec. ES6 should define behaviour for let statements, but that came after mozilla introduced the syntax.  Remember moz also has E4X, which is entirely dead and moz only.","2012-07-11 06:49:45","784"
"858028","549","54","Why exclude HTTP Basic Authentication? It can work in HTML Forms via Ajax: http://www.peej.co.uk/articles/http-auth-with-html-forms.html","2009-06-25 10:50:56","52963"
"859912","671132","1","Wasn't PUT used to update a resource? The example uses POST to create and update, but does not use PUT.","2009-06-26 11:23:11","4187"
"108190110","28921801","0","Thank you for detailed description! Specifically nibble caged between 8 and 11 with equivalents explanation is super helpful.","2020-04-11 11:26:55","2850069"
"30088430","14423956","0","That'd work for a hundred socks.  Now try and scale that up to a few million.","2013-11-24 11:10:09","134702"
"15107031","6841333","97","The real answer is to always, always use seconds since an epoch for logging, like the Unix epoch, with 64 bit integer representation (signed, if you want to allow stamps before the epoch). Any real-world time system has some non-linear, non-monotonic behaviour like leap hours or daylight savings.","2012-07-12 08:34:06","36537"
"30093622","630453","5","Unfortunally the first answers are wrong about POST. Check my answer for a better explanation of the differences: http://stackoverflow.com/a/18243587/2458234","2013-11-25 05:21:37","2458234"
"75854952","44325931","9","Unfortunately, this works only with functions that return promises – for example it doesn't work with Node.js API, which uses callbacks. And I wouldn't recommend using it without Babel, because not everyone uses ""current browsers"".","2017-06-08 06:47:10","3853934"
"75860659","3688108","5","""moves""? This would indicate it has gone from the working directory. That's not the case.","2017-06-08 09:18:33","480982"
"75863309","682343","0","This may have been applicable at the time of writing but seems to work now.","2017-06-08 10:20:25","480982"
"30109335","117111","1","Don't really agree. I can find various reasons why I want to track an empty folder. For example, I am developing a very lightweight PHP MVC framework for my projects. I have specific folders for placing models, views, etc. When I make a new site based on my framework, those folders are empty since there are no models or views by default, but I do need the folder to exist, else my framework won't work!","2013-11-25 02:25:41","1356391"
"108206339","37358787","0","An explanation would be in order.","2020-04-12 01:09:49","63550"
"108206449","57685052","0","What is the advantage of that?","2020-04-12 01:20:14","63550"
"30111987","671132","1","Considering the consistent critique of this answer, I've rewritten it. Please note that this answer is community wiki, and that anyone that wishes to improve upon it is welcome to do so. @Pedro, what do you think?","2013-11-25 03:34:50","73772"
"60984585","22529246","4","This is jQuery, not core JavaScript.","2016-04-18 03:31:37","1720669"
"60986672","116252","0","I got here looking at a case where the build fell down if the directory doesn't exist and by default it is empty, but it doesn't need to be empty. Creating a .gitignore does the right thing.","2016-04-18 04:25:33","14768"
"75891209","406408","0","[This answer](https://stackoverflow.com/a/1687663/4561047) worked better for me.  Can you explain the difference between `^((?!hede).)*$` and `^(?!hede).*$`?","2017-06-08 11:11:23","4561047"
"60997774","15396882","0","@Noni A, http://stackoverflow.com/questions/7409288/how-to-dismiss-keyboard-in-android-searchview","2016-04-18 09:50:37","1429432"
"60999441","10999165","7","Others with repository clones where remote branches have been removed should run `git remote prune <name>` (e.g. `git remote prune origin`) in order to locally remove stale branches that no longer exist in the remote.","2016-04-18 11:07:39","4594973"
"75911307","105402","1","When I add the cast `(Suit[])`, my code run 1,6 times faster. Try it yourself. I tested an empty foreach with StopWatch.  `for (int i = 0; i < 1000000; i++) foreach (Suit suit in (Suit[])Enum.GetValues(typeof(Suit))) {}`","2017-06-09 12:14:33","2122718"
"15152424","762297","5","Just stubled across this question and in 2012 it is still the case that only Mozilla browsers support `let`. Safari, IE, and Chome all don't.","2012-07-13 05:38:18","1152664"
"61026713","901712","3","For a comprehensive ( and correct ) answer see: http://stackoverflow.com/questions/426258/setting-checked-for-a-checkbox-with-jquery/426276#426276","2016-04-19 02:11:12","1507649"
"61030200","16238123","0","This did not remove my untracked files; which is actually what I'd expect. Is there a reason it might for some people and not for others?","2016-04-19 03:27:08","609014"
"61030810","31869042","3","I suspect the third line `git reset --hard HEAD` may be redundant; my local man page (2.6.3) say that `reset` in the second line `git reset --hard origin/master` _""defaults to HEAD in all forms.""_","2016-04-19 03:40:52","609014"
"15162719","671132","1","REST is an architectural pattern and style of writing distributed applications. It hag got high importance in cloud based services also. It is recommended approach to use webservices in building Android apps.","2012-07-14 07:23:20","780891"
"108253973","60014","0","The portable Posix version of this answer is `if [ -d ""$DIRECTORY"" ] && ! [ -h ""$DIRECTORY ]; then …` (`-L` is deprecated, `-h` is its replacement. Use `-L` if you're on a really ancient Unix system).","2020-04-13 05:05:20","519360"
"108257840","53798477","0","My fave answer here. Since one can write their own parser, i hopes that someone will (or already has) written a widely-used json parser which eliminates need for quotes, allows comments, and other improvements. How about eliminating brackets and formatting with white space? :)","2020-04-13 07:13:28","209942"
"15177886","5343267","0","This is great, but if you did a remote auto-merge (e.g. merge pull request on github), then you'll need to reset to a commit (accepted answer).","2012-07-15 10:47:07","840973"
"15178631","2025282","73","this is use full difference between px, dip, dp and sp in android [ http://developer.android.com/guide/topics/resources/more-resources.html#Dimension](http://developer.android.com/guide/topics/resources/more-resources.html#Dimension)","2012-05-25 09:34:20","1045074"
"30146986","5190323","1","Even though I appreciate the advantage of having a verbose commit message for big changes such as this, there's also a real *disadvantage* of this method over Chris's: doing a **hard** reset (`git reset --hard`) touches a lot more files. If you're using Unity3D, for instance, you'll appreciate less files being touched.","2013-11-26 12:35:52","274502"
"61048795","31869042","2","@arichards I think your suspect is right but if second line will not work(by any reason) third line work well to reset. This solution doesn't need to be optimized. I just summarized other answers. That's all. Thank you for your comment. :)","2016-04-20 02:12:45","4927811"
"75925784","44325931","4","@MichałPerłakowski node 8 includes https://nodejs.org/api/util.html#util_util_promisify_original which can be used to make the node.js API return promises. Whether you have the time and money to support non-current browsers obviously depends on your situation.","2017-06-09 06:28:16","123671"
"30151179","348234","11","`git reset HEAD *.ext` where `ext` is the files of the given extension you want to unadd. For me it was `*.bmp` & `*.zip`","2013-11-26 02:25:19","1276506"
"45744680","24456372","18","@kytwb - no. In the special case of zeroth-release version numbers, the carat is equivalent to the tilde. Thus `^0.1.3` only accepts versions `0.1.x` and will not accept `0.2.0`, even though that's a minor increment. This behavior is equivalent to `~0.1.3`. The reasoning behind this behavior is due to the fact that zeroth-release packages are still considered unstable; in the words of [semver.org](http://semver.org/), #4, ""anything may change at any time"" (including backwards-incompatible changes).","2015-02-25 08:45:07","877703"
"75931558","34544089","1","@SamithaChathuranga no, `git push origin :<branchname>` already pushes an 'empty` branch to the remote (hence deletes the remote branch)","2017-06-09 10:20:55","369894"
"75932350","59895","1","Is there a reason no one said `realpath ""$0""`?","2017-06-09 11:13:18","5937008"
"61064399","2389423","3","You can also do `git reset --hard origin/master` instead of specifying a commit sha.","2016-04-20 10:42:52","2066118"
"61074966","115983","5","To those people who think this isn't a useful feature, I would issue this challenge question: I have a /temp directory that needs to be ""there"" when the user checks things out.   The software package I'm using does not create it if it's not there.   How would I do this if not via having git recognijze an empty directory.","2016-04-20 02:30:17","979145"
"30169007","2590281","3","I think that this answer should be edited to make it more clear what @DanMan pointed in a very simple way. What I find the most valuable here is the note at the end, stating that a PUT should be used only for replacing the whole resource.","2013-11-26 10:37:51","1030157"
"973586","671132","3","@Dave Sherohman, that is not REST, that is simply using HTTP correctly.","2009-07-20 05:31:47","89373"
"973589","671134","3","Fielding's blog has some good, easier to comprehend articles on REST and common misconceptions: http://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven","2009-07-20 05:32:53","89373"
"973605","671159","14","Vadim, that would be simply RPC. It's also dangerous to use GET for modifying data since (among other reasons) a search engine may spider your deletion links and visit them all.","2009-07-20 05:35:20","89373"
"973614","671258","1","Or you can use an entry point like /users/ and it will give you a list of user resources AND the URI for each. Then resources are discoverable and navigation is hypertext-driven.","2009-07-20 05:37:18","89373"
"975098","72156","58","Cristian: I used to always create a branch 'foo' for every branch 'origin/foo', but this led to two problems: (1) I wound up with lots of really stale tracking branches that were many commits behind the corresponding remote branch, and (2) in older versions of git, running 'git push' would attempt to push all my local branches to a remote, even when those branches were stale. So now I only keep local branches for things that I'm actively developing, and access the origin/* branches directly if I need information about them.

(That said, you could use a shell script to parse 'git branch -a'.)","2009-07-20 09:44:51","12089"
"30175071","2334741","2","@CharlesWood yeah. I have the same question in MySQL. It would be great if someone knows how to implement it to MySQL and share with everyone. I'm sure lots of people are looking for a MySQL version solution","2013-11-27 03:34:35","1516376"
"979304","59839","30","If you want to play it safe with the GNU tools, use of `--` is highly recommended (end-of-options marker). Otherwise, if your variable contains something that looks like an option, the script'll fail just as with spaces.","2009-07-21 04:36:47","134841"
"984631","229157","5","This is what I was going to say.  If a link has a fallback url that makes sense, use that.  Otherwise, just omit the href or use something more semantically appropriate than an <a>.  If the only reason everyone is advocating including the href is to get the finger on hover, a simple ""a { cursor: pointer; }"" will do the trick.","2009-07-22 01:40:38","3625"
"984643","229926","0","LowPro is really nice for unobtrusive JS if you have a lot of complex behaviors.","2009-07-22 01:43:23","3625"
"45782550","477578","0","@ParthianShot has a point, but client side hashing is still useless -- and adding needless complexity to a security system just creates another moving part that can confuse the maintainer and potentially introduce security flaws (such as leading an inexperienced dev to drop the server side salt+rehashing)","2015-02-26 06:46:43","57068"
"61096782","23839198","0","I get Argument list too long. How the hell do I untrack all of these ignored files??","2016-04-21 02:44:18","1893797"
"61107349","7070976","2","What if you don't want to rebase? You just want to change an older message?","2016-04-21 08:56:35","3915717"
"108336109","237176","0","The performance claim in this approach is dubious. For one, its reverse direction can give a false positive in benchmarks that bias toward elements at the end of the array. For another, running a benchmark in Perflink shows that this code performs at around 9% the speed of `includes` (for an element near the middle of an array) whereas an identical benchmark run in jsBench shows it coming close to or even sometimes beating `includes`. (These tests were performed multiple times on the same browser, browser version, and computer.) This is a weird discrepency.","2020-04-15 09:25:54","1255873"
"76001916","23583655","3","@DamodarBashyal I know I'm pretty late here, but you could totally remove the second term there and you would get the exact same results","2017-06-12 04:19:18","2172566"
"108341796","19286984","0","@premraj You made the assumption that Burhan is telling you not to make; namely, you are conflating CRUD, REST, and HTTP.   If you read RFC 7231, where these things are defined, you will find that in HTTP protocol, the definition of POST certainly allows updating.  It is only the constraints of REST that say otherwise.","2020-04-16 03:32:26","3552393"
"45808632","1274057","23","[`git clean -X`](http://makandracards.com/makandra/17529-git-how-to-remove-ignored-files-from-your-repository-s-directory) sounds similar, but it doesn't apply in this situation (when the files are still being tracked by Git). I'm writing this for anyone looking for a solution not to follow the wrong route.","2015-02-27 12:14:42","94687"
"45808935","23839198","7","If you need to remove them from the working directory, too, then simply run `git ls-files --ignored --exclude-standard | xargs git rm `. I believe this answer is the best! Because it's very clear, Unix-way, and does the wanted thing in a direct manner, without composing the side-effects of other, more complex commands.","2015-02-27 12:23:34","94687"
"30227506","14767865","2","Guide for others who might be confused by AJMansfield's measurements, a translation into metric: »would take up (assuming a new pair of socks takes up 327 cm³) a total of 1.14 m³. That is an enormous amount of space. Assuming they deliver it to you in a box that is roughly a cube, that crate will be about 1.04 m on a side.«","2013-11-28 10:51:38","73070"
"108348957","23951789","0","though elegant and concise, OP clearly mentioned core JS only","2020-04-16 08:56:23","4696003"
"45826000","179147","0","there should be 2 sha's.  one of the diff, one of the metadata.   that way you can move commits seamlessly around... restore commits.  verify that changes are identical (same sha = same diff ... even if different people do it ... etc).","2015-02-27 08:40:03","627042"
"76037462","6581949","22","@MaxGoodridge That's the Python 3 syntax for metaclasses. See [Python 3.6 Data model](https://docs.python.org/3.6/reference/datamodel.html#metaclasses) VS [Python 2.7 Data model](https://docs.python.org/2.7/reference/datamodel.html?#customizing-class-creation)","2017-06-13 01:22:27","166389"
"76040645","2386013","0","What error message does the second example give (in IntelliJ IDEA)?","2017-06-13 02:28:34","446106"
"61138924","2765467","0","In `git push origin master:new_feature_name` command, `master` is the branch that you're working on. If you're on a different branch (let's call it `oldbranch`, and want to push to a `newbranch`, the command will be like `git push origin oldbranch:newbranch` .","2016-04-21 10:05:03","570763"
"108356547","8418403","0","you can create this file in windows using this command `echo>.gitkeep`","2020-04-16 12:50:46","4107888"
"15283044","48800","87","+1 as sending email and seeing what happens is the only real sure way to validate an email address , theres no need to do more than a simple regex match.","2012-07-19 07:14:33","489364"
"76056413","7201731","3","This is wrong on two counts: (1) `os.walk` find all files under a directory tree -- if the user wants to check for `./FILE`, it's unlikely he'd want to treat `./some/sub/folder/FILE` as a match, which your solution does; and (2) your solution is very inefficient compared to a simple `os.path.isfile()` call in the case where there are many files below the current directory.  In the case where no matching filename-without-path exists within the tree, your code will enumerate every single file in the tree before returning false.","2017-06-13 10:10:26","763269"
"92453871","50047083","1","While useful for similar problems, this is not a ternary conditional.  It works to replace `x if x else y`, but not `x if z else y`.","2018-10-11 05:13:50","845159"
"92454366","49653070","1","Note that the ternary operator is smaller (in memory) and faster than the nested if.  Also, your nested `if-else` isn't actually a rewrite of the ternary operator, and will produce different output for select values of a and b (specifically if one is a type which implements a weird `__ne__` method).","2018-10-11 05:28:46","845159"
"92454573","1855173","4","While the tuple of lambdas trick works, it takes roughly 3x as long as the ternary operator.  It's only likely to be a reasonable idea if it can replace a long chain of `if else if`.","2018-10-11 05:34:51","845159"
"61154538","27819913","11","`array.filter(e=>e==x).length > 0` is equivalent to `array.some(e=>e==x)` but `some` is more efficient","2016-04-22 09:22:25","3484498"
"61156826","79936","1","@RohitSaluja Most OSes deallocate un-freed memory on program termintion, but still, the good way would be to explicitly free all the dynamically allocated memory.","2016-04-22 10:19:12","3049655"
"61162327","34555013","0","Hi I did a little test back then, and when the target object becomes complex, the call stack would easily overflow, though I didn't take any notes, hopefully in es6 this will be a big op.","2016-04-22 12:36:39","2176133"
"1053039","105372","18","See also ... http://stackoverflow.com/questions/972307/can-you-loop-through-all-enum-values-c","2009-08-04 02:10:45","27756"
"1067812","671132","2","The problem with REST is that browsers don't support PUT and DELETE, so you have to fake those methods using POST and hidden form parameters containing the method you'd love to use but can't.","2009-08-06 09:17:33","86932"
"108377655","7901053","0","Newtonsoft Json.NET also support C-style comments with no problems","2020-04-17 01:19:16","6763830"
"108382262","20195320","1","I can confirm this, so this is still valid in 2020. We are also working on a large project and I had to run it 4-5 times until GIT did not find any more files to be deleted.","2020-04-17 06:37:20","8240983"
"15318282","11566262","1","I get `java.io.StreamCorruptedException: invalid stream header`","2012-07-20 11:13:33","674856"
"92483833","44902405","0","Objects.isNull() is available since Java8 (not Java7)","2018-10-12 02:04:00","25122"
"76080274","5201642","1","the git reset --soft HEAD~3 definitely is better in terms of number of conflicts to solve. 
our test case was HEAD~6, but one of the commit was a merge commit, so we had 45 commits and the rebase -i HEAD~6 gave us so many conflicts which end up failing the build. And when we used reset --soft it gave us 0 conflicts to solve.","2017-06-14 12:31:59","4582240"
"1085118","671132","10","@Rafe That's not a problem with REST, that is a problem with Web Browsers!  Some of us use REST without Web Browsers:-)","2009-08-11 02:06:18","6819"
"76091632","33132462","15","There is no ""Docker Engine"" layer between container and kernel, container is just a process with special settings in the kernel (namespaces, cgroups, etc.)","2017-06-14 04:54:22","539481"
"108408603","16957078","0","@DimitriKopriwa try -l option to show file name as mentioned in the second most popular answer.","2020-04-17 08:32:20","3733214"
"92488371","1473742","1","But none of these would work for Array of complex type? it works for string, numbers and all, what abt var arr = [{""id"":""1"",""name"":""Joe""},{""id"":""2"",""name"":""Smith""}];
var obj = {""id"":""1"",""name"":""Joe""};
arr.includes(obj);","2018-10-12 04:23:26","870547"
"30303531","180085","0","@AristotlePagaltzis I'm the only one pushing commits to a remote repository. Can I `git push -f` to push `reword`s for commits that have already pushed?","2013-12-01 02:38:53","454780"
"92497213","44902405","0","@RealHowTo Thankd for pointing it out, I have updated the answer, Actually `Objects` is introduced in java7, `isNull` added to it later.","2018-10-12 10:43:28","2893693"
"1102860","1274082","36","`git rm --cached` will remove the file from the index without deleting it from disk, so no need to move/copy it away","2009-08-13 07:56:00","36723"
"1102865","1274126","11","This will change all commit IDs, thus breaking merges from branches outside of your copy of the repository.","2009-08-13 07:56:51","36723"
"1103258","1274447","66","the process that workd for me was
1. commit pending changes first
2. git rm --cached <file> and commit again
3. add the file to .gitignore, check with git status  and commit again","2009-08-13 09:07:29","5191"
"61196583","452820","4","Tony Hoare apologised for inventing `null`. But an even bigger mistake is to pick a strategy, to stick to it for over 20 years until billions lines of code are written, to then finally change your mind. This `.?` was like a last chance to keep java ""clean"". It's a very simple syntactical solution. But instead they prefer to throw in a handful of different `@Nullable` and `Option` classes, empty collections, empty objects. The goal was to make nullability easier. But instead they added many layers of complexity. In the end, this will split the java community and will drive it to distruction.","2016-04-23 02:12:25","1833961"
"15352847","1473742","253","`inArray` is a terrible name for a function that returns the index of the element, and `-1` if it doesn't exist. I would expect a boolean to be returned.","2012-07-22 09:45:56","698511"
"15355752","115983","18","While it's not useful, [there is a way to hack an empty (really empty) directory into your repo](http://stackoverflow.com/questions/11600871/git-repo-contains-an-empty-directory-what-happens/11600882#11600882). It won't `checkout` with current versions of Git, however.","2012-07-22 02:18:24","1307866"
"76112579","38510931","0","please what do this mean `let { type, name, value } = node;` ? you create a new object with 3 properties type/name/value and initialise them with the properties values from node  ?","2017-06-15 07:55:34","2732980"
"61198887","388282","104","*Accelerated C++* is from 2000. Should I worry that it's out of date?","2016-04-23 03:58:53","2740621"
"76118634","40857703","0","Maybe `traverse` could also be a good name for this way of a tree, whereas I'd keep it less *universal* for this answer by sticking to nested lists.","2017-06-15 10:22:27","2932052"
"30328266","72156","3","It's useful to add verbosity to the `git branch -a` output, by doing `git branch -av` or even `git branch -avv`. With the increased verbosity, you will see each branch's latest commit as well.","2013-12-02 06:53:56","1136063"
"108457518","61307412","1","Don't use set ``shell=True`` to run commands, it opens the program to command injection vulnerabilities. You're supposed to pass the command as a list with arguments ``cmd=[""/bin/echo"", ""hello word""]``. https://docs.python.org/3/library/subprocess.html#security-considerations","2020-04-19 04:52:21","5994461"
"76131704","348170","1","Before you post a new answer, consider there are already 25+ answers for this question. Make sure that your answer contributes what is not among existing answers","2017-06-15 03:29:32","1084174"
"76131756","61212","0","Before you post a new answer, consider there are already 25+ answers for this question. Make sure that your answer contributes what is not among existing answers","2017-06-15 03:30:40","1084174"
"61235497","6985636","0","Probably worth noting that this will also convert things like acronyms to lowercase, so maybe not the best idea in most cases","2016-04-25 05:08:23","220043"
"45918908","11551718","1","The Chrome extension ""Webpage screenshot"" previews the screenshot as a data URI. A page 32708 pixels high (1263 wide) became a PNG 8,749,309 bytes (8.34 MiB) in length. In base64, that's 11,665,748 characters. Add in the `data:image/png;base64,`, and you get a 11,665,770 character long data URI.","2015-03-03 04:05:27","1350209"
"108467080","244777","3","@schoetbi, JSON5 is unofficial. It is not ""the 5th version of JSON"", despite what its creators would have you believe. See https://github.com/json5/json5-spec/issues/15","2020-04-20 12:51:04","4421959"
"76167452","24248152","0","In my case I expected indeed to overwrite existing members, so the current behaviour was the wright one for this usage. But thank you to add this helpful suggestion.","2017-06-16 01:01:32","2057976"
"76177123","43365551","21","Twice I've come here, read this answer, and forgotten the `.` at the end. To future me: the period is *essential*!","2017-06-16 05:13:15","2671441"
"76178354","36463546","0","The danger that is being avoided here is that commits on `newbranch` will be lost in a rebase. If `newbranch` is merged into `oldbranch` before a rebase happens, is that still a danger?","2017-06-16 05:51:33","5369466"
"1188327","452820","5","Update: the proposal will not make Java7. See http://blogs.sun.com/darcy/entry/project_coin_final_five .","2009-08-29 06:56:34","1996"
"1190232","38578","55","It would be good to augment the example by adding another row in table B with value 4. This will show that inner joins need not be on equal no of rows.","2009-08-30 12:59:48","11711"
"108509061","29650705","4","This is the best answer here as it describes the full process to correctly complete a rename","2020-04-21 06:58:48","1549918"
"76186973","44212447","4","This is interesting. I like how it allows to code async calls the way you'd do it in other languages. But technically it's not real JavaScript?","2017-06-16 11:55:06","6384183"
"1197881","79936","40","It is a common misconception that the `C` language, as defined by the `C99` language standard (available at http://www.open-std.org/JTC1/SC22/WG14/www/docs/n1256.pdf ), requires a ""stack"".  In fact, the word 'stack' does not even appear in the standard. This answers statements wrt/ to `C`'s stack usage are true in general, but is in no way required by the language.  See http://www.knosof.co.uk/cbook/cbook.html for more info, and in particular how `C` is implemented on odd-ball architectures such as http://en.wikipedia.org/wiki/Burroughs_large_systems","2009-09-01 04:37:30","139937"
"1197950","80142","8","Another nitpick- most of the answers (lightly) imply that the use of a ""stack"" is required by the `C` language.  This is a common misconception, though it is the (by far) dominate paradigm for implementing `C99 6.2.4 automatic storage duration objects` (variables).  In fact, the word ""stack"" does not even appear in the `C99` language standard: http://www.open-std.org/JTC1/SC22/WG14/www/docs/n1256.pdf","2009-09-01 05:03:55","139937"
"1201607","245213","25","It is true that JSON format does not have comments. Personally I think that is a significant mistake -- ability to have comments as metadata (not data) is a very useful thing with xml.
Earlier draft versions of JSON specification did include comments, but for some reason they were dropped. :-/","2009-09-01 06:20:50","59501"
"30402034","1787014","6","Using git version 1.8.3.msysgit.0 and this doesn't work for me -  did not match any file(s) known to git - I've done many git fetches","2013-12-03 11:59:44","43453"
"30404201","178450","2","So, should we use `.is("":invisible"")` for false?  Or `!$(element).is("":visible"")`, or just what?","2013-12-04 01:58:12","445651"
"30410533","20023094","0","text-align work for text alignment in its container not for its container to its parent.","2013-12-04 07:32:36","1637683"
"45972281","28753078","0","In what way is this solution better than the `dict(x, **y)`-solution? As you (@CarlMeyer) mentioned within the note of your own answer (http://stackoverflow.com/a/39858/2798610) Guido considers that solution _illegal_.","2015-03-04 11:09:13","2798610"
"30411991","20023094","0","i test it , i problem with set child to center , must when you have more one child , more times margin:0 auto font answer , but , text-align center , for parent make this child be center , even if they are element and not be text , test and see what happen","2013-12-04 08:35:28","2148893"
"61317328","7216269","0","I wanted a repo that is identical to the source with its origin pointing to the same place.  So I added:
`cp path/to/original/.git/config path/to/dest/.git/config`
This seems to fix some other problems related to starting with a bare repo as well.","2016-04-26 08:40:09","1754168"
"30413572","20023094","0","text-align center text only. You right at this time but when you write a container css which contains a child with different width and color your code does't work. Test it again!!!!","2013-12-04 09:23:49","1637683"
"30415029","20023094","0","See this example http://jsfiddle.net/uCdPK/2/ and tell me what do you think about it!!!!!","2013-12-04 10:03:06","1637683"
"76206780","237028","29","*""When you see a function with yield statements, apply this easy trick to understand what will happen""* Doesn't this completely ignore the fact that you can `send` into a generator, which is a huge part of the point of generators?","2017-06-17 10:41:34","2665591"
"61320868","27664932","7","The `git clean -f` was the essential piece I needed.  Thanks!","2016-04-26 10:51:55","1167442"
"76208772","630475","1","@Learner I second your sentiment. This answer and the examples are confusing. Words are used inconsistently.","2017-06-18 01:52:52","1712447"
"45978913","23853061","31","Still works (Marchi 2015), all though the ""Switching the base"" link is no longer there. You have to change the ""Base"" drop down's so both point to your fork and then you'll get a prompt to ""Compare across repos"", which will take you to where you want.","2015-03-04 02:05:27","368085"
"61329539","26299506","3","I've never thought about. That `-p` adds a nice extra layer of safety. Combine it with `git clean -d` to actually answer OP.","2016-04-27 06:39:50","2412477"
"108532080","2432799","0","NOTE: Worked, but I lost all files changes that were listed in `git status` when I changed it. Since I do not know git very well, I re-cloned. copied files that I changed and then committed.","2020-04-21 06:22:37","503621"
"61330983","14364249","6","as @sleepycal has said, this suffers from a similar race condition as the accepted answer. If between raising the error and checking `os.path.isdir` someone else deletes the folder, you will raise the wrong, outdated, and confusing error that folder exists.","2016-04-27 07:20:54","2442366"
"45997426","28753078","16","Guido dislikes `dict(x, **y)` for the (very good) reason that it relies on `y` only having keys which are valid keyword argument names (unless you are using CPython 2.7, where the dict constructor cheats). This objection/restriction does not apply to PEP 448, which generalizes the `**` unpacking syntax to dict literals. So this solution has the same concision as `dict(x, **y)`, without the downside.","2015-03-04 10:24:44","3207"
"92598860","46815111","1","A simple example of two-way communication between a primary process and a subprocess can be found here: https://stackoverflow.com/a/52841475/1349673","2018-10-16 06:05:17","1349673"
"46005397","477578","1","@JensRoland ""leading an inexperienced dev to drop the server side salt+rehashing"" Reminds me of ""a common mistake that people make when trying to design something completely foolproof is to underestimate the ingenuity of complete fools"". You kind of need to assume that you have a competent dev team. However, salting the hash client side has one huge advantage; a person who decrypts traffic after-the-fact can still only use what they get as an auth token on your site, whether or not the end user is using the same password across multiple sites. Although defense in depth does add complexity.","2015-03-05 05:59:12","3680301"
"61353787","6620071","5","This is a fantastic answer; much better IMO than the one with the most votes.  The ""math"" required doesn't go beyond what's needed to understand the expressions in the parentheses after the ""O,"" which no reasonable explanation that uses any examples can avoid.","2016-04-27 03:52:07","125349"
"30437937","1970277","31","@Jens How about: ""The space is not missing - C(++) ignores unnecessary white space.""?","2013-12-04 08:35:14","733805"
"61358976","16957078","1","@D.7 could you elaborate how they are important?","2016-04-27 05:57:14","2825720"
"15484958","10113231","7","Ditto - this worked for me when doing a very large merge (GitHub pull request) where I just wanted to accept it all on top of what I had.  Good answer!  In my case the last two commands were: 1) `get fetch other-repo`; 2) `git merge -s recursive -X theirs other-repo/master`","2012-07-27 01:44:56","871012"
"61360902","16957078","0","@sbhatla if your file name or file path contains white spaces then quotation marks ensure that the file name is read including/along-with white spaces.","2016-04-27 06:47:40","2541267"
"30448939","178450","2","@Wolfpack'08: I'm looking for a similar solution as well. So far I've been using `$(element).css('display')=='none'` to detect hidden elements.","2013-12-05 04:57:08","572190"
"108566557","6591218","0","is it possible that the old branch is not deleted in windows if i use -m, and same branch having two names and if i commit in new branch it goes ahead from older one https://stackoverflow.com/questions/61367248/git-some-how-a-single-branch-having-two-names-created-how-do-i-make-it-single/61369981#61369981","2020-04-22 04:35:24","5444273"
"61389183","215304","7","I personally prefer using ""Int32"", since it immediately shows the range of the value. Imagine if they upgraded the type of ""int"" on later higher-bit systems. 'int' in c is apparently seen as _""the integer type that the target processor is most efficient working with""_, and defined as ""at least 16 bit"". I'd prefer predictable consistency there, thank you very much.","2016-04-28 11:41:38","395685"
"15512871","2611372","0","I agree and have written a JSON parser in Java, available at www.SoftwareMonkey.org, that does exactly that.","2012-07-28 01:51:47","8946"
"108579935","61351911","0","Greatest answer overlooked","2020-04-23 01:33:51","1300775"
"76261406","19442557","6","Does anyone have any idea why this works when everything else doesn't? (I'm on git 2.13.0)","2017-06-19 06:43:40","937377"
"76264059","373834","0","@NickVolynkin Your information is wrong; `git gc` *will* sometimes remove commits from the reflog. As the [`git-gc` man page](https://www.kernel.org/pub/software/scm/git/docs/git-gc.html) says, the configuration variables `gc.reflogExpire` and `gc.reflogExpireUnreachable` set age thresholds for deletion from the reflog. Entries older than those values will be deleted when `git gc` is run. The values default to 90 days and 30 days for reachable and unreachable commits.","2017-06-19 08:07:22","578288"
"46039499","11478811","0","It might be more relevant than you think. More info: http://www.ibm.com/developerworks/library/j-jtp06243/   :)","2015-03-05 10:45:41","1022180"
"46040482","14402051","0","Tried this and it actually increased the number of commits that my local branch is ahead.","2015-03-05 11:25:32","187423"
"30494802","1644241","23","@Josh: actually, overflow gives undefined behavior for `int`, so it could just as easily eat your dog as take `x` to zero if it  starts out negative.","2013-12-06 06:57:56","294313"
"108592496","7216269","0","In my case, I also need to run `git config --bool core.logallrefupdates true` because core.logallrefupdates is false by default in a bare repository (or a mirror repo). reference: https://git-scm.com/docs/git-config","2020-04-23 10:46:41","4336225"
"108593487","7216269","1","I found another difference between clone and clone --mirror (https://stackoverflow.com/a/3960063/4336225), so if I want to work on this mirrored cloned repo. I also 1) need to run `git config --bool core.logallrefupdates true` because core.logallrefupdates is false by default in a bare repository (or a mirror repo). reference: https://git-scm.com/docs/git-config. 2) the fetch section in config file also needs to be changed, from ""fetch = +refs/*:refs/*"", to ""fetch = +refs/heads/*:refs/remotes/origin/*"". otherwise the `git fetch` does not work in the same way in as normally cloned repo.","2020-04-23 11:15:27","4336225"
"15549306","9113274","3","No, GetValues() is called only once in the foreach.","2012-07-30 11:25:48","217384"
"30503365","14415881","9","Laundry day is boring as it is. To eliminate the drag of sock sorting you should be doing it lazily: pour all (unmatched) socks in drawer, each morning pick two that look (kind of) the same.","2013-12-06 11:36:48","46645"
"108602978","671132","0","Are you replying to the question asked or doing some random copy paste here :/","2020-04-23 03:38:45","1889310"
"92678800","59895","0","@Score_Under Just don't use `dirname` at all: just use `reldir=${0%/*}` directly","2018-10-18 09:14:03","4372452"
"15560460","9204568","87","You can implement something 20x as long that might cause problems for a few users and might not be valid in the future, or you can grab ImmortalFirefly's version to make sure they at least put in the effort to make it look real. Depending on your application it may be more likely to come across  someone will get mad because you don't accept their unconventional email, rather than someone who causes problems by entering email addresses that don't really exist (which they can do anyways by entering a 100% valid RFC2822 email address but using an unregistered username or domain). Upvoted!","2012-07-30 06:20:04","83358"
"30515333","10434949","1","You're sort of on the right track, but at that point in the code `content` is the string `""null""`, and ""null"" == null returns false, so that test behaves as intended. Instead I believe the problem is a mix of how XML.appendChild handles a string argument, and how a root XML element containing only the string ""null"" can be coerced to a literal `null`.","2013-12-06 04:57:39","203705"
"30516110","10434949","0","@Reboog711 Take a look at my fiddle. ""null"" != null` returning `true` is desired behavior here. If the opposite happened, this would discard the string ""null"" from the encoding process, which in fact would be the cause of the problem. However because this test succeeds, the encoder keeps going, until XML.appendChild discards it due to a coercion bug.","2013-12-06 05:19:46","203705"
"30516172","10434949","0","@BenBurns Forget my previous comments which I just deleted.  You're right.  It has been a while since I put together a sample to try to help diagnose this and I distinctly remember stepping through that explicit line of code and getting the results I documented in the answer.  As to why that is; I'm unclear now.  I did leave my ""code sample"" demonstrating how a null string compares to the null reserved word which is exactly as you said it should.","2013-12-06 05:21:39","133840"
"30516393","10434949","4","No worries. If you want to see the real problem add `var xml:XML = <root>null</root>;  var s:String = (xml == null) ? ""wtf? xml coerced to null?!!"" : ""xml not coerced to null.""; trace(s);` to your code sample.","2013-12-06 05:28:16","203705"
"30517020","10389086","42","Please don't do this. CDATA was created for use in cases where you need to escape an entire block of text.","2013-12-06 05:46:45","203705"
"1319058","1126089","4","I tried using ""git clean"" to solve the same issue, but it did not resolve it.  

git status says ""Your branch and 'origin/master' have diverged,
# and have 2 and 9 different commit(s) each, respectively."" and git pull says something similar to what you have above.","2009-09-24 04:25:42","66289"
"30520698","10389086","4","I could be wrong, but I don't think downvoting just because it wasn't *your* solution is how it's supposed to work. Also you have to keep in mind the problem calls for a heuristic solution since there isn't one obvious way, as made evident by the variety of solutions posted. Lastly, keeping in mind I don't know CF, wouldn't a decoder just equate the inner text of <message><![CDATA[NULL]]></message> to the inner text of <message>NULL</message>? If so, then is CDATA really a solution at all?","2013-12-06 07:38:06","1076233"
"30530671","9180445","2","if the cherry picking is the last N commits then you can just move your master HEAD back w/ `git reset --hard HEAD~N`","2013-12-07 04:01:50","1114274"
"15575697","1274447","6","mataal's comment is very important. Commit pending changes first, THEN git rm --cached and commit again. If the rm is part of another commit it doesn't work as expected.","2012-07-31 09:02:23","107565"
"61448892","35539401","2","even more quick way is ```git add . && git reset --hard HEAD```","2016-04-29 06:25:05","3027390"
"108665993","1274081","0","This works the best for me, even after having tried the other ""gittier"" ways. Sometimes simple is best.","2020-04-25 04:00:49","1496528"
"30570807","2611372","29","""...would be a one liner"" umm, no, actually, JSON is not a regular grammar where a regular expression can simply find matching pairs of /*. You have to parse the file to find if a /* appears inside a string (and ignore it), or if it's escaped (and ignore it), etc. Also, your answer is unhelpful because you simply speculate (incorrectly) rather than providing any solution.","2013-12-08 09:55:15","228852"
"30570869","20434146","11","This does not work, because it doesn't take into account if /* could be escaped, or could be inside a string literal. JSON is not a regular grammar and thus regular expressions are not enough. You have to parse it to find out where the comments are.","2013-12-08 09:58:52","228852"
"76347195","79923","4","Related, see [Stack Clash](http://www.openwall.com/lists/oss-security/2017/06/19/1). The Stack Clash remediations affected some aspects of system variables and behaviors like `rlimit_stack`. Also see Red Hat [Issue 1463241](https://bugzilla.redhat.com/show_bug.cgi?id=1463241)","2017-06-21 04:23:19","608639"
"92732515","27020944","0","Very clear response here. Lots of folks confused about this topic.","2018-10-20 11:12:21","309779"
"46114392","28928722","6","I wouldn't call it pain. The git command is very easy to use, once you've seen this answer, you'll probably never come back again. The problem is more that, so it seems, the *documentation* of the git command-line isn't intuitive enough.","2015-03-08 05:05:54","3424423"
"46114663","28928722","1","True but with SourceTree I hardly ever need to worry about checking documentation. Everything is generally intuitive - just right click and see what the options are. (BTW I'm not affiliated with them in any way - just like the tool!)","2015-03-08 05:17:03","1063716"
"30576818","12853037","91","This is scary, in the unsorted list, there should be 50% chance of hitting the add.  Somehow the branch prediction only has a 25% miss rate, how can it do better than 50% miss?","2013-12-09 04:00:09","2383730"
"30577316","12853037","148","@tall.b.lo: The 25% is of all branches - there are *two* branches in the loop, one for `data[c] >= 128` (which has a 50% miss rate as you suggest) and one for the loop condition `c < arraySize` which has ~0% miss rate.","2013-12-09 04:29:25","134633"
"92734015","20388370","10","I wonder why people have such a hard time to understand why one wants to add ""empty"" folders to git. You have to start somewhere, right? So, usually you start with your projects folder structure and - alas - at the start of the project there is nothing there yet. Once your project repo is done, team workers can clone and start working on the SAME structure.","2018-10-21 02:36:32","2225104"
"76354230","23961231","9","+1 for the remote tracking branch. This branch is what causes issues when you clone someone else's branch. It keeps on tracking your commits and asking you if you want to push to that person's branch.","2017-06-21 07:48:20","2120578"
"46131721","25553225","13","Use `--soft` to keep your changes as `uncommitted changes`, `--hard` to nuke the commit completely and revert back by one. Remember to do such operations only on changes, that are not pushed yet.","2015-03-09 09:11:06","936957"
"92748969","52919467","0","I have added a one line statement example to check which number is big to elaborate it further","2018-10-21 08:45:54","9274020"
"92749861","37155553","0","To add to Frederick99's remark, another reason to avoid `print('yes') if conditionX else print('nah')` is that it gives a SyntaxError in Python2.","2018-10-21 09:51:29","550094"
"92749878","52919467","1","`print` is really not a good choice, as this will give a SyntaxError in Python2.","2018-10-21 09:52:56","550094"
"92749900","52919467","0","@Thierry Lathuille here I used print() function not print statement, print function is for Python 3 while print statement is for Python 2","2018-10-21 09:54:21","9274020"
"92749954","52919467","0","The question has already been asked on SO, just try it with Python 2 and you will see by yourself. 'print('hello') is a perfectly valid syntax in Python 2.7, but the way it is parsed makes your code above throw a SyntaxError.","2018-10-21 09:58:23","550094"
"30586721","912737","120","As previously stated, good to dry-run it with `git clean -n -d`","2013-12-09 10:54:56","681045"
"92753803","37155553","0","The only reason it gives a syntax error is because in Python 2 print is a statement - `print ""yes""`, while in Python 3 it is a function - `print(""yes"")`. That can be resolved by either using it as a statement, or better - `from future import print_function`.","2018-10-22 04:09:00","3446126"
"30592756","487278","1","The use of the word *complexity* in this explanation is worse than misleading. Big O notation is used to describe the *execution time* of an algorithm and has nothing to do with its *complexity* -- it may in fact be negatively correlated in cases where different algorithms for solving the same problem are discussed. (Bubble sort is simpler than virtually any other sort, but takes more time.)","2013-12-09 01:50:10","438186"
"92760833","20241145","0","In Eclipse/EGit: right click on file > Team > Advanced > Assume Unchanged","2018-10-22 09:07:36","1040245"
"61507253","20783081","0","The ""git fetch origin"" did not bring any of the remote branches to my local - or are they hidden somewhere?  Reading all the answers above gave me a headache.  We are looking for ""git fetch all branches to local"".  There must be a way aside from bash-scripts to do this.","2016-05-02 06:12:17","2326613"
"46145168","20373180","1","Doesn't allow +'s in the name part of the email.","2015-03-09 03:19:47","133737"
"30601605","671132","1","Hmm, tbh I don't really like the new version of the answer. I accepted the original version because it provided a simple straight forward answer.","2013-12-09 05:48:01","35364"
"30610045","13326916","1","I would refer to a static variable declared within a function as having only local *accessibility*, but would generally not use the term ""scope"" with it.  Also, it may be worth noting that the one stack/heap aspect with which languages have essentially zero flexibility: a language which saves execution context on a stack cannot use that same stack to hold things which will need to outlive the contexts wherein they are created.  Some languages like `PostScript` have multiple stacks, but have a ""heap"" that behaves more like a stack.","2013-12-09 09:53:25","363751"
"30618761","2064441","0","Also, look at Functional Guava Extensions (fugue). This library also has its own Option.","2013-12-10 05:07:52","706317"
"108708818","55297455","1","This is exactly what I needed. Thanks","2020-04-27 07:20:49","3902739"
"108708979","630785","0","Any reference for ""with some input from Roy Fielding""?","2020-04-27 07:28:21","2160440"
"15655314","417142","44","FWIW, for Windows users, server paths exceeding 250 characters _may_ cause grief when building URLs, for example, see [HttpContext.Current.Server.MapPath fails for long file names](http://forums.asp.net/t/1829786.aspx/1?HttpContext+Current+Server+MapPath+fails+for+long+file+names) at **forums.asp.net**. bottom line: if one restriction does not get you, another one _may_.","2012-08-02 08:32:19","249176"
"76403727","13326916","1","@zaeemsattar absolutely and this is not ususual to see in C code","2017-06-22 10:41:23","1763801"
"61540187","470376","10","[comparisons to singletons should always use is/is not instead of ==](https://www.python.org/dev/peps/pep-0008/#programming-recommendations)","2016-05-02 11:10:56","1357527"
"76407969","27664932","2","@PopeyGilbert, it will happend if .gitignore is different in two branches.","2017-06-23 03:52:11","1078084"
"61544016","36994986","1","it's Ei**ff**el with two ""f""","2016-05-03 03:28:26","3702797"
"61544115","36994986","0","in fact there's a weakness in my regEx, should be:
`+str!=+str ?  str.replace(/[a-z]/, str.match(/[a-z]/)[0].toUpperCase()) : str;`
for cases like:  `str = ""1.2   the Eiffel Tower""`","2016-05-03 03:34:59","5896426"
"15669474","72156","2","how come `git checkout experimental` is different from `git checkout origin/experimental`","2012-08-03 10:53:53","1099531"
"30648732","15995104","3","This is the old way of doing it, which I've used quite a bit. The disadvantage is that the placeholder text disappears when you focus. I've found this to be annoying when the UI doesn't also include labels next to the input. Over the past several months I've started replacing this method with using placeholder text, which I think is a UX improvement.","2013-12-10 07:31:29","591736"
"92794925","5190323","0","maybe is outdated? I did the reset --hard and when doing the merge --squash I get this error ""fatal: You cannot combine --squash with --no-ff.""","2018-10-23 07:25:09","1143482"
"30653852","417142","21","@Lohoris: If a form uses `get` rather than `post`, then bookmarking the page reached by the filled-in form will capture the information that was entered.  In some cases, that can be bad, but in other cases it can be useful.  For that to work, however, the browser has to be able to handle a URL containing all the information.","2013-12-10 10:03:41","363751"
"76438122","3688108","5","Why is it obvious?","2017-06-23 06:25:52","852592"
"1440908","215266","20","You do have to include a `using System` when using `String`, otherwise you get the following error: `The type or namespace name 'String' could not be found (are you missing a using directive or an assembly reference?)`","2009-10-16 05:53:00","96175"
"108741389","59263638","0","if you look into https://jsfiddle.net/jinny/p3x5jb81/9/ , i just added border to show that in my case centered div is not 100%, it takes size/length of the text content. If centered text has content length bigger than the outer div than I agree we need to give inner div a width. But my solution support the given sample case.","2020-04-28 03:14:42","7901403"
"61576923","114549","18","Not necessarily `margin:0 auto`: it can be `margin: <whatever_vertical_margin_you_need> auto` second being the horizontal margin.","2016-05-03 07:07:32","3995261"
"1466794","394887","74","The remedy is to use (test and [true_value] or [false_value])[0], which avoids this trap.","2009-10-21 03:33:59","127465"
"92809383","7216269","1","Warning, it doesn't clone merged branches. But other than that, it does the work!","2018-10-23 01:49:29","6188106"
"61579973","19095988","0","but what if I don't want to commit all the changes yet?","2016-05-03 08:36:03","4273202"
"76461242","34049725","0","BTW you can just do git clean {flags} :/ so it will be as if you ran the command in the repo root","2017-06-24 07:07:14","3104126"
"61585403","762011","0","As ES6 feature support improves, the question concerning ES6 adoption shifts focus from feature support to performance differences. As such, [here's a site I found benchmarking performance differences between ES6 and ES5](https://kpdecker.github.io/six-speed/). Keep in mind this will likely change over time as engines optimize for ES6 code.","2016-05-04 01:02:26","5812121"
"30670258","20394520","4","Noooo, it's still 2 lines and also longer than `z = x.copy(); z.update(y)`","2013-12-11 09:50:20","703382"
"92823154","5189600","2","What you supposed to do after the squashing to get it pushed?","2018-10-23 09:09:58","4254882"
"108765520","60876846","3","This seems to be twice the amount of work, more RAM usage and more obfuscated than the simpler `val = a if cond else b` statement.","2020-04-28 04:57:59","9319317"
"76475706","6581949","0","echoing @petrux question. I was lost at the statement:


    `Be careful here that the __metaclass__ attribute will not be inherited, the metaclass of the parent (Bar.__class__) will be. If Bar used a __metaclass__ attribute that created Bar with type() (and not type.__new__()), the subclasses will not inherit that behavior.`



Can someone please explain this a little bit deeper? Would really appreciate some help here.","2017-06-25 02:43:54","2661238"
"92831512","1473742","7","`array.includes(foo)` does not support objects. I am not sure why this is the accepted answer, because it was asked *How do I check if an array includes an object in JavaScript?*","2018-10-24 06:40:11","3935035"
"61600922","5334825","3","@AleksYa: just use the ""contain"" version, and include the end anchor into the search string: change the string to ""not match"" from ""hede"" to ""hede$""","2016-05-04 10:42:45","395685"
"108775097","46107537","1","This is a perfect solution if you don't have to pull many times from the original repo, or the project forked is relatively simple.","2020-04-28 10:41:25","372899"
"1496714","1628334","4","Thank you for your answer. You said 'Note that the first example assumes that the remote repo's name is ""origin"" and that the branch named ""master"" in the remote repo matches the branch in your local repo.'  How can I double check my remote repo's name and my branch name to be sure before I execute 'git reset --hard'?

Thanks again.","2009-10-27 02:57:22","128983"
"1496778","1628584","266","And in particular, *don't* try to go back further than the point where you last pushed commits to another repository from which somebody else might have pulled.","2009-10-27 03:23:50","893"
"1497912","1628235","3","There was an incorrect suggestion in my answer that Dan caught earlier. I edited it away, since I don't want to lead anyone astray. 

As to the origin/master or origin/HEAD stuff, I expect that depends on whether or not you actually do a fetch first. If you just cloned origin, and it had no other branches, which I find to be quite common, then it should reset it fine. But of course, Dan is right.","2009-10-27 09:58:26","190711"
"108788611","237104","0","`let arr = ['apple','banana', 1, 2, 4]
if (!arr.includes('banana') )
 console.log('No')
else
  console.log('Yes')`","2020-04-29 10:01:32","10423650"
"1499231","1628334","23","If you didn't explicitly name the remote, then it's name is likely just ""origin"" (the default). You can use ""git remote"" to get a list of all remote names. You can then use ""git remote <name>"" to see which branches push/pull with each other (e.g. if your ""master"" branch was cloned from ""master"" in the remote named ""origin"", then you'll get a line that says ""master merges with remote master"").","2009-10-27 01:51:37","95706"
"92852780","21057032","3","The `save` option was deprecated in favor of `push`, which does the same but more. You can read more here, [https://stackoverflow.com/questions/44680028/whats-the-difference-between-git-stash-save-and-git-stash-push/44681952](https://stackoverflow.com/questions/44680028/whats-the-difference-between-git-stash-save-and-git-stash-push/44681952)","2018-10-24 03:51:07","3297903"
"92857882","22345808","1","We have an issue here folks... WHY does this have 2764 up-votes if it's misleading or incorrect?  Maybe don't hit the up-vote button unless you're 100% sure about what you're voting on seems like good practice. Ian, take it down a notch... if an answer is wrong, misleading or confusing... then it deserves discussion, instead of stepping all over each others toes with the edit link.","2018-10-24 06:23:45","3570719"
"30700781","20434146","0","It will work in limited situations where you can be sure that your JSON does not contain any data with the comment string in it.  Thank you for pointing out that limitation.  I have edited the post.","2013-12-11 11:52:24","973402"
"76505621","36035604","1","Helped partly: Is `git remote add upstream git@github.com:original_author/project_name.git` just an alias for `git remote add upstream https://github.com/original_author/project_name.git` ?","2017-06-26 02:44:06","2932052"
"15725162","11828270","174","Are you just trying to quit VIM ? If this is the case, press ""escape"" and then type ':q'","2012-08-06 12:28:19","1519955"
"108814312","45323085","0","Is there a way to do a 3-d perfplot? number of arrays by average size of array?","2020-04-30 12:31:34","414125"
"76512264","388282","79","I think it would be good to put the dates published for the edition (with the edition number where applicable).","2017-06-26 05:48:47","541136"
"15739755","10701801","0","you can turn off autocomplete for individual form fields.  what you should be careful of is humans using useragents that do not recognise style sheets.","2012-08-06 10:39:47","76392"
"1525273","271553","18","Problem is that usually you loose context as the NullPointerException does not indicate WHICH variable was null, and you may have several "".""-operations on the line.

Using ""if (foo == null) throw new RuntimeException(""foo == null"")"" allows you to state explicitly WHAT was wrong, giving your stack trace much more value to those who have to fix it.","2009-10-31 09:02:17","53897"
"108823005","6581949","0","Karuhanga, `metaclass-function` was referring any method that manipulates a class declaration, calling `type.__new__(x, y, z)` directly in way that no specific `__metaclass__` is set to the just created class (i.e. its metaclass will be `type`). Thus this class' subclasses will also have by default its same mataclass (that is, `type`)","2020-04-30 08:39:08","2989289"
"15752904","406260","12","Some tools, and specifically mysqldumpslow, only offer this way to filter data, so in such a case, finding a regex to do this is the best solution apart from rewriting the tool (various patches for this have not been included by MySQL AB / Sun / Oracle.","2012-08-07 12:21:12","33991"
"76525230","163659","3","I highly recommend using the 'meld' tool. It's a cross platform diff tool that makes it easier to merge than using vim. If you are a Vim user then there is the fugitive.vim plugin http://vimcasts.org/episodes/fugitive-vim-resolving-merge-conflicts-with-vimdiff/","2017-06-27 04:45:54","327074"
"46278299","630475","0","One note on using POST for CRUD style updates: I know that [Roy Fielding pointed out](http://roy.gbiv.com/untangled/2009/it-is-okay-to-use-post) that it should be more important for a RESTful design to make use of Hypermedia and discoverable self-explaining APIs than (e.g.) disallowing POST requests to perform item updates. But the quoted http spec gives a rule of thumb: In general it is quite intuitive and consistent to *allow POST only for creating new subordinates for the given resource*. For replacing or updating existing resources, I always prefer PUT or PATCH.","2015-03-12 06:01:06","1197652"
"1542649","1669457","2","So does that mean that by using a staticmethod I am always bound to the Parent class and with the classmethod I am bound the class that I declare the classmethod in (in this case the sub class)?","2009-11-03 07:06:05","112850"
"1542742","1669457","9","No. By using a staticmethod you aren't bound at all; there is no implicit first parameter. By using classmethod, you get as implicit first parameter the class you called the method on (if you called it directly on a class), or the class of the instance you called the method on (if you called it on an instance).","2009-11-03 07:18:30","196970"
"1546709","826813","0","This may be necessary for embedded devices. i.e. a device where a browser is used for rendering the UI.","2009-11-04 12:05:52","33514"
"108841467","59785342","0","If you try to run this code, the `print(fun())` does not print numbers. Instead, it prints the representation of the generator object returned by `fun()` (something along the lines of `<generator object fun at 0x6fffffe795c8>`)","2020-04-30 06:03:47","4879593"
"46292789","12791414","10","@andypaxo What the command takes is refspecs, the correct way would be prefixing the tags with `refs/tags/`, like this: `refs/tags/v2.3.1`.","2015-03-13 05:04:06","1307116"
"61676900","29648972","5","a) the important point about GET is safeness, not idempotence, b) @Abhijeet: RFC 2616 has been obsoleted in 2014; see RF 7230ff.","2016-05-06 06:16:03","50543"
"46297754","487300","0","in (log n) example, it says 100 items: 3 seconds. What is the base of the log here? is it base 2?","2015-03-13 08:51:44","181293"
"108849739","244777","3","To add to @HullCityFan852's comment: `JSON` is widely supported by multiple standards organizations, as can be seen in its wikipedia article. `JSON5` is one of many non-standard parsers; the `5` appears to be an attempt to capitalize on the popularity of `HTML5`. IMHO, despite the possibly laudable goals of the author(s), this is a misleading name, so not acceptable.","2020-04-30 11:40:30","199364"
"15803919","162056","1","Yes, technically, this answers the question which as asked, but is not a usable answer, in my opinion, sorry.  What's the **point** of making one branch the same as another?  Of course a merge will have conflicts..","2012-08-09 05:56:27","262852"
"15817351","9204568","116","@ImmortalFirefly, the regex you provided will actually match `name@again@example.com`. Try pasting your line into a JavaScript console. I believe your intention was to match only the entire text, which would require the beginning of text '^' and end of text '$' operators. The one I'm using is `/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test('name@again@example.com')`","2012-08-09 02:58:13","384954"
"61693733","67458","0","@JAB I agree, but then again such long directory names cry out for making multiple directories and better sorting / categorizing / organizing files into those.","2016-05-06 02:12:15","1829329"
"1583960","292359","356","""A ""git pull"" is what you would do to bring your repository up to date"" <- isn't the repository update already done by fetch? don't you mean it brings your local branches up-to-date with the remote branches?

To the merge: It merges the remote branches with your local copies of those branches, or what exactly does it merge here?","2009-11-10 12:13:21","133374"
"61702809","3516699","0","@TarranJones here is bulletproof one liner: `(string[0] || '').toUpperCase() + string.substring(1)`","2016-05-06 06:20:35","1320932"
"61703975","36837818","4","Note that `.filter` returns a new array, which is not exactly the same as removing the element from the same array.  The benefit of this approach is that you can chain array methods together.  eg: `[1,2,3].filter(n => n%2).map(n => n*n) === [ 1, 9 ]`","2016-05-06 06:58:02","1516302"
"1592279","682343","0","Doesn't just ""git reset"" without . do what you want, or am I missing something?","2009-11-11 12:21:03","72436"
"30786952","8888015","0","You can also do this for a tracking branch if you have the same branch in origin and locally, just change git reset --hard origin/master to git reset --hard origin/(branch)","2013-12-14 05:59:12","2562707"
"30787183","932982","4","This is great for out-of-source builds where you don't want to check in any binaries but don't want to have the user create the folder manually (in case your build system can't handle that).","2013-12-14 06:17:07","1102380"
"1606141","1644241","21","Goes to cant be true always especially when value of x is negative.","2009-11-13 03:22:41","201633"
"108890487","27458534","1","Pity this answer is not top of the list. The problem with Venn diagrams is that they portray a confusing message. They make it looks like we're working with the intersection of sets of rows from both tables, which is not true. Like you illustrate, we're working with the caretesian product of both sets, to start with, and then we filter down and add back in any outer elements if necessary. Great explanation and great diagrams.","2020-05-02 11:26:50","5134722"
"15842305","7328339","8","Surely it would be better to use text/plain so it doesn't apply any HTML semantics to non-HTML content? Or don't browsers let you extract a frame's content if it's got no DOM?","2012-08-10 12:34:46","333340"
"46330682","237104","16","@Iordvlad `[1,2,3].indexOf(4)` will actually [return -1](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf). As @mcfedr pointed out, `~` is the [bitwise-NOT operator](https://stackoverflow.com/questions/9316612/what-does-tilde-preceding-jquery-object-do/9316647#9316647), see ES5 11.4.8. Thing is, since the binary representation of `-1` consists of only 1's, it's complement is `0`, which evaluates as false. The complement of any other number will be non-zero, hence true. So, `~` works just fine and is often used in conjunction with `indexOf`.","2015-03-14 05:35:27","3146034"
"76616746","13575102","0","It worked for me ... @olibre try `git config --bool core.bare false` instead of `git config --unset core.bare`","2017-06-29 07:02:25","1085360"
"15848665","662454","0","Wrong image for a stack; it should be something like http://www.thermo-box.co.uk/images/stories/FiniW/self%20levelling%20dispenser%20trolleys.jpg which is why it's also called a 'push-down stack'.","2012-08-10 04:00:48","636009"
"76619827","13575102","1","Thanks @ChrisSim I agree for `git config --bool core.bare false`. This is why I recommend instead the [Dave's answer](http://stackoverflow.com/a/7216269/938111). What do you think about the [Dave's answer](http://stackoverflow.com/a/7216269/938111)? Cheers","2017-06-29 08:24:32","938111"
"108902900","59785342","0","@FunnyGeeks I ran the same code on Jupyter Notebook, and it works fine. Also, the point here was to explain the working of yield keyword. The snippet is just for demo purpose.","2020-05-02 08:16:51","9851541"
"61732926","20338254","3","@JosephK.Strauss I believe ammending the commit also keeps original commit author and date information, having the new commiter and date info separately. I'm not sure this approach does that.","2016-05-07 11:13:23","525179"
"92975774","3737139","0","Here's the names of all the PHP operators (TOKEN). Reference http://php.net/manual/en/tokens.php [![enter image description here](https://i.stack.imgur.com/P5ilY.jpg)](https://i.stack.imgur.com/P5ilY.jpg)","2017-11-23 12:04:21","2538791"
"76633142","105078","2","Regarding uniqueness, it's worth noting that version 1,3, and 5 UUIDs are deterministic in ways version 4 isn't.  If the inputs to these uuid generators - node id in v1, namespace and name in v3 and v5 - are unique (as they're supposed to be), then the resulting UUIDs  be unique.  In theory, anyway.","2017-06-29 01:26:41","109538"
"108911882","38578","9","I have downvoted this because it is wrong. Please consider removing the answer as it will mislead generations of computer science students who are fooled by the large upcote count. Venn diagrams do not explain join. The inner part of a join is not intersection.","2020-05-03 07:00:50","5134722"
"76633658","14663381","0","This UUIDs produced by this code are either weak-but-RFC-compliant (_guid), or strong-but-not-RFC-compliant (_cryptoGuid).  The former uses Math.random(), which is now known to be a poor RNG.  The latter is failing to set the version and variant fields.","2017-06-29 01:37:48","109538"
"92983702","19250386","0","`dirname` and `basename` are POSIX standardized, so why avoid using them? Links: [`dirname`](http://pubs.opengroup.org/onlinepubs/9699919799/utilities/dirname.html), [`basename`](http://pubs.opengroup.org/onlinepubs/9699919799/utilities/basename.html)","2018-10-29 09:18:16","307637"
"92992261","50231389","0","doesn't that revert ALL changes?","2018-10-29 01:22:01","1245659"
"92992863","44724095","0","You must pay attention if do this during rebase. You should use **git rebase --continue** instead of **git commit**","2018-10-29 01:37:48","3128122"
"92993327","8418403","1","The reasons to use `.keep` are very good. A good balance between simple and less confusing. See the other answer http://stackoverflow.com/a/21422128/832230 If you have adopted the .gitkeep habit, run this over your repository: `git mv .gitkeep .keep`","2018-10-29 01:49:08","362951"
"92993514","21422128","0","The reasons to use `.keep` over `.gitkeep` are very good. A good balance between simple and less confusing. Namespaces seem important and it should not be broken that `.git....` looks like git's own file namespace. Additional documentation could go the projects global readme or coding style guides or a local readme. If you have adopted the .gitkeep habit, simply find the files and rename them: `git mv .gitkeep .keep`. Embrace change! The `.gitignore` solution recommended by the git documentation seems a hacky workaround and over complicated.","2018-10-29 01:54:01","362951"
"15885688","662454","21","David I don't agree that that is a good image or that ""push-down stack"" is a good term to illustrate the concept.  When you add something to a stack, the other contents of the stack *aren't* pushed down, they remain where they are.","2012-08-13 03:40:14","53212"
"46375571","228366","7","This does not work in Python 3; `items()` is not catenable, and `iteritems` does not exist.","2015-03-16 05:50:54","918959"
"46376816","25355080","0","Correction: Technically, Arrow function syntax described here => https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions","2015-03-16 06:58:17","378472"
"46378953","180917","3","`/bin/sh` cultural assumption!* If ""here"" is `csh` and the variable `noclobber` is set, you will indeed get `file: File exists`. If someone says ""I get this"", don't assume they're an idiot and reply ""No you don't"". * http://c2.com/cgi/wiki?AmericanCulturalAssumption","2015-03-16 08:26:52","260122"
"93003825","397740","0","just for interest... what is the difference between checkNotNull(bla).foo() and bla.foo() if both may throw a NPE in case of null? zero benefits, right?","2018-10-29 07:01:43","2375159"
"46379085","29064398","1","I know you posted this as an example of a bad argument, but I appreciate the link because it's actually a well-reasoned argument against tracking directories. ;-)","2015-03-16 08:32:04","260122"
"46382031","28980049","0","Very good tutorial for understanding is : http:/vinsol.com/blog/2014/11/20/tips-for-designers-from-a-developer","2015-03-16 10:06:05","1994950"
"61776502","20338254","4","@EvertonAgner You are correct. `--amend` will keep the author information, but the question only asks to change the message.","2016-05-09 01:59:34","4354956"
"108931558","59785342","0","I tried it in python2 and python3 in my cygwin console. It didn't work. https://github.com/ImAmARobot/PythonTest","2020-05-03 09:31:09","4879593"
"30840886","79923","211","a really good explanation can be found here [What’s the difference between a stack and a heap?](http://www.programmerinterview.com/index.php/data-structures/difference-between-stack-and-heap/)","2013-12-16 11:32:49","636342"
"76659959","4456438","59","Has the employee considered to change his name?","2017-06-30 06:24:47","7167572"
"15906776","10439581","0","Thank you. The two flags FLAG_ALT_FOCUSABLE_IM and FLAG_ALT_FOCUSABLE_IM are actualy the only thing that helped in my case. I did not want a keyboard to be shown in my activity - not even when the user clicked an edittext. (I made my own ""keypad"").","2012-08-13 07:33:04","420047"
"1670365","1783426","439","To expand on this: git doesn't allow you to work on someone else's branches. You can only work on your own. So if you want to add to someone else's branch, you need to create your own ""copy"" of that branch, which is what the above command does (well, it creates your branch and checks it out, too).","2009-11-23 03:24:13","95706"
"76663084","16956844","1","-i very handy especially when browsing through code someone else made. Some languages like fortran are case insensitive when e.g. when declaring functions: FUNCTION/function dummy(x)..","2017-06-30 07:56:30","6726482"
"61787218","52719","0","@ChrisWarth - git checkout -- does not work for me. Git status still shows untracked changes.","2016-05-09 06:46:20","5253746"
"61789636","34283281","5","This method worked, although I tested a few and _.extend({}, (obj)) was BY FAR the fastest: 20x faster than JSON.parse and 60% faster than Object.assign, for example. It copies all sub-objects quite well.","2016-05-09 07:57:22","2131403"
"1676270","229157","0","May I say this is the option that SO decided to go with. Check the ""flag"" links, for instance.","2009-11-24 10:19:20","51397"
"108952927","79923","0","If you want to see a simulation of what the stack and heap look like during the execution of a C program, try [C Tutor](http://www.pythontutor.com/c.html).","2020-05-04 02:04:00","2846495"
"30856273","18739996","16","+1 for this method, I was about to answer with it. Note that you must declare a width on the element you wish to center horizontally (or height if centering vertically). Here's a comprehensive explanation: http://codepen.io/shshaw/full/gEiDt. One  of the more versatile and widely-supported methods of centering elements vertically and/or horizontally.","2013-12-16 06:27:12","2658996"
"76683213","52719","0","@T.J.Crowder
""Warning, doing this will permanently delete your files if you have any directory/* entries in your gitignore file.""
See this post: https://stackoverflow.com/questions/835501/how-do-you-stash-an-untracked-file","2017-06-30 04:37:21","5078765"
"76683233","52719","0","I lost a bunch of stuff doing that once. Stashing untracked.","2017-06-30 04:37:51","5078765"
"30874026","12946734","7","The problem with this approach is that if name is never set, it has the value ""<unknown>"", which behaves like a set value. Now let's say I need to check if name was never set (unknown), I have to do a string comparison against the special value ""<unknown>"".","2013-12-17 07:02:29","24396"
"93041217","34547846","0","What if I am working on a fork, so basically I have 2 remotes
actual repo e.g. incubator-mxnet and my forked repo ChaiBapchya/incubator-mxnet

So in such a case, how can I solve merge conflicts from local to my forked repo branch","2018-10-30 07:18:27","5157515"
"61813265","19682604","0","This is a REAL problem. My workaround - add a change event to the input: <input type=""checkbox"" onchange=""ChangeChkBox()"" /> then use that event to change a boolean JavaScript variable, and use the JavaScript variable instead of querying the checkbox directly.","2016-05-10 11:33:26","1649135"
"1704952","179231","4","Nice! Could be made shorter replacing ""pushd[...] popd /dev/null"" by SCRIPT_PATH=`readlink -f $(dirname ""${VIRTUAL_ENV}"")`;","2009-11-29 11:34:04","9951"
"30881955","8888015","25","in case you're pulling from a repo that has its remote branch name different from ""master"", use `git reset --hard origin/branch-name`","2013-12-17 11:17:24","638670"
"76713602","7589612","0","I have found that sometimes the diff3 conflictstyle results in enormous diff hunks that are largely identical, whereas the default will produce smaller, more manageable, hunks.  Unfortunately, I don't have a reproducer I can use for a bug report.  But if you encounter this problem you might consider turning off the option temporarily.","2017-07-02 03:31:12","125349"
"61828779","7074","0","read about Boxing/Unboxing too btw. - https://msdn.microsoft.com/en-us/library/yz2be5wk.aspx - ""The concept of boxing and unboxing underlies the C# unified view of the type system in which a value of any type can be treated as an object""","2016-05-10 05:39:05","903783"
"93055420","53077310","1","Can you explain further what you mean by this? How does this improve the other highly upvoted answers?","2018-10-31 08:22:29","1116230"
"1710899","1815323","0","sorry I'm a bit of a bash scrip noob, do I call this function by just typing `getScriptAbsoluteDir` or `local currdir='getScriptAbsoluteDir'`?","2009-11-30 04:04:04","2908"
"46446094","5036460","0","@Niklaus in that case you would need another plus to act as the unary operator: `'NEW-' + +new Date`","2015-03-17 07:42:19","2624876"
"15962066","8042309","2","Stupid question but how would you add this to the String prototype in coffeescript?","2012-08-15 05:54:51","298758"
"30903183","13326916","0","@supercat That all makes sense. I defined scope as ""what parts of the code can *access* a variable"" (and feel this is the most standard definition) so I think we agree :)","2013-12-17 08:28:57","1763801"
"30904083","13326916","0","I would regard the ""scope"" of a *variable* as being bounded by time as well as space.  A variable at class-object scope is required to hold its value as long as the object exists.  A variable within an execution-context scope is required to hold its value as long as execution remains in that context.  A static variable declaration creates an *identifier* whose scope is bounded to the current block, which is attached to a *variable* whose scope is unbounded.","2013-12-17 08:57:52","363751"
"109020987","2003515","0","This can be piped into other commands like grep to filter out branches you do not want to delete 

`git branch --merged | grep -v ""\$BRANCHNAME\b"" | xargs git branch -d`","2020-05-06 10:45:04","4706975"
"76744500","64966","2","@maan81, you're right. `git clean -f` is no different from simply deleting a file. But that doesn't make it useless as I, maybe incorrectly, feel you implied. When you have a lot of build artifacts, that is hundreds of files in tens of directories, ""simply deleting"" them may turn out to be not that ""simple"". You will have to script it. That's what `git clean -f` does for you as it knows exactly which files do and which don't belong to the repo.","2017-07-03 10:24:15","1286717"
"30922311","2765421","98","just to point out --set-upstream is -u","2013-12-18 10:12:44","70198"
"46475442","1274447","0","For some reason i had to do a Git push right after this solution. If i didn't and made a change in the fileit would pop back up in git status.","2015-03-18 02:25:55","687685"
"109030156","28051929","1","I wasn't able to edit the post (minimum 6 characters if change required). Line 14 has 'x.y' rather than 'x.py'.","2020-05-06 02:49:57","10990028"
"109031201","11551718","0","Applause for the ""Is this information up to date?"" section!  I have never seen this before, but this is crucial in fast-moving tech.","2020-05-06 03:16:28","2595659"
"109034486","56052581","0",""" loops on strings like this shouldn't be endorsed "" it would be good if that programming language wasn't so crappy","2020-05-06 04:49:05","1964796"
"76763047","2432799","0","This gives a warning that `remote.origin.url has multiple values` ... how do i get rid of the old value?","2017-07-03 07:16:59","543873"
"16006472","8212184","0","Just because it was *intended* to mean ""no data"" doesn't mean it *should* be used. The language implementation of `null` sucks.","2012-08-17 07:00:58","319931"
"16006500","2386013","1","Why doesn't the 2nd one compile though?","2012-08-17 07:02:15","319931"
"16006562","5023357","5","-1. That's even worse. Now instead of crashing if you forget to test, your program silently propagates an incorrect value.","2012-08-17 07:05:08","319931"
"16017189","487258","7","The other answers are quite good, just one detail to understand it: O(log n) or similar means, that it depends on the ""length"" or ""size"" of the input, not on the value itself. This could be hard to understand, but is very important. For example, this happens when your algorithm is splitting things in two in each iteration.","2009-01-28 11:23:43","54236"
"46509395","6232535","19","For people using Git from Visual Studio:
Actually this is that ""Publish Branch"" in Visual Studio does. After executing git push with -u parameter i can finally see my branch as published in VS UI.","2015-03-19 11:19:26","439979"
"109059326","231855","6","It would be nice to add to this **great** answer why *It is just the same except you used `()` instead of `[]`*, specifically what `()` is (there may be confusion with a tuple).","2020-05-07 10:12:21","903011"
"109063011","15015952","0","An explanation would be in order (by [editing your answer](https://stackoverflow.com/posts/15015952/edit), not here in comments).","2020-05-07 12:07:23","63550"
"109063017","16093972","0","An explanation would be in order (by [editing your answer](https://stackoverflow.com/posts/15015952/edit), not here in comments).","2020-05-07 12:07:30","63550"
"109063292","29724604","0","An explanation would be in order (by [editing your answer](https://stackoverflow.com/posts/15015952/edit), not here in comments).","2020-05-07 12:14:16","63550"
"46515350","27608651","2","@mrres1 Not entirely correct. You can define only one *public* top-level class/interface per file. Supporting several classes per file is a remnant from the first Java version, which didn't have nested classes, but it is still supported, though often frowned upon.","2015-03-19 01:53:06","2791256"
"109063439","30208219","0","What does ""above"" refer to? The three command lines in this answer or previous answers? (Please respond by [editing your answer](https://stackoverflow.com/posts/15015952/edit), not here in comments. Thanks in advance.).","2020-05-07 12:18:29","63550"
"109063943","61351911","0","@Damien, tbf the question is 11 years old & this answer was posted 2 weeks ago.","2020-05-07 12:33:28","867418"
"76791976","5032238","0","@Clément You're looking at Python 3.x source code, the answer given above applies to Python 2.7: https://github.com/python/cpython/blob/2.7/Lib/os.py#L153","2017-07-04 01:41:50","6809909"
"76794854","5032238","0","@rtkaleta: That doesn't matter.  The issue might not have been fixed in 2.7, but it exists nonetheless.","2017-07-04 02:59:49","695591"
"1776635","1876958","3","I wasn't looking to un-add everything, just ONE specific file.","2009-12-09 10:35:27","14069"
"109070958","61116810","0","And for list of dicts:   `merged = {}; merged  = [merged | d for d in dict_list]`","2020-05-07 03:39:21","5922329"
"93130984","14419556","0","Note there is a SIMD instruction for when all workers need to union their pile-sets, assuming you have a fairly even floor to slide the sock piles together.","2018-11-02 12:12:43","2144408"
"93132080","72156","0","@Gustave: The `remotes/origin/experimental` tag actually points a local copy of `origin experimental`, updated the last time you ran `git fetch`. If you disconnect from the network, you should still be able access that data using `git checkout origin/experimental`. (To be precise, I haven't checked lately, but this is how it has always worked historically.)","2018-11-02 12:48:55","12089"
"109076977","21380648","1","""Retrieve the matched rows only, that is, A intersect B."" This is wrong.","2020-05-07 06:35:31","5134722"
"16035803","555","1","Note 1 about this answer: it is a draft, to be edited as a wiki. If you can edit this, you're welcome to.","2012-08-18 11:23:40","63550"
"109077036","28598795","1","The assumption that SQL joins are always a match on primary/foreign keys is leading to this misuse of Venn diagrams. Please revise your answer accordingly.","2020-05-07 06:37:23","5134722"
"30978000","10389086","7","I downvoted because this is an anti-pattern. The bug in this case isn't in CF, it's in ActionScript. However, you raise a good point nonetheless. I'll add a test to my fiddle for CDATA encoding.","2013-12-19 03:54:03","203705"
"30981302","19873535","0","Ditto.  If you have to dig into the directory structure to do this magic, go all the way and do a 'mv -- -dumb-name brilliant-name'  Do a 'git branch -av' and you'll see an directory structure of .git/refs.  Or maybe 'grep -R ^ .git/refs' to see the hashes directly.","2013-12-19 05:15:08","1653571"
"16048122","2386013","12","I really don't think that using a custom compiler is a viable solution to this problem.","2012-08-19 08:24:25","939023"
"30996090","15995332","0","@Alan Moore - I'm surprised too. I saw your comment (and best regex in the pile) here only after posting this same pattern in an answer below.","2013-12-20 03:08:40","433790"
"109099646","231855","1","I may be wrong, but a generator is not an iterator, a ""called generator"" is an iterator.","2020-05-08 12:06:32","9868445"
"109114434","27540786","0","Please [use text, not images/links, for text--including tables & ERDs](https://meta.stackoverflow.com/q/285551/3404097). Use images only for what cannot be expressed as text or to augment text. Images cannot be searched for or cut & pasted. Include a legend/key & explanation with an image.","2020-05-08 07:42:03","3404097"
"46546959","28980049","5","""We should avoid to use sp"" Why is that? You should use sp when dealing with font sizes because it takes into account the user's preferred text size, http://developer.android.com/training/multiscreen/screendensities.html","2015-03-20 10:05:57","4588760"
"46547512","28980049","0","I have answered relative to layout perspective.. Please read on link you provided ""so you should use this measurement unit when defining text size (but never for layout sizes).""","2015-03-20 10:22:31","1994950"
"46547713","28980049","0","The question was ""Difference between px, dp, dip and sp in Android?"" your answer said ""We should avoid to use sp"". There was no mention of ""layout perspective"" anywhere.","2015-03-20 10:28:32","4588760"
"109121223","487300","0","I've noticed that all different complexity cases have names. For example, n^2 is named Quadratic Complexity. So, what's the proper name for the case: n * log n complexity case? I don't think it should be named just Logarithmic Complexity.","2020-05-09 01:47:34","7389293"
"76868914","901727","95","This is not an answer to the question. `this.checked` is not jQuery, as the OP asked for. Also, it only works when user clicks on the checkbox, which is not part of the question. The question is, again, `How to check whether a checkbox is checked in jQuery?` at any given time with or without clicking the checkbox and in jQuery.","2017-07-06 10:58:14","4477659"
"93186428","20434146","0","Yeah, no Douglas Crockford does not want people to include comments in JSON, that is why he removed annotations. See my answer. His position is 'do it with some non-interoperable pre-compiler, not in JSON' (eg. Jackson, etc).","2018-11-05 02:55:35","1048170"
"46576511","5190323","0","@PaulDraper well let's say due to a power outage or other interruption you cannot finish this, and next time you're in that machine out of habit you do a `git pull`, obtaining a few commits but not the ones you wanted to squash. I don't know if there also is a `HEAD@{2}` etc but with a temporary tag you don't have to remember... of course so long as you don't `git gc --prune` you can still retrieve your HEAD, but it's just more tedious","2015-03-21 06:29:09","321973"
"61994210","167365","0","This saved me. Looking at each file separately allowed me to remember what I was going for in each branch. Then I could make the decision to choose.","2016-05-14 09:59:15","1386245"
"76886054","5036460","0","So to retrieve a numeric value that is already inside your computer you create an object, call an operator that requires an int and triggers a  conversion that calls a function (valueOf) that calls the class conversion method that calls the function (getTime) that finally retrieves the value that was already there. Then the object is abandoned to its destiny, and after 1000 iterations of the loop you have 1000 deleted Date objects requiring garbage collection hanging there that suddenly get all dumped together, and while your computer lags you wonder what is happening. :)","2017-07-06 05:23:03","1856861"
"16111986","237176","0","+1 for giving the LINK to the proof of iteration times... eye-opening revelations in relation to looping over HTML elements...","2012-08-21 09:56:40","630170"
"76895567","6620071","0","@Casey: Yes but those people should still expect to see answers to the question actually posed.","2017-07-06 10:56:53","560648"
"46583756","5190323","0","@TobiasKienzler, you may be interested in `git reflog`. Git already ""tags"" recent commits for this purpose. `git gc --prune` shouldn't change that, unless you ask to expire the reflog entries. It may all be a matter of preference.","2015-03-21 02:37:19","1212596"
"76907829","16047306","0","You can find some interesting facts about containers implementation and isolation at [doger.io](http://doger.io/).","2017-07-07 08:50:06","3340702"
"46584938","1473742","11","@IulianOnofrei: No, `2 in [1,2,3] == true`, but `5 in [3,4,5] == false`. Why? Because arrays in JavaScripts behave just like regular objects, so `2 in array` actually only means that `array[2]` is defined. Mind that this behaviour is still potentially useful, since JavaScript arrays can be sparse: `2 in [1,2,,3] == false`","2015-03-21 03:44:51","657401"
"1893791","1755737","523","Not exactly true. Decrementing and Incrementing take the same amount of time, the benefit of this is that comparison to zero is very fast compared to comparison versus a variable.

This is true for many architectures, not just x86. Anything with a JZ instruction (jump if zero).

Poking around you can find many ""for"" loops that are written backwards to save cycles on the compare. This is particularly fast on x86 as the act of decrementing the variable set the zero flag appropriately, so you could then branch without having to explicitly compare the variable.","2009-12-30 05:16:46","127380"
"16132219","4114122","158","[@Rod's comment](http://stackoverflow.com/questions/4114095/git-revert-to-previous-commit-how/7760865#comment11806784_7760865) on `git revert HEAD~3` as the best wat to revert back `3` commits is am important convention.","2012-08-22 03:16:45","263858"
"76914876","44902405","0","This is not much diferent from `myObject == null` and was introduced in Java8 for `Predicates` in the lambda feature.","2017-07-07 11:54:50","114226"
"46587453","26744616","0","I tried the alias but I'm not sure if the sed replaces are having any effect. What should they do?","2015-03-21 06:04:07","303712"
"1900444","176264","171","URL is more specific than URI.","2009-12-31 07:09:09","148195"
"1901452","1984603","10","This answer may be over-simplified but look at the context of his question. It will be more helpful to him that waffling on about XML namespaces!","2009-12-31 12:18:19","124378"
"1901518","1984603","148","This answer is not only wrong but actively misleading. *Both* examples are URLs. And since every URL is also a URI, this means that *both* examples are URIs. For the purpose of demonstrating the difference between URIs and URLs, this is totally useless.","2009-12-31 12:40:57","2988"
"1903021","1984274","6","It's helpful to note the actual URN (to see how it compares to a URL): urn:isbn:0-486-27557-4","2009-12-31 06:15:35","56044"
"76920455","6620071","0","@LightnessRacesinOrbit I think a term like ""plain English"" is  subjective; I thought this answer was really helpful when I wrote that remark 3 years ago and was looking for answers to the question posed.","2017-07-07 02:03:41","2056448"
"1903175","1984274","2","@Michael - It is my understanding that `ISBN 0486275574` also names the text and thus qualify as a URN. I choose a format that I believed would be more familiar to readers.","2009-12-31 06:47:09","12971"
"109207592","51844248","0","An explanation would be in order.","2020-05-11 09:36:47","63550"
"109207810","55360820","0","An explanation would be in order.","2020-05-11 09:44:06","63550"
"109207823","56361573","0","An explanation would be in order.","2020-05-11 09:44:37","63550"
"109209205","231801","0","Where does the `for` loop implementation you wrote call the `__iter__` method of `iterator`, the instantiated instance  of `it`?","2020-05-11 10:50:42","11707607"
"62042268","31836086","14","@MT: Where do you enter these commands, though? The gist of the question, as I understand it, is how to resynchronize your personal *GitHub* fork with the main project, and **do this all from GitHub**. In other words, how can you update your remote fork *without* a local repository?","2016-05-16 03:33:15","95852"
"62043201","12184274","0","The 2 answers above don't work for unstaged changes.Only this one .","2016-05-16 03:56:37","507043"
"62049269","163659","0","Using FileMerge app on Mac, I figured out if you select a diff'd item, you can use the left/right arrow keys to select which one of the two to use","2016-05-16 06:59:39","2162226"
"93233390","47457772","2","Right, but the setup cost of sorting the array is O(N log N), so breaking early doesn't help you if the only reason you are sorting the array is to be able to break early. If, however, you have other reasons to pre-sort the array, then yes, this is valuable.","2018-11-06 12:28:29","3950982"
"93238903","16317405","1","This is a great non-JS alternative that works in Chrome! Awesome!","2018-11-06 03:05:40","1705378"
"46625800","5190323","0","@PaulDraper Thanks for the info, yeah it's probably preference - and Python's [""Explicit is better than implicit""](https://www.python.org/dev/peps/pep-0020/)","2015-03-23 10:21:02","321973"
"62059955","13159111","0","@AycanYaşıt Most of the operating system is using 32 bit and 64 bit system, that means the limit is much more than 255 (8 bits).","2016-05-17 03:42:53","2990720"
"93247522","49193722","0","Can you elaborate on how this answer is different from [the same answer posted 4 years ago](https://stackoverflow.com/questions/22343224/whats-the-difference-between-tilde-and-caret-in-package-json/22365742#22365742)?","2018-11-06 07:31:39","4451732"
"93247546","50173438","11","Can you elaborate on how this answer is different from [the same answer posted 4 years ago](https://stackoverflow.com/questions/22343224/whats-the-difference-between-tilde-and-caret-in-package-json/22365742#22365742)?","2018-11-06 07:32:26","4451732"
"93247565","52549985","1","Can you elaborate on how this answer is different from [the same answer posted 4 years ago](https://stackoverflow.com/questions/22343224/whats-the-difference-between-tilde-and-caret-in-package-json/22365742#22365742)?","2018-11-06 07:33:18","4451732"
"76956263","2669690","14","This `)]}'` may also be to save bytes, like facebook used `for(;;);` which saves one byte :)","2017-07-08 08:55:20","289317"
"1935328","826813","31","Another reason this is needed is Shift-clicking to select multiple rows in a grid or table. You don't want to to highlight the text, you want it to select the rows.","2010-01-06 04:08:11","174469"
"31101215","477578","1","""hashing the password client-side"": more than just saying that this is ""useless"", it should be made *very* clear that **this is a security flaw**. This makes the hash *password equivalent*, and means that the server, by storing the password hash, is effectively storing the password (and none of us do that, right?) [Here's a question on this exact point.](http://stackoverflow.com/questions/1380168/does-it-make-security-sense-to-hash-password-on-client-end)","2013-12-24 01:23:49","229792"
"93251892","9180445","0","Doesn't cherry picking create new commits? Why would you do this when you can simply create a new branch from master and reset master's head back. It would be much faster and cheaper operation that way.","2018-11-06 10:16:40","1378980"
"93257011","6866485","0","- git reset --hard HEAD~1, will go back to one commit and delete all file git knows about, but not untracked files, since git got no idea of them.        

- git reset HEAD~1, will keep all the changes of the current commit,but make them untracked

- git reset --soft HEAD~1, will keep your commited files staged and untracked files still untracked","2018-11-07 04:27:47","6837661"
"31114399","762018","9","IE11 added support for `let` http://msdn.microsoft.com/en-us/library/ie/dn342892%28v=vs.85%29.aspx","2013-12-24 12:59:15","337772"
"31116338","14415881","2","I think in this case avoidance is the best solution: I have only one type of socks and therefore it's O(n) and requires a minimum of memory... :-)","2013-12-24 02:24:29","1703313"
"93261550","927386","2","- git reset --hard HEAD~1, will go back to one commit and delete all file git knows about, but not untracked files, since git got no idea of them. - git reset HEAD~1, will keep all the changes of the current commit,but make them untracked - git reset --soft HEAD~1, will keep your commited files staged and untracked files still untracked","2018-11-07 08:51:02","6837661"
"109242608","49194320","0","I think my answer is ok because it is hard to find a simple working edition. Here you can take the code you like e.g. cd + pwd, dirname + realpath or dirname + readlink. I am not sure that all parts exist before and most answers are complex and overloaded. Here you can pike out the code you like to use. At least please do not remove it as I need in the future :D","2020-05-12 07:30:29","8594421"
"109268239","60987167","3","@JasonAller I think this is fairly self-explanatory though and it's the best answer here by far, the others are a joke.","2020-05-13 01:07:15","1134192"
"31131780","19801208","4","Or, y'kno, just get rid of the entire conditional and say `$('elementToToggle').toggle('slow');`... `:)`","2013-12-25 08:53:21","803925"
"93290502","1274447","0","A common use for this is for node_modules: `sudo git rm --cached -r ./node_modules/`","2018-11-08 03:08:07","6541639"
"109271157","42902131","2","This should be the top answer.","2020-05-13 02:20:25","3627720"
"1967068","1984603","12","This is the difference as far as CodeIgniter is concerned. In every instance they use the word URL or URI this is the difference they are talking about.

Therefore in the grand-scheme of the web, it is not 100% correct but in the scope of the OP's question (the difference in CodeIgniter), this answer is perfectly correct.","2010-01-11 11:13:00","124378"
"1967102","1984603","1","@Phil Sturgeon - agreed, for the purpose of this question, this is how CI distinguishes between URL and URI.","2010-01-11 11:20:18","170078"
"1967253","1984603","1","@Phil Sturgeon - for the purpose of the question your answer is perfectly fine","2010-01-11 11:53:34","57872"
"31137739","6117092","0","Just an update... according to MDN since Firefox 21 `-moz-none` and `none` are the same.","2013-12-25 03:56:37","606539"
"46678424","16957078","147","it's worth noting: it seems the `r` option is lazy (traverses depth-first, than stops after the first directory), while `R` is greedy (will traverse the entire tree correctly).","2015-03-24 03:09:46","547020"
"76989555","912737","16","Same thing is to do `git clean -nd` and `git clean -fd`.","2017-07-10 09:13:53","1101730"
"93301726","34511442","0","I don't understand the purpose of `git commit -a`. For me `git rm --cached` affect exactly the index so no need to stage the files after...","2018-11-08 11:32:11","4374441"
"93302027","23839198","2","Can you explain the motivation of adding the option `-a` to `git commit`? For me it unnecessary...","2018-11-08 11:40:27","4374441"
"109285945","4754797","1","just going to add my flavor of this: `git branch -a | grep remotes | grep -v HEAD | rev | cut -d'/' -f1 | rev | xargs -I% git checkout %`","2020-05-13 09:37:40","2066337"
"77001814","13005464","4","another one interesting example: `a = [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]; a[:-2:-2]` which results to `[9]`","2017-07-10 01:59:59","1101292"
"62131434","26111877","1","Perhaps you mean `{'a': 1, 'b': (2, 10), 'c': 11}` …?","2016-05-18 04:07:25","1281485"
"62131580","37304637","2","I saw by now that some answers refer to a class called `ChainMap` which is available in Python 3 only and which does more or less what my code does.  So shame on me for not reading everything carefully enough.  But given that this only exists for Python 3, please take my answer as a contribution for the Python 2 users ;-)","2016-05-18 04:10:50","1281485"
"62140487","36463546","0","Is there any way to fix it if I already did this method http://stackoverflow.com/a/1628584/2423194 and doing `git push --force` to delete the commits that I already moved to the new branch?","2016-05-18 08:42:47","2423194"
"1993029","271587","5","Also you can use the more generic version from Apache Commons, quite useful at the start of methods to check params I find.

 Validate.notNull( object, ""object must not be null"");

http://commons.apache.org/lang/apidocs/org/apache/commons/lang/Validate.html","2010-01-14 01:57:36","184456"
"62145370","10999165","0","If your branch in your fork (not always origin), use the proper repository. e.g. git push myRepo :mrbranchtodelete","2016-05-19 12:53:21","1506710"
"109302200","16563327","2","Thanks. This actually clones all remote branches unlike several of the other answers","2020-05-14 10:22:30","724485"
"93325213","8310229","2","This does not answer the question. The question clearly asks for a new dictionary, z, from original dictionaries, x and y, with values from y replacing those of x - not an updated dictionary. This answer modifies y in-place by adding values from x. Worse, it does not copy these values, so one could further modify the modified dictionary, y, and modifications could be reflected in dictionary x. @Jérôme I hope this code is not causing any bugs for your application - at least consider using deepcopy to copy the values.","2018-11-09 02:14:04","541136"
"31163627","14502904","7","I would consider this bad form as you're 1) relying on side effects and 2) abusing `and`. `and` is used for checking if two boolean statements are both true. Since you're not interested in the result of the `and`, an `if` statement more clearly communicates your intentions.","2013-12-26 06:07:26","1394393"
"31165057","17114749","0","@Joshcodes, is that assuming REST? In a RESTful architecture, the item id is most definitely part of the URL, as in: /people/123. I like this site for REST: http://microformats.org/wiki/rest/urls","2013-12-26 07:10:14","638329"
"109321757","1274447","0","i've come back to this page about 1000 times in the last month.
And i suspect i will come back here another 1000 times in the future.
Thanks for this.","2020-05-14 07:43:54","518404"
"93339886","8310229","2","@AaronHall agreed this does not answer the question. But it answers my need. I understand those limitations, but that's not an issue in my case. Thinking of it, maybe the name is misleading, as it might evoke a deepcopy, which it does not provide. But it addresses deep nesting. Here's another implementation from the Martellibot: https://stackoverflow.com/questions/3232943/update-value-of-a-nested-dictionary-of-varying-depth#3233356.","2018-11-09 01:24:32","4653485"
"31175220","20093702","1","Why not simply `result = (y, x)[a < b]` Why do you uses `lambda` function **?**","2013-12-27 05:50:06","1673391"
"109329459","1669579","0","It may be a cut-and-paste error, but strictly speaking you can't call a method on a class if you ignore the class.","2020-05-15 01:54:23","5656533"
"16259640","1787014","12","""modern git""--for the record, (approx) what version are you referring to? Sometimes we have to work on systems running older distros.","2012-08-28 02:30:55","60075"
"31179776","20797993","10","Also: what is the added value of this answer? There doesn't seem to be anything that hasn't already been mentioned in other answers.","2013-12-27 09:28:25","101361"
"109339551","927397","8","FYI: This removes all my files and I lost changes.","2020-05-15 10:03:11","3031010"
"109341955","927397","0","UPD: However, I've restored it using reflog. But the receipt did not work for the initial commit.","2020-05-15 11:25:56","3031010"
"93361410","10757800","0","@Kris: Instead of cherry-pick use rebase. Because it is advanced cherry-picking","2018-11-10 09:38:58","4632019"
"16276431","9158888","1","All I want to know is, why this way is not good? It seemed no bad and correct for me. Could anyone explain why it's downvoted?","2012-08-28 03:16:52","1232832"
"62176182","21422128","1","Don't like this solution, it is tough to guess what this file does. Also, if you are generating files in your dev environment (like logs or images, etc.), this isn`t keeping those file from being versioned and making their way into production, which is not nice.","2016-05-19 04:04:22","1348596"
"31213265","180917","0","`touch file; echo bla > file` gives `file: File exists` here; in that case it's safest to use `rm file; touch file; echo something >> file` (and probably many other solutions ;-))","2013-12-28 03:55:48","2378910"
"109351012","28072982","0","I am sending data using ajax to Django views as an array in the form of two values in a variable **legData** with values as `[1406, 1409]`. If I print to the console using `print(legData)`,  the output is **[1406,1409]**. However, if I try to parse the individual values of the list like `for idx, xLeg in enumerate(legData):`  `print(idx, xLeg)`, it gets me an output of individual integers such as [, 1, 4, 0, 6,  and so on against the indices **0, 1, 2, 3, 4** etc. (yes, the **square brackets & comma are also being output as if they were part of the data itself**). What is going wrong here?","2020-05-15 03:51:40","12379095"
"16282103","3737139","2","Well, from the heading **Why is this?**, I'd guess it's because ""The main idea is to have links to existing questions on Stack Overflow, so it's easier for us to reference them"".","2012-08-26 06:34:42","911182"
"31220591","13326916","0","@supercat This is why I use the word lifetime, which is how I term what you call time scope. It reduces the need to overload the word ""scope"" with so many meanings. As far as I can tell, there doesn't seem to be total consensus on exact definitions though, even among canonical sources. My terminology is drawn partially from K&R and partially from the prevailing usage at the first CS department I studied/taught at. Always good to hear another informed view.","2013-12-28 10:50:47","1763801"
"31222597","13326916","0","One very common source of confusion is whether ""variable"" refers to an identifier, a storage location, or (for object-oriented frameworks) a heap object which is identified by the present contents of storage location.  Automatic variables are storage locations which come into existence when execution enters a particular scope, and cease to exist afterward.  Static variables may only be addressed by *name* within their scope, but in many languages it is possible for a function to return a pointer to a static variable, and for code in any context which has a copy of that pointer...","2013-12-29 01:35:24","363751"
"31222608","13326916","0","...to be able to access the variable at will, whether or not any aspect of the present execution context has anything to do with the function where the variable was defined.","2013-12-29 01:36:06","363751"
"77046584","29648972","0","`PUT, POST, and DELETE requests should be used for creation, mutation, and deletion.`

Regarding PUT for creation, POST for mutation, or the other way round:
I'd be extremely wary of summarizing rules on ['PUT vs. POST'](https://stackoverflow.com/q/630453/1432478) in a one line sentence.","2017-07-11 01:45:32","1432478"
"2030869","1041798","108","From Hashtable javadoc (emphasis added): ""As of the Java 2 platform v1.2, this class was retrofitted to implement the Map interface, **making it a member of the Java Collections Framework**.""  However, you are right that it is legacy code. All the benefits of synchronization can be obtained more efficiently with Collections.synchronizedMap(HashMap). (Similar to Vector being a legacy version of Collections.synchronizedList(ArrayList).)","2010-01-19 10:09:03","18511"
"109358999","22199624","1","If `origin/branchone` exists, you can also just use `git checkout branchone` to create a local branch with the same name and set it to track remote.","2020-05-15 08:38:08","8213783"
"109362030","28072982","0","@user12379095 you probably have the data in the wrong type (a string) and you need to convert it to an actual list of numbers instead of a string. That is somewhat off topic here, please delete your comment and flag mine to be deleted as no longer needed when you see this.","2020-05-15 11:01:42","541136"
"109362738","215731","0","I tried restoring a folder using `git checkout HEAD~2 -- my_folder/*` and it didn't work.","2020-05-15 11:52:15","4441547"
"77052894","38987665","1","@fedorqui 1)no piping! 2)Use regular expressions 3)Get line numbers, file name with relative path, highlighted text etc. useful for editing after the search e.g ""vim +lineno path/file.cpp"" will get you right at the line no of interest. See the output of the  command ""ack include\|hpp"" that searches ""include"" or ""hpp"" keywords under my search folder and subfolders. I hope the point is clear. Here is the sample output(Can't show the keyword highlights with simple text)
process/child.hpp
11:boost/process/child.hpp
process/all.hpp
21:#include <boost/process/execute.hpp>","2017-07-11 03:57:42","2240561"
"77054798","161813","28","Fascinating question: Asked in 2008, 100% open ended with no hint at all about what it's really about (is it about GUI? about the git commands? about semantics? about pushing/pulling or just general conflicts?) - completely unanswerable. 30 answers, all of them (as far as a quick glance shows) more or less going on about different diff3 and merge tools, none accepted. Top-voted answer mentions a command that does not even work out of the box with a default `git` installation. Managed to hit the SE start page for me today, 2017, with 1.3m views and thousands of votes both ways.  Fascinating.","2017-07-11 04:48:34","5227053"
"77056163","44358642","0","I ended up using this, since the JSON.parse(JSON.stringify(obj)) does not keep the original object prototype","2017-07-11 05:27:33","1608188"
"109376765","44201563","2","@PeterMortensen `ed` is the original text editor. From there we got `em` which added video input, and `ex` (short for EXtended) is basically a less processor-demanding `em`. `vi` is built upon `ex`, and `vim` is built upon `vi`.

`ed` => `em` => `ex` => `vi` => `vim` (=> `gvim`?)","2020-05-16 03:12:36","4440053"
"2047950","180085","43","Can one change the message of the first commit (which doesn't have a parent)?","2010-01-21 07:57:18","50979"
"93401626","42562157","4","This is not an answer, you can still select the text.","2018-11-12 08:49:08","10087397"
"109401408","26853961","1","I agree with Gringo, this answer should be made shorter by removing all mention of Python < 3.5.","2020-05-17 02:33:34","99989"
"109402225","26853961","9","I agree with the eagerness to leave the old way behind, but sometimes people have to work in environments where they only have the older technology available to them. People also have to update code, and seeing the old way next to the new way allows them to confidently replace the old code with equivalent new code. I am open to suggestions on reorganizing the material, but I think we need to keep the older information.","2020-05-17 03:04:27","541136"
"62232127","762297","2","@EricB: yes and no: ""In ECMAScript 2015, `let` **will hoist** the variable to the top of the block. However, referencing the variable in the block before the variable declaration results in a *ReferenceError* (my note: instead of good old `undefined`). The variable is in a 'temporal dead zone' from the start of the block until the declaration is processed.""  Same goes for ""switch statements because there is only one underlying block"".   Source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let","2016-05-21 04:15:53","588079"
"62232378","35585468","18","regarding answer v4: `i` IS known everywhere in the function-block! It starts as `undefined` (due to hoisting) until you assign a value! ps: `let` is also hoisted (to the top of it's containing block), but will give a `ReferenceError` when referenced in the block before first assignment. (ps2: I'm a pro-semicolon kinda guy but you really don't need a semicolon after a block ). That being said, thanks for adding the reality-check regarding support!","2016-05-21 04:41:11","588079"
"93413602","23796058","0","For some reason this overwrites existing changes on master that have been pushed to it after I branched off master to create feature branch. Not sure why though. I will try doing it the other way, as mentioned in the linked article.","2018-11-12 02:57:27","2212909"
"77106452","44704863","0","ranger would be in the same idea","2017-07-12 08:03:37","6253165"
"93414769","23796058","0","As continuation to my comment. When I create a merge branch, then merge feature branch into it, squashing works fine. It requires a little more work, but still less than cherry-picking everything by hand.","2018-11-12 03:32:24","2212909"
"2075722","1126089","0","would he not need to change to the master branch and then do git clean for it to work? Then he can flip back to whatever development branch he was working from.","2010-01-25 09:38:00","42428"
"2078360","179231","1","This is by far the most ""stable"" version I've seen. Thank you!","2010-01-26 08:19:46","11558"
"93422776","3104376","14","To throw my own two cents in, if JSON is supposed to be a pure ""data-packet exchange format"", then it should've been implemented as a strictly-binary format. As it stands, the data is represented as a human-readable string-based syntax, and it logically follows that anything designed to be readable by humans should also allow for comments.","2018-11-12 08:20:10","1255873"
"77122485","5201642","1","`git push -f` doesn't appear to alter the commit log of the upsteam repository.","2017-07-13 08:13:23","1609153"
"62251496","5190323","1","Wonderful.. this destroyed my commit. -1","2016-05-22 01:08:33","122422"
"16338280","163659","8","You can also use Beyond Compare 3 now (`git mergetool -t bc3`).","2012-08-30 02:59:24","791094"
"62257310","5190323","10","@B T: Destroyed your commit? :( I'm not sure what you mean by that. Anything that you committed you'll easily be able to get back to from git's reflog. If you had uncommitted work, but the files were staged, you should still be able to get their contents back, [although that will be more work](http://stackoverflow.com/a/7376959/223092). If your work wasn't even staged, however, I'm afraid there's little that can be done; that's why the answer says up-front: ""First check that git status is clean (since git reset --hard will throw away staged and unstaged changes)"".","2016-05-22 09:55:50","223092"
"46806398","20265752","0","Please explain more about the realpath function.","2015-03-27 04:54:26","16015"
"46807838","20265752","1","@Chris `realpath` function takes 1 argument. If argument has already absolute path, print it as it is, otherwise print `$PWD` + filename (without `./` prefix).","2015-03-27 05:35:01","55075"
"2098932","180917","12","Two things:
You could just ""echo '*' > tmp/.gitignore"" instead of touching, and ""git commit -m"" does not commit changes done after you've added the files to the index.","2010-01-28 03:50:53","233014"
"77144699","34757096","5","Yes.  But note that a container is more than an application of namespaces.  It also uses facilities like control groups for resource limiting and accounting, and a union-capable file system for efficient file system allocation.  But yes, ultimately a container is a use-case for a bunch of pre-existing OS facilities.","2017-07-13 04:18:20","3754173"
"31287592","7244456","1","@episodeyang: I don't mind the example URL being changed from `git://` to `https://`, but your comment at the end was wrong - the git protocol still works fine with GitHub; I suspect you were trying from a network that blocks traffic to port 9418, or something similar. I've removed that bit of your edit.","2013-12-31 11:04:57","223092"
"93457145","337006","0","@TimothyJones that will fail 100% of the time if sourced from any other shell than bash. `${BASH_SOURCE[0]}` is not satisfactory at all. `${BASH_SOURCE:-0}` is much better.","2018-11-13 06:43:20","9878263"
"16374948","5376768","36","You probably want to skip the pull and just do a ""git rebase origin"" as the last step since you already fetched the changes.  

The reason is that someone could have pushed changes in the time since you did the fetch and these would not have been in fetch that you did the diff review on.","2012-08-31 08:02:48","496501"
"46829245","748265","5","this is giving me the directory with the last entry stripped off, i.e., the path to the container of the container of the script.","2015-03-28 03:17:43","445565"
"109462491","927397","4","Use `git rm --cached` to keep the files in the filesystem and only delete them from the git index!","2020-05-19 10:00:55","4288004"
"46839150","76257","1","It's also bash specific, but perhaps bash's behavior has changed? `/proc/fd/$$/255` seems to point to the tty, not to a directory. For example, in my current login shell, file descriptors 0, 1, 2, and 255 all refer to `/dev/pts/4`. In any case, the bash manual doesn't mention fd 255, so it's probably unwise to depend on this behavior.\","2015-03-29 12:17:33","827263"
"62297496","426258","0","prop(); function is the perfect answer. See the function definition - http://api.jquery.com/prop/","2016-05-23 03:01:01","4356300"
"109476072","244777","1","As a responsible dev, the question you should be asking yourself is *""Just because I can, do I really need to **hack** this solution?""* JSON is quite an old language-agnostic data interchange format. If there really was a need for ""comments"" then a specification change would have already been made. This need for comment arise when devs want to do things like use JSON to represent configuration of the app or something similar. At that point should you really be using JSON to do that job?","2020-05-19 04:16:45","745828"
"2140097","244858","278","It might pay to have some kind of prefix on the actual comment in case there's ever a valid field named comment: `""__comment"":""comment text goes here..."",`","2010-02-03 11:41:45","21433"
"93477663","1213360","0","Whats meant with the 'return address' of a function in a activation records on the stack","2018-11-14 10:50:58","10195843"
"93478313","1213360","0","@Hakim: The _return address_ is the current _instruction pointer_ before the call. I try to explain that in the third bullet in the _Stack_ section. Before a function call the current instruction pointer is pushed on the stack. When the function returns this address is popped from the stack and execution resumes at the next instruction. The activation record of a function call contains the return address where the CPU should continue executing when the function ends. The function does not know this. It has to be provided by the caller of the function.","2018-11-14 11:09:05","98607"
"93479222","1213360","0","@Nps: As far as I know the values of a reference type are saved on the heap as well. Otherwise the heap would mainly consist out of pointers referencing the data on the stack.","2018-11-14 11:35:57","10195843"
"93479516","1213360","0","@MartinLiversage: So the call stack is actually saved in the stack via the different activation records each representing a function, isn't it?","2018-11-14 11:45:21","10195843"
"93481506","7244456","1","Git is so decentralized in a fashion you can merge a branch from a repo hosted on your local machine with no access to the internet, then merge it with a branch of another repo hosted on GitLab and finally rebase all of that into another repo hosted on GitHub.","2018-11-14 12:41:57","2183395"
"93483626","1213360","0","@Hakim: The call stack is reserved memory used to implement function calls. Each call creates a new activation record on the stack. The activation record contains 1) the arguments supplied to the function, 2) where execution is going to continue when the function ends and 3) the local variables of the function. Activation records are stacked ""on top of each other"" (hence the name *stack*) which enables multiple calls to the same function (recursion). When a function returns its activation record is discarded and the calling function and its activation record becomes active. See diagram 2.","2018-11-14 01:39:16","98607"
"77181777","22529246","0","any other way for some repeated value max 5 times then create new array and remove that value from array? I HAVE THIS KIND OF ARRAY:  [""info.specificAllergy"", ""info.specificAllergy"", ""info.specificAllergy"", ""info.specificAllergy"", ""info.specificAllergy"", ""info.existingMedicalCondition"", ""info.existingMedicalCondition"", ""info.existingMedicalCondition"", ""info.existingMedicalCondition"", ""info.existingMedicalCondition""]","2017-07-14 02:22:24","1805031"
"77181783","22365742","6","This answer is completely wrong (as are many other here). None of these ever fix a major number! As @rofrol said, ^ simply keeps the left most non-zero digit unchanged. ~ on the other hand allows only patch updates if the minor version is specified (e.g. ~1.2.3 or ~1.2) and allows minor updates if the minor version is not specified (e.g. ~1).","2017-07-14 02:22:36","1556204"
"109484153","16956810","0","Does this answer your question? [How can I use grep to find a word inside a folder?](https://stackoverflow.com/questions/4121803/how-can-i-use-grep-to-find-a-word-inside-a-folder)","2020-05-19 08:42:27","10851804"
"109487904","373848","0","@Chris, **fatal: Cannot do hard reset with paths.**","2020-05-19 11:27:10","632951"
"46864916","215731","0","Be sure to checkout the revision hash that still has the file for which you're looking. If it was deleted in a revision, go to the hash at least one earlier than that.","2015-03-30 04:46:12","1630746"
"77191592","44231561","5","This is incorrect. The code in the question does: 'test-write-execute' (test first, write new value, execute the loop), your example is 'test-execute-write'.","2017-07-14 07:07:40","2893496"
"93489681","178386","3","The link above to AddyOsmani's website is valid, but Slideshare no longer allows the flash embed.  You can view the slides here https://www.slideshare.net/AddyOsmani/jquery-performance-tips-and-tricks-2011","2018-11-14 04:13:04","1133542"
"2154964","1126089","0","@slacy: Then you need to merge the two branches.","2010-02-05 12:07:29","120999"
"2158092","59916","12","@Darron: you can only use `type -p` if the script is executable. This can also open a subtle hole if the script is executed using `bash test2.sh` and there is another script with the same name executable somewhere else.","2010-02-05 12:18:04","41747"
"62319237","52713","3","I am very confused, this (git checkout -- .) just does *not* work. I still have all my changes (unstaged) files.","2016-05-24 06:24:13","43453"
"77205614","2025282","0","[How to programmatically convert between `px`, `dp`, and `sp`](https://stackoverflow.com/a/42108115/3681880)","2017-07-15 10:40:21","3681880"
"109501274","54574842","0","In your loop you are repeatedly replacing in a string. This creates a new string on each iteration of the loop which for long strings will cost a lot of performance.

Regex already have support to do all replaces in one go which is much faster as it will use tricks to avoid creating multiple new strings.","2020-05-20 10:12:29","479137"
"93505512","51774287","3","You shouldn't stringify your data in a utility function like this. Imagine if you had an object with 1GB of data stored in it, and decided to run this function on it- you'd stringify the whole object just to check to see if it has anything inside it?

Just use `Object.keys()`","2018-11-15 04:36:20","4876779"
"2173357","79936","58","@Brian You should explain *why* buffer[] and the pBuffer pointer are created on the stack and why pBuffer's data is created on the heap. I think some ppl might be confused by your answer as they might think the program is specifically instructing that memory be allocated on the stack vs heap but this is not the case. Is it because Buffer is a value type whereas pBuffer is a reference type?","2010-02-08 04:56:47","133247"
"62338288","18994918","1","In your second example, at least in Windows, you will get an `OSError` if `filepath + '.old'` already exists: ""On Windows, if dst already exists, OSError will be raised even if it is a file; there may be no way to implement an atomic rename when dst names an existing file.""","2016-05-24 02:14:04","6030424"
"109515393","52713","0","To revert an entire sub folder, this works well for me `git checkout -f -- path/to/revert/ ` whereas this does NOT work `git checkout -f -- path/to/revert/*` as any new files git doesn't have a record of.","2020-05-20 04:56:10","1158844"
"77239975","39492868","2","As of today, I have successfully used upriver to sync a fork with the upstream repo, so it's working for my purposes and I will continue to use it.","2017-07-17 02:55:19","1542146"
"62353124","37123109","0","The java code solution worked for me in a fragment when I replaced fEmail with the view that opened the keyboard.  It worked on Samsung Galaxy Tab S2 running Android 5.1.1, Nexus 5 running 6.0.1, and an XT1032 running 5.1 (This is using the support libraries.)","2016-05-24 09:11:16","2423194"
"16448998","4407335","336","this is ridiculous! so many different ways to do the same thing. let's make a new standard for user selects. we will call it `standard-user-select`. then we won't have these problems. although for backwards compatibility we should include the others as well. so now the code becomes `-webkit-touch-callout: none;
-webkit-user-select: none;
-khtml-user-select: none;
-moz-user-select: none;
-ms-user-select: none;
user-select: none; standard-user-select: none;`. ah, much better.","2012-09-04 04:19:11","15055"
"109536175","6581949","0","May i know, if everything is an object in Python... type is also an object. So type is also created using some parent class. If we try to understand this where exactly this parent tree ends? What is its root? and how is this all mapped. In short i am asking for how to build something like python from scratch probably.","2020-05-21 09:14:56","9470457"
"77253507","246128","0","Cute format: `DIR=$(cd $(dirname ${BASH_SOURCE[0]}) && pwd)`","2017-07-17 11:00:22","1611395"
"46919433","52713","4","@alexykot ""update to HEAD"" means cleaning the changes. HEAD is the revision that is currently checked out.","2015-03-31 12:41:49","2844582"
"31399761","18018493","2","""all the implementations handle it the same"" - [jju](https://github.com/rlidwka/jju) has an option to throw on these jsons","2014-01-04 12:26:23","1374175"
"62381702","5032238","1","In Python 3.3 and above, you can use `FileExistsError`.","2016-05-25 02:07:22","974555"
"62394481","180917","1","@clacke If someone decides to use a different shell than everyone else, they should state that expressly if they are encountering problems. Unlike with nationality, everyone has their free choice of shell.","2016-05-25 07:38:20","3159183"
"31421128","14896052","0","I personally found this to be most useful. It then keeps your working tree so you can check it in again. For my issue, I had the same files deleted as being added so it was stuck. Weird, I know.","2014-01-04 09:03:59","775516"
"109578972","57880896","1","According to the man page `git restore .` restores all files in current directory, not in the whole repository.","2020-05-22 12:48:55","4414935"
"93572709","49441486","1","@sbk `repr(arg)` didn't really help, the above code handles spaces as well. Now the following works `exec_long_running_proc(command = ""ls"", args=[""-l"", ""~/test file*""])`","2018-11-17 12:07:21","4521562"
"109592534","57880896","2","You are right. Thanks! I just tested it and indeed, that is the case. It is, however, recursive. So when run from the root of the project, it applies to the whole repository. I will edit my answer.","2020-05-22 07:57:30","9210961"
"109592964","43672227","0","@mrmr68 The type of the operands of the [Abstract Equality Comparison](https://tc39.es/ecma262/#sec-abstract-equality-comparison) is _very_ important — it’s used to coerce the operands to other types so they can be compared.","2020-05-22 08:13:38","4642212"
"77303696","43421561","0","You should split this into a few different answers. The answer with multiple tags on one line is, without a doubt, the right answer for bulk tag deletion.

It's actually a little difficult to find this info nearly anywhere else. Even knowing what I'm looking for I have a hard time finding it in the git help page :)


So kudos to you and highlight that as the right answer, and move the GitHub API one to a different place.


And finally, the deleting tags locally, in bulk, works with space delimited tags (get rid of the colons)","2017-07-18 01:16:34","27555"
"77304514","43421561","0","Thanks for the praise and suggestions. I will split this up. I don't understand your comment about local tag deletion. I don't think my final command snippet uses any colons,  but I'm on mobile so maybe missing something.","2017-07-18 01:33:05","657764"
"46960416","52713","0","yes, indeed, my bad. However `git checkout HEAD` does not actually discard the changes for me, so `stash` based solution is still preferred.","2015-04-01 01:10:22","1450663"
"46963483","8888015","0","Will this delete files that I have .gitignore'd?","2015-04-01 02:27:29","3817250"
"109618619","16095649","0","@MichaelDurrant `$ git rebase --hard origin/master b5a30cc159ba8dd
error: unknown option `hard'
usage: git rebase [-i] [options] [--exec <cmd>] [--onto <newbase>] [<upstream>] [<branch>]
   or: git rebase [-i] [options] [--exec <cmd>] [--onto <newbase>] --root [<branch>]
   or: git rebase --continue | --abort | --skip | --edit-todo
`","2020-05-23 08:23:34","398348"
"62448054","33765206","1","Thanks, @selurvedu - it can be confusing until you get it straight. I learned the hard way, so your way might not be as hard. ;) Using if without the else, at the end of a generator expression or list comprehension will filter the iterable. In the front, it's a ternary conditional operation, and requires the else. Cheers!!","2016-05-27 04:37:39","541136"
"16538947","271616","2","""A null parameter is usually just ""a general error in programming"" and not an application/API specific constraint."" Naive. You can use this as a security hole to DoS or attempt to gain stacktrace info (if such information is not supressed). http://osvdb.org/show/osvdb/67379 

If your API is public and you don't explicitly define the boundaries you accept--both through API docs and whatever tools you can use to ensure validity of the contract-- the caller's free to do whatever they want. __You__ are the one who didn't program right then, not the caller.","2012-09-07 06:23:23","197101"
"46991363","7244321","4","Found this in Github help articles: https://help.github.com/articles/syncing-a-fork/","2015-04-02 08:57:42","985166"
"93622796","1274447","3","The complete answer is `git rm --cached -r .; git add .; git status`","2018-11-19 11:18:04","2250391"
"16548658","5801728","3","This is the difference between an absolute and a relative URL. It doesn't explain the relation of URI vs. URL and URN.","2012-09-08 08:43:22","421705"
"109631595","53183593","0","@User9123 I think the accept one is try to be compatible with all popular shell/distro. More over, depending on what you are trying to do, in most cases people want to obtain the directory where the symlink located instead of the directory of the actual source.","2020-05-24 12:23:58","1492613"
"62461825","215731","2","If you want to delete your changes on this specific file, you can use `git checkout path/to/file`. If you don't specify a hash, HEAD is used.","2016-05-27 11:49:26","2394026"
"31494656","16238123","3","Your answer is just what you needed for your rep.  I must ask, does this also remove all untracked files?","2014-01-07 06:38:09","1427219"
"109658079","417184","0","What about HTTP/2 ? Does the upcoming HTTP/3 add something new to this subject?","2020-05-25 11:09:43","363573"
"109658873","417184","0","@PaulDixon As of Jan 2019 Microsoft switched their rendering engine to Blink. Could this warrant another limitation check? Edge is now at version 83","2020-05-25 11:36:35","414385"
"62481936","932982","1","There is no need to put anything in .gitignore. Just check-in empty .gitignore. Many folders may get populated in future and the method in this answer will never add any files. So I would use this answer's approach very cautiously.","2016-05-27 09:58:08","207661"
"77364287","59895","0","For the filename, see: [How do I know the script file name in a Bash script?](https://stackoverflow.com/q/192319/55075)","2017-07-19 06:40:15","55075"
"47013806","5189600","0","I personally found this article (http://git-scm.com/book/en/v2/Git-Tools-Rewriting-History) a lot easier to follow than the one linked (same site).","2015-04-02 07:36:31","4368068"
"31517443","17114749","1","@Beez the mircoformats link suggests a good way for _servers_ to structure their URLs but the _server_ determines the URL. The client next-to-never does. See [my answer](http://stackoverflow.com/questions/630453/put-vs-post-in-rest/17114749#19670755) or associated [article](http://articles.joshcodes.com/?p=5) if you don't understand this.","2014-01-07 05:11:35","965382"
"77371038","11828573","1","@StevenVascellaro There is no difference; writing to a file and saving the file mean the exact same thing.","2017-07-19 10:17:59","8034149"
"93653600","932982","1","@GreenAsJade What? It is definitely not considered an an empty directory for all intents and purposes! For example, a Python script will see this file if it looks for files in the folder, why the presence of a `.gitignore` file may make a significant difference.","2018-11-20 08:40:48","1070480"
"93653821","21422128","1","On the other hand, the problem is very Git-dependent, as you wouldn't have this problem unless if it was because of the fact that you version control your project.","2018-11-20 08:48:32","1070480"
"16580858","178450","4","Tchalvak, you may feel something is right, but try to explain why. Double negation is confusing as opposed to simple statement, so  $('selector').is(':shown'); is much clearer than  !$('selector').is(':hidden');","2012-09-10 09:43:43","662780"
"16582225","406230","62","@stevendesu: i'm even later, but that answer is almost completely wrong. for one thing, it requires the subject to contain ""h"" which it shouldn't have to, given the task is ""match lines which [do] not contain a specific word"". let us assume you meant to make the inner group optional, and that the pattern is anchored:

`^([^h]*(h([^e]|$)|he([^d]|$)|hed([^e]|$))?)*$`

this fails when instances of ""hede"" are preceded by partial instances of ""hede"" such as in ""hhede"".","2012-09-10 10:41:24","410484"
"31524162","17114749","0","@Joshcodes, I'm not denying where a URL is determined. I'm saying that in a RESTful architecture (defined from the server on up), the ID is part of a URL.","2014-01-07 08:21:44","638329"
"31526046","17114749","0","@Beez if the server determines the URL, the URL should not be dictated by the client. Therefore, even if you know the ID, use POST not PUT. Whether the ID should be part of the URL is a different conversation.","2014-01-07 09:16:52","965382"
"77382255","44358642","0","This is my goto answer. Except that I use Lodash's merge, keeps the syntax somewhat consistent for deep and shallow copying.
`//Deep copy:
_.merge({},foo)
//Shallow copy:
Object.Assign({}, foo)`","2017-07-20 07:30:29","1193349"
"109679210","60247","1","I haven't tested it across different systems. But this solution is the one that works right away at least on Ubuntu, for me!","2020-05-26 12:30:29","2497650"
"31530599","373834","1","Doesn't this reset ALL files? Not just a specific file?","2014-01-07 11:50:33","71062"
"47020784","179147","0","""Make sure you don't have any working copy changes..."" should probably be ""Make sure you don't have any *staged* changes.."" As per normal rules only staged changes affect the commit.","2015-04-03 12:49:35","2864740"
"47020802","27798820","3","This code can set the checkbox to checked status.I do not think this answer is relative to the question.","2015-04-03 12:51:05","1586797"
"93671453","18632808","0","Setting all permissions to 664 makes a lot of assumptions about what kind of permissions the project needs. I think using that part of the command will cause issues for some people.","2018-11-20 05:12:29","2351224"
"93675011","53077310","2","This does not disable the text-selection, all it does is hide it for the user. The computer itself still knows it is being selected, the background-color is just transparent. But if you press ctr (cmd on mac) + A and then copy you can paste the text somewhere else.","2018-11-20 07:12:46","10087397"
"47021497","14419556","0","@davethegr8 but pairing would still be `O(1)` :-)","2015-04-03 01:44:27","1549476"
"47023491","487279","0","This answer makes the (common) error of assuming that f=O(g) means that f and g are proportional.","2015-04-03 04:38:41","1400793"
"47023505","6620071","6","While I can maybe see why people might skim my answer and think it is too mathy (especially the ""math is the new plain english"" snide remarks, since removed), the original question asks about big-O which is about functions, so I attempt to be explicit and talk about functions in a way that complements the plain-English intuition. The math here can often be glossed over, or understood with a highschool math background. I do feel that people may look at the Math Addenda at the end though, and assume that is part of the answer, when it is merely there to see what the *real* math looks like.","2015-04-03 04:39:54","711085"
"77397808","630475","1","Think like a server: Expect an item to be uniquely identifiable. If I receive a PUT *without* an identifier I'm going to reject it because it's not telling me what to update. If I receive a POST *with* an identifier I'm going to reject it because I can't *create* what already exists.","2017-07-20 01:16:25","1582392"
"31546120","20978574","3","Alternatively you can use this shorter version: `if ! ls $DIR 2>/dev/null; then echo ""$DIR does not exist!""; fi`","2014-01-08 10:51:00","591004"
"2346138","178344","134","This only checks for the display property of a single element. The :visible attribute checks also the visibility of the parent elements.","2010-03-03 10:10:48","130121"
"16626533","1783426","23","Error: ""git checkout: updating paths is incompatible with switching branches. Did you intend to checkout `origin/test` which can not be resolved as commit?""","2012-09-11 08:35:59","99923"
"62532756","23853061","2","This works but the UI is very clunky. It sometimes suggests the opposite operation as a default, i.e. sending a pull request to the original source.","2016-05-30 07:36:06","860196"
"16628483","7760865","27","@Rod - No, that's not right. That command will revert the commit that is the third grandparent of HEAD (not the last three commits).","2012-09-11 10:13:05","241133"
"62534516","180917","2","@SeldomNeedy Maybe they are looking for help because they don't even know they are using a different shell than everybody else.","2016-05-30 08:37:48","260122"
"16629204","7216269","34","This combined with git push --mirror are exactly what I needed to create an exact duplicate of a remote git repo when moving from github.com to a github enterprise install.  Thanks!","2012-09-11 10:59:53","506537"
"93693239","179147","0","@Armand You can use ```git push --force-with-lease```. It is safer when working on the same repository","2018-11-21 09:43:32","5275921"
"16634740","682343","5","For me git says `git reset HEAD <File>...`","2012-09-12 06:50:13","188533"
"93699948","53254732","0","What is the difference with @JacoPretorius answer ?","2018-11-21 01:05:23","3711574"
"62548615","36837818","0","Great, if I have 600k elements in array and want to remove first 50k, can you imagine that slowness? This is not solution, there's need for function which just remove elements and returns nothing.","2016-05-30 03:11:17","2979439"
"16638372","10701801","8","I also have several more of these using `visibility:hidden` and also `position:absolute;top:-9000px` you can also do `text-indent` and also `z-index` on a few of these elements and place them in compressed CSS file names with awkward names - since bots can detect 1display:none` and they now check for a range of combinations - I actually use these methods and they're old tricks of the trade. +1","2012-09-12 09:24:04","596952"
"77413596","45113099","1","You can see that there are strings in the second example I provided? I am not sure what you mean by this? The only issue is if your string contains one of the charterers used in the separation, as I mentioned in my answer.","2017-07-20 07:33:06","3790949"
"109718282","2633580","0","All those `pushd` `popd` dangers could be avoided simply by dropping them and using `cd` + `pwd` enclosed in a command substitution instead. `SCRIPT_DIR=$(...)`","2020-05-27 03:16:32","209129"
"109718546","19250386","0","Preventing two extra process forks and sticking to shell built-ins may be one reason why.","2020-05-27 03:37:05","209129"
"77421692","33132462","1","That graphic assumes you're owning the machine. For running Docker images in GCE or AWS, you need to run Docker inside a VM. So the whole left image is in the VM part of the right image, thereby negating most of the benefits. Or am I misunderstanding something here? That image always lead me to believe I don't need a VM to run Docker, until I actually tried to set it up.","2017-07-21 01:57:19","106176"
"16648807","12389954","0","According to Note #2 under the refspec section of `git fetch` (http://www.kernel.org/pub/software/scm/git/docs/git-fetch.html), this probably needs to be adjusted.","2012-09-12 03:25:08","312480"
"2367745","2389384","1","I tried `git reset`, `git reset --merge`, and `git reset --hard`, but I still end up with the same message about being 5 commits ahead of origin/master.","2010-03-05 07:30:06","107277"
"2369015","2389555","20","or you could've used `HEAD^^^^`","2010-03-05 10:57:22","35364"
"2369036","2389555","17","maybe even reset to `origin/master` ;)","2010-03-05 11:01:54","35364"
"77438363","14419556","0","I have many very similar looking socks, so I can't sort them on a color/pattern gradient just by looking at one, I have to compare it to others. Would this method still work for me?","2017-07-21 11:25:03","6743127"
"93726939","4456438","20","He should really consider buying a [Pointer](https://en.wikipedia.org/wiki/Pointer_%28dog_breed%29) dog and calling him NullPointer.","2018-11-22 08:09:53","3096438"
"93729061","11552180","0","Concerning your last note (about `--assume-unchanged`) : either this is cargo cult and should be dismissed, or you can explain why (which I'm convinced of) and it becomes useful.","2018-11-22 09:17:53","1057485"
"2385625","1764694","5","One tip is to copy your .git/config file if you have added remote origin, before deleting the folder.","2010-03-08 11:15:52","55283"
"109762248","1274447","1","[@openCivilisation](https://stackoverflow.com/users/1692999/opencivilisation) If you want to make git ""completely forget"" (retroactively apply gitignore as if it had existed in the beginning), **AND/OR** want to **avoid** removing files from other developers machines on the next `git pull`, see [this](https://stackoverflow.com/a/57487519/423125) answer or [this](https://stackoverflow.com/q/57418769/423125) question/answer","2020-05-28 08:16:56","423125"
"47104660","76257","3","Interactive shell != script.  Anyway `realpath ${BASH_SOURCE[0]};` would seem to be the best way to go.","2015-04-06 12:52:06","13566"
"31585979","1787014","9","@Dennis: `git checkout <non-branch>`, for example `git checkout origin/test` results in detached HEAD / unnamed branch, while `git checkout test` or `git checkout -b test origin/test` results in local branch `test` (with remote-tracking branch `origin/test` as _upstream_)","2014-01-09 08:17:56","46058"
"47105118","1473742","0","You should also check this proposal: https://github.com/tc39/Array.prototype.includes

Also this for different ways to use `Array.prototype.indexOf()`: http://codereview.stackexchange.com/questions/13941/indexof-1-vs-indexof-1?newreg=a7ab1d2c7cfa49bd99e9fb31540815a5","2015-04-06 01:09:50","667234"
"31594213","16238123","5","Yeah, most of my rep is coming from here :) This will also remove all untracked files. Something I had forgotten and was painfully reminded of just 2 days ago...","2014-01-09 12:01:15","2151700"
"31594281","16238123","1","See the comments on this other answer: http://stackoverflow.com/a/8888015/2151700","2014-01-09 12:02:55","2151700"
"62601499","36837818","0","@Seraph For that, you'd probably want to use `splice` or `slice`.","2016-05-31 10:04:28","722180"
"62602646","36837818","0","@bjfletcher Thats even better, in process of removal, just allocate 50K elements and throw them somewhere. (with slice 550K elements, but without throwing them from the window).","2016-05-31 11:06:07","2979439"
"62605912","59916","1","To get this working on Mac OS, probably because of spaces in the path, I had to enclose the argument with quotes, like so: `\`dirname ""$0""\``.","2016-06-01 03:06:36","2453202"
"77489845","24743196","0","This is by far the best answer by a factor of 10xms. If you added your jsfiddle code and results onto the answer people might notice it. I wonder why the lazy version is faster than the greedy version when there is no hede. Shouldn't they take the same amount of time?","2017-07-23 09:06:13","7100300"
"31608362","15587937","0","This is the most comprehensive answer, covering both show and hide.","2014-01-09 05:37:32","315752"
"2415805","136138","45","What's logical about defining a method inside a class, when it has nothing to do with either the class or its instances?","2010-03-12 09:11:19","189179"
"93759531","24106634","4","This literally [calls AWS S3](https://github.com/mongoh/tuid/blob/master/tuid.js#L50) to get a random ID. If calling a server is okay, you can just have the server generate a UUID.","2018-11-23 08:50:41","209133"
"62619897","92395","8","What one typically needs to know is what is done with the child process's STDOUT and STDERR, because if they are ignored, under some (quite common) conditions, eventually the child process will issue a system call to write to STDOUT (STDERR too?) that would exceed the output buffer provided for the process by the OS, and the OS will cause it to block until some process reads from that buffer. So, with the currently recommended ways, `subprocess.run(..)`, what exactly does *""This does not capture stdout or stderr by default.""* imply? What about `subprocess.check_output(..)` and STDERR?","2016-06-01 10:44:53","1143274"
"47134692","1274447","25","git rm --cached <file> just remove file from repository, git update-index --assume-unchanged <file> not shown file in unstaged changes and does not make pull a new changes. But i want GIT JUST IGNORE CONTENT OF FILE PLEEEEEASE","2015-04-07 09:03:18","3705960"
"16711657","5480292","223","+1 for both answering the question and explaining the general case, and detailing the unabridged syntax's meaning","2012-09-14 07:03:22","474526"
"77509962","44154594","2","This is fine at global scope, but in some module context you probably want to ensure right context for the callback e.g. `$.ajax({url: ""api/data"", success: fooDone.bind(this)});`","2017-07-24 06:14:12","2548747"
"77522271","43928167","0","Are redundant constructions the norm around web developers? I have someone at work spraying stuff like this everywhere. Why not just `return value != elem`?!","2017-07-24 11:59:47","688843"
"47150394","1473742","1","Why not provide an example in the answer? `if($.inArray(value, array)) > -1 { // found value in array }`","2015-04-07 03:50:40","1066234"
"77524221","38578","2","@HelenNeely Unfortunately this explanation is wrong. Its bullets are only correct when all the columns are the same, and its language is fuzzy. See my comment immediately before yours, and my comment on the question.","2017-07-24 12:43:05","3404097"
"77525056","45011393","2","This is only correct when the tables have the same column set. (It confuses inner join with intersection & full join with union.) Also ""match"" is undefined. Read my other comments.","2017-07-24 01:02:37","3404097"
"93796431","38064836","0","This will fail if the field is empty. You could add a required attribute and trim the email address to solve the issue.","2018-11-24 09:29:20","1123556"
"93797365","244858","0","@danger89 you could, but this changes the length of the array. However, I see do see this used in tutorials where the code isn't going to be used in production","2018-11-24 10:44:55","7243108"
"62659448","16956844","1","@Nathan very crazy!! Funny thing is that this became a canonical Q&A on looking for a string, even though the real problem was about excluding binary files : )","2016-06-02 08:52:13","1983854"
"31652980","20768177","0","In what situation won't this list of files be equal to the recursive --cached?","2014-01-10 06:47:00","1040437"
"31656276","630453","29","PUT and POST are both unsafe methods. However, PUT is idempotent, while POST is not. - See more at: http://restcookbook.com/HTTP%20Methods/put-vs-post/#sthash.u3S9tnPo.dpuf","2014-01-10 08:26:49","1547664"
"47168201","20267852","2","in config files, I use `{""/* ---- my section ----*/"":0}`. This is valid JSON, as JSON accepts any character in the key string. It will not collide with other properties and nobody cares or reordering. Still, 2 comments must not be the same.","2015-04-08 03:46:52","3606492"
"2463359","477821","20","jQuery seems to work with at least  'application/json' and 'text/plain'... I haven't tried all the others though.","2010-03-18 07:30:13","71650"
"31665616","12231177","6","@Mark Yes they do, they are required to. Commit ids are dependent on previous commits. If they didn't change, git would be useless.","2014-01-11 04:45:27","575229"
"93817851","11766839","1","@RoniAxelrad : PUT is like a database ""INSERT OR UPDATE"" statement where you are including the key in the statement, so only applicable where you can guarente no collisions. eg. your domain has a 'natural key' or you use a guid. POST is like inserting into a table with an auto incrementing key.  You have to be told by the database what ID it got after it has been inserted. Note your ""INSERT OR UPDATE"" will replace any previous data if it existed.","2018-11-26 01:33:41","23963"
"31674799","15442252","3","You are stating ""Big O"" and ""Small o"" without explainy what they are, introducing lots of mathematical concepts without telling why they are important and the link to wikipedia may be in this case too obvious for this kind of question.","2014-01-11 02:54:41","906787"
"16777859","7216269","5","@Dave: Add a final `git checkout` as last command to finally checkout the head of the current branch on the cloned repo. This is a great answer, by far the best. Be brave, eventually we'll get you to the top :-)","2012-09-18 07:37:29","923794"
"77554166","44103318","0","@DanielT.: I don't think the transformation of lifting the variable definition out of the loop initializer explains anything.  That is simply the normal definition of the semantics of `for`.  A more accurate transformation, though more complicated, is the classical `for (var i = 0; i < 5; i++) { (function(j) { setTimeout(_ => console.log(`i is ${j}`), 125/*ms*/); })(i); }` which introduces a ""function-activation record"" to save each value of `i` with the name of `j` inside the function.","2017-07-25 07:13:26","643826"
"31679356","15442252","0","@AditSaxena What do you mean ""without explaining what they are""? I exactly explained what they are. That is, ""big O"" and ""small o"" are nothing by themselves, only a formula like ""f(x) = O(g(x))"" has a meaning, which i explained (in plain English, but without defining of course all the necessary things from a Calculus course).  Sometimes ""O(f(x))"" is viewed as the class (actually the set) of all the functions ""g(x)"" such that ""g(x) = O(f(x))"", but this is an extra step, which is not necessary for understanding the basics.","2014-01-11 06:34:54","898649"
"31679422","15442252","0","Well, ok, there are words that are not plain English, but it is inevitable, unless i would have to include all necessary definitions from Mathematical Analysis.","2014-01-11 06:38:21","898649"
"62696703","14423956","0","yes, actually pattern matching takes O(1) with human eyes if N is small.","2016-06-03 05:08:06","1118211"
"77558393","43854346","1","I like the idea, just think is a bit slow to do two stringify per element on the array. Anyway there are cases in which it will worth, thanks for sharing.","2017-07-25 08:56:09","1955088"
"93830488","32524385","4","I'd say PUT for UPSERTS","2018-11-26 11:45:16","1615183"
"16783894","7216269","4","@Dave: Hm. I'm having second thoughts: --mirror does more than just setting up all branches as being tracked. It copies all refs from the origin and subsequent `git remote update` will do that again. Behaviour of pulls change. I'm back to believing the full copy requires a one-line script.","2012-09-18 11:53:06","923794"
"77570168","35022676","4","Adding ton Quentin's comment: as currently written, keyboard users won't reach the `span` element because it is a non-focusable element. That's why you need a button.","2017-07-25 01:09:59","6002174"
"16784971","4754797","56","""One liner"": `git branch -a | grep -v HEAD | perl -ne 'chomp($_); s|^\*?\s*||; if (m|(.+)/(.+)| && not $d{$2}) {print qq(git branch --track $2 $1/$2\n)} else {$d{$_}=1}' | csh -xfs`   As usual: test in your setup before copying `rm -rf universe as we know it`","2012-09-18 12:38:54","923794"
"77575404","45251566","2","The `<center>` tag is deprecated since HTML4, like [Idra explained in comments](https://stackoverflow.com/questions/114543/how-to-horizontally-center-a-div-in-another-div/45251566#comment32214515_20339458)","2017-07-25 02:51:47","5100729"
"93840975","9197466","0","_invalidates cached copies of the entire containing resource_ any reference for that? Also it's never mandatory for a browser to follow the cache rules set.","2018-11-26 04:50:55","5175709"
"31687787","7244456","6","If you have local commits, doesn't this creates ugly `""Merge branch 'master' of github.com:user/repo""` commits every time you try to get the updates from the upstream? You can rebase sure, but if you pushed your changes to your forked repo on github, means next time you just can't rebase without regenerating the hashes for every commit after it turning everything in a mess. I really don't know how to properly ""maintain"" a fork on github.","2014-01-12 02:37:49","417527"
"62704769","7244321","0","Here's a video demo that does this using two github accounts https://www.youtube.com/watch?v=kpE0gTX4ycE","2016-06-03 09:29:19","307454"
"16793011","487258","66","Summary: The upper bound of the complexity of an algorithm. See also the similar question [Big O, how do you calculate/approximate it?](http://stackoverflow.com/questions/3255/big-o-how-do-you-calculateapproximate-it) for a good explaination.","2009-01-28 11:18:44","57601"
"16793017","487258","18","Big O is an estimate of the worst case performance of a function assuming the algorithm will perform the maximum number of iterations.","2012-08-28 12:16:57","1113772"
"16793022","487258","16","There is a lecture dedicated to complexity of the algorithms in the Lecture 8 of the MIT ""Introduction to Computer Science and Programming"" course http://www.youtube.com/watch?v=ewd7Lf2dr5Q It is not completely plain English, but gives nice explanation with examples that are easily understandable.","2010-07-17 08:57:40","144411"
"31707363","15442252","2","Hi #Alexey, please have a look at accepted answer: it is long but it is well constructed and well formatted. It starts with a simple definition with no mathematical background needed. While doing so he introduce thre 3 ""technical"" words which he explains immediately (relative, representation, complexity). This goes on step by step while digging into this field.","2014-01-12 10:44:07","906787"
"31707389","15442252","0","OP wasn't asking a technical answer, please think of this as what you would to your tech guy repairing your dishwasher? You don't necessarily need to know any mechanical concept: maybe you only want to understand if the repairing is worth than buying a new one. These kind of questions are often asked to skilled professionist during job interviews to understand if they can relate to non-technical folks, I didn't Actually vote you down.","2014-01-12 10:45:48","906787"
"31707435","15442252","0","Big-O -> WHY: used for understanding the speed of algorithm resolution -> HOW: you should calculate the worst case scenario -> HOW -> ... -> HOW -> ...","2014-01-12 10:48:27","906787"
"47209151","23853061","8","April 2015. Works. Thanks. I did get ""Switching to base"". However, step 6 was ""Create pull request"" -> enter comment -> ""Create pull request"". End up with 1 commit ahead of original.","2015-04-09 12:08:33","1284876"
"31708683","20241145","210","This **IS** the real answer. Awesome actually, very simple, doesn't pollute `git status` and actually very intuitive. Thanks.","2014-01-12 11:57:18","417527"
"31709112","397583","4","`0 == null` is false.","2014-01-13 12:25:19","261439"
"2508433","679937","66","This works fine, or more simply: function isEmpty(object) {
for(var i in object) { return true; }
return false;
}","2010-03-24 11:23:57","59975"
"31716349","394887","8","Ternary operator usually executes faster(sometimes by 10-25%).","2014-01-13 07:52:08","1381627"
"31727451","1109022","4","/**
	 * This method is used to hide soft keyboard.
	 * @param activity
	 */
	public void hideSoftKeyboard(Activity activity) {
		InputMethodManager inputMethodManager = (InputMethodManager)activity.getSystemService(Activity.INPUT_METHOD_SERVICE);
		inputMethodManager.hideSoftInputFromWindow(activity.getCurrentFocus().getWindowToken(), 0);
	}","2014-01-13 01:30:35","3110609"
"2516974","487300","5","what does this definition mean exactly? (The number of items is still increasing by a factor of 10, but the scaling factor of O(1) is always 1.)","2010-03-25 10:10:14","151438"
"47221437","5305908","0","This is the route i finally decided on I was thinking of this when i saw people saying about .gitkeep for my case this is the better solution in my opinion. Its for keeping folders like lib and obj which is apart of my build process. OK a readme is overkill for other developers but for people just starting, I certainly would of benefited from having readmes back when i started. I think it depends on the project and the way its going to be used.","2015-04-09 09:09:33","1563404"
"62732098","179147","0","I had some other files in the index which I hadn't committed.  This command amended my previous commit message, but also added those files to the commit.    Now can I amend again to split the commit up how I wanted it?","2016-06-03 11:29:06","482828"
"47229740","17972139","16","easiest, verbose, recursive and case insensitive. thumbs up.","2015-04-09 12:44:43","828366"
"93873540","417184","0","Googler Hohn Mueller said: ""As far as I know, there's no theoretical length limit, but we recommend keeping URLs shorter than 2000 characters to keep things manageable."" here https://productforums.google.com/forum/#!topic/webmasters/dPxWiO-cRnM/discussion","2018-11-27 02:44:30","7078498"
"16831553","11511035","7","Works slightly differently to jQuery's; it considers `visibility: hidden` to be *visible*.","2012-09-20 04:45:23","31671"
"109902420","24618928","0","@meagar I never replied to your comment. I meant standard referring to comments, please let me know if you can find anything related to that here https://www.json.org/json-en.html","2020-06-01 08:36:10","1822704"
"31736983","15442252","2","Big O is used for understanding asymptotic behavior of algorithms for the same reason it is used for understanding asymptotic behavior of functions (asymptotic behavior is the behavior near infinity).  It is a convenient notation for comparing a complicated function (the actual time or space the algorithm takes) to simple ones (anything simple, usually a power function) near infinity, or near anything else.  I only explained what it is (gave the definition).  How to compute with big O is a different story, maybe i'll add some examples, since you are interested.","2014-01-13 05:23:47","898649"
"31738431","15442252","0","That is good a good start - meanwhile I've documented on different articles on this matter, I hope my knowledge on this topic will go for my current needs, but thanks for your time. Regards, Adit","2014-01-13 06:02:54","906787"
"47245368","24179268","3","Since, version [3.0.0](https://github.com/lodash/lodash/releases/tag/3.0.0), Lo-Dash has this string method available by default. Just like described in this answer: `_.capitalize(""foo"") === ""Foo""`.","2015-04-09 07:09:20","3786608"
"109906632","24618928","0","@MaurícioGiordano No, there is nothing there, because JSON doesn't support comments. Of course the standard doesn't have to explicitly state this, any more than it has to explicitly state that it does not have classes.","2020-06-02 12:36:03","229044"
"109906680","24618928","0","This regex still fails for valid inputs. `""\""/*foo*/\""` for instance. Using a regular expression is a really bad idea, as has previously been pointed out.","2020-06-02 12:38:44","229044"
"77623936","45251566","0","@Garric15 I'm just trying to encourage some ppl who maybe keep losing hours and hours of work for solving a very tiny problem just because they don't want to use a deprecated tag like <center> despite it keeps working perfectly fine in some cases. The <center> tag was deprecated but nothing as simple and effective as it came to replace it decently in all cases.","2017-07-26 03:17:51","3063226"
"93885668","11766839","0","@NigelThorne Thanks for your answer. So if for example I'm trying to PUT a book id 10 with a URI: PUT books/10. If book id 10 does not exists, I should create a book with id 10 right? but I cannot control the creation ID numerator, because it's auto increment. what should I do in that situation ?","2018-11-27 08:50:43","1183020"
"47250557","4682612","1","Watch out @Jazzerus. I think `git pull <remotename>/<branchname>` will merge that branch into whatever branch you currently have checked out. What you want is `git checkout --track <remotename>/<branchname>`. And this is what the OP wants, `git checkout --track` on all remote (origin) branches","2015-04-09 09:38:51","623735"
"77625703","14419556","0","@Fabian no, hashing requires an equality comparison. You could make it a little easier by sorting the socks by some continuous attribute such as primary color. You could put the socks into an R-tree if you want to make use of continuous attributes. That might make sense if you have > 1 million socks.","2017-07-26 03:55:15","122718"
"109911523","22417539","0","Futher elaboration regarding (1): If you are adept with `gitk` (a GUI tool), then you can (with care) move and rename branches.  For example, you can place a new branch called `tobesquashed` on the same commit with `master`, then delete `master` and recreate it at the base of the to-be-squashed commits. ... Then proceed with step 2.","2020-06-02 06:26:02","86967"
"93890739","50113060","12","This should be the accepted answer. It's straightforward, easy to understand and easy to remember","2018-11-28 12:53:58","5870336"
"31747544","201915","5","The point on `which` is very debatable. `type`, `hash`, and other builtins do the same thing better in bash. `which` is kindof more portable, though it really isn't the same `which` used in other shells like tcsh, that has it as a builtin.","2014-01-13 10:30:04","3076724"
"77642991","44781228","57","`git branch -a` will display local and remote branches.It will be help for you diagram introduce.","2017-07-27 03:01:39","4887726"
"16864735","162056","5","Thulfir: who said anything about making one branch the same as another? There are different scenarios where you need to merge, without ""making one branch the same as another"". One is when you're done with a development branch and want to incorporate its changes into the master branch; after this, the development branch can be deleted. Another one is when you want to rebase your development branch, in order to ease the eventual final merge into the master.","2012-09-21 08:50:19","351716"
"93904324","10442532","0","I removed `input.setInputType(0);` from this code. It changed a keyboard behaviour and `inputType` for the `EditText`.","2018-11-28 10:56:21","2914140"
"109935057","22345808","0","after changing your npm config, you can run 'npm config list' to see a list of your current configs to make sure you changed it right","2020-06-02 06:49:49","8840359"
"77659235","477821","0","jQuery is capable of working with `content-Type: text/plain`, `content-Type: application/json`, `content-Type: application/json; charset=UTF-8`,  `contentType: ""application/x-www-form-urlencoded; charset=UTF-8""`","2017-07-27 11:13:43","3951861"
"109941857","61367209","0","`<center>` is only a predefined tag, not adjustable, not flexible as in CSS. It still works but those are one of the last living remnants just like <blink> and <font>. Deprecated doesn't mean that it will no more work in future... it also means that new techonolgies, be it via node react using JSX or other complex MVCs that generate virtual DOMs might be not fully capable to work with. That they still work in HTML5 despite not supported means that w3c no longer maintains it. Also SEO: Websites with deprecated HTML may signalize search engines with outdated code which could harm your ranking.","2020-06-02 11:53:32","6189002"
"109942415","58797118","0","[According to MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replaceAll), this has been available since Firefox 77 and Chromium 85.","2020-06-03 12:31:16","1543768"
"109942984","47475081","0","This is my favourite answer, because it's building a UUID as a 16-byte (128 bit) value, and not its serialized, nice to read form. It'd be trivially easy to drop the string stuff and just set the correct bits of a random 128bit, which is all a uuidv4 needs to be. You could base64 it for shorter URLs, pass it back to some webassembly, store it in less memory space than as a string, make it a 4096-size buffer and put 256 uuids in it, store in a browser db, etc. Much better than having everything as a long, lowercase hex-encoded string from the start.","2020-06-03 01:13:51","2258817"
"62797476","1984274","2","So would it make sense to say that the hash (e.g. SHA1) of a file could be a URN for that file?","2016-06-06 02:01:14","2453293"
"47287681","630475","0","Whatever the semantic value of POST vs PUT: If you have to support IE9 and IE8, beware that CORS requests in these versions do not support PUT - only GET/POST. See http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx","2015-04-10 07:21:14","3096626"
"77679958","114549","0","Why this doesn't work if inner element is `button` and not a `div`.","2017-07-27 07:16:40","5316255"
"93922929","20344271","0","What is mRootView?","2018-11-28 07:49:54","580257"
"47292776","1274447","0","Also to do it recursively: git rm --cached -r lib/data/excel/*","2015-04-10 10:34:09","3957231"
"47293461","25957474","1","This approach has two other advantages: line-drying loses many fewer socks IME than the tumble dryer does, and the sort process can be extended to the rest of the laundry, so (e.g.) all towels are near each other to be folded off the line and binned and taken straight to their storage. It also works in two low-effort passes, putting the clothes up and taking them down again.","2015-04-10 11:13:08","1168043"
"31796430","2219560","38","I don't get how an answer that looks a lot like just the main idea of an answer that was written two years ago and also the accepted answer gets so many votes. Strange. (nothing wrong with the answer though)","2014-01-15 05:30:22","1833460"
"93929134","100146","4","Shouldn't unregister()  be called by instance of Example class ?","2018-11-29 12:59:15","3311276"
"2584574","79936","1","@Hershi: Re 1. That is already covered by: Variables created on the stack will go out of scope and automatically deallocate.   Re 2. That is already covered by: Variables on the heap must be destroyed manually and never fall out of scope. The data is freed with delete, delete[] or free","2010-04-05 11:44:14","3153"
"62816933","2003515","4","The question was ***""What do I need to do differently to successfully delete the remotes/origin/bugfix branch both locally and on GitHub?""*** After running the commands in your updated answer, the local branch is still present. It would be nice if the accepted answer was a ***complete*** answer. Its absolutely amazing at how difficult Git makes simple tasks...","2016-06-07 02:15:38","608639"
"109970292","62178856","0","Adding this feels rather premature, nobody will see this operator in any live code, and it might not even be added. It would be better to wait until the details are finalised and document it properly.","2020-06-03 05:32:08","157957"
"109970311","62178934","1","Adding this feels rather premature, nobody will see this operator in any live code, and it might not even be added. It would be better to wait until the details are finalised and document it properly.","2020-06-03 05:32:32","157957"
"109970338","62178856","0","We are already getting questions on it. :/ If the proposal fails we can then decide if this is worth keeping.","2020-06-03 05:33:08","250259"
"109970459","62178856","0","@JohnConde I'd be tempted to close them as off-topic, because they're asking about an imaginary programming language; or perhaps ""this question belongs on a different part of the timeline, please check the settings on your time machine"" ;)","2020-06-03 05:36:52","157957"
"109970483","62178934","0","@IMSoP i'm with you, however i was invited to do so here https://stackoverflow.com/questions/62178354/what-does-this-symbol-mean-in-php-within-an-object-or-null-value/62178470?noredirect=1#comment109970021_62178470 ...","2020-06-03 05:37:31","12361700"
"109970513","62178856","0","lol The thought crossed my mind. I asked myself if this would offer value to future visitors and, for now, the answer is ""yes"". But that may change...","2020-06-03 05:38:25","250259"
"62818353","6462053","8","'Pass by value' is a standard term in computer science and has been since the 1950s. No point in complaining about it now.","2016-06-07 03:59:03","207421"
"62818445","37190132","2","Java has not redefined those terms. Nobody has. It has merely avoided the C term 'pointer'.","2016-06-07 04:05:08","207421"
"109970607","62178856","0","@JohnConde The problem is that we can't actually give a correct answer yet - the actual behaviour of the operator might completely change, or it might never be added, so anything we write now is as likely to mislead as inform. The only honest answer is ""a syntax error, but there's a possibility it will mean something in the future"".","2020-06-03 05:42:10","157957"
"109970762","62178934","0","It looks like we now have *two* answers about this. Personally, I would just have voted to close the other question rather than trying to answer, because right now there is no such operator.","2020-06-03 05:46:40","157957"
"109970814","62178856","0","I can't say I disagree with your point of view. I'm okay with that as an answer.","2020-06-03 05:48:18","250259"
"109971010","62178934","0","@IMSoP there are a lot of questions here on StackOverflow about C++ Proposal, and they are not been closed: despite that, i'm with you about not posting here this operator for the moment","2020-06-03 05:54:01","12361700"
"109971130","62178934","0","I don't know much about the C++ process and when it's reasonable to discuss proposals, and to be fair this one seems fairly likely to succeed workout modification, but in general there are a *lot* of features proposed for PHP that never make it to the language, and it would be rather confusing for users to come across them all in reference lists. That said, I'm partly just being a grumpy old man here :P","2020-06-03 05:58:11","157957"
"109971243","62178934","0","Ahah @IMSoP i'm a relative newby here, i code only in the next 6 years, so I trust you, if you tell me it's not his place, I'll take it off","2020-06-03 06:01:54","12361700"
"93939857","7074","0","Since 2014 conventions have changed a lot in .net framework. Now there's no existence for String (capital s) while declaring variables. only alias string (small s) is available. Microsoft  might wanted to remove confusing programming approach!","2018-11-29 09:53:06","2064489"
"77698298","27458534","0","Unfortunately, your illustrations don't illustrate  of LEFT vs INNER JOIN ON in the general case. And although most of the Venn diagrams here are also limited to illustrating special cases, a Venn diagram, when properly interpreted, *can* represent inner vs outer join, with the intersection holding your green-green INNER JOIN rows. See my other comments.","2017-07-28 08:45:55","3404097"
"77699883","37615351","5","No, what you are talking about is hovering, which means ""when the mouse is over the text"". It is different from ""selecting the text"". By default there is no color when hovering.","2017-07-28 09:23:13","6271234"
"93943262","2003515","1","In the executive summary you have `git push --delete <remote_name> <branch_name>` but in the first ""Delete Remote Branch Update"" section you have `git push <remote_name> --delete <branch_name>`. i.e. The parameters are in a different order. Can I suggest making these the same to avoid confusion please.","2018-11-29 11:28:48","470014"
"2598367","630785","9","There's nothing wrong with allowing PUT to create resources. Just be aware that it means that the client provides the URL.","2010-04-07 07:47:32","50543"
"93946794","11828270","1","@Toni Why not use a printable single page cheat sheet? [Regular qwerty version](http://www.viemu.com/vi-vim-cheat-sheet.gif) and [dvorak](http://www.viemu.com/vi-vim-dvorak-cheat-sheet.gif).","2018-11-29 01:15:38","6253165"
"109993510","20846779","0","Could it be that `git clean -i` works only if called from the root of the working copy?","2020-06-04 10:43:46","15485"
"2605431","136138","115","Perhaps for the inheritance sake? Static methods can be inherited and overridden just like instance methods and class methods and the lookup works as expected (unlike in Java). Static methods are not really resolved statically whether called on the class or instance, so the only difference between class and static methods is the implicit first argument.","2010-04-08 01:32:26","95750"
"77706351","215731","1","@juzzlin Or use `@^` instead of `HEAD^`.","2017-07-28 11:53:28","5353461"
"62838379","11524251","34","Additionally, this only affects the display of the string - not the actual value. If it's in a form, e.g., the value will still be submitted as-is.","2016-06-07 01:26:31","1028259"
"31819773","38578","1","To say that outer join is a **union** may sound a little confusing when the result set of `A left outer join B` doesn't have the non-matching elements of B. Isn't it?","2014-01-15 04:35:08","1317244"
"110005713","932982","0","Would you not need to replace `!.gitignore` with `!/.gitignore` to make sure other .gitignore files that you could eventually find in the ignored folder subtree are also ignored?","2020-06-04 04:25:54","4949663"
"2615898","2251026","0","i noticed a possible ""quirk"" with developing py2exe apps in pydev+eclipse. i was able to tell that the main script was not detached because eclipse's output window was not terminating; even if the script executes to completion it is still waiting for returns. but, when i tried compiling to a py2exe executable, the expected behavior occurs (runs the processes as detached, then quits). i am not sure, but the executable name is not in the process list anymore. this works for all approaches (os.system(""start *""), os.spawnl with os.P_DETACH, subprocs, etc.)","2010-04-09 08:09:26","279468"
"62853621","671118","3","see also the answer at the following link http://stackoverflow.com/a/37683965/3762855","2016-06-07 07:59:49","3762855"
"93964714","1274447","1","@youhans: But I seem to have to run git commit to complete it.","2018-11-29 11:24:32","239628"
"2620972","2610497","388","Quick heads-up (not a solution, just a FYI): if I recall correctly, input[placeholder] just matches <input> tags that have a placeholder attribute, it doesn't match the placeholder attribute itself.","2010-04-09 07:58:34","245790"
"2620988","2610497","15","Yah, the thought crossed my mind that this may be like trying to style an element's ""title"" attribute. So +1 for thinking alike!","2010-04-09 08:01:09","160173"
"77721002","5036460","3","+0 for ""*and over 357 people voted that it's better*"" because we don't give votes for funny on SO. But +1 for good answer. And because it's funny. ;^) (I do get tired of ""looks like a typo"" complaints when it's a language feature. `~~` is a great truncate, but folks lodge the same complaint. But if it weren't there, someone'd invent it, you know? Learn the language, 357 people! It's fun.)","2017-07-28 06:01:47","1028230"
"77721261","8330107","0","Other than this function not answering the question, it's actually also overcomplicated. `s => s.split(' ').map(x => x[0].toUpperCase() + x.slice(1)).join(' ')`","2017-07-28 06:10:23","2164304"
"93978212","5189600","1","@Geynen Thanks, that link provide the **only** description that made full sense. Now I can even tell people that `<after-this-commit>`, means exactly that. It is **non-inclusive** and will let you *pick* and *squash* commits after that one, as long as none of them are an initial commit. If you want to include initial commit, you need to use the `git reset` method instead.","2018-11-30 11:15:27","1147688"
"16925670","59895","80","None of the current solutions work if there are any *newlines at the end of the directory name* - They will be stripped by the command substitution. To work around this you can append a non-newline character inside the command substitution - `DIR=""$( cd ""$( dirname ""${BASH_SOURCE[0]}"" )"" && pwd && echo x)""` - and remove it without a command substitution - `DIR=""${DIR%x}""`.","2012-09-24 12:15:09","96588"
"93980182","51274754","3","Please also explain what the `--continue` and vim `:x` does.","2018-11-30 12:20:31","1147688"
"47331535","52719","0","I think it is better to use git reset --hard if you don't want to keep track of changes","2015-04-12 05:25:06","402285"
"47331608","52719","12","@KarimSamir: The question specifically asks about changes that are *not in the index*. The `git reset` command will discard changes in the index too.","2015-04-12 05:28:48","893"
"16934916","12049323","38","I did that, but then I wasn't able to commit and push to the remote repository. I want a specific older commit to become HEAD...","2012-09-24 06:17:28","480522"
"62878102","34283281","12","@mwhite there is a difference between clone and deep-clone. This answer does in fact clone, but it doesn't deep-clone.","2016-06-08 12:08:03","1657476"
"2635483","1755737","32","Well, decrementing toward zero means you only have to compare against 0 per loop iteration, while iterating toward n means comparing with n each iteration.  The former tends to be easier (and on some architectures, is automatically tested after every data register operation).","2010-04-12 03:07:58","149391"
"93989040","51274754","1","The rebase will happen in blocks as it goes through the commits on your branch, after you ```git add``` the correct configuration in your files you use ```git rebase --continue``` to move to the next commit and start to merge.  ```:x``` is one command that will save the changes of the file when using vim see [this](http://vim.wikia.com/wiki/Saving_a_file)","2018-11-30 04:51:49","7848529"
"93991564","23886515","1","@AnttiHaapala The reason, I presume, is that the question's expected output starts at index 1 instead 0","2018-11-30 06:24:48","3479456"
"110035187","9158888","0","`SCRIPT=\`realpath $0\``","2020-06-05 01:19:24","797495"
"62898426","25861938","18","It is also possible to specify an exact range of versions, like `1.2.0 || >=1.2.2 <1.3.0`: Exactly 1.2.0, or everything from 1.2.2 to 1.3.0 (inclusive), but not 1.2.1, or 1.3.1 and above, and also not 1.1.x and below.","2016-06-08 08:30:59","2044940"
"62906610","20783081","1","Just after you execute ""git fetch origin"", it will show the output like this in your terminal - ""* [new branch]      branch_name -> origin/branch_name"", but when you run ""git branch"" it will show you only your local branches instead, so to see all the branches you can do ""git branch -a"" and then to switch to the remote branch you need to run "" git checkout --track origin/<branch you want to checkout>"". Hope this helps. :-)","2016-06-09 04:24:44","1776255"
"62911144","14586751","0","@yingted what do u mean by ""If you've dirtied your working tree since, git reset --merge ORIG_HEAD preserves those changes."" Did u mean changing the files after merging ? Anyway i did the merge and then did some of resolving conflicts. But then i wanted to reset the merge and did as instructed in this answer. Everything was ok and it has not preserved my changes done after the merge. My local repo is just similar to the position before I did the merge.","2016-06-09 07:23:09","2829676"
"62911786","67458","1","This is really a separate question; http://stackoverflow.com/questions/10067266/when-to-wrap-quotes-around-a-variable","2016-06-09 07:39:47","874188"
"62912948","394809","13","Wikipedia covers this thoroughly in the article ""[?:](https://en.wikipedia.org/wiki/%3F:#Python)"".","2016-06-09 08:11:03","1070480"
"77759068","80094","0","Re ""as opposed to alloc"": Do you mean ""as opposed to malloc""?","2017-07-30 11:19:36","63550"
"77759078","80094","0","How portable is `alloca`?","2017-07-30 11:20:14","63550"
"77759716","662783","0","How portable is `alloca`? For instance, does it work on Windows? Is it only for Unix-like operating systems?","2017-07-30 12:00:54","63550"
"77760222","45361888","0","What is OPP? Do you mean OOP ([object-oriented_programming](http://en.wikipedia.org/wiki/Object-oriented_programming))?","2017-07-30 12:34:40","63550"
"77760242","45361888","0","Do you mean to say that `malloc` is a kernel call?","2017-07-30 12:35:56","63550"
"77760506","39850612","0","Git reset without  Head uses the current staged files. Use git reset  head  to specified  a different commit. Like git reset Head~2 to go back to a previous  commits. 2 is number of commits","2017-07-30 12:53:47","1438103"
"110055463","231855","22","@MatthiasFripp ""This continues until the function runs off the end"" -- or it encounters a `return` statement. (`return` is permitted in a function containing `yield`, provided that it does not specify a return value.)","2020-06-06 06:03:41","13596037"
"110056097","1274447","0","I committed with a large file included. Then I realize it should be ignored, so I add it in .gitignore. I use `git rm --cache`, `git add` and `git commit` to commit again. But I found the .git directory is still large and when I push it to GitHub, it cost a long time and eventually failed. My question is how to remove the large file thoroughly (including the record in .git directory) so that I can push quickly.","2020-06-06 06:53:19","5722565"
"94016421","2389423","0","""git reset --hard ORIG_HEAD"" might actually NOT preserve your changes. Maybe better warn about that.","2018-12-01 11:47:39","6125982"
"47376488","9158888","4","The order of the operations in this answer is wrong. You need to _first_ resolve the symlink, _then_ do `dirname` because the last part of `$0` may be a symlink that points to a file that is not in the same directory as the symlink itself.

The solution described in this answer just gets the path of the directory where the symlink it stored, not the directory of the target.

Furthermore, this solution is missing quoting. It will not work if the path contains special characters.","2015-04-13 09:43:23","601203"
"16971437","9131633","13","`.hasClass('hide')` doesn't check if an ancestor of the parent is hidden (which would make it hidden too). You could possibly get this to work correctly by checking if `.closest('.hide').length > 0`, but why reinvent the wheel?","2012-09-25 11:57:15","803925"
"94019331","246128","1","Note: don't forget the `#!/bin/bash` at the top. `#!/bin/sh` won't work. You'll get a `Bad substitution` error.","2018-12-02 05:41:52","4561887"
"2674349","1845995","3","This method works as a means of getting around the ""can't hide the soft keyboard"" bug in 2.0 and 2.1 as described in http://code.google.com/p/android/issues/detail?id=7115 ... the hideSoftInputFromWindow method listed above did not work when I tried it, but editView.setInputType(0) did.","2010-04-17 05:50:54","73371"
"62931609","37274801","1","Downvoted because it doesn't help to quickly discard all files. The three dots indicate that you are required to list all the files. This is especially bad if you need to discard tons of files at once, eg. during a large merge after you have staged all the modifications you like to keep","2016-06-09 03:26:55","471213"
"77771878","10701801","0","I don't know if this is used out there, but for those who are worried that this technique won't work now that it is published, just add a second field that **must** be filled in (most likely by a JavaScript, such as copying an existing field *on submission if the field is empty*).  Then, you check for one field that must be empty, and one filled with your ""JavaScript Key"".  Without a human examining the code, this is virtually impossible for a bot to hack.","2017-07-30 11:38:59","1408137"
"77771964","29932630","2","Even intranets require a minimum amount of security in the building.  Sales has confidential profit and loss numbers, while engineering has confidential intellectual property.  Many companies restrict data across departmental or divisional lines.","2017-07-30 11:46:13","1408137"
"47383663","14260056","1","Like @SantanuDey , it didn't work for me. I got `fatal: Option -m cannot be combined with -c/-C/-F/--fixup.`","2015-04-14 05:22:17","38765"
"94028376","53580319","5","I’d recommend to use `fetch` instead of wrapping XMLHttpRequest. https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch","2018-12-02 05:01:02","218196"
"47390781","178344","9","This does answer the question, being the question is about a single element and by using the `hide()`, `show()` and `toggle()` functions, however, as most have already said, we should use the `:visible` and `:hidden` pseudo-classes.","2015-04-14 09:18:30","2160783"
"31898036","762011","6","See http://kangax.github.io/es5-compat-table/es6/ for an up to date support matrix of ES6 features (including let). At the time of writing Firefox, Chrome and IE11 all support it (although I believe FF's implementation is not quite standard).","2014-01-17 12:37:00","140293"
"16985568","59839","0","Minor note. In bash, help [, man test (as already noted) and info test (on ""Not UNIXes"") provide documentation.","2012-09-26 12:52:02","411902"
"16987727","11511035","5","It's easy enough to change the code above to mimic the (arguably stupid) jQuery behavior. . . . . function isRendered(o){if((o.nodeType!=1)||(o==document.body)){return true;}if(o.currentStyle&&o.currentStyle[""display""]!=""none""){return isRendered(o.parentNode);}else if(window.getComputedStyle){if(document.defaultView.getComputedStyle(o, null).getPropertyValue(""display"")!=""none""){return isRendered(o.parentNode);}}return false;}","2012-09-26 01:57:30","313969"
"62943573","25500568","6","I have a hard time understanding the _""(e.g. a Ubuntu container on a Centos host but it’s still Linux)""_ part of the containers.  The way I understand it, is that containers share the host kernel.  If I have a host VM running Linux kernel 4.6 for example, having several guest VM's running Linux kernels 2.4, 2.6, 3.2, 4.1 and 4.4.  If I execute commands specific to that kernel, I will get the guest kernel's behavior (and not the host).  But if my guest VM's are containers now, would the executed command be determined by the host kernel?","2016-06-09 09:06:13","88252"
"62944056","34757096","38","Wow, thanks for the great low-level explanation (and historical facts). I was looking for that and is not found above. What do you mean by _""you can run different distros of Linux because they do share the same kernel.""_?  Are you saying that a guest container must have the exact same Linux kernel version or that it doesn't matter?  If it doesn't matter what if I invoke an OS command on the guest but is only supported in the guest kernel. Or for example a bug fixed in the guest kernel but not in the host kernel.  All guests would manifest the bug, correct?  Even though the guests were patched.","2016-06-09 09:23:59","88252"
"94038650","50101887","2","This fails to point out the drawbacks, which are explained in much more detail in [PEP-324](https://www.python.org/dev/peps/pep-0324/). The documentation for `os.system` explicitly recommends avoiding it in favor of `subprocess`.","2018-12-03 05:02:26","874188"
"94038710","11644161","3","Indeed, the [`commands` documentation from Python 2.7](https://docs.python.org/2/library/commands.html) says it was deprecated in 2.6 and will be removed in 3.0.","2018-12-03 05:06:54","874188"
"94038788","89237","2","This should now point to `subprocess` as a slightly more versatile and portable solution. Running external commands is of course inherently unportable (you have to make sure the command is available on every architecture you need to support) and passing user input as an external command is inherently unsafe.","2018-12-03 05:11:39","874188"
"94038828","48548332","1","The basic warning is in the documentation but this question explains it in more detail: https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","2018-12-03 05:14:08","874188"
"94038929","39969619","0","The argument should properly be tokenized into a list, or you should explicitly pass in `shell=True`. In Python 3.x (where x > 3 I think) you can retrieve the output as a proper string with `universal_newlines=True` and you probably want to switch to `subproces.run()`","2018-12-03 05:22:16","874188"
"94038976","39447501","0","`os.popen` should not be recommended and perhaps even mentioned any longer. The `subpocess` example should pass the arguments as a list instead of joining them with spaces.","2018-12-03 05:25:03","874188"
"94039026","33118899","0","Better yet, avoid `Popen()` and use the higher-level API which is now collected into the single function `subprocess.run()`","2018-12-03 05:27:56","874188"
"94039076","31618111","0","This is no longer true, and probably wasn't when this answer was posted. You should prefer `subprocess.check_call()` and friends unless you absolutely need the lower-level control of the more-complex `Popen()`. In recent Python versions, the go-to workhorse is `subprocess.run()`","2018-12-03 05:30:27","874188"
"94039191","89304","3","While I agree with the overall recommendation, `subprocess` does not remove all of the security problems, and has some pesky issues of its own.","2018-12-03 05:36:59","874188"
"94039263","95246","8","This answer was fine for its time, but we should no longer recommend `Popen` for simple tasks. This also needlessly specifies `shell=True`. Try one of the `subprocess.run()` answers.","2018-12-03 05:39:55","874188"
"94039329","40824514","1","`ts` is not standard on any distro I know of, though the pointer to `at` is mildly useful. You should probably also mention `batch`. As elsewhere, the `os.system()` recommendation should probably at least mention that `subprocess` is its recommended replacement.","2018-12-03 05:43:45","874188"
"94039444","38477871","0","You should not recommend `os.popen()` in 2016. The Awk script could easily be replaced with native Python code.","2018-12-03 05:49:21","874188"
"94039494","36913076","1","This incompletely reimplements something like `subprocess.run()`. You should particularly avoid `shell=True` when it's not strictly necessary.","2018-12-03 05:51:46","874188"
"2688083","2669690","48","I believe that your first impression is correct. If you start looking for code and try to trim the input stream depending on the source, you'd reconsider and do it the safe (and because of Google's actions, easier) way.","2010-04-19 06:04:25","34813"
"94039654","92395","12","This is arguably the wrong way around. Most people only need `subprocess.run()` or its older siblings `subprocess.check_call()` et al. For cases where these do not suffice, see `subprocess.Popen()`. `os.popen()` should perhaps not be mentioned at all, or come even after ""hack your own fork/exec/spawn code"".","2018-12-03 06:00:46","874188"
"77789693","10568273","0","I used this, too, but I've never encountered `display: table;` before. What does it do?","2017-07-31 11:25:46","1939638"
"94040998","11766839","1","@RoniAxelrad REST PUT to an ID that doesn't exist is a request to the server to create a resource. It's still up to the server to decide if it wants to allow that. The server is in charge. It can respond with ""No. I'm not going to do that"". You already do that if the user doesn't have enough permissions...etc. It's okay for the server to say ""No"". REST is a convention that lets us define the meaning of various types of request ... your server decides what to do with those requests based on your business logic :) Even if it says ""no"" it's still following REST :)","2018-12-03 07:03:30","23963"
"77796842","348234","16","You actually **can recover overwriten previously staged but uncommited changes** but not in a userfriendly way and not 100% secure (at least none I had found): goto .git/objects, search for files created at the time of `git add` you want to recover (`61/3AF3...` -> object id `613AF3...`), then `git cat-file -p <object-id>` (might be worth it to recover several hours of work but also a lesson to commit more often...)","2017-07-31 02:03:25","1311571"
"17000079","11511035","4","Sure, I was just adding that for the benefit of users who used this without scanning its code. :)","2012-09-26 09:33:20","31671"
"17001477","67699","6","Maybe just copy the entire folder the old fashioned way? `scp some_user@example.com:/home/some_user/project_folder ~` Not sure if that solution works for github though..","2012-09-26 10:51:07","882146"
"94053837","21890252","0","As a git n00b, this absolutely ticked the box.","2018-12-03 02:23:33","233653"
"77806270","952946","13","this is a very inefficient way because of the quadratic aspect of the sum.","2017-07-31 06:04:59","6451573"
"62964605","33132462","15","I have a problem with the picture above, because Hypervisor can be installed on bare metal/infrastructure but Docket cannot  (yet)","2016-06-10 11:50:17","437559"
"77809319","8212184","0","@MykhayloAdamovych see how Swift does it, which is how many others did before. If Java simply didn't have null, you'd have no way to store a null into a field/variable; to handle the case where it's optional, you'd have to have an Optional<T>. And you ask - what would that gain? Wouldn't you need as many checks? No, you wouldn't, because the compiler would ensure that every non-Optional was never null, and more than half our checks are with objects that never should be null and never are, or if they are then that's a bug that would either be caught by the compiler or exposed by the interface.","2017-07-31 07:39:14","734860"
"17009864","11165917","0","is there some trick to making the keyboad auto close in this method? it's not doing so on jellybean. the edittext loses focus, but the keyboard doesn't hide.","2012-09-27 08:26:51","930250"
"94062158","89237","2","Note the timestamp on this guy: the ""correct"" answer has 40x the votes and is answer #1.","2018-12-03 06:41:52","3926"
"110104002","16956810","0","grep -nri ""stringstrings""  /path/","2020-06-08 05:35:33","6373817"
"94063981","51049029","3","would be nice to see the final result, e.g., `git log`","2018-12-03 07:44:46","6750631"
"110107357","29847192","2","@AdiPrasetyo can you elaborate what you are trying to say/ask?","2020-06-08 07:56:06","3568378"
"110111762","3406317","0","why is it so bad","2020-06-08 10:23:47","10105517"
"62977648","33132462","0","@reza, I agree Hypervisor can be installed on Bare metal, but the point is Docker is recommended for containerization of apps and how to limit or avoid the virtualization which is not needed/applicable for some scenarios. Ken Cochrane explains this more in detail http://stackoverflow.com/a/16048358/2478933","2016-06-10 05:32:21","2478933"
"77827605","42193447","0","I don't see these `Overview`, `Yours`, `Active`, `State` and `All branches` tab on GitHub website. Looks like this is an old snapshot. Under the `Code` tab, I see sub-tabs like commits, branches, releases and contributors. When I am the owner of a repository then I see an additional tab named MIT.","2017-08-01 09:00:06","465053"
"94078666","89255","12","This is incorrect: ""**it does shell escaping for you and is therefore much safer**"". subprocess doesn't do shell escaping, subprocess doesn't pass your command through the shell, so there's no need to shell escape.","2018-12-04 08:36:35","309412"
"17029174","11593797","2","this also works with jgit. the :tag shorthand does not work with jgit","2012-09-27 07:50:19","563420"
"62989769","79923","15","https://www.youtube.com/watch?v=clOUdVDDzIM&spfreload=5","2016-06-11 05:42:54","1514776"
"94084782","215731","1","Incorrect answer, this does not REVERT. This only changes the file so the contents are the exact same as the commit you give it, you have to commit again for this to actually be implemented.","2018-12-04 11:30:46","1137669"
"110134239","57880896","1","@bob 2.23 https://github.com/git/git/blob/master/Documentation/RelNotes/2.23.0.txt","2020-06-08 11:13:25","4414935"
"110134904","231855","1","@alaniwi: good point. I guess that's pretty much what happens when the function runs out on its own too.","2020-06-09 12:03:13","3830997"
"77852428","114549","1","Because ""input"" is inline element and must be centered by ""text-align: center"".","2017-08-01 07:02:34","682256"
"77854832","29064398","3","This answer seems to be inconsistent, since in the next post on the referenced thread, Linus Torvald says he expects that they will need to add directory tracking: http://markmail.org/message/libip4vpvvxhyqbl .  In fact, he says he ""would welcome patches that [add support for tracking empty directories]""","2017-08-01 08:12:03","1035398"
"110151523","55118707","0","With `GitLab Enterprise Edition 12.8.6-ee` it just randomly took a commit message for the squashed commit...","2020-06-09 12:23:13","2074869"
"17053079","292359","115","Note to people learning Git: `pull` can't actually be emulated by a `fetch` plus a `merge`. I just fetched a change where only a remote branch pointer changes, and `merge` refuses to do anything. `pull`, on the other hand, fast-forwards my tracking branch.","2012-09-28 04:23:00","33080"
"31970669","20339458","0","This worked for me and am not sure why it isn't the answer. Can someone explain what is wrong with this?","2014-01-20 04:26:36","985690"
"77868322","244777","2","Comments are not permitted because it's too late to support comments. Major oversight. Ironically, YAML supports comments.","2017-08-02 07:08:02","241296"
"94107701","46692810","0","same as me, block 1 is the lowest!","2018-12-05 01:08:58","741395"
"77888759","178386","4","@vbullinger any processing that takes more than 16ms starts dropping FPS. So yes, if it takes 42ms it can be a bad deal if you're interested in performance.","2017-08-02 02:45:06","425741"
"77890692","39767073","0","You might want to clarify your last sentence. My first reaction to ""passing the values only and not pointers..."" is that your Java implementation probably does *exactly that*, passes a pointer. The fact that you cannot dereference that pointer seems irrelevant.","2017-08-02 03:25:39","369604"
"77891412","37669835","1","This answer only helps for those coming from C++ background who are willing to define ""reference"" the way you have, according to C++'s definition. That is not always the case.","2017-08-02 03:41:04","369604"
"77893982","21232996","5","@Federico @akronymn Where can one find the dangers of doing `git  push --all -u`?","2017-08-02 04:46:51","1823664"
"94138010","47314733","1","concise and clean. nice:)","2018-12-05 07:14:07","927333"
"63042179","417184","12","Today IE11 cuts my URL to 2048 chars.","2016-06-13 11:04:32","4000826"
"32002576","114549","0","@Zhanger FYI: `<div style=""display: table;"">stuff</div>` is the same as `<table>stuff</table>`. Assigning the display that way just tells the browser to render the element as a table.","2014-01-20 09:01:29","900807"
"32006211","2334741","1","How do I use an alias in set? update table set a.col1 = b.col2 from table a inner join table2 b on a.id = b.id; Instead I have to use update table set table.col1 = b.col2 from table a inner join table2 b on a.id = b.id;","2014-01-20 11:08:49","235310"
"63051549","12184274","0","I suspect this works where the others don't perhaps because in my case I deleted not just files but also folders.","2016-06-13 02:45:42","3774582"
"47475928","3925191","1","There is such a method in Apache commons-lang: `ObjectUtils.defaultIfNull()`. There is one more general: `ObjectUtils.firstNonNull()`, which can be used to implement a degrading strategy: `firstNonNull(bestChoice, secondBest, thirdBest, fallBack);`","2015-04-16 08:04:31","106350"
"17101664","244858","30","BTW, the json library for Java [google-gson](http://code.google.com/p/google-gson/) has support for comments.","2012-10-01 12:21:44","411846"
"17104697","2866221","176","Why do you post answer including jQuery if the question is not about jQuery at all?","2012-10-01 02:10:49","1317651"
"77909369","24743196","0","Yes, they take the same amount of time since they both tests the whole text.","2017-08-03 03:50:51","726650"
"2797945","2765467","2","William's script I linked to does about the same with the additional option to delete remote branches and some safeguards, too","2010-05-04 01:07:48","321973"
"2797992","2765467","2",">to push the local branch to remote repo (publish), but make it >trackable so git pull and git push will work immediately.

its what github does automatically when you push your code to their repository :-)","2010-05-04 01:14:27","18642"
"2798005","2765467","2","This does not respond to the question, the <newbranch> of the original repo is not trackable (and is renamed as <master> is the new repo you clone in step 3).","2010-05-04 01:16:20","118606"
"2798051","2765461","1","this assumes I have ruby installed. no such luck. any other ideas?","2010-05-04 01:20:16","222187"
"2798065","2765467","2","seems kind of overkill. does the `git remote add origin` make the local branch trackable? is that the key command here?","2010-05-04 01:21:34","222187"
"2798103","2765467","4","@Roni Yaniv: no `git remote add origin` only register a new remote repository. It is just a step needed before pushing your branch to that remote repository (if you don't want to type the whole address each time)","2010-05-04 01:25:36","118606"
"2798133","2765467","1","well - we already have a remote repo (origin). i need a way to add a new local branch to that repo while making it trackable+pushable+pullable in the process.","2010-05-04 01:28:33","222187"
"2798166","2765461","2","the ruby script calls `git push` and `git config` command. I used the code of the script to edit my answer. You might used this information to create a small shell script that does the puslishing for you.","2010-05-04 01:31:52","118606"
"17117338","1628584","56","To take some of the risk out of resetting master back to the wrong commit, this one sets the branch back more precisely. ""git reset --hard 1a0c9b"", where ""1a0c9b"" is the start of the commit hash you wish to get back to.","2012-10-01 11:12:33","85146"
"17117618","426276","18","@TylerCrompton - Of course, its not entirely about performance, but doing `$(element).prop('checked')` is a complete waste of typing.  `element.checked` exists and should be used in the cases where you already have `element`","2012-10-01 11:35:23","91914"
"2807421","679937","44","Shouldnt true and false be reversed in this function?","2010-05-05 01:46:06","221389"
"2808440","2079545","5","The result is only undefined when you're incrementing/decrementing the same variable more than once in the same statement. It doesn't apply to this situation.","2010-05-05 03:30:19","390876"
"110237486","6581949","0","@3rdi It's not really a proper tree, as there is no true root. There is no type that has no metaclass; the metaclass of `type` is `type`. It's this loop in the graph that prevents it from being a tree, and the prevents `type` from being defined in Python itself. It has to be provided by the implementation.","2020-06-11 05:52:51","1126841"
"32030517","426273","12","This answer is out-of-date because it uses `.attr` instead of `.prop`.","2014-01-21 02:15:55","901048"
"32030541","3533701","5","This answer is out-of-date because it uses `.attr` instead of `.prop`.","2014-01-21 02:16:16","901048"
"32030559","426314","5","This answer is out-of-date because it uses `.attr` instead of `.prop`.","2014-01-21 02:16:39","901048"
"77928408","45361888","0","1) yes, sorry.. OOP... 2) malloc: I write shortly, sorry ... malloc is in user space.. but can trigger down other calls.... the point is that using heap CAN be very slow...","2017-08-03 12:18:19","927333"
"32030632","6465220","2","This answer is out-of-date because it uses `.attr` instead of `.prop`.","2014-01-21 02:18:19","901048"
"32030657","7886844","4","This answer is out-of-date because it uses `.attr` instead of `.prop`.","2014-01-21 02:18:56","901048"
"32030696","16685836","2","This is irrelevant, since all the (correct) answers use `.prop('checked',true)`.","2014-01-21 02:19:37","901048"
"32030748","17024867","2","This answer is out-of-date because it uses `.attr` instead of `.prop`.","2014-01-21 02:20:34","901048"
"32030762","5407529","0","@Blazemonger do you mean you use .prop rather than .attr ?","2014-01-21 02:20:57","234670"
"32030776","16519172","2","This answer is out-of-date because it uses `.attr` instead of `.prop`.","2014-01-21 02:21:15","901048"
"32030968","5407529","0","Your answer promised a new up-to-date solution, which you never provided. `.attr` has been the *wrong* approach to this problem for more than two years now.","2014-01-21 02:25:35","901048"
"32031164","5407529","0","I did post a corrected answer at the time but that was 4 years ago dude.  I don't go around updating all my posts and I'm sure most people don't. You down vote was for a post 4 years old saying it's out of date, well duh","2014-01-21 02:29:48","234670"
"77933690","43421561","0","Sorry, I just meant that what you're doing to delete remote tags, works with deleting local tags, providing the entire list at once. :)

Just instead of git push origin :tag1 :tag2 etc. you'd do git tag --delete tag1 tag2 tag3 that way you can have a total cleanup.

Again, thanks a ton!","2017-08-03 02:00:13","27555"
"77935564","100146","17","`class A(type):pass<NEWLINE>class B(type,metaclass=A):pass<NEWLINE>b.__class__ = b`","2017-08-03 02:34:29","3750257"
"2817815","679937","36","@namtax: no - the function is named `isEmpty()`, so it should return `false` if it has a property","2010-05-06 04:31:10","48015"
"63084196","52719","0","How can we the same using Source Tree.?","2016-06-14 10:58:34","2594329"
"77936026","6581949","0","""type is actually its own metaclass. This is not something you could reproduce in pure Python, and is done by cheating a little bit at the implementation level."" is not true. `__class__` is writable in Python, so one can create a subclass of type with a custom metaclass, and then set its class to itself.","2017-08-03 02:42:37","3750257"
"110249335","419185","0","Then, how does this relate to `__main__.py`.","2020-06-12 04:19:23","10336496"
"110254720","60785420","2","Love this solution, because you do not have to rewrite the git commit title/description.","2020-06-12 08:34:57","1924194"
"32045908","16685836","0","Not sure I understood your comment.This still exists in jQuery documentation. Are you implying there is no memory leak in IE < 9 ?","2014-01-21 08:53:17","2160798"
"32046024","16685836","2","There is no memory leak in this case, since we *are* setting it to a simple primitive value (Boolean).","2014-01-21 08:56:35","901048"
"2831298","2386013","127","`@NotNull`, `@Nullable` and other nullness annotations are part of [JSR 305](http://jcp.org/en/jsr/detail?id=305). You can also use them to detect potential problems with tools like [FindBugs](http://findbugs.sourceforge.net/).","2010-05-08 04:33:58","271075"
"63103157","35374073","6","with your solution, invoking the script like `./script.sh` shows `.` instead of the full directory path","2016-06-14 06:27:08","1704104"
"47528360","25545360","2","It is important to note that the image is a *Venn diagram* even though it doesn't look like a typical one.   I've seen people try to interpret it as ""parts of the URL"".   This diagram does *not* say that URIs start with a URL and end with a URN.","2015-04-17 10:03:57","1145388"
"47528511","2840452","2","This answer is wrong.   A URI is not a portion of the URL.   Rather URLs are a type of URI.   Furthermore, the link in this answer is broken (and I can not find a suitable replacement.)","2015-04-17 10:07:50","1145388"
"47528627","176269","0","It is only true that they are the same thing because the definition of URL has changed over time.   URLs used to be a specific type of URI, but because of the confusion that caused, the W3C redefined URL to mean URI.","2015-04-17 10:11:02","1145388"
"110279298","59787784","7","For completeness, I edited your jsperf to test `obj = {a:1,b:2,c:3}` and `for(var i in obj)` is still the fastest https://jsperf.com/object-empty-ch/2","2020-06-13 12:08:58","3163120"
"77949858","29064398","0","Patrick, he also uses the word ""idiotic"" there. I suspect his wording adresses the people here in this thread and so I assume he will not implement something ""idiotic"" into Git by himself.","2017-08-03 08:38:31","2334883"
"63109244","136246","1","One possible downside of a metaclass for this that immediately occurs to me is that you can't call the classmethod directly on an instance. `c = C(); c.foo()` raises AttributeError, you'd have to do `type(c).foo()`. This might also be considered a feature - I can't think of why you'd want to though.","2016-06-14 09:57:46","541136"
"94208779","27458534","0","@GitGud I'd contest that the Venn diagrams, while incomplete, supplement this answer for me. Like what was said earlier, people have different learning styles.","2018-12-07 07:12:14","614905"
"17173171","7542639","1","Confirmed! Tried a git reset after a git add . and git was complaining about corrupt HEAD. Following your advice, I could git add & reset back and forth with no problems :)","2012-10-03 09:32:16","635998"
"94215704","7074","12","@Sangeeta What are you saying? The `System.String` class is still there, and the `string` keyword is still an alias for it. Just like `System.Int32` and `int`. They are literally the same thing.","2018-12-08 02:14:44","618649"
"94215971","215304","13","@Nyerguds There are two reasons to simply not worry about it. One is that `int` is defined in the C# language spec as a 32 bit integer regardless of the hardware. C#, despite a shared heritage in the mists of time, is not actually C. Changing `int` to a 64 bit integer would be a breaking change in the specification and the language. It would also require redefining `long`, as `long` is currently the 64 bit integer. The other reason not to worry is irrelevant since the types will never change, but .NET is just abstract enough that 99% of the time you don't have to think about it anyway. ;-)","2018-12-08 02:47:06","618649"
"94218702","37613351","0","I think this answers the question too, but for example statelessness is missing from it. Every constraint is important... The standard media type part is not always true. I mean there are layers of understanding. For example if you use RDF, then the media type can be understood, but the meaning of the content not. So the client needs to know the vocabulary as well. Some people are experimenting with this kind of REST APIs and a general REST vocab to describe hyperlinks, etc. http://www.hydra-cg.com/","2018-12-08 08:08:31","607033"
"47544432","52719","166","git checkout -- . is much faster","2015-04-17 04:16:33","108478"
"110308028","59948384","1","Your code remove all elements after index. For remove 1 element at index 3 you can use Array.splice(index, 1).","2020-06-14 09:47:06","2214789"
"63121427","37669835","0","Is there an issue in your c++ version where your risking a segfault when `Foo(99)` goes out of scope but you reference it in your main method?","2016-06-15 08:14:00","2067492"
"94224804","43551285","3","This requires that you fetch each branch one at a time. Not very good if you have a lot of branches.","2018-12-08 03:37:24","3625433"
"94224856","67716","0","Have a look at the answer I posted as well. This might be helpful if you know you'll want to be working locally on many of the remote branches and not have to check them out one by one.","2018-12-08 03:39:56","3625433"
"94224898","4414131","0","See answer I posted further down to avoid having to run this script at all.","2018-12-08 03:41:48","3625433"
"94234283","215304","8","@Craig I dig into lots of old proprietary game formats where I _do_ have to think about that all the time, though. And then using `Int16`, `Int32` and `Int64` is a _lot_ more transparent in the code than using the rather nondescriptive `short`, `int` and `long`","2018-12-09 02:29:47","395685"
"94235872","22654961","1","I agree, very simple. And again as @Dženan said in previous answer don't forget to do `git push origin master --force` do save the changes remotely too.","2018-12-09 06:01:39","628659"
"63131411","35022676","15","Use a button, not a span. Buttons naturally fall in the focus order so can be accessed without a mouse / trackpad / etc.","2016-06-15 12:12:48","19068"
"17193278","180085","5","Also, `$parent_of_flawed_commit` means ""commit before the one you screwed up"" :)","2012-10-04 02:44:14","224707"
"110323413","7770473","0","I suggest you put this into a function","2020-06-14 11:16:47","11741338"
"47561911","161813","4","You can configure a merge tool (kdiff3 http://jebaird.com/2013/07/08/setting-up-kdiff3-as-the-default-merge-tool-for-git-on-windows.html) and then use git mergetool.  When you're working in large developer teams you'll always encounter merge conflicts.","2015-04-18 05:37:12","4351860"
"110336605","1628563","0","Side-comment: The question is about a very simple case. Reading the answers and all the ""don't do this because..."" and ""a better solution is..."" and ""warning with version n+..."" just after the answers (possibly when it's too late), it seems to me even very simple operations have no straight solutions in git. A graphical version manager where you would just add a tag for the new branch without dealing with what seems to me obscure and archaic syntax would be such a relief. My kingdom and my gold badges to the first one who ""forks"" git and starts a new approach ;-) it's urgent.","2020-06-15 10:57:05","774575"
"47578008","10366981","8","There is no need to escape ""Null"" with CDATA, there is no such thing as a null keyword in XML.","2015-04-18 07:20:04","13189"
"47578521","10366981","6","Agree with @eckes. I don't understand why there is all this talk of CDATA. CDATA is only useful to escape characters that have special meaning in XML. none of: `n`, `u`, `l` have special semantics in XML. ""NULL"" and ""<![CDATA[NULL]]>"" are identical to an XML parser.","2015-04-18 07:46:53","29729"
"2886188","487292","7","incorrect! for example  

O(n): If I double the input size the runtime will multiply to finite non zero constant. I mean O(n) = O(n + n)","2010-05-16 11:33:33","296494"
"47583385","1288121","8","It will never print ""No"". Current directory always exists, unless deleted by another thread or other ways.","2015-04-19 12:49:50","3744681"
"78005612","13575102","1","This is **absolutely the best answer**, except that [@FedericoCapaldo gave an answer](https://stackoverflow.com/a/34122093/5088075) that goes into a little more detail about exactly what these commands are doing.","2017-08-05 01:59:59","5088075"
"110348299","62338887","1","**N.B.** _""The names within an object SHOULD be unique.""_ (Source: [IETF JSON Spec, December 2017](https://tools.ietf.org/html/rfc8259#section-4)","2020-06-15 04:54:52","3897775"
"47594707","52713","7","@alexykot: you have to specify a path with `git checkout` otherwise it will not kill changes you made! The trick with `.` is that a checkout with path also includes all subdirectories.","2015-04-19 01:46:29","825924"
"47594966","23707009","3","This would discard changes in the index!! (And the OP requires to leave them as is.)","2015-04-19 01:59:37","825924"
"110356022","62338887","1","SHOULD means something different to MUST in a spec.  The other answers with comments will break every JSON parser out there.  I'd be interested to know if duplicate keys has any bad side effects anywhere.","2020-06-15 09:56:37","333988"
"110356526","62338887","0","My point (merely) was not that the names within an object MUST be unique, simply that they SHOULD be unique. After scouring Stack Overflow (and the wider web) for over a day, [I have done my best to come up with my own approach](https://stackoverflow.com/questions/62387123/whats-the-established-approach-for-adding-comments-as-data-to-json-that-can-sur/62397897#62397897).","2020-06-15 10:21:11","3897775"
"110357105","62338887","1","Ahh, that's an interesting approach...  It requires custom logic to parse, and it moves the comments away from the thing it's describing... ?","2020-06-15 10:57:27","333988"
"110357165","62338887","1","It requires a custom-written reader if you want to see the comments in the right place. Otherwise (ie. normally) there is simply a block of comments at the bottom of the JSON, at root level, with a reserved name, which can be safely ignored and left alone.","2020-06-15 11:00:10","3897775"
"2911377","373834","1","@Bombe: Thank you for the information. I had checked out an old version of a file. After reading your comment, I was able to use ""gitref"" to lookup the partial SHA1 hash, and use ""checkout"" to get back to the most recent version. Other git users might find this information helpful.","2010-05-19 02:53:18","249487"
"110368577","38764000","0","@Georgy makes sense, on python 3.7 enumerate is total winner :)","2020-06-16 09:22:51","2067976"
"32127480","16521953","0","destroy( [1,2,3,3,3,4,5], 3 ) returns [1,2,3,4,5]]. i should not be incremented when the array is spliced.","2014-01-23 05:34:08","58276"
"110371395","1628584","0","Once you've removed the commits from `master` you can switch to the last branch using `git checkout -`","2020-06-16 10:56:47","4315310"
"32136679","14419556","0","`If each sock had an integer called ""PairID"" one could easily distribute them into 10 buckets according to […] the last digit` My first thought was to buy a big blacklight (pun not intended), and make markings on all the socks with that dye that can only be seen under ultraviolet light, such that any two socks with the same marking match.","2014-01-23 09:58:54","1561811"
"63183509","37669835","0","Indeed. Ah comes from using java for 10 years. But the idea still holds. And I fixed it now.","2016-06-16 03:16:59","1195605"
"63188845","37669835","0","I think the previous was better because it would compile. I was just curious about the behavior, sorry about that.","2016-06-16 05:41:25","2067492"
"94315772","1953622","1","Although this is obviously helpful to many, it would have been better if a code snippet was added.","2018-12-11 07:27:31","1965774"
"17278229","8024330","4","is there any meaning of the name `CTE` ?","2012-10-08 12:48:00","188331"
"17278699","8024330","21","@ShivanRaptor - It is the acronym for [Common Table Expression](http://msdn.microsoft.com/en-us/library/ms190766(v=sql.105).aspx). Just an arbitrary alias in this case.","2012-10-08 01:05:15","73226"
"63210422","7589612","4","After a rebase attempt which resulted in a merge conflict:
$ git log --merge -p build.xml
output: 
fatal: --merge without MERGE_HEAD?","2016-06-17 09:15:07","482828"
"63211378","25887881","0","for Chrome 50.0, A.splice(-1, 1); will remove the last one in A.","2016-06-17 09:38:40","1230329"
"63218790","37864649","8","what is the difference between this answer and the first ?","2016-06-17 12:47:04","2822643"
"78057915","38047510","4","iOS isn't a browser in and of itself.  Was this in Safari for iOS?","2017-08-07 02:21:14","584940"
"78058481","38047510","7","@Randall schemes are handled by the OS and then dispatched to the app that can open them. So all apps on iOS, including Safari, can handle long URI.","2017-08-07 02:35:15","1033581"
"78060119","38047510","2","Thanks for the clarification.  Presumably, though, this doesn't prevent an arbitrary app (say, eg, a Tor-powered browser) from introducing its own length restriction, correct?","2017-08-07 03:13:59","584940"
"32206017","477578","0","@JensRoland Great post, thank you. If my site doesn't have any state it wants to keep in the session cookie for example, then do my session cookie and persistent cookie basically each only contain distinct large random strings (and username for the persistent)?","2014-01-26 03:05:04","29502"
"2964449","1730172","60","Don’t forget about `ondragstart`!","2010-05-26 01:25:39","96656"
"32210779","477578","1","@Newtang: The persistent cookie should always be a large random string (and optionally a username for convenience). The session cookie is usually set by your web/MVC framework (ASP.NET_SessionId, PHPSESSID, ci_session, JSESSIONID) and should contain just the session identifier (another large random string). If you want to keep additional state about the session, that state should normally be stored server-side, with the session identifier used as a primary key.","2014-01-26 09:56:06","57068"
"110424014","30138655","0","lol i'm sorry I downvoted this answer yesterday by mistake and now I can't change it ;_; here's 10 robot parts for apologies <3","2020-06-17 07:47:45","1858845"
"32214515","20339458","14","@DaveWalley though works there are 2 good reasons why this is not a good answer. 1st the question was for a CSS solution and this is a pure HTML solution. 2nd [the CENTER tag was already deprecated in HTML 4](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/center)","2014-01-26 01:42:51","2992452"
"2969634","273192","36","In general you might need to account for the case where there's no directory in the filename.  On my machine dirname('foo.txt') gives '', which doesn't exist and causes makedirs() to fail.","2010-05-26 11:30:21","112699"
"63237171","38578","0","Here is the correct statement for intersection/union of *circles/sets* A & B in terms of *tables* A & B. Circle A = A LEFT JOIN B ON *condition*. Circle B = (A RIGHT JOIN B ON *condition*). (A FULL OUTER JOIN B on *condition) = Circle A UNION Circle B. (A INNER JOIN B ON *condition*) = Circle A INTERSECT Circle B. Circle A MINUS Circle B = (A rows not matched by A JOIN B extended by NULLs). Circle B MINUS Circle A = (B rows not matched by A JOIN B extended by NULLs). See my comment (the first) on the question.","2016-06-17 10:44:05","3404097"
"110453958","62338887","0","When would you *not* want to see the comments in the right place?!","2020-06-18 04:35:11","333988"
"110454002","62338887","0","Hey - I think we have a misunderstanding.  I don't care about reading the comments in a parsed JSON object in Javascript.  I want to 1) be able to read meaningful comments when I'm *editing the source* (ie NOT at runtime), and 2) I don't comments in my JSON to break standards compliant parsers.","2020-06-18 04:36:47","333988"
"110456994","62338887","0","I've explained it badly. In the approach I've envisaged, comments are completely absent in any object parsed from the JSON. The comments are, nevertheless visible, in the right place, in a custom-reader (reader / writer / editor) in which you can read, write and edit the JSON file. (And in a non-custom reader, they sit in a block at the bottom of the JSON, out of the way of all of the data).","2020-06-18 06:12:40","3897775"
"78100460","215718","6","I found your question when I googled mine. But after I read the solution, I checked my log and found out, that I made thouse changes as a standalone commit, so I made git revert for that commit, and everything else stayed as I wanted it. Not a solution, just another way to do it sometimes.","2017-08-08 02:08:27","8434714"
"110464562","29650705","0","To explain the steps: 1 = switch to branch *locally*, 2 = 'move' i.e. 'rename' branch locally (`-m`), 3 = push 'nothing' to the old branch destination on the remote (i.e. delete the reference to the branch on the remote) - left side of a colon is 'source', right side is 'destination', 4 = push a reference (pointer) to the new branch, to the remote","2020-06-18 11:48:59","1549918"
"110464618","29650705","2","@Milind Anantwar, what does it mean to ""check that the new branch is pointing to it's own ref""? And could you please explain how `git branch --unset-upstream` resolves the unsynchronised condition(s) to which you're referring?","2020-06-18 11:52:45","1549918"
"110467982","2003505","2","@GabrielStaples Without context, your comment is confusing.  Are the ""best"" rated answers wrong somehow?","2020-06-19 04:32:12","6565511"
"32244503","21380648","15","What is the name of tool? I find it is interesting as it shows number of rows and venn-diagrams","2014-01-27 12:23:03","1673391"
"32244789","21380648","2","@GrijeshChauhan Yeah But you can Try to run it using [wine](http://www.winehq.org/) .","2014-01-27 12:30:38","2224265"
"32244884","21380648","2","Ohh! yes I ..I used SQLyog using wine.. there is also [PlayOnLinux](http://www.playonlinux.com/en/)","2014-01-27 12:32:59","1673391"
"78109073","16095649","0","Hey, I kinda understood your answer. But since i'm new to github merge conflicts, I think there is something missing. What happens to your local modifications when you do `git checkout master` and  `git fetch`   and  `git rebase --hard origin/master`","2017-08-08 05:43:36","1778674"
"78109186","43333425","2","Note that there's no ned to resort to echo.  Simply invoking `dirname` will print the directory name.  And, in this case, invoking echo without properly quoting the variable will potentially produce different output, since it will squash whitespace.  Overall, cleaner to simply write `dirname ""$(realpath ""$0"")""`","2017-08-08 05:46:55","140750"
"78109202","16095649","0","I believe you should add more details on what to do. Another example which is confusing me, you mentioned in your answer: we do `git add .`, will it save our local modifications so we can follow up with `git checkout master` ? or are they two different scenarios ?","2017-08-08 05:47:14","1778674"
"2999500","180085","28","This is mentioned in one of the other answers but I will put a note of it here. Since git 1.6.6 you can use `reword` in place of `pick` to edit the log message.","2010-05-31 01:27:57","124861"
"78111747","43333425","0","You are correct that this can be compressed into a single line.  The breakdown into separate variables is for illustrative / self documenting purposes.  The echo line is just there as p.o.c.","2017-08-08 07:05:21","3220983"
"94388740","46246576","0","Several quotes, but not a single source mentioned. Where did you get this?","2018-12-13 07:02:30","4720018"
"17353642","1342312","1","Would this be considered monkey patching?  lol   Some people like that.","2012-10-10 08:36:26","59202"
"3009058","105617","2","That enumerates a string, don't forget to convert those things back to an enumeration value so the enumeration can be enumerated.","2010-06-01 05:46:51","12597"
"47698166","8512410","0","In term of SEO I would prefer this way. Using as many friendly URL shall definitely improve page value factor.","2015-04-21 10:18:27","4058484"
"78124651","394814","0","@MrGeek, you could group the boolean expressions.
""foo"" if (bool or bool && bool or etc) else ""bar""","2017-08-09 06:08:33","2518518"
"110491346","43134553","0","I would add ""where T : struct, Enum"" to restrict the method to enums. Like this         
public static IEnumerable<T> ObtenerValores<T>() where T : struct, Enum => Enum.GetValues(typeof(T)).Cast<T>();","2020-06-19 07:00:19","8330412"
"32280242","2680681","1","-a is identical in effect to -e. It has been ""deprecated,"" and its use is discouraged.","2014-01-28 08:39:49","1919382"
"78131735","394814","0","@Dimesio I meant something like if (c1) a1 elif (c2) a2 elif ... else a(n).","2017-08-09 09:17:55","6275103"
"3035651","105617","1","I see from your edit that you want to actually operate on the enums themselves, the above code addressed your original post.","2010-06-04 03:22:08","19308"
"63311672","901712","27","Since jQuery selectors return array, you can use `$('#isAgeSelected')[0].checked`","2016-06-20 07:36:34","1805077"
"63320553","2590281","2","@crush: Why isn't PATCH a realistic option for at least a few years?","2016-06-21 03:58:59","2577088"
"3045424","292359","209","@Albert: Yeah, it's weirdly worded.  `git pull` will always merge into the **current branch**.  So you select which branch you want to pull *from*, and it pulls it into the current branch.  The *from* branch can be local or remote; it can even be a remote branch that's not a registered `git remote` (meaning you pass a URL on the `git pull` command line).","2010-06-06 10:10:08","192812"
"110513515","8418403","1","Whether you like the naming convention or not, this solution is one I've seen in more than one shop.","2020-06-20 06:44:50","329289"
"17404853","237176","1","@cbmeeks yeah, care is definitely needed. It was probably a case of doing `for (o in array)` which shouldn't be done when looping through the array generally...","2012-10-12 01:18:45","401510"
"47743880","4754797","1","@Alex2php You'll have to edit the ${branch##*/} portion.  I just trimmed off the front instead.  ($branch | cut -c 16-)","2015-04-22 08:13:51","908939"
"47744388","26744616","0","The first sed just dumps the history to the console.  The second sed replaces all the 'pick' with 'f' (fixup) and rewrites the editor file in-place (the -i option).  So the second one does all the work.","2015-04-22 08:28:16","134337"
"32315323","15676686","49","The definition of JSON is wrong. It does not need to be dynamically generated or respect query parameters. You can serve a static JSON file. Also, the most upvoted answer has a link to the RFC.","2014-01-29 01:37:32","266535"
"32318089","8418403","71","I have added an [answer](http://stackoverflow.com/a/21422128/832230) encouraging to create `.keep` instead.","2014-01-29 04:31:15","832230"
"3061943","1473742","45","MooTools also has Array.contains that returns a boolean, which sounds like the real question here.","2010-06-08 02:10:21","112377"
"110535655","56133714","0","Why?  How does `String.Format()` differ from `string.Format()` or `string name = """";` from `String name = """";`?  I understand that part of the question asks for usage guidelines, but what is the source or basis of these guidelines?","2020-06-21 07:03:15","150605"
"17419596","7077","166","I always use the aliases because I've assumed one day it might come in handy because they are acting as an abstraction, so therefore can have their implementations changed without me having to know.","2012-10-12 11:25:39","527466"
"78197172","45021055","0","I'm using VS Code 2017 on a very large project and do not have a need to close the project.  It handles it quite well :)","2017-08-10 04:22:46","6502003"
"110542817","419185","0","Why do I get error -  ModuleNotFoundError: No module named 'functionB' on running foo2.py & foo3.py?","2020-06-22 04:02:36","3751226"
"47777406","14421438","0","A lot of people tend to discount the non-algorithmic answer as a joke. ""Sure, it works for socks, but this is really a discussion about programming and you're dodging the question.""

But I think it's still relevant.

In my experience building actual software products for customers, if someone spends days working on a problem that looks like it came out of a college textbook, there's almost always a simpler (non-algorithmic) solution they're overlooking.","2015-04-23 01:52:11","742275"
"17442338","10976934","256","I thought JSON was to supposed to be more human readable than, say, XML? Comments are for readability.","2012-10-14 01:00:36","847235"
"17442388","10976934","38","Anyway, you could be naughty and add parsing directives in the JSON: {""__directives"":{""#n#"":""DateTime.Now""}, ""validdate"":""#n#""}... It looks like YAML is the way forward then...","2012-10-14 01:04:37","847235"
"110557180","39654350","1","in regards to edit records this person answered first on the page. Upvoting.","2020-06-22 01:18:02","1018154"
"3090462","59916","103","@Darron: but since the question is tagged `bash` and the hash-bang line explicitly mentions `/bin/bash` I'd say it's pretty safe to depend on bashisms.","2010-06-11 12:56:58","40342"
"78209851","394814","6","@MrGeek, I see what you mean, so you would basically be nesting the operations:
` ""foo"" if Bool else (""bar"" if Bool else ""foobar"") `","2017-08-11 12:04:32","2518518"
"78215073","60014","2","When using double square brackets in bash, you do not need to quote the variables.","2017-08-11 05:58:36","2445864"
"32345159","19688106","11","It should be ppi instead of dpi","2014-01-29 05:02:47","1503130"
"110573126","3499225","0","@MatrixFrog Yeah that makes the code cleaner and easily readable, as you see the important code (when everything function without errors) first.","2020-06-22 10:41:20","11055122"
"32364636","3195229","1","-1 for ""supports type checking at compile time:"". What type checking? This would work for any `new()` `T`. Also, you dont need `new T()` at all, you can select just the static fields alone and do `.GetValue(null)`. See Aubrey's answer.","2014-01-30 04:47:52","661933"
"47797125","9180445","13","Is the order of cherry picking important?","2015-04-23 10:04:40","614241"
"78229887","10976934","1","@PhilGoetz But that specific model has training wheels. The analogy would work better with a tricycle. If you don't like it, use another like YAML or a properties file. Not everything should be designed to grasp every possible features you can think about.","2017-08-11 12:37:13","5771029"
"3115288","549","56","HTTP Basic Auth has the property of being (comparatively) difficult to make a browser forget. It's also horribly insecure if you don't use it with SSL to secure the connection (i.e., HTTPS).","2010-06-15 10:53:40","301832"
"63439111","271526","2","Seems to be in Java 8: static Objects.isNull(Object o) https://docs.oracle.com/javase/8/docs/api/java/util/Objects.html","2016-06-23 05:02:41","2208556"
"47807335","26299506","0","This is what I use. git checkout -p and then ""a"" to accept all.","2015-04-24 06:51:42","213738"
"3119589","952946","122","that's pretty neat and clever but I wouldn't use it because it's confusing to read.","2010-06-15 06:55:14","432"
"94493113","348179","10","`git rm --cached ...` will remove files from a git repo. They'll still exist on your computer, but this is VERY different from unstaging *changes* to a file. For anyone stumbling upon this, it isn't a valid answer to the question.","2018-12-17 08:02:59","1525759"
"32380349","15676686","11","Also JSONP can be json data assigned to a var.","2014-01-30 01:16:57","1857292"
"110600256","419185","1","@VaibhavGupta You're probably using an interpreter that doesn't automatically add the script's directory to `sys.path`. The auto-add feature has been around a long time (forever?) and makes Python easier to use, but it's insecure. To improve security, some people disable that feature. I'm having trouble finding a public record of it, but there have been recent discussions about removing the auto-add feature from Python 3. Maybe it's actually happened now. Regardless, I've added a line that should make `foo2.py` and `foo3.py` work for the safer interpreter setup.","2020-06-23 05:15:51","25050"
"17480101","477578","0","@jfager: When the user re-logs-in, nothing is deleted, since the safety deletion only occurs if the site is passed an old cookie containing a valid series identifier and an invalid token. Since there is no such cookie (because the attacker deleted it), the system simply initiates a new series and doesn't even warn the user. (remember: a user can have many laptops = many series identifiers, and the 'improved' system can't tell the difference)","2012-10-15 09:34:49","57068"
"78257296","42219730","4","If the comment is an object with property like user id, created date, comment-message, etc. and at the time of edit only comment-message is getting updated, PATCH should be done here?","2017-08-12 10:47:45","739331"
"78261472","9180445","3","The second cherry-pick example is incorrect. `612ecb3..9aa1233` means all commits after but excluding `612ecb3` up to and including `9aa1233`. To get all three commits, you need `cherry-pick 612ecb3~1..9aa1233`.","2017-08-12 02:54:01","70170"
"63461337","20979806","4","if the replacement contains the ""find"" youi will have an infinite loop","2016-06-24 08:43:08","183942"
"63461365","36555927","3","if the replacement contains the ""find"" youi will have an infinite loop","2016-06-24 08:44:01","183942"
"94518800","16880000","1","I think most of the other answers are more of a show-and-tell about git commands and exposition about git history. This is the only answer that doesn't assume your upstream is called `origin`.","2018-12-18 02:41:42","1574942"
"3140801","163659","56","FYI you can use `git mergetool -y` to save a few keystrokes if you're merging a lot of files at once.","2010-06-17 11:32:50","14569"
"17513303","477578","0","@jfager: Absolutely correct - I didn't mean to portray it as a drawback, my only point is that the 'improvement' doesn't actually deliver on its promise. It can make implementors and site owners believe their auth system protects against cookie stealing, and it doesn't -- and fake security is worse than no security.","2012-10-16 10:18:41","57068"
"17514660","1628584","0","Is there any reason why Mazrick's comment hasn't been upvoted more? This sounds like a far more reliable method than counting the number of commits.","2012-10-16 11:54:26","343043"
"78284022","44323593","0","Nah I think this is an unusual enough use case that it should be its own answer","2017-08-13 05:48:14","30946"
"3160075","1644241","17","The other version does not do the same thing - with `for (size_t x=10; x-->0; )` the body of the loop is executed with 9,8,..,0 whereas the other version has 10,9,..,1. It's quite tricky to exit a loop down to zero with an unsigned variable otherwise.","2010-06-21 08:57:44","1527"
"94538236","31072124","0","Better way use find +  grep
https://stackoverflow.com/a/51023211/7918560","2018-12-19 05:55:44","7918560"
"110642758","7140229","0","If there's anything I appreciated most about this answer, it's the ""careful design"" tip. Whether it boils down to writing code, fixing bugs or checking for nullity, it's DAMN CRUCIAL to make an overall good design and organisation in code, to avoid many redundancies that we still have to deal with today because of bad design choices made a long time ago...","2020-06-24 09:49:43","11055122"
"78297423","176264","0","URI = https://stackoverflow.com/questions/176264/what-is-the-difference-between-a-uri-a-url-and-a-urn

URL = https://stackoverflow.com/questions/

URN = /176264/what-is-the-difference-between-a-uri-a-url-and-a-urn","2017-08-14 08:09:56","4540861"
"110645135","2610497","1","The provided code works on FireFox.","2020-06-25 12:39:15","12984567"
"17534193","162056","4","@JustinGrant `git add` stages files in the index; it does **not** add anything to the repository. `git commit` adds things to the repository. This usage makes sense for merges -- the merge automatically stages all of the changes that can be merged automatically; it is your responsibility to merge the rest of the changes and add those to the index when you are done.","2012-10-17 03:13:05","122763"
"32425250","7449270","4","It breaks if you `source` or `.` the script. In those situations, `$_` would contain the last parameter of the last command you ran before the `.`. `$BASH_SOURCE` works every time.","2014-01-31 02:55:13","260122"
"3169608","944352","17","A one liner for the first extension method; it's no more lazy.

return Enum.GetValues(typeof(T)).Cast<T>();","2010-06-22 09:29:29","3359"
"110654195","8418403","1","This one is the best method. The only argument I see around here is that .gitkeep in not documented. Guys, just use an empty .gitignore and add it.  Your folder will be tracked and also delete proof in a sense that git status will show the missing tracked .gitignore file in case the folder does not exist anymore.","2020-06-25 08:56:36","1508080"
"17539079","161813","37","The following blog post seems to give a very good example on how to handle merge conflict with Git that should get you going in the right direction. [Handling and Avoiding Conflicts in Git](http://weblog.masukomi.org/2008/07/12/handling-and-avoiding-conflicts-in-git)","2008-10-02 11:40:03","23909"
"94553173","50780432","2","Note that the first option should not be used, since it only works correctly only when each item in the sequence is unique.","2018-12-19 02:05:25","6209196"
"47873195","406243","53","Or using only one process `grep -v -e hede -e hihi -e ...`","2015-04-26 05:42:15","1741542"
"17549406","6101200","2","better to use assertions, i.e Contract.notNull(abc, ""abc must be non-null, did it fail to load during xyz?""); - this is a more compact way than doing an if (abc!=null) { throw new RuntimeException...}","2012-10-18 03:35:31","1342121"
"47876914","17642237","17","what if there will be more than one '@' symbol? other restricted symbols? This validation cannot be trusted...","2015-04-26 10:14:10","2781047"
"63511032","373834","0","@Bombe: `git reflog will still show them until you clean your repository with git-gc` – wrong. Reflog is a reference too and referenced commits will never be removed by git-gc. If you need to clean them right now, you have to do `git reflog expire --expire-unreachable=now --all`","2016-06-26 05:33:35","2790048"
"3180735","114549","17","For the vertical centering I usually use ""line-height"" (line-height == height). This is simple and nice but it's only working with a one line content text :)","2010-06-23 12:36:47","205210"
"78319815","244858","1","There are a number of libraries and frameworks that now support comments in JSON files.  In C# land, Newtonsoft's JSON.Net supports them, and as a result you'll observe comments used in various JSON's throughout .Net Core configuration files.","2017-08-14 06:48:13","214195"
"3185195","2633580","0","This works perfectly to get the ""real"" dirname, rather than just the name of a symlink.  Thank you!","2010-06-23 08:32:50","293064"
"94565946","53022304","0","Works like a charm. Thanks!","2018-12-19 09:00:26","490271"
"110679223","36924148","0","@MartinG I just took the opportunity to incorporate my [two](https://stackoverflow.com/questions/52704/how-do-i-discard-unstaged-changes-in-git/36924148#comment83523686_36924148) [suggestions](https://stackoverflow.com/questions/52704/how-do-i-discard-unstaged-changes-in-git/36924148#comment83524035_36924148), including the one that adds a ""dry-run"" step (as better safe than sorry!). Anyway, feel free to amend my edit if need be!","2020-06-25 11:07:06","9164010"
"32449168","46181","191","You cannot validate email addresses, period. The only one who can validate an email address is the provider of the email address. For example, this answer says these email addresses: `%2@gmail.com, ""%2""@gmail.com, ""a..b""@gmail.com, ""a_b""@gmail.com, _@gmail.com, 1@gmail.com , 1_example@something.gmail.com` are all valid, but Gmail will never allow any of these email addresses. You should do this by accepting the email address and sending an email message to that email address, with a code/link the user must visit to confirm validity.","2014-02-01 08:49:15","606539"
"78337325","16238123","0","Untracked files are not affect4ed by git reset. If you want them to be removed as well, do `git add .` first, before `git reset --hard`","2017-08-15 09:12:21","2151700"
"47910488","1984225","7","@edelwater: I suppose thats a uri as it only identifies you but says nothing of how to get to you, unless you mean earth128 is some medium of inter-planetary travel :)","2015-04-27 10:57:23","20358"
"32463715","5305908","1","@Jez why remove the READMEs? READMEs in directories besides just the root directory is very useful, especially when your repository is hosted on GitHub which automatically displays READMEs in every directory.","2014-02-01 09:52:19","72321"
"63538585","40878","8","HashMap gives flexibility to programmer to write threadSafe code when they actually use it. It happened rarely that I needed a thread safe collection like ConcurrentHashMap or HashTable. What I needed is certain set of functions or certain statements in a synchronized block to be threadsafe.","2016-06-27 09:00:02","4348811"
"47926094","11478811","0","_""[.............]You will never have a null pointer anywhere, or someone is violating the rules.""_ That one violating the rules is precisely the point of the question. Or you write 100% of your code without using a single library?","2015-04-27 05:00:23","389099"
"63548371","35324551","7","expanding on this, `--delete ""$@""` and `-D ""$@""` instead of `$1` will handle it for multiple branches.","2016-06-27 01:15:19","3297499"
"17600845","5431108","2","This isn't quite right - PUT can still create a resource by referring to it with a non-canonical name, as long as in the response, the server returns a `Location` header that *does* contain the canonical resource name.","2012-10-19 04:08:58","40468"
"110714690","11227877","3","Is the branch predictions mostly happen at compiler level or it is handled by processor? And why java or c++ can not handled it? I mean why is not complicated to predict it right?","2020-06-27 05:57:38","1494680"
"78359967","7216269","3","When using these steps, my CLI changes from `[master]` to `[GIT_DIR!]`, and the final checkout doesn't work.

UPDATE: I made a mistake. I cloned into `/path/to/dest.git` - it should have been `/path/to/dest/.git`.

Then when I unconfig'd bare mode, my CLI said `[master +0 ~0 -116 ~]`

but upon `git checkout master`, it did a bunch of work, but came out the other side as  `[master]`, so it looks like success!","2017-08-15 08:15:48","556078"
"63570268","26744616","0","@Sergio This is a case of rewriting history, so you probably will have conflicts if you squash commits that have already been pushed, and then try to merge/rebase the squashed version back.  (Some trivial cases might get away with it.)","2016-06-28 01:51:40","134337"
"63570339","26744616","0","@Sergio squashing can hide some conflicts if you do rebases instead of merges.  The merge only happens on the final commit, so it's equivalent to merging the squashed version.  But a rebase has to process each commit, so you might have transitory conflicts that are unrolled by a later commit and you'll get a conflict on each as the rebase is processed.  Rebasing the squashed version hides this intermediate history.","2016-06-28 01:58:00","134337"
"78377186","6581949","1","@Deep: The _actual_ metaclass of a class is specified in `.__class__`, whereas `.__metaclass__` specifies which callable should be used to alter the class during creation. If for example `.__metaclass__` contains a function `foo_bar()` that uses `type(x,y,z)` to alter the class, then you will have .`__metaclass__ = foo_bar` which will not be inherited but `.__class__`  will be `type`, because that's what was used to create the new altered class. 
Read this a few times. I am 99% sure I haven't made a mistake ;)","2017-08-16 09:17:39","82840"
"3256471","1126089","45","git clean is a rather blunt instrument, and could throw away a lot of things that you may want to keep. Better to remove or rename the files that git is complaining about until the pull succeeds.","2010-07-02 01:21:35","381619"
"47970039","5871742","2","Since OS X creates a .DS_Store file in almost every directoy, this does not work there. The only (DANGEROUS!) workaround i found, was to delete all the .DS_Store files first via `find . -name .DS_Store -exec rm {} \;` and then use the preferred variant from this answer.
Be sure to only execute this in the correct folder!","2015-04-28 03:57:42","2902647"
"32518392","6620071","44","Presumably people other than the OP might have an interest in the answers to this question.  Isn't that the guiding principle of the site?","2014-02-03 06:34:33","2056448"
"47973421","11478811","0","Of course, you can not control other people's code. But the rules still apply, and are useful. Other wise, its like saying  that, RUST ( http://cmr.github.io/blog/2013/08/13/rust-by-concept/ ) will never work if it needs to access any library. So, indeed that's a problem, but following pointer ownership can greatly reduce the risk.","2015-04-28 05:18:33","1022180"
"47974521","59895","3","@l0b0 Consider that you'd need the same protection on `dirname`, and that the directory could start with a `-` (e.g. `--help`). `DIR=$(reldir=$(dirname -- ""$0""; echo x); reldir=${reldir%?x}; cd -- ""$reldir"" && pwd && echo x); DIR=${DIR%?x}`. Perhaps this is overkill?","2015-04-28 05:46:47","1091693"
"32526483","178450","2","@Kzqai Also, I believe this works: `$(selector).is('not(:hidden)')`","2014-02-03 10:43:52","500202"
"78390556","2003515","0","To better understand the git push origin :<branch_name> syntax, go to https://stackoverflow.com/questions/1519006/how-do-you-create-a-remote-git-branch","2017-08-16 02:27:24","2623162"
"78392408","22417576","3","Thank you for the 'find' version! It is so important to be able to filter by '*.js' or '*.txt', etc. Nobody wants to spend hours waiting for grep to finish searching all the multi-gigabyte videos from the last family vacation, even if the command is easier to type.","2017-08-16 03:10:25","2846766"
"78397151","22417539","0","@Kyrstellaine: Yes, the merge does not affect the working branch -- so you will have to remove it manually, if you want it removed (an optional step 5).","2017-08-16 05:14:38","86967"
"110759360","1144783","10","`String.prototype.replaceAll()` is now a standard part of ECMAScript https://tc39.es/ecma262/#sec-string.prototype.replaceall, documented at https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/replaceAll and shipped in Safari 13.1, Firefox 77 and Chrome Dev/Canary and will ship in Chrome 85. From the docs:  “If *searchValue* is a string, replaces all occurrences of *searchValue* (as if `.split(searchValue).join(replaceValue)` or a global & properly-escaped regular expression had been used). If *searchValue* is a non-global regular expression, throws an exception”","2020-06-29 05:26:54","441757"
"3271834","179147","267","However `git commit --amend` isnt as powerful as `git rebase -i`.","2010-07-05 08:40:35","172792"
"63614914","16144913","0","This worked for me in Chrome when Justin Poliey's version didn't.","2016-06-29 02:50:17","843315"
"94655101","522569","0","@chepner If one is iterating through multiple lists, using `range` may make sense. Though `zip` is probably more Pythonic for these cases, so using `range` would still be a premature optimization, as other comments mention.","2018-12-23 04:33:25","8117067"
"3288263","229157","12","That gives terrible accessibility. Try it in SO: you can't flag a post without using the mouse. The ""link"" and ""edit"" links are accessible by tabbing, but ""flag"" isn't.","2010-07-07 03:51:39","237349"
"110779497","16957078","0","More on `-r` and `-R` in [this question and answer](https://stackoverflow.com/a/22763809/1028230).","2020-06-29 04:50:45","1028230"
"110779561","16956844","1","""_You can use `grep -ilR`_"" then immediately proceeds to rearrange options to less ill `grep -Ril ""text-to-find-here"" /`. ;^D I've become partial to ""**grep in real life**"" (`-iRl`) now myself.","2020-06-29 04:53:18","1028230"
"110780129","682343","1","@ahnbizcad ...well, once you know what you're doing, it's much easier,...and I find the GUI too bloated and too much mouse movement...so it's a matter of opinion.","2020-06-29 05:15:26","9654083"
"3292645","3195229","2","what about using `T valueType = default(T)`?","2010-07-07 02:17:17","1838048"
"47994193","29932630","9","Did you fell in the punctuation well as a child? :) I've read it three times and I am still lost at what point you are trying to make. But if you are saying ""Sometimes you do not need form based authentication"" then you are right. But considering we are discussing when we do need it, I dont see why this is very important to note?","2015-04-29 06:47:32","434949"
"78450527","8212184","1","@entonio i don't follow, After the compiler ensures that the Optional (or what ever) is not null then what?  Are you saying that the Person application is designed to never encounter a situation where someone does not have a girlfriend?  How does the application handle those scenarios, are there multiple types of Person, maybe we create 2 types of Person, LonelyPerson and ShackledPerson?","2017-08-17 11:54:46","3738598"
"3299294","3195229","0","Great, I didn't even know that keyword. Always nice to learn something new. Thank you!
Does it always return a reference to the same object, or does it create a new instance each time the default statement is called?
I haven't found anything on the net about this so far, but if it creates a new instance every time, it kind of defeats the purpose I was looking for (having a one-liner ^^).","2010-07-08 06:48:46","81112"
"17682105","178450","3","@TsvetomirTsonev, to check the parent's visibility, you can                      use    $(element).parent().is("":visible"");  I know this is bit old, but will useful for new search","2012-10-23 08:43:11","1099670"
"94694130","1628334","1","-1; I can't make any sense of the claim that the behaviour described by the OP looks like a consequence of pushing to the checked out branch of a non-bare repo. I've just tried pushing to the checked out branch of a non-bare repo; it simply updates the HEAD of the branch without updating the work tree. Yes, that can (and probably will) cause the branch to have a non-clean work tree. But it doesn't produce a situation in which a subsequence `git reset --hard` leaves file modifications in the work tree. I can't find any evidence that pushing to a non-bare repo could cause the behavior in the OP.","2018-12-25 11:36:08","1709587"
"48001348","28342808","1","Similarly for vim doing git on a macintosh this worked.","2015-04-29 09:55:51","2966723"
"17686770","292357","393","I found this well written article about git fetch and git pull it's worth the reading: http://longair.net/blog/2009/04/16/git-fetch-and-merge/","2010-09-16 06:57:47","127209"
"94702512","45224904","1","Glad to see an answer that brings up this concern. However, I don’t believe there are any browsers where `String.fromCodePoint(65536).length === 1` will be true. That ES strings expose their UTF16ishness isn’t implementation-specific behavior — it’s a well-defined part of the spec, and it can’t be fixed due to backwards compat.","2018-12-26 10:48:49","1631952"
"94707840","30479554","0","For readers of ""Javascript: The Good Parts"", note that using `let` instead of `var` in the for loop (as in the second code block in this answer) prevents the code from showing an alert containing only the number of nodes; [here's a link to the example code](https://resources.oreilly.com/examples/9780596517748/blob/master/example_code/ch04.txt#L335).","2018-12-26 03:14:42","4975230"
"110799114","67699","3","@DayDavisWaterbury please do not refer to an answer on SO as the one with the ""second most upvotes."" Consider using poster's name instead. The number of votes changes over time.","2020-06-30 09:10:41","863264"
"94710331","7251912","2","This answer is valid in accomplishing adding comments to json. It is no longer standard json. But it is still json. Comments + Json + Yaml Loader = valid solution. Some frameworks/languages require install json. It coming installed by default is a poor excuse not to use yaml. But loading time and library size are valid reasons to avoid it. May fit or may not. Valid answer.","2018-12-26 05:22:50","458321"
"32582619","337006","17","It won't work if you source the script. ""source my/script.sh""","2014-02-05 07:34:32","1942688"
"48017004","72156","7","Instead of `git checkout -b experimental origin/experimental`, you can write just `git checkout experimental`, it will create the branch and set the tracking information for you (except with very old Git versions).","2015-04-29 03:22:25","4830165"
"48017125","28645738","6","This requires installing an external program. In my opinion, it would be better to learn to use the built-in tools and aliases more effectively. I would type: `g c; g rb -i @~9` (commit and rebase),  move the new commit to where I want it, change `commit` to `f` (`fixup`), and save. If you wanted something faster than that, you could alias  `git commit --fixup=<commit>; git rebase -i --autosquash <commit>^`","2015-04-29 03:25:01","405550"
"63676308","52719","1","git checkout -- file","2016-06-30 11:56:51","5914345"
"3325392","238862","0","This looks great, but a little confused:

* Aren't the tests on lines 1 and 3 equivalent?
* Wouldn't it be better to test the prototype, and add the function to Array.prototype if necessary?","2010-07-11 12:31:11","7012"
"48029131","7495877","1","Using `transparent` in lieu of rgba also works in Chrome 42 on Android.","2015-04-29 08:46:35","41906"
"63689425","1482133","3","Note that `$0` doesn't work if the file is sourced. You get `-bash` instead of the script name.","2016-06-30 04:52:43","1068332"
"94733008","2003515","0","I ran the first line of the executive summary and the second wasn't ""needed""(?). The branch is gone both locally and remotely.","2018-12-27 03:28:31","5306470"
"63699432","29831148","0","This works if its your own branch. But if you are pruning all unneeded branches in the repo (some of which aren't yours) it wouldn't suffice","2016-06-30 10:23:07","2120578"
"110823655","11227902","47","this is all C++?","2020-07-01 12:11:26","13830841"
"110823751","47141245","2","Did you make the example app in JavaFX?","2020-07-01 12:19:09","13830841"
"110824362","47141245","2","@HannaMcquaig No, it's made by Swing. The code is available at https://github.com/Eugene-Mark/branch-predictor-demo.","2020-07-01 01:14:51","3378204"
"110824819","13622199","0","Any idea what the double underscore function is?  `__()`.  It is used in WordPress. I cannot find a definition for it *anywhere*.  Example of its use: https://core.trac.wordpress.org/browser/tags/5.4/src/wp-admin/includes/media.php#L1142. It seems that to use the WP `image_size_names_choose()` filter, `__()` must be used to add the ""short name"" to the array of named_sizes you want to add.","2020-07-01 01:54:23","5411817"
"94737569","51522896","2","@Dennis Strings are not primitives, they're objects.","2018-12-27 06:49:38","3307720"
"17726781","11206143","1","Note: This not only undoes the merge but also any local commits that were made since the latest push to origin.","2012-10-24 04:48:22","35434"
"110834702","11227902","196","@HannaMcquaig I'd guess that part where it says ""Java"" isn't C++, but I may be wrong.","2020-07-01 10:02:33","4068240"
"110835227","44201563","0","In original `vi` there is ""open mode"" as well, which is kind of a one-line normal mode with its own variant on insert mode. This is useful if you ever take a time machine back to the 1980s and have to work on a 1200 baud modem. You get there by typing :o","2020-07-01 10:18:59","812839"
"17729804","2334741","24","If you are editing the the link between tables (`SET Table.other_table_id = @NewValue`) then change the ON statement to something like `ON Table.id = @IdToEdit AND other_table.id = @NewValue`","2012-10-24 06:41:05","641833"
"94741219","7251912","1","@TamusJRoyce I wouldn’t call that a valid solution, really. If you’re going to use a YAML loader, then go all in and use YAML. If you really have to use JSON (which is a terrible file format anyway), stick to the standard and don’t use comments.","2018-12-27 09:58:54","109011"
"63718461","215731","9","Personally I find HEAD^ easier to type than HEAD~1 :)","2016-07-01 11:38:02","2153571"
"78515516","37155553","7","I prefer `print( 'yes' if conditionX else 'nah' )` over your answer. :-)","2017-08-20 06:07:17","5709737"
"48057426","29932630","1","My point is that the world *outside* a corporation is entirely different from the world *inside.*  If you are building an app that is accessible to the ""wooly wide web,"" and for general consumption by the public, then you have no choice but to roll your own authentication and authorization methods.  But, inside a corporation, where the only way to get there is to be there or to use VPN, then it is very likely that the application will not have – *must not* have – ""its own"" methods for doing these things.  The app *must* use these methods instead, to provide consistent, centralized management.","2015-04-30 01:23:27","4811873"
"3350712","179147","81","@jeffjose, It definitely doesn't need to be.  Also, `git commit --amend` can fix up the (a?) master commit.","2010-07-14 06:02:30","39992"
"3353243","238862","12","They aren't equvialent. `[].indexOf` is a shorthand for `Array.prototype.indexOf`. 
Us paranoid-defensive Javascript programmers avoid extending native prototypes at all cost.","2010-07-14 12:03:18","16271"
"78528364","2691891","0","There is nothing that says you cannot implement POST to be idempotent, all the standard says is that it is treated as unsafe. Implenting an idempotent post for resource creation where the client can generate the id and pass along a request token to identify retries works well.. eg /api/foobars/{GUID}?request={AnotherGUID}","2017-08-20 06:16:59","1425013"
"78530426","8212184","0","@entonio, Java has Optional<T>, that is non-final reference. And Java's compiler ensures that every final is initialized. And you would have the same amount of checks if you are senior enough not to write boilerplate code because 'emptiness' is a _business notion_. And Java's Optional<T> is free from `get()` and `put()` boilerplate.","2017-08-20 08:18:38","448078"
"110859525","13622199","2","@SherylHohman  Look like it is translation function.   https://developer.wordpress.org/reference/functions/__/","2020-07-02 03:08:56","739331"
"32647782","417142","4","@Lohoris  When we write pages to generate reports we used a criteria form.  It is useful on some reports to be able to email the url to someone with the criteria built in.  Depending on the report we are at times forced to use `post` or the criteria gets truncated.  Just another use case.","2014-02-06 04:32:49","2599884"
"110863476","8876254","1","Checking if the user has access rights to read the file is very professional. Often data is on local drive during dev, and on network share in prod. Then this might lead to such a situation. Also, the code is perfectly clear and readable and explicit.","2020-07-02 07:04:45","973184"
"3379832","487278","22","This is good if you're looking for the longest answer, but not for the answer that best explains Big-O in a simple manner.","2010-07-16 06:21:59","246524"
"110870630","61124687","0","AFAIK, there still exist many CPUs with the Harvard architecture (typically optimized DSPs), which have separated memory (and bus) for instructions and data. (Some of them even more than 1 data memory). This is to optimize the cycle duration (Instruction fetch, data fetch and execute of previous instruction all in one machine cycle), thus take advantage from what they call pipe-lining. I am not aware, that instructions should by any means be placed in the stack.
Anyway, I have a sneaky feeling this answer might go a bit beyond the scope of the original question...","2020-07-02 11:07:34","1630736"
"3382415","487300","113","Not seconds, operations. Also, you missed out on factorial and logarithmic time.","2010-07-17 01:27:04","5697"
"48080616","215731","0","To automate the entire process of searching through the history of a file and checking out the appropriate commit-id in one git command, use [**`git prevision`**](http://stackoverflow.com/a/29980518/319204).","2015-05-01 01:49:00","319204"
"63763477","35020326","0","if you prefer to resolve conflicts manually try opening the folder in Visual Studio Code, it marks files with conflicts and colors conflict lines inside every one","2016-07-03 08:31:42","4356754"
"63765712","20434146","0","Note that the regexp doesn't work with URLs:  ""url"": ""http:// ... (oops!).  You definitely need a real ""JSON+comments"" parser to strip comments.","2016-07-03 11:13:41","3450840"
"48082367","11227877","5","@AdamFreeman - Sorting is relevant here only inasmuch as *in this code* it increases branch prediction to 100% success.","2015-05-01 04:02:56","1715673"
"110878970","309448","0","Did the toString get deprecated? I see `IOUtils.convertStreamToString()`","2020-07-02 03:26:20","2077582"
"48085936","8888015","4","@FelipeSchenone There actually is `git pull -f`, but it doesn't do what we all want it to do.","2015-05-01 07:49:21","1884363"
"78570953","44612374","2","I liked this approach but it doesn't handle dates properly; consider adding something like `if(o instanceof Date) return new Date(o.valueOf());` after checking for null
`","2017-08-21 10:53:25","1623757"
"110888145","32039692","0","Link to video is dead :(","2020-07-02 08:59:54","1689262"
"110888699","82852","1","Wait, so `pathlib2` < `pathlib`? `pathlib` is for python3, right? I've been using `pathlib2` thinking it was superior.","2020-07-02 09:26:18","13395015"
"110892505","246128","1","tvlooy's compact solution worked for all the torture test cases that I tried.  Dave Dopson's more complex solution also works for all the torture test cases that I tried.","2020-07-03 02:29:15","6889038"
"110892646","246128","0","Torture cases included running as a service and using multiple variations of differently named relative symlinks calling differently named relative symlinks finally calling the script relatively.I also need the actual name of the script, not the name of the first symlink.  `TRUESCRIPT=""$(dirname $(readlink -f $0))/$(basename $(readlink -f $0))""`","2020-07-03 02:40:49","6889038"
"110893673","1274447","0","@LiangXiao: That's a separate question to this one. Post it as a question.","2020-07-03 04:10:08","8014"
"48093279","18688141","0","How to do it not in-place, as specifically mentioned in the question?","2015-05-01 12:42:29","572670"
"48093296","19259889","0","This does not answer the question, where the socks are only a metaphor.","2015-05-01 12:43:11","572670"
"48093329","23384204","0","Socks are only metaphor for pairing arbitrary objects in some database.","2015-05-01 12:44:27","572670"
"48093667","14471013","0","It does not answer the question, because handling with already paired data is easy, the question is what to do when the data is UNPAIRED and you want to pair it.","2015-05-01 12:56:35","572670"
"48093704","14419556","1","@usr I am going to ask this question to become un-community wiki. I'll be glad if you can clean it up a bit if it got any messy during the time it was community wiki. Thanks.","2015-05-01 12:58:31","572670"
"110896348","56163573","0","Nice and quick solution, as for me.","2020-07-03 06:53:44","8097218"
"110897153","13622199","1","Thanks so much! I envy your superior Google skills (and vast coding knowledge) :-)","2020-07-03 07:24:33","5411817"
"48096626","23384204","0","No, you can clearly see from the questions and the answers that this question is in fact about socks.","2015-05-01 02:24:15","592744"
"17773334","46181","60","This doesn't even accept the examples in RFC 822. Some simple cases it doesn't match a\@b@c.com, a(b)@c.com. See the RFC for more. Here's a regex that won't reject any valid addresses [^@]+@[^@]+\.[^@]+ and protects against common errors.","2012-10-26 06:32:11","1666946"
"48097446","23384204","1","Got it, didn't see that you are the author. If you wanted a generic solution, you should really have said so. Anyway, there is nothing wrong with taking any information you have into account, unless you have to come up with a general solution - giving up the reusability of the solution could result in considerably better performance. In this case, considering the use case and the available data base as a whole is be beneficial. However, this special answer to your special question has issues with similar-looking socks, e.g. black socks in different sizes, so it's not applicable in some cases.","2015-05-01 02:46:30","592744"
"48098390","23384204","1","Also, you did not get  >2k upvotes because you asked a question about pairing arbitrary objects in the database. You specifically constrained the question due to the very nature of socks (which you cannot duplicate, as opposed to data), you even encouraged to use the fact that you can easily distinguish your socks from the socks of your spouse. If you ask a question about socks, don't expect the answers to be about databases ;-)","2015-05-01 03:13:30","592744"
"48098937","23384204","0","I specifically asked in the first guideline for answers I am looking for a theoretical answer `A general theoretical solution for a huge number of socks.` This is the first guideline I wrote I expect an answer to address. So if you think this answer can scale for huge number of ""socks"", please provide information how./","2015-05-01 03:29:24","572670"
"48099411","23384204","1","There are a few assumptions: a normal washing mashine,  a, normal clothesline, and the fact that you toss both socks in the bin at the same time, which means that in most cases both socks are in the same machine, and the number of leftover socks to be sorted is therefore small. But since you really wanted an answer about storing arbitrary objects in the database, is it really useful discussing my solution any futher?","2015-05-01 03:40:50","592744"
"48099568","23384204","0","I am trying to clean up the thread a bit, and would appritiate if you either (1) address the points addressed in the question, or (2) remove the answer. Of course, it's up to you - but it's a request to make sure the thread is not a complete mess.","2015-05-01 03:45:11","572670"
"48100296","23384204","1","As I said, I think that I addressed everything you asked for, except for the element distinctness problem, which has been answered by other people. I'm not trying to be a douche here, but I have put a lot of effort in this answer a while back, and am mildly disappointed that you now go through some of  the answers and  claim that they didn't answer the original question. Why don't you just leave the whole thread alone - it's still an interesting read, over 2 years after you asked it?","2015-05-01 04:03:48","592744"
"48110654","179147","1","`git commit --amend -m ""New commit message""`
does not make entering multi-line comment cumbersome. you should use:
`git commit --amend -m $'- line 1\nline2'`","2015-05-01 09:42:07","951976"
"63803461","28082580","10","The command `git clean -fdXx` produces the error message *""fatal: -x and -X cannot be used together""* (using git-2.8). For your last sentence within your answer, please provide a link to git manual. Cheers","2016-07-04 04:23:19","938111"
"48120665","19259889","0","The question was how to pair the socks from an unpaired pile, not how to avoid needing to pair.","2015-05-02 10:08:25","572670"
"78635344","477819","0","does it really matter what mime type it has? it's text that gets parsed into an object. wouldn't it be more natural to pass it as text/plain if you want it to be openable in browser without force download, and application/octet-stream if you want it to be automatically downloaded(useful if you're generating it on a webpage intended to be saved locally). Is there really that many people that will need to know the mime type so the downloader can view it with a special json viewer? What am I missing that warrants it a special mime type?","2017-08-23 12:00:00","2012715"
"17829172","237176","1","The best way to do this is check if [1, 2, 3].indexOf(1) > -1","2012-10-28 11:25:54","565877"
"63821824","16957078","88","@Eliran Malka `R` en `r` will both traverse directories correctly, but `R` will follow symbolic links.","2016-07-05 08:36:40","2703418"
"48142458","13308092","0","@confused00 Do you have an answer to this question yet? I think they are all stored in an array like structure and in compile time they are pushed to the operand stack, right?","2015-05-03 09:29:27","1173112"
"48142567","1213360","2","What do you mean ""The code in the function is then able to navigate up the stack from the current stack pointer to locate these values."" ? Can you elaborate on this please?","2015-05-03 09:36:25","1173112"
"32725519","114549","21","You also set the top and bottom margins to 0, which is unrelated. Better putting `margin-left: auto; margin-right: auto` I think.","2014-02-08 10:45:47","516188"
"48143835","1213360","1","@KorayTugay: When the function starts executing the top of the stack (lowest address because the stack is ""inverted"") contains the return address (_ret_). The function arguments (_args_) are below this in the stack (at higher address). The declaration of the function arguments determine the layout of the arguments on the stack and the code in the function can access these arguments by only knowing the stack pointer when the function is entered and the exact size and sequence of the arguments. Everything is relative to the stack pointer.","2015-05-03 10:59:29","98607"
"48147601","1213360","0","@MartinLiversage I thought they were accessed by array indexes.","2015-05-03 02:30:58","1173112"
"48147680","1213360","0","@KorayTugay: My explanation is at the CPU/machine code/assembly level where there are only registers and memory that can be addressed to be able to read and write data. In general arrays are a higher level (programming language) concept. OK, CPU's have vector instructions but they are not important when you try to understand the stack.","2015-05-03 02:37:10","98607"
"48147755","1213360","0","@MartinLiversage Ok thanks for the clarification. I am trying to create a simple interpreter for a language (for learning purposes) so I was confused.","2015-05-03 02:41:07","1173112"
"110928204","23714832","3","This is the only one that works for perfect centering and will remain centered even after the contents in the div are modified.","2020-07-04 11:20:03","8608146"
"17861647","6866485","1","My thanks also for the explanation. Question about this statement though (re --hard) : ""your files are reset to their state at commit B"". Say I had only committed some of my modifications, other files being intended for future commits. How much am I resetting?  Just the committed files? Or do I reset my whole working set?","2012-10-30 06:09:49","57001"
"78651419","215731","0","I also just realized that you have to be on the branch you pushed TO, not from.","2017-08-23 06:09:56","6383587"
"94866971","22537629","1","""*It was also never intended to be used for configuration files where comments would be needed.*"" But JSON is used for JSON schemas, where comments are extremely helpful. Comments can be included in *description* elements, but that turns comments into data. They're also helpful for documentation, where it would be great to be able to validate the JSON without having to first remove the comments.","2019-01-03 12:32:08","257182"
"94872306","2432799","0","I always find myself coming back to this and making the same mistake. This is a very old post without edits and this may have been required before, but the ""git://"" is unnecessary now (and actually doesn't work). I'd suggest changing ""git://new.url.here""  to something more obvious such as ""[NEW URL],"" because this seems to be confusing others as well considering upvotes on newer comment.","2019-01-03 07:29:38","4582142"
"32752143","8418403","241","`.gitkeep` has not been prescribed by Git and is going to make people second guess its meaning, which will lead them to google searches, which will lead them here. The `.git` prefix convention should be reserved for files and directories that Git itself uses.","2014-02-10 01:44:13","235992"
"48167852","27458534","0","is there a way to get the two green rows and the one blue row of A without using `distinct`?","2015-05-04 08:08:47","2442804"
"78661227","25938347","3","he's not wrong though, git can be used for package management, bower for example is internally basically a fancy cli for downloading git tags.","2017-08-24 01:21:29","2377920"
"110951610","10999165","0","> well -D force deletes, -d gives you a warning if it's not already merged in. \n\n

Pretty bad naming if you ask me. Should be -df or -d --force.","2020-07-05 01:45:37","10211923"
"48173516","27458534","2","@luk2302 - Yes, you need a semi join. There is no semi join keyword in SQL though. Instead you can use `in` or `exists`. i.e. `SELECT A.Colour FROM A WHERE A.Colour IN (SELECT B.Colour FROM B)` or alternatively 

`SELECT A.Colour FROM A WHERE EXISTS (SELECT * FROM B WHERE A.Colour = B.Colour)`","2015-05-04 11:07:29","73226"
"48173589","27458534","2","thanks, i already ended up using `where exists` and it works. But I hoped there was a way to achieve that with just a regular join. Thanks anyway! And btw: far better representation of joins than by venn diagrams :)","2015-05-04 11:09:17","2442804"
"78680568","2003515","0","Note that the `-d` as an alias for `--delete` also works with the push call. So `git push origin -d <branch_name>` works too","2017-08-24 12:13:00","3359162"
"78680685","42193447","0","`git branch --delete <branch>` doesn't delete a remote branch, you need `git push <server> --delete <branch>` to do that","2017-08-24 12:15:36","3359162"
"17884476","1532020","9","server response must go as text/html. This is true for the ExtJS variant as well.","2012-10-30 09:10:05","76924"
"63865990","8330107","0","Would be better to first lowercase the whole string","2016-07-06 10:36:01","1479680"
"94893966","1081601","0","Thats a very compact answer that covered all http servlet access methods","2019-01-03 07:45:21","10497483"
"63894693","33118899","1","Deadlock potential: use the `.communicate` method instead","2016-07-07 02:15:41","3750257"
"110982460","40411553","0","Good call!. I downloaded it and used it first time. The output results are very informative and colourful and very helpfull. This prog will stay in my machine for ever. I have also put it on my ""Install a new computer"" list of programs. Cheers!!","2020-07-06 03:01:00","4878088"
"78710470","29648972","20","This is wrong. Read this for correct interpretation of REST 

http://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven

or this 

https://stackoverflow.com/questions/19843480/s3-rest-api-and-post-method/19844272#19844272","2017-08-25 07:09:35","1096194"
"78710546","671118","0","Corrections to accepted answer here. https://stackoverflow.com/questions/19843480/s3-rest-api-and-post-method/19844272#19844272

Or here http://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven

Or here 

http://web.archive.org/web/20130116005443/http://tomayko.com/writings/rest-to-my-wife","2017-08-25 07:11:57","1096194"
"17917404","12946734","0","why would this be downvoted? in my experience, this is far superior to the other approaches, would love to know why not","2012-10-31 09:31:17","1342121"
"110995378","62156529","0","An important clarification for new programmers: This *does not* remove the target item from the array. It creates an entirely new array that is a copy of the original array, except with the target item removed.","2020-07-07 12:20:26","111635"
"110995401","62115863","7","An important clarification for new programmers: This *does not* delete the target item from the array. It creates an entirely new array that is a copy of the original array, except with the target item removed. The word ""delete"" implies that we are mutating something in place, not making a modified copy.","2020-07-07 12:21:49","111635"
"32800121","178450","1","This doesn't work in the latest jquery. It's been deprecated. What's the best work around? (Why did they remove this...?)","2014-02-11 06:46:25","82322"
"48222496","2251026","0","Is there any significance to using '0x00000008'? Is that a specific value that has to be used or one of multiple options?","2015-05-05 01:13:32","4374739"
"32800593","21636975","1","@Phil you ever came across sub directories in you application suppose if you're on http://www.url.com/admin/login.aspx you want to go to http://www.url.com/customer/orders.aspx  window.location.host will give you http://www.url.com then you can append your sub directory and page","2014-02-11 07:05:13","1106625"
"3520844","271526","134","@Shervin Encouraging nulls makes the code less understandable and less reliable.","2010-08-02 09:17:20","4725"
"17936032","2117523","150","Surely the answer to @Muxa's question is 'no'? It's never truly safe to trust something that came from the client. I guess it depends on how likely your users are to bring up a javascript console and manually change the variable so to something they want. Or they could just POST you back the id that they want. It would also depend on whether the user picking their own ID is going to cause vulnerabilities. Either way, if it's a random number ID that's going into a table, I would probably be generating it server-side, so that I know I have control over the process.","2012-11-01 02:34:05","665488"
"94936700","11566262","0","An explanation would be in order.","2019-01-05 10:37:24","63550"
"94936722","16487716","0","An explanation would be in order.","2019-01-05 10:38:39","63550"
"32805122","14419228","4","@TerryLi Case 4: you have all the same socks, your wife has a lot of different ones. Solution: make 2 piles, use 'case 1' for the pile of your socks, let your wife deal with her own mess. That's basically how I do it :-)","2014-02-11 09:34:14","1031591"
"3536108","1628584","118","Wondering if you can explain WHY this works.

To me you're creating a new branch, removing 3 commits from the old branch you are still on, and then checking out the branch you made.

So how do the commits you removed magically show up in the new branch?","2010-08-03 06:28:13","66584"
"94942667","40288213","3","It doesn't do the same thing. Move your `x=x-1` before `printf` then you can say ""it does the same thing"".","2019-01-05 05:05:49","201751"
"63946739","16956844","0","`grep -rl 'pattern' .` 
Recursive works with lowercase `-r` as well.
 Search Scope dot ` . ` for current directory is more intutive AFAIK rathan than ` / `","2016-07-08 09:43:35","573848"
"63946830","16956844","0","@nitinr708i `-R` and `-r` are different. From `man grep`: _Read all files under each  directory,  recursively. Follow  all  links, unlike -r._","2016-07-08 09:45:27","1983854"
"3540996","1628584","150","@Jonathan Dumaine: Because I created the new branch before removing the commits from the old branch. They're still there in the new branch.","2010-08-04 08:28:04","53850"
"32816739","932982","86","spot the 1 difference: 1.) an empty folder, 2.) a folder with .gitignore file in it. ;-)","2014-02-11 02:31:06","81520"
"111019130","100146","0","Well can someone also explain what does register tag do? I 'm using class X(ABC): from lot of time to create interfaces but what exactly register will enable me to do? The docs literally says one line about register.","2020-07-07 04:19:53","4213362"
"111021038","62115863","0","Yes, you are right. This is an immutable way of removing an element. Thanks for clearing this out.","2020-07-07 05:26:06","12132894"
"111021043","37358787","0","@PeterMortensen But unlikely since the OP has been deleted :).","2020-07-07 05:26:20","215552"
"111021129","57626233","0","Note that this function will live only as long as the `numbers` array. If you create a new array, you'll need to add the `delete` function to it as well.","2020-07-07 05:29:20","215552"
"48247053","1213360","0","I wonder how many modern programmers out there that hasn't used a hex editor? If you can't break down binary files to understand what is happening it then the concepts of stacks and heaps become oblivious. Not everyone is capable in programming in assembly and it is even beyond my skill of programming, but knowing the concepts of machine architecture and how instruction sets work is vital in mastering your trade.","2015-05-06 01:53:47","1757805"
"48247063","1213360","0","(continued)... The programmers today with higher levels of abstraction are similar to modern day pilots who depend on auto navigation systems : when that system breaks down and they need to rely on charts they become lost.","2015-05-06 01:54:14","1757805"
"3546647","1628584","5","I see. Branching makes of clone of the state it is currently in. For some reason I was under the assumption that those commits would not get cloned because they were not on a remote server (too much git-svn haha). Thank you.","2010-08-04 06:44:56","66584"
"111030250","105074","55","This should not be the accepted answer. It does not actually answer the question - instead encouraging the import of 25,000 lines of code for something you can do with one line of code in any modern browser.","2020-07-08 12:36:45","19851"
"78771524","29648972","5","@kushalvm That academic definition of REST is not used in practice.","2017-08-27 03:31:14","5749914"
"78771991","29648972","1","Not sure what do you mean by academic? Roy fielding didn't have academic concerns alone. Haha. I just hinted at actual meaning. Practices are custom and need based. Hope you are not agreeing to the fact that this is the way REST should be explained. I was stunned to find these explanations after a few years of doing CRUD REST than actual REST.","2017-08-27 03:58:07","1096194"
"78787393","24351531","1","@Wallacoloo Related to the question you're right, nevertheless the file is useful, I'll use it for an upload-directory like that where files shall be protected by .htaccess. Contrary to Romans explanation the .htaccess-file will be committed as it's excluded by the ignore-rule. [old thread, I know]","2017-08-28 08:10:29","1019850"
"78787463","826814","0","Selecting records in a table is another exception. If you want to enable holding shift/control to select and highlight multiple records, then you have to disable text-selection.","2017-08-28 08:12:48","1833961"
"48265477","246128","0","This solution doesn't work for autoenv `.env` scripts (or similar scripts that execute when you `cd` because it will call itself recursively) why not just DIR=$( dirname ""${BASH_SOURCE[0]}"" )","2015-05-06 12:02:02","158483"
"3563980","487292","7","I'm talking about the f in f(n) = O(g(n)), not the g as you seem to understand.","2010-08-06 12:30:15","49246"
"17991450","682343","0","You also could use `git stash/git stash pop` to avoid zipping/backing up everything","2012-11-03 07:05:17","394647"
"3578150","487279","9","Complexity most definitely can be about space. Have a look at this: http://en.wikipedia.org/wiki/PSPACE","2010-08-08 03:58:49","231853"
"63991859","34093201","2","This doesn't make sense as something that should be a jQuery method. There's no difference between `$(""div"").redirect(url)` and `$().redirect(url)`. You could make it a static method, like `$.redirect(url)` but there's not really much need for that either. jQuery doesn't need to be involved at all.","2016-07-09 10:10:34","2624876"
"32879930","932982","2","@CarlosCampderrós came here to say that as well! I put a .gitignore into the empty directory with one comment ""# this empty directory needs to be checked into git"". This answer could pose problems when you actually want to put something into the directory and forget about your clever .gitignore instructions.","2014-02-12 09:07:51","798634"
"18013323","8439617","1","What's funny is that Ryan didn't help answer @Robert Willis's question.  but he answered mine.","2012-11-05 01:59:58","394213"
"63998014","662454","1","@Timeless CUDA is an example where stack and heap are strongly discouraged. There are thousands threads, having a stack for each of them is very costly. For that reason, most device functions are inlined and recursion should be avoided. Heap operations, such as `malloc` are also possible but discouraged for efficiency reasons. The preferable approach is to allocate all memory you need once, and then just use/reuse it without any allocation/deallocation.","2016-07-10 08:39:39","635654"
"95004104","762018","0","Now `let` support all latest browser today except Opera, Blackberry & QQ Browsers.","2019-01-08 05:11:33","5156011"
"95009226","14364249","0","On Windows, what about permissions errors when parent directory is owned by Administrator, or else a special directory e.g. `C:\Program Files or ...(x86)` or `Documents and Settings`, and hence creating directory fails? Does this code propagate the exact permissions error?","2019-01-08 09:08:00","202229"
"64007500","22654961","0","Worked for me… But can one of you explain you prefer this to the `reset --hard` method? Thanks!","2016-07-10 06:42:32","1241736"
"64009410","20531076","3","Does the http spec say that? Or are you basing your comment on something else?","2016-07-10 08:41:57","2424255"
"48305456","16456126","3","(Rephrasing my comment) Your code has a problem: it executes Date.now method instead of checking its support first. On older browsres it will cause _Date.now is not a function_ error.","2015-05-07 09:18:53","87015"
"111086907","33567227","0","This is awesome! Thank you","2020-07-09 03:23:54","1035792"
"111088166","19298943","39","Amazing that you got almost a thousand upvotes and consequently almost ten thousand points for just giving the same answer as the accepted one, but then three years later.","2020-07-09 04:00:08","4575331"
"32895313","20093702","6","@GrijeshChauhan Because on ""compliated"" expressions, e. g. involving a function call etc., this would be executed in both cases. This might not be wanted.","2014-02-13 08:14:33","296974"
"95025820","14364249","0","@smci It doesn't seem so, but at least on Linux the available permissions can then be checked. I don't know about Windows.","2019-01-08 05:13:50","832230"
"64017433","67699","76","It always boggles me why ""clone"" isn't in the sense of an exact copy. If it's an exact clone, shouldn't all the branches be part of the local repository? I mean isn't that one of the point of being distributed? So when something repository is gone you still have a complete copy of everything. Or is it the so called ""remote"" really are part of the local repository already?","2016-07-11 06:31:03","133747"
"64019594","22654961","1","It doesn't alter the working tree at all - whatever modifications you have made to your code stay untouched - you don't even have to commit anything.","2016-07-11 07:41:24","390363"
"48317588","762011","27","For the longest time I did not know that vars in a for loop were scoped to the function it was wrapped in. I remember figuring this out for the first time and thought it was very stupid. I do see some power though knowing now how the two could be used ffor different reason and how in some cases you might actually want to use a var in a for loop and not have it scoped to the block.","2015-05-07 01:54:27","2623804"
"48317975","762297","2","The idea of accidentally creating partial block scope on accident is a good point, beware, `let` does not hoist, to use a variable defined by a `let` defined at the top of your block. If you have an `if` statement that is more than just a few lines of code, you may forget that you cannot use that variable until after it is defined. GREAT POINT!!!","2015-05-07 02:01:33","2623804"
"48318455","24179268","0","Also there are usefull underscore.js function called `humanize`. It converts an underscored, camelized, or dasherized string into a humanized one. Also removes beginning and ending whitespace, and removes the postfix '_id'.","2015-05-07 02:11:33","2997850"
"48318505","11444416","8","Although a let enclosing block is deprecated you can do the same thing by creating an explicit block with braces. { let bar = foo; let foo = bar; `code`; `more code`; console.log(bar + foo); } and simply have your lets at the top of your block of code wrapped in braces.","2015-05-07 02:12:30","2623804"
"48318708","11444416","1","Just found this repo that allows you to use let blocks in your code. Because let blocks are pretty nice IMHO. https://github.com/getify/let-er which `Transpiles non-ES6 let-blocks into ES6 (or ES3)`","2015-05-07 02:16:47","2623804"
"95040494","14364249","0","Note that `NotADirectoryError: [Errno 20] Not a directory: ...` _is_ raised by `pathlib.Path('/my/directory').mkdir(parents=True, exist_ok=True)` in cases where a file exists matching the proposed name of a directory in the path, e.g., if `my` is a file.","2019-01-09 06:03:48","4933452"
"32910525","671132","0","REST became popular for its simplicity","2014-02-13 02:42:27","1863694"
"111107278","1628584","0","I rolled back @Rennex's changes, since `--keep` option keeps the changes in the moved commits as uncommited changes, which is not the desired effect. Instead it makes a lot of mess if you move multiple commits with many changes. If you want to keep uncommited changes, stash them before.","2020-07-10 08:16:43","1395698"
"95049168","38510931","1","In example 3 you are re-declaring node which cause exception. These all examples also work perfectly with `var` too.","2019-01-09 10:57:08","5969346"
"3623657","237176","26","But be careful: http://stackoverflow.com/questions/237104/javascript-array-containsobj/1342312#1342312","2010-08-12 11:16:50","65977"
"3623661","3406317","2","But be careful: http://stackoverflow.com/questions/237104/javascript-array-containsobj/1342312#1342312","2010-08-12 11:18:09","65977"
"18043510","179231","6","It's dangerous for a script to `cd` out of its current directory in the hope of `cd`ing back again later: The script may not have permission to change directory back to the directory that was current when it was invoked. (Same goes for pushd/popd)","2012-11-06 01:15:21","41861"
"95068021","6866485","0","This is great. Super useful if your last commit was a ""wip"" but you want to re-organize into more meaningful commits, in which case use. `git reset --soft HEAD~1`","2019-01-09 08:20:00","1269953"
"32935929","138233","28","You can use ""#"" and then bind a click event to all links with ""#"" as the `href`. This would be done in jQuery with: `$('a[href=""#""]').click(function(e) { e.preventDefault ? e.preventDefault() : e.returnValue = false; });`","2014-02-14 04:58:32","507629"
"78857571","37056702","0","Short and concise. This post along with MeganZhou's popped out as being the answer to why we were having issues, the branchname and tagname were identical. I deleted the local tag and pushed to :refs/tags and all was good.","2017-08-29 10:56:26","396988"
"111125422","59916","0","@NecipAllef that works only if the script is in the same directory as you/the caller, if you call /directory/test.sh in / it'll output ""I'm at //test.sh""","2020-07-10 06:17:21","7013460"
"111126169","111119","1","""they are used to make some behaviour work that everybody intuitively expects to work anyway""

Appreciate this comment, as that was partly what I was struggling with. I felt like I was missing something, but it turns out I wasn't!","2020-07-10 06:45:54","2421682"
"111127712","28865728","1","Thank you for making it clear that URIs still have standardized syntax, albeit more flexible than URLs. Daniel Miessler's blog post (linked in the comment above) misses this point.","2020-07-10 07:50:16","1098906"
"111130024","10916838","0","@ShishirArora You're right, I just tried it, it throws a 'Uncaught DOMException: The object could not be cloned.' This is also true for the Notification hack.","2020-07-10 09:39:43","5078765"
"18077719","8439617","82","This answer, despite having a ridiculous number of upvotes, is just wrong, as it will capitalize the first letter of *every* word. @Ryan, you'll earn a [Disciplined badge](http://stackoverflow.com/badges/37/disciplined) if you delete it. **Please do so.**","2012-11-07 06:06:50","1269037"
"18077817","1026098","8","@999: where does it say that `substr()` is deprecated? [It's not](http://code.google.com/p/closure-compiler/issues/detail?id=285), even now, three years later, let alone back in 2009 when you made this comment.","2012-11-07 06:12:41","1269037"
"3648380","1628584","93","branches in git are just markers which point to commits in history, there is nothing being cloned, created or deleted (except the markers)","2010-08-16 11:32:12","112968"
"95080636","22343224","0","[Semantic versioning](https://docs.npmjs.com/about-semantic-versioning) in npm and node","2019-01-10 08:33:42","465053"
"48366103","25119481","0","This should be the correct answer. Instead of tricking Android into hiding the keyboard when it really should be there, we tell it that the user is done, which in turn triggers the same ImeAction [stupid name, I admit] as if the user had clicked ""DONE"" on the keyboard. This way it makes no difference if the user confirms input on the keyboard or taps the UI button.","2015-05-08 04:03:12","3642107"
"78877326","35539401","0","@AlexanderMills `git reset --hard` resets all uncommited changes BUT UNTRACKED FILES to the state of the latest commit. That is why we first need `git add .` -- that stages all untracked files (so they are reset, too)","2017-08-30 11:54:22","3027390"
"48368491","21197260","1","@Katarzyna use the ""q"" key to exit from reflog","2015-05-08 05:09:39","928376"
"95085009","59839","0","Why doesn't this work for relative paths? For example `../../../../../my_dir`.","2019-01-10 10:40:53","1202172"
"48369947","477578","1","I'm not a fan of Charlie Miller's strategy to be honest. The system I favor just employs two random values: One is stored in the database as an index, the other is stored in the client's cookie and its hash is stored in the database. We then compare the hashes in constant-time. https://paragonie.com/blog/2015/04/secure-authentication-php-with-long-term-persistence - Explained in detail here.","2015-05-08 05:54:57","2224584"
"95087512","53798477","4","You might be interested in yaml (https://yaml.org/), a quasi-superset of json which allows for comments and doesn't need quotation marks.","2019-01-10 11:54:50","279858"
"3656666","3499225","2","Mh, why that? Please don't feel any defensive, I'd just like to learn more about Java :)","2010-08-17 05:54:02","17713"
"48375588","17217204","184","You will need to use -M to rename if you are only changing capitalization, as git will tell you that branch already exists.","2015-05-08 09:04:31","1876899"
"48386762","2389423","2","`git reset --hard` will also discard any local modifications irreversibly in addition to walk back in history. `git reset --keep` resets the history while preserving local changes if any, much safer.","2015-05-09 10:40:48","4830165"
"18103247","477578","5","There are a few things here which were either briefly mentioned or not at all. One being the use of hash algorithms specific to passwords (e.g. bcrypt). This means that the time to compute the hash increases to 0.1 seconds (at least) but that makes a big difference when searching an entire keyspace. The second thing is that security must be everywhere: sanatizing user inputs, using prepared statements for sql, making sure that resources arent url predictable, then there is the whole XSS set of issues...","2012-11-07 10:33:14","516813"
"3669726","179231","1","Should not the colon in the line 1 be moved in line two between the if- and then-statements?","2010-08-18 10:08:00","98693"
"3669794","179231","5","And instead of using pushd ...; would not it be better to use $(cd `dirname ""${SCRIPT_PATH}""` && pwd)? But anyway great script!","2010-08-18 10:16:00","98693"
"18103555","477578","3","Agreed with @chacham15. Lockout and throttling policy is great, but using a *password* digest like bcrypt or scrypt instead of a general purpose hashing function enforces this at the lowest level possible. There is no way around having to put in the full amount of work to generate a password digest, so no developer can simply forget to implement or accidentally disable the throttling mechanism.","2012-11-07 10:47:45","99646"
"18105015","6985280","30","Hard to tell which answer you are talking about in 'I do not think the above answer is ""wrong""'","2012-11-08 12:02:37","128583"
"18106195","10701801","2","Thought I would mention the potential accessibility concern here. You should include a message (which can also be hidden) that the field should be left blank.","2012-11-08 01:26:04","123695"
"32976354","79923","15","Also (really) good: http://www.codeproject.com/Articles/76153/Six-important-NET-concepts-Stack-heap-value-types (the stack/heap part)","2014-02-15 05:50:34","385273"
"95108936","53203953","1","Best answer by far, and extra points for showing the regex lambda syntax. I especially like this one as it can be a fluent cut-and-paste anywhere.","2019-01-11 12:14:44","647492"
"32980413","1213360","3","Every reference type is composition of value types(int, string etc).  As it is said, that value types are stored in stack than how does it work when they are part of reference type.","2014-02-15 10:26:30","276970"
"18111806","179147","186","@hughes isn't `git push -f` a bit dangerous if other people are using the same repository?","2012-11-08 07:48:41","243164"
"111173010","11227902","22","wait a second, doesnt shifting negative values to the right yield implementation-defined values? int t = (data[c] - 128) >> 31;
sum += ~t & data[c];","2020-07-12 11:52:48","4416169"
"111180822","57205151","0","`git reset --hard origin/develop` this was what I was looking for, thank you!","2020-07-13 08:30:10","883225"
"48408325","5334825","7","Thanks, I used it to validate that the string dosn't contain squence of digits  ^((?!\d{5,}).)*","2015-05-10 10:42:31","394674"
"78924799","10976934","2","The whole point of JSON is that it contains only data. If you feel the need for comments, you should be using XML, not JSON. Same goes for processing instructions (XML has them too). Really, really...if you're using JSON for anything other than rectangular data (rows and cols), then you're probably wrong and should be using XML.","2017-08-31 01:27:12","878216"
"95138018","406408","0","same with word boundaries: `^((?!\bhede\b).)*$`","2019-01-11 08:19:59","2891692"
"18135376","549","81","Wow. Lengthy answers, dozens of upvotes for some of them, yet nobody mentions the common mistake of serving login forms over HTTP. I've even argued with people who said ""but it submits to https://..."" and only got blank stares when I asked if they were sure an attacker didn't rewrite the non-encrypted page the form was served over.","2012-11-08 10:34:35","162354"
"48426626","17114749","0","I think ""General Rule"" covers it generally having the ID or name in the URL. Great answer!","2015-05-11 04:48:13","458321"
"111204075","28441119","1","@MPStoering using the quotes also worked for me in git bash on Windows. Cheers","2020-07-13 10:03:59","695671"
"78937107","27664932","2","also `git clean -nxdf`","2017-08-31 07:07:35","1525529"
"78944381","7216269","1","I got confused by the `path/to/dest/.git` part and left it out. Had to `mkdir x; mv x.git x/.git; cd x; git config --bool core.bare false` to recover. Else, yes, this is the solution. Thanks.","2017-09-01 01:30:28","969478"
"64144754","7244456","0","It'd probably be easier and faster if one simply deleted and re-forked.","2016-07-14 06:09:35","2851157"
"111213646","16956844","0","How to avoid searching subdirectories? If `-R` is omitted like this `grep -il 'searchtext' /path/to/dir/` it says `grep: /path/to/dir/: Is a directory`.  `-R` is mandatory?","2020-07-14 07:48:17","1616785"
"111213796","16956844","0","@sjd not at all, you can omit `-R`. Those messages go through stderr, so you can hide them by saying `grep -Ril '...' 2>/dev/null`","2020-07-14 07:53:25","1983854"
"111221091","16956844","1","@fedorqui'SOstopharming' Thanks for the quick response. But this seems working. to avoid subdirectories `grep -nl ""text"" /search/path/*` . Remove `r` and use `*` and it searched only in the given dir","2020-07-14 11:48:38","1616785"
"111221453","16956844","0","@sjd the only problem with that approach is that it will exclude the hidden files. You can use `grep -nl ""text"" /search/path/{*,.*}` to include them, although it will produce some directory errors when trying to grep in `.` and `..`.","2020-07-14 11:59:50","1983854"
"64159853","5201642","1","after doing this while trying to push getting error error: failed to push some refs to 'git@github.com:....'
hint: Updates were rejected because the tip of your current branch is behind. I found how to solve this here: http://stackoverflow.com/questions/5667884/how-to-squash-commits-in-git-after-they-have-been-pushed","2016-07-14 12:53:40","2607372"
"64160349","5189560","2","post squash one need to do force push http://stackoverflow.com/questions/10298291/cannot-push-to-github-keeps-saying-need-merge","2016-07-14 01:04:41","2607372"
"78959802","3737139","0","@dncrane - I could not search for `... javascript` (spread/rest) https://rainsoft.io/how-three-dots-changed-javascript/","2017-09-01 12:02:34","295783"
"64167871","21890252","0","@EthanB yes, merging with the branch ancestor (at the time of initial branching) is quite useful. The problem is we cannot rely on the ancestor's name because it could be changed. Right now the best way is to look at git-log, count and use the marvelous `squash` alias of yours.","2016-07-14 03:57:00","311567"
"64167976","21890252","2","@A-B-B you can use `git commit --amend` to further change the message, but this alias lets you have a good start on what should be in the commit message.","2016-07-14 03:59:43","311567"
"48445673","426258","0","If you need the onchange event triggered, it's `$(""#mycheckbox"").click();`","2015-05-11 02:06:24","2067690"
"18181749","13308092","16","This is incorrect. i and cls are not ""static"" variables. they are called ""local"" or ""automatic"" variables. It is a very important distinction. See [link] http://stackoverflow.com/a/13326916/1763801 for clarification","2012-11-10 11:05:05","1763801"
"18181773","662454","10","This answer includes a big mistake. Static variables are not allocated on the stack. See my answer [link] http://stackoverflow.com/a/13326916/1763801 for clarification. you are equating ""automatic"" variables with ""static"" variables, but they are not at all the same","2012-11-10 11:07:01","1763801"
"18183422","662454","15","Specifically, you say ""statically allocated local variables"" are allocated on the stack. Actually they are allocated in the data segment. Only automatically allocated variables (which includes most but not all local variables and also things like function parameters passed in by value rather than by reference) are allocated on the stack.","2012-11-11 01:44:52","1763801"
"111231742","9180445","0","Once you copy them with `cherry-pick`, what's the best way to remove them from their original branch? I did it via dropping the commits thru `git rebase -i` but wondering if there is a preferred way.","2020-07-14 04:53:05","717481"
"18187018","477578","0","@namelessjon: Correction: Even if all users had high-entropy passwords, we'd still want to hash them in case of database theft","2012-11-11 09:45:59","57068"
"111235376","19298943","2","To get them all, I added: `git remote set-url --push origin git@github.com/User/Branch.git` and `git remote set-url composer https://github.com/User/Branch.git`","2020-07-14 06:56:50","802469"
"33043270","19095988","1","It could use a bit more exposition, but yes, this was the best solution to my problem.","2014-02-17 02:38:14","347293"
"33043383","246128","1","A stupid mistake, but at first I didn't get why ${BASH_SOURCE[0]} didn't work until I realized I had used #!/bin/sh instead of #!/bin/bash.","2014-02-17 02:40:46","11722"
"78982348","61212","7","To clarify for the understanding of the uninitiated and those new to Git - run git status and if it shows a file as untracked, and you don't want that file in the repo, you can just go to your filesystem and delete or move it.  This will not do anything bad to your local repo or to Git. You can also use `git clean` or some variation in the answers below, including the interactive version to delete just selective files, but interactive mode can be tedious. Whatever you do, make sure you understand what `git clean` will delete or use `--dry-run` to have it tell you without deleting anything.","2017-09-02 06:15:43","6501141"
"48464297","10361980","15","@BenBurns Yeah, but what if I want to name my kid `&#78;&#117;&#108;&#108;`?","2015-05-11 11:22:42","1166266"
"95158626","4754797","0","Also, dont forget the push all command `git push --all origin`","2019-01-12 10:30:31","3641164"
"18198871","662454","1","When I said ""statically allocated"" local variables I meant as opposed to dynamically allocated.  If you start a function with `int a;`, *a* will go on the stack.  If you start a function with `int *a = (int *) malloc(32768*sizeof(int));` then the contents of that array will not be on the stack as they're dynamically allocated.","2012-11-12 12:26:33","53212"
"18198902","662454","11","I've just realised you're right - in C, *static allocation* is its own separate thing rather than a term for anything that's not *dynamic*.  I've edited my answer, thanks.","2012-11-12 12:29:15","53212"
"18217325","662454","5","It's not just C. Java, Pascal, Python and many others all have the notions of static versus automatic versus dynamic allocation. Saying ""static allocation"" means the same thing just about everywhere. In no language does static allocation mean ""not dynamic"". You want the term ""automatic"" allocation for what you are describing (i.e. the things on the stack).","2012-11-12 05:16:28","1763801"
"18218804","662454","0","and if you want to see this in action in python instead of c, i added more code samples below :)","2012-11-12 06:13:56","1763801"
"111260369","53524255","0","instead of writing the same logic again just call activity?.hideKeyboard from your fragment implementation","2020-07-15 01:33:35","3734116"
"111260639","53524255","0","Btw, the fragment implementation doesn't work as stated by community wiki. To get the correct windowToken you'll have to call val windowToken = view?.rootView?.windowToken","2020-07-15 01:41:14","3734116"
"64206377","18671531","0","@YoushaAleayoub yes it will.

`KeyBoard.toggle(fragment.getActivity())`","2016-07-15 02:46:54","1417267"
"79014586","39383786","0","Note: `git stash -u` will soon (Git 2.14.x/2.15, Q3 2017) evolve a bit: https://stackoverflow.com/a/46027357/6309","2017-09-03 08:10:57","6309"
"64222415","671118","4","REST might be getting a bit old now ;) https://youtu.be/WQLzZf34FJ8","2016-07-16 01:50:38","4957288"
"48478581","67699","0","You will be able to checkout all branches (in different path) after cloning a repo, with the new `git checkout --to=<path>` command coming in Git 2.5+ (Q2 2015): that would support multiple branch checkout. See http://stackoverflow.com/a/30185564/6309.","2015-05-12 09:22:53","6309"
"111274971","58101436","3","This is what I came her for!","2020-07-15 09:32:37","3434874"
"64223408","162056","0","how do you ask git which files need merging?","2016-07-16 03:57:19","1601580"
"64223412","161813","0","how do you ask git which files need merging?","2016-07-16 03:57:34","1601580"
"95192104","5189560","1","In addition to the posted answers, GUI clients can do this easily. I can squash dozens of commits in GitKraken with only four clicks.","2019-01-14 12:56:31","4441547"
"64227452","2389423","1","+ for git reset --hard ORIG_HEAD","2016-07-16 09:18:34","827632"
"79023253","45722887","0","Downvoted because using this much code to achieve something so basic feels overkill to me.","2017-09-04 06:53:24","17786"
"48488154","244858","1","Why is `GlossList` not an array (`GlossList: [ { .. }, { .. } ]`)?","2015-05-12 12:58:11","3062017"
"64234623","18671531","0","@slinden77, lol, I'm talking about your Answer... not this one you have commented. So that answer still WONT work.","2016-07-16 04:55:06","1429432"
"95202796","44612374","0","In latest stable Firefox, this is way longer than the other strategies at that Jsben.ch link, by an order of magnitude or more.  It beats the others in the wrong direction.","2019-01-14 06:38:35","798371"
"33101350","16769722","9","I like the idea of using a dict comprehension, but your implementation is weak.  It is insane to use `... in list(y.keys())` instead of just `... in y`.","2014-02-18 08:18:48","674039"
"48500580","426258","0","""Checking something"" suggests testing it, so I think 'Making a checkbox checked' is a more clear and better title.","2015-05-12 05:26:09","1815231"
"18243855","477578","0","@Ferdy: Thanks :) a fixed 1 or 2 second delay will still work, but increasing it incrementally to 10 or 20 seconds will multiply the resilience against brute force attacks.","2012-11-13 03:35:47","57068"
"33108011","4754797","0","Per my reading of the docs, you only need a `git pull --all` at the end since it implicitly does the fetch?","2014-02-18 11:37:11","614880"
"33108984","671132","0","@hasenj The original version was very misleading. It didn't say much about REST at all. Frankly, back in 2009 most people called REST any HTTP API that wasn't SOAP.","2014-02-19 12:19:14","1202421"
"18251126","477578","0","@JensRoland Thanks for confirming the simplified model works. Albeit it less effective, I would prefer avoiding the pain that is reliably tracking login attempts. Better yet, I like part VIII of your answer best: outsourcing the issue alltogether. It's not just security that is a pain in building your own user management system, something as seemingly simple as reliably sending out emails is a pain as well.","2012-11-13 07:56:32","80969"
"48513976","271616","1","@Axel the whole point of using anything other than RuntimeException is the descriptiveness of the Exception. Why IllegalArgumentException over NullPointerException? Because when you are debugging an exception caused by this, the IllegalArgumentException is abundantly more obvious, especially when you put a message on it. This especially applies to enterprise applications when NullPointerExceptions creep up (yes, these happen in enterprise applications). In this same example, the programmer may not have control over whether or not assertions get processed by the JVM.","2015-05-13 02:01:29","1733377"
"64253665","18671531","0","@YoushaAleayoub uhm yes it will. The original question doesn't mention fragments, you are the one who mentioned fragments. So my answer is perfectly valid. To use it with fragments, call the method differently from a `Fragment`, like a commented. Learn how to use methods please and then come back. You're confusing people with your silly replies","2016-07-17 04:48:09","1417267"
"48514938","20030933","0","As I know `INNER JOIN` is slower than `LEFT JOIN` in most of the times, And people can use `LEFT JOIN` instead of `INNER JOIN` by adding a `WHERE` for removing unexpected `NULL` results ;).","2015-05-13 03:01:51","4519059"
"48522614","20030933","0","These comments made me a bit uncertain. Why do you think `INNER` is slower?","2015-05-13 08:04:42","1665673"
"64259980","38423812","5","Please provide an explanation alongside a code chunk so that others with a similar question can easily understand what is happening. As it stands now, this question is in a low quality posts review queue.","2016-07-17 10:50:33","1345455"
"64260353","348234","18","I just discovered that there is a `git reset -p` just like `git add -p`. This is awesome!","2016-07-17 11:23:05","246724"
"18275217","179147","101","If you don't want to rewrite the entire commit message, go for ``git commit --amend -c HEAD``.  This will open the editor pre-populated with your old commit message, so you can change it.","2012-11-14 03:38:10","328817"
"79062083","36910139","1","This is brilliant and explains why join doesn't work as expected for Time Series index's. Time stamps one second apart are unmatched.","2017-09-05 09:22:46","2523501"
"64270612","161813","0","@CharlieParker `git status` will show you quite clearly which files that are in conflict and needs to be merged manually","2016-07-18 08:59:40","3713"
"64271336","38423812","1","Please edit with more information. Code-only and ""try this"" answers are discouraged, because they contain no searchable content, and don't explain why someone should ""try this"".","2016-07-18 09:17:30","1417185"
"79066785","27581592","0","It depends. If the goal of determining the existence of a ""file"" is to find out whether the path already exists (and is therefore not a path where new data can be stored without deleting other information), then `exists` is fine. If the goal is to determine whether it's safe to open a presumably existing file, then the criticism is justified and exists is not precise enough. Sadly, the OP doesn't specify which is the desired goal (and probably won't do so any more).","2017-09-05 11:24:42","1864036"
"79068796","33880044","5","{''} notation for property names.
echo $movies->movie->{'great-lines'}->line; can be used to access data in SimpleXMLElement. Maybe it can be used in other cases too.
http://php.net/manual/en/simplexml.examples-basic.php","2017-09-05 12:15:04","1268893"
"95221462","406408","10","Why are so many answers saying `^((?!hede).)*$` ? Is it not more efficient to use `^(?!.*hede).*$` ? It does the same thing but in fewer steps.","2019-01-15 10:52:52","9192146"
"95221488","5334825","8","Why are so many answers saying `^((?!hede).)*$` ? Is it not more efficient to use `^(?!.*hede).*$` ? It does the same thing but in fewer steps","2019-01-15 10:53:41","9192146"
"79082978","45722887","1","It's matter of opinion. For me It's a powerhouse and fast function. I've used for years. One cannot do it on fewer lines. For those who just want to replace chars and pieces in strings without worrying about escape characters from regular expressions, it might be a good choice.
The number of lines does not matter much, since it works is a tested black box","2017-09-05 06:34:34","1062727"
"95225656","5201642","0","I thik this is currently the best method. But watch our for its caveat: If you have unstaged or uncommitted changes, Git won't stop you from performing these operations, and your uncommitted changes will get merged into the squashed commit. This probably is or is not what you want.","2019-01-15 01:09:53","418966"
"33143298","7286050","1","Important to note this only uses basic POSIX.2 regular expressions and thus whilst terse is more portable for when PCRE is not available.","2014-02-19 05:25:48","175849"
"33149166","273192","8","if the path exists one has not only to check if it is a directory and not a regular file or another object (many answers check this) it is also necessary to check if it is writable (I did not find an answer that checked this)","2014-02-19 07:52:54","754550"
"64316923","8212184","0","Currently reading some Oracle Database Reference about 'Null Values in Arithmetic Expressions'. It states: 'If any column value in an arithmetic expression is null, the result is null. For example, if you attempt to perform division by zero, you get an error. However, if you divide a number by null, the result is a null or unknown.' But don't mind, this is totally not logical, there should be some silly guy somewhere at Oracle and he must be fired till these days...","2016-07-19 10:52:47","448078"
"64318801","35539401","3","`git add . && git reset --hard`","2016-07-19 11:35:46","1187067"
"3855831","46181","654","This regex eliminates valid, in-use emails.  Do not use.  Google for ""RFC822"" or ""RFC2822"" to get a proper regex.","2010-09-08 02:34:23","22483"
"111364476","62259741","0","first char of word to upper case = word[0].toUpperCase()
skipe first char and lower rest    =  slice(1).toLowerCase();","2020-07-19 01:10:51","11198747"
"64326432","35324551","5","I suggest running `git branch -d` (with lowercase 'd') first to ensure changes have been merged, and then push if successful (put `&&` in between commands)","2016-07-19 02:17:45","1679904"
"111367197","45361888","0","""NET thread""  is not a real stack. (the same for JVM) : they are SW concepts. (other call this ""activation record"") We must start from real circuits as in history of PCs to get a real comprehension.","2020-07-19 06:24:38","927333"
"111367932","45218814","0","This is very good if you want to avoid having to get involved in modules, and don't want to use a callback function, but do want to use `async` / `await`.","2020-07-19 07:25:57","595305"
"79104757","36463546","0","I've tried this with to put a merge on another branch, but then the cherrypick doesn't choose the other commits in the merge (only the top one), at least I think so. It seems however that after the reset, I can just ""git checkout <commit>"" (with the commit obtained from the reflog), and then create a new branch from there. whhat do you think?","2017-09-06 09:52:41","3467846"
"95261706","37452030","0","This does not answer the Question.","2019-01-16 01:27:15","139985"
"95261948","33748600","0","It is not just a bad choice.  It will fail with a `StackOverflowError` if the input stream contains more than a few hundred characters.","2019-01-16 01:33:39","139985"
"18336103","95246","55","`.readlines()` reads *all* lines at once i.e., it blocks until the subprocess exits (closes its end of the pipe). To read in real time (if there is no buffering issues) you could: `for line in iter(p.stdout.readline, ''): print line,`","2012-11-16 02:12:18","4279"
"18336228","2251026","3","you might also need CREATE_NEW_PROCESS_GROUP flag. See [Popen waiting for child process even when the immediate child has terminated](http://stackoverflow.com/q/13243807/4279)","2012-11-16 02:16:42","4279"
"33174352","6866485","1","@Kyralessa, I have a question about your answer.  You say that ""git reset --soft"" ""not only leaves your files alone, it even leaves your index alone. When you do git status, you'll see that the same files are in the index as before. In fact, right after this command, you could do git commit and you'd be redoing the same commit you just had.""  But if ""git reset --soft"" doesn't change the index, ""git commit"" wouldn't do anything.  Do you mean ""git commit -a"" (assuming there had been no changes in the working directory beforehand) or am I missing something (likelier)?","2014-02-20 10:48:16","631051"
"95268568","33748600","0","@StephenC That constitutes a bad choice in my opinion","2019-01-16 04:30:32","8200485"
"33179837","7244321","142","This can also be done from the github UI. I'd like to give credit [to this other poster][1].


  [1]: http://stackoverflow.com/a/21131381/728141","2014-02-20 01:00:31","728141"
"95270398","14488421","3","It will also throw an error if there's a circular reference in the object. So it's slow, unreliable and can throw errors and break everything else. No reason to use it ever.","2019-01-16 05:26:03","577781"
"33180229","15995332","0","@ridgerunner, doesn't have to be the best tho. I've seen benchmarks where the top answer performs better. (I was surprised about that tho.)","2014-02-20 01:10:10","107152"
"95272803","509295","99","This is a beautiful answer with the votes to prove it, but it misses one thing: you can substitute `None` for any of the empty spaces. For example `[None:None]` makes a whole copy. This is useful when you need to specify the end of the range using a variable and need to include the last item.","2019-01-16 06:49:18","5987"
"95275249","22654961","0","Here is the link to git branch command https://git-scm.com/docs/git-branch. And to clarify, with the command `git branch -f master HEAD~3`, it doesn't have to be `master`.","2019-01-16 08:18:14","468249"
"95278499","33748600","4","I agree.  It is a ""bad choice"" to use a method that doesn't work (except in trivial cases).   But not **just** a ""bad choice"".   Anyhow, I am down voting because this is wrong ... not because it is a ""bad choice"".   And also because you don't explain *why* this approach should not be used.","2019-01-16 10:20:42","139985"
"3886794","1473742","23","prototype also has `Array.include` that returns a boolean","2010-09-10 10:54:30","102008"
"33183713","6866485","3","@espertus, perhaps one way to look at it is that there are three things working here: Your files, your index, and your history (that is, your branch pointer).  Let's say you're at commit C (as above).  Your files, index, and branch pointer match.  If you use git reset --soft HEAD~1, your branch pointer moves back to B, but your files and index stay at their versions in C.  If you use git reset --mixed HEAD~1, your branch pointer and index move back to B, but your files stay in their state at C.  Then your files show changes but your index doesn't.  git reset --hard HEAD~1 moves all three back.","2014-02-20 02:28:56","5486"
"95282177","1125968","3","To change all CRLF to LF endings, (start clean) `git config core.autocrlf false; git ls-files -z | xargs -0 rm; git checkout .`","2019-01-17 02:46:59","148844"
"33186444","21619906","2","String concatenation in a loop with the `+=` operator is not a good idea. It is better to use a `StringBuilder` or a `StringBuffer`.","2014-02-20 03:24:34","2470524"
"33188594","6866485","1","@Kyralessa, thanks so much for the quick reply.  When I woke up, I realized what I was missing. I assumed that the index is empty when everything is committed, but now I understand it's a copy.","2014-02-20 04:08:39","631051"
"33190298","7359734","1","Thanks for this, hadn't seen `MERGE` definitely like the syntax, and that you can use aliases (which don't work in the update/set/from) much better...  I've been using `WITH` statements for the query part.","2014-02-20 04:48:06","43906"
"95285214","49497485","2","This is not a deep copy but a shallow copy. @GurebuBokofu","2019-01-17 06:25:42","6081749"
"79137005","43365551","3","I needed to get rid of all local changes in a sub directory, without blowing away every other change. This answer helped a lot, thanks","2017-09-07 04:00:29","837649"
"48588037","10976934","103","That's like requiring all bicycles to have training wheels because some people can't ride bicycles. Removing an important feature because stupid people abuse it is bad design. A data format should prioritize usability over being idiot-proof.","2015-05-14 05:24:29","1122081"
"64354727","21232996","56","Git allows to commit a branch and not push it for very good reasons. Only using git push --all is like dropping a piece of git architecture. If it works for you, it is perfectly ok, great, do it forever. But PLEASE don't recommend others to avoid learning git just because it is a quick way to do things.","2016-07-20 08:24:02","1090198"
"18358478","95246","4","Could you elaborate on what you mean by ""if there is no buffering issues""?  If the process blocks definitely, the subprocess call also blocks.  The same could happen with my original example as well. What else could happen with respect to buffering?","2012-11-17 01:25:15","9188"
"18358805","95246","19","the child process may use block-buffering in non-interactive mode instead of line-buffering so `p.stdout.readline()` (note: no `s` at the end) won't see any data until the child fills its buffer. If the child doesn't produce much data then the output won't be in real time. See the second reason in [Q: Why not just use a pipe (popen())?](http://www.noah.org/wiki/Pexpect#Q:_Why_not_just_use_a_pipe_.28popen.28.29.29.3F). Some workarounds are provided [in this answer](http://stackoverflow.com/a/12471855/4279) (pexpect, pty, stdbuf)","2012-11-17 01:51:25","4279"
"18358836","95246","6","the buffering issue only matters if you want output in real time and doesn't apply to your code that doesn't print anything until *all* data is received","2012-11-17 01:53:26","4279"
"64366659","1628334","1","@undashes 
What if I fetch into bare repository and cannot execute `git reset FETCH_HEAD --hard` because there's no work tree?","2016-07-20 01:12:05","4261472"
"95303638","33748600","0","@StephenC I don't fundamentally agree with you, but thank you for at least leaving a comment instead of just fly-by downvoting. Recursion overflow issues are system limitations, and this method is not wrong, it just causes memory issues faster (albeit MUCH faster) than other methods.","2019-01-17 03:47:00","8200485"
"95307452","25813188","0","Even IE9 has support for [Array.prototype.some()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some) as of _ECMAScript 5_.","2019-01-17 05:45:50","1307074"
"111422165","61351911","0","What if the object is like this: { 0 : null }, I am getting a key whose value is null. What to do in such cases?","2020-07-21 05:59:59","9564433"
"95312200","52704","0","@Readonly I think, the question should be, ""How do I discard unstaged changes in Working Tree"" Because you can unstage changes in staging area by `git reset HEAD file1` that overwrites `file1` from most recent commit in commit History.to Staging area.","2019-01-17 08:33:00","3317808"
"95314920","33748600","2","For the Java language and implementations, the absence of tail-call optimization is a deliberate design choice; see https://softwareengineering.stackexchange.com/questions/272061/why-doesnt-java-have-optimization-for-tail-recursion-at-all.  It should be viewed as inherent to Java.  Certainly it is common to all extant mainstream Java implementations ... including Android.","2019-01-17 10:30:52","139985"
"95315931","487258","0","One sentence explanation: ""One function does not grow faster than another one"".","2019-01-17 11:22:47","2503111"
"95317957","630475","0","put ""SHOULD be considered as a modified version"" - it's allowable that PUT on an existing object not perform the update.  but reccomended that it does","2019-01-18 01:57:29","471930"
"18368845","630453","17","Just to bring @MarkNottingham's comment to the latest revision, here's **[POST](http://tools.ietf.org/html/draft-ietf-httpbis-p2-semantics-21#section-5.3.3)** and **[PUT](http://tools.ietf.org/html/draft-ietf-httpbis-p2-semantics-21#section-5.3.4)**, as defined on HTTPbis.","2012-11-18 01:58:46","341929"
"64383305","14889969","40","@MooingDuck To a human eye, ""TTFFTTFFTTFF"" is a predictable sequence, but what we are talking about here is the behavior of the branch predictor built into a CPU.  The branch predictor is not AI-level pattern recognition; it's very simple.  When you just alternate branches it doesn't predict well.  In most code, branches go the same way almost all the time; consider a loop that executes a thousand times.  The branch at the end of the loop goes back to the start of the loop 999 times, and then the thousandth time does something different.  A very simple branch predictor works well, usually.","2016-07-20 09:07:37","166949"
"64383386","14889969","36","@steveha: I think you're making assumptions about how the CPU branch predictor works, and I disagree with that methodology. I don't know how advanced that branch predictor is, but I seem to think it's far more advanced than you do. You're probably right, but measurements would definitely be good.","2016-07-20 09:10:18","845092"
"64386916","5201642","24","I also need to use `git push --force` afterwards so that it takes the commit","2016-07-21 12:21:52","2065702"
"79167183","244858","0","If you are returning the json via api then the client should be using the HTTP Options verb to read the json descriptions/comments","2017-09-07 05:41:36","1140411"
"79183113","28342808","2","For `Git Bash` on windows, in `Vim` sometimes `ESC` not working. use `CTRL` + `[` instead.","2017-09-08 06:53:36","681830"
"79185166","40896972","0","In my case this didn't resolve merge conflicts well, since for some reason it kept duplicate lines of config in C# projects. Though it was more friendly than ENTIRE FILE IS DIFFERENT, which I had before","2017-09-08 07:55:23","905422"
"18393886","2798934","6","yep, the @lloydmoore solution worked for me.  Could do with being an answer rather than just a comment.","2012-11-19 09:54:51","138557"
"48639536","23853061","5","@cartland (or others) - yes, it says ""This branch is 1 commit ahead of ..."" Is this something to worry about? Is it possible to get rid of that message?","2015-05-15 10:59:23","253938"
"18404591","487278","1","A graph of a plot of logarithmic function would have aided in understanding visually the O(log n).","2012-11-19 04:08:01","1114457"
"64420217","11828573","1","`Esc` only goes to command mode if you're still in input mode. If you're in Ex mode, it does not: `E492: Not an editor command: ^[:q`","2016-07-21 06:07:30","2343847"
"64422838","22345808","0","You now have * wich updates to most recent update regardless the version.","2016-07-21 07:30:27","2095425"
"111451588","54352201","0","Thanks, Abhishek. Based on your answer, I made this Shellscipt: https://gist.github.com/ivanleoncz/c20033e5f4b24304cbc39e0bac1d43e8 Feel free to improve :).","2020-07-22 12:22:25","5780109"
"64430470","549","0","https://github.com/FallibleInc/security-guide-for-developers is a good reference","2016-07-22 01:54:55","56145"
"33268026","163659","0","I'm on Windows and I received this message when running the command `git mergetool`:

**This message is displayed because 'merge.tool' is not configured.
See 'git mergetool --tool-help' or 'git help config' for more details.
'git mergetool' will now attempt to use one of the following tools:
tortoisemerge emerge vimdiff
No known merge tool is available.**

I'll try installing Beyond Compare.","2014-02-22 05:29:31","2162673"
"79213100","46124676","0","While this is not wrong but actually not a new approach. At least [this answer](https://stackoverflow.com/a/13377128/3931192) and [this one](https://stackoverflow.com/a/1026098/3931192) do the same tasks...","2017-09-08 10:20:24","3931192"
"111460039","22345808","0","Is timestamp (package's publication time on npm/nexus/etc) taken into account for  specifying the version using `~` and `^`?","2020-07-22 08:30:05","4374258"
"79219139","19095988","5","So, just so you guys know git rm -r --cached . will remove literally every single file in the repo from tracking. Every one. Regardless of whether its in the gitignore. I'm apparently an idiot and actually ran that command and pushed lol. And I had thousands and thousands of files. I had to open reflog, git clean -d,  checkout branch before this command, create temp branch, set master to track new branch, check  out master, and force push to fix it. ouch.","2017-09-09 07:47:04","2500182"
"79219977","246128","2","Seems like no one has the problem with changing working directory without putting it back where it was. :( EDIT: My bad `$()` creates a new shell, doesn't it?","2017-09-09 08:47:30","78935"
"48675998","1274447","0","If you're having problems with this, try running it on the root directory of your git repo, rather than a sub-folder.","2015-05-17 05:00:40","560791"
"111465733","56117578","1","Please note that the OP did not explicitly include the [tag:github] tag in their question, so the last step might not be applicable to the OP.","2020-07-22 11:33:47","6782707"
"79228769","43365551","2","Please describe what the two commands do. It's really unhelpful to have no explanation.","2017-09-09 05:22:37","2463900"
"3966031","426273","0","You can also go `$("".myCheckbox"").click()`","2010-09-20 11:49:06","353790"
"48685318","27157553","3","While this link may answer the question, it is better to include the essential parts of the answer here and provide the link for reference.  Link-only answers can become invalid if the linked page changes.","2015-05-18 03:03:07","1461424"
"18435070","13308092","9","I did not say they were static _variables_. I said that int and cls1 are static _items_. Their memory is statically allocated and therefore they go on the stack. This is in contrast to an object which requires dynamic memory allocation which therefore goes on the heap.","2012-11-20 02:38:13","343204"
"48691094","28865728","8","is ""C:\myfile"" an URI,URL or URN ? or none of them.","2015-05-18 07:36:09","1833961"
"95376198","45323085","40","For huge nested lists,' list(numpy.array(a).flat)' is the fastest among all functions above.","2019-01-20 01:57:20","8145026"
"64465303","52713","0","That's strange PandaWood. I just used this solution and it did exactly what I wanted.","2016-07-22 09:58:22","5800592"
"48704903","27157553","1","Sadly, the internet (and Stack Overflow) are filled with half-implemented, partially-correct versions of ES5 array methods.  That is entirely the point of the linking to the polyfill.  For a truly complete reproduction of *all* of the correct behaviors, it isn't good enough to summarize ""the essential parts.""  You have to implement all of the edge conditions as well.  To reproduce their content in its entirety is well beyond the scope of Stack Overflow.  Stack Overflow is not GitHub.","2015-05-18 01:38:48","313969"
"18463085","5305908","71","@ilius Nonsense.  A directory structure containing empty directories may be highly desirable in many situations (like an MVC app where you want a models directory but haven't gotten around to creating any models yet, or a shared views directory you plan to add shared views to, later).  Moreover, putting a README in each one of these is overkill as it's obvious what they're there for, and it's easy to forget to put a README in each one of them.  AND you have to remember to remove the README when you add some other files to them.  Basically, git should definitely allow empty directories.","2012-11-21 11:35:31","178757"
"79262176","46107537","2","Are there limitations on this?  i.e. does it apply only to cases where you have not added commits, merges, pull requests, or had pull requests merged into upstream since the last update?","2017-09-11 07:30:55","6501141"
"95406033","27571343","0","Great answer, thank you! Needed to undo a merge but the other answers just messed it up more, using `reflog` to get the SHA and pass that into `git reset` worked.","2019-01-21 03:10:17","692942"
"18472644","13308092","12","I quote ""Static items... go on the stack"". This is just flat out wrong. Static items go in the data segment, automatic items go on the stack.","2012-11-21 04:55:41","1763801"
"18472879","13308092","15","Also whoever wrote that codeproject article doesn't know what he is talking about. For instance, he says ""primitive ones needs static type memory"" which is completely untrue. Nothing stops you from allocating primitives in the heap dynamically, just write something like ""int array[] = new int[num]"" and voila, primitives allocated dynamically in .NET. That is just one of several inaccuracies.","2012-11-21 05:02:46","1763801"
"18472933","13308092","1","If you check my rep you can see I can't yet downvote. So it's not even me doing the downvoting.","2012-11-21 05:04:32","1763801"
"18480479","1026098","0","`substr()` may not be marked as deprecated by any popular ECMAScript implementation (I doubt it's not going to disappear anytime soon), but it's not part of the ECMAScript spec. The 3rd edition of the spec mentions it in the non-normative annex in order to ""suggests uniform semantics for such properties without making the properties or their semantics part of this standard"".","2012-11-21 10:05:22","194758"
"18480626","1026098","3","Having 3 methods that do the same thing (`substring`, `substr` and `slice`) is too many, IMO. I always use `slice` because it supports negative indexes, it doesn't have the confusing arg-swapping behavior and its API is similar to `slice` in other languages.","2012-11-21 10:12:12","194758"
"111509870","20241145","0","So I had a slightly different use case; I was testing build changes to a project with 400 sub projects, and I wanted to isolate just one sub project, so I deleted the 399 I didn't want to work on atm, and ran

`git ls-files --deleted -z | git update-index --assume-unchanged -z --stdin`

once I was ready I undid the delete and restored tracking with

`for f in $(git ls-files -v | grep '^[[:lower:]]' | awk '{print $2}'); do git update-index --no-assume-unchanged ""$f""; done`","2020-07-23 03:47:54","3779344"
"79277392","38629666","2","One doesn't really lose the commits on a `--hard` reset as they will be available in the ref log for 30 days `git reflog`.","2017-09-11 02:10:59","384724"
"33319057","19699269","8","The above works with 'interfaces' as well. This is useful for checking that a particular interface is available.","2014-02-24 11:38:28","3184785"
"18487290","397740","6","I like it and open most methods and constructors with explicit checks on the arguments; if there is an error, methods always fail on the first few lines and I know the offending reference without finding something like `getThing().getItsThing().getOtherThing().wowEncapsulationIsBroken().setLol(""hi"");`","2012-11-22 06:26:03","886749"
"33319520","10314837","1","Wow, that looks really hacky! :)
Technically, you can even write `[on_false, on_True][cond is True]` so the expression becomes shorter.","2014-02-24 11:51:08","297435"
"48728937","52713","0","I do this and get warnings about unmerged files. How do I discard these unmerged files?","2015-05-19 04:46:50","827927"
"18493373","8888015","529","It's a popular question, so I'd like to clarify on the top comment here. I just executed commands as described in this answer and it hasn't removed ALL the local files. Only the remotely tracked files were overwritten, and every local file that has been here was left untouched.","2012-11-22 10:38:05","388636"
"79289999","46107537","1","it does work like a normal pull from a remote branch. If you did X commits on your local repo and now you are Y commits behind the original repo, it will bring the Y commits to your local branch and, probably, get you some conflicts to resolve.","2017-09-11 08:23:23","1035778"
"64504683","36172057","17","You could use `mkdir -p ""$DIRECTORY""` for the same effect.","2016-07-24 09:12:03","1685098"
"111533132","2590281","0","I was going to use PUT to edit profile but after reading the article and talking with the client, he told he only wanted users to edit specific parts of profile and I consider that to be a perfect application for /changeAddress of something as mentioned in the blog post as it puts the server back in control. And removes the state from the client. Not to mention that I can now record stuff like how often do users edit their profile and what do they change","2020-07-24 10:27:16","8801881"
"95444473","406408","0","A little extension, I know it was not in the question but might be useful. What if you want to filter more than one words, the same time match for these words separately, and remove spaces and line breaks in addition. I tested it in Python: `import re; exp = re.compile(r'(?!\s)(?:AND|OR|NOT|\(|\)|(?:(?!OR|AND|NOT|\s{2:})(?:[-\w: ]))+)(?<!\s)'); exp.findall('foobar AND (foo loves bar OR NOT bla bla)')` results: `['foobar', 'AND', '(', 'foo loves bar', 'OR', 'NOT', 'bla bla', ')']`","2019-01-22 04:08:54","854988"
"95456216","51522896","1","It's not about what's ""In your book.""  ""Pass by reference"" and ""Pass by value"" are industry standard terms which have very specific definitions. By those definitions Java is ""Pass by value"" without exceptions.","2019-01-23 12:01:56","1028560"
"33335746","394809","4","Though Pythons older than 2.5 are slowly drifting to history, here is a list of old pre-2.5 ternary operator tricks: [""Python Idioms"", search for the text 'Conditional expression'](http://c2.com/cgi/wiki?PythonIdioms) .
[Wikipedia](http://en.wikipedia.org/wiki/Ternary_operation#Python) is also quite helpful Ж:-)","2011-05-26 12:48:06","558008"
"111560280","5767411","0","It's kinda funny that splice returns another array built out of the removed elements. I wrote something which assumed splice would return the newly modified list (like what immutable collections would do, for example). So, in this particular case of only one item in the list, and that item being removed, the returned list is exactly identical to the original one after splicing that one item. So, my app went into an infinite loop.","2020-07-25 10:55:10","1364747"
"18535646","10701801","20","What happens when a user with a vision impairment is using a screenreader to navigate the form?","2012-11-23 10:09:09","561665"
"95480479","417184","0","It appears that IE11 and MS Edge 42 (Win10) both allow large urls if you redirect to them.... You can't edit them in the browser (if you type in the address bar, it'll limit you), but you can redirect to large urls (at least 3.5k)","2019-01-23 04:08:36","26510"
"64546156","30740848","3","`application/vnd.api+json` seems to be specifically for apis using [json:api](http://jsonapi.org/), a very narrow specification with its own expectations and format, I don't understand it to be for *any* API that returns json. Please correct me if I'm wrong","2016-07-25 10:49:12","1086540"
"64550377","14889969","6","@MooingDuck It is true that I am not an expert in processor design.  But I invite you to read the Wikipedia page about branch predictors.  Not one of the discussed designs could lock on to the pattern TTFFTTFF... and predict correctly.  (Except maybe for the neural net one, with a sufficiently advanced neural net, and I'll bet you cash money that you don't own a computing device that has such a branch predictor in its processor.)  https://en.wikipedia.org/wiki/Branch_predictor","2016-07-26 03:49:15","166949"
"64550500","10113231","1","Tried this - then add/commit my new changed files, but still said my branch was behind remote when I tried to push.  Massive wasted time because ""git pull"" doesn't ask ""Overwrite local? y/n/all"".","2016-07-26 03:57:11","2326613"
"64550761","1126089","0","Don't ever do anything 'git' (or even have a .git folder) except in a copy of your actual work folder, and avoid all cardiac stress.   Don't give git and its obtuse syntax/methods the opportunity to wreck you in the first place.","2016-07-26 04:12:59","2326613"
"64551074","14889969","20","@steveha: The Two-level adaptive predictor could lock onto the TTFFTTFF pattern with no issue whatsoever. ""Variants of this prediction method are used in most modern microprocessors"". Local branch prediction and Global branch prediction are based on a two level adaptive predictor, they can as well. ""Global branch prediction is used in AMD processors, and in Intel Pentium M, Core, Core 2, and Silvermont-based Atom processors""  Also add Agree predictor, Hybrid predictor, Prediction of indirect jumps, to that list. Loop predictor wont lock on, but hits 75%. That leaves only 2 that can't lock on","2016-07-26 04:33:55","845092"
"64551385","72156","2","@uDaY - ideally, git clone would prompt you with each branch y/n/all instead of 'hiding' them and leaving you to figure out how to get a particular branch on your local machine with yet more commands and switches to decipher.  I said ""clone"" and gave it a remote - not ""clone master only"" - but git hasn't quite caught up with the level of ease / forethought we had in DOS in the late 80s.","2016-07-26 04:51:17","2326613"
"18551571","10701801","8","This technique has a name: the honeypot http://en.wikipedia.org/wiki/Honeypot_(computing)","2012-11-24 09:14:56","53960"
"111593577","2765459","1","why does ""git push origin -u remote_branch_name "" work sometimes and sometimes not?","2020-07-26 11:32:02","7551092"
"33377199","901712","0","Check some other ways to do this using jQuery here http://stackoverflow.com/a/22019103/1868660","2014-02-25 03:45:46","1868660"
"33377215","426258","0","Check other ways to do this using jQuery here http://stackoverflow.com/a/22019103/1868660","2014-02-25 03:46:08","1868660"
"79339889","7734259","1","It says, ""git-gui: command not found"". I'm not sure if this works.","2017-09-13 04:19:18","3787127"
"79345449","2025282","0","from android developers site https://developer.android.com/guide/practices/screens_support.html","2017-09-13 07:41:50","3130461"
"64589267","2590281","0","@NigelThorne The only answer that talks about server defined and client defined URLs. Who does validation on client defined URLs?","2016-07-26 10:17:19","853001"
"18567685","477578","0","NEVER use recaptcha, if you want to retain any of your custoemrs, ever.

Seriously, if you have to use a captcha then use one that humans have a chance of solving first time, they might not be unbreakable but they're a good compromise because most will stop a variety of bots without annoying your customers too much.","2012-11-25 08:06:16","56007"
"95513318","24827594","2","@jamess It may be well supported, but remember that `Arrow functions` in this example are not so well supported. For more details  see here: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions#Browser_compatibility","2019-01-24 02:32:34","3165903"
"79356672","6866485","1","@Kyralessa I see.  But is it better to talk of ""shas"" than of ""hashes""?  The git man page mentions only hashes and ""SHA-1 hashes"".  The question is rather:  What improves the answer most?","2017-09-13 12:09:43","1281485"
"95514251","417184","0","Also, if you want to test an url that's 4032 chars in total length via redirect, just go tinyurl.com/ezbigurl11 and it'll redirect you to httpbin.org, with a dump of the request that was just made to that server.","2019-01-24 02:58:30","26510"
"64593618","5189600","31","`Use git rebase -i <after-this-commit> and replace ""pick"" on the second and subsequent commits with ""squash"" or ""fixup"", as described in the manual.`
uhhhh... wut?","2016-07-27 03:18:03","48082"
"48804164","72156","0","@CristianCiupitu I find it easiest to open my `.git/refs` folder in a file browser and move or copy all the entries in `.git/refs/remotes/origin/*` to `.git/refs/heads/`; things are a bit less convenient when the files have been moved into `.git/packed-refs`, at that point the git command line would be easier to multiplex","2015-05-20 05:03:18","1695680"
"95519006","2003515","0","@DanielSpringer That shouldn't be the case. It will delete the remote branch `origin/mybranch` in your repo and on the server, but it won't delete any local tracking branches (`mybranch`).","2019-01-24 05:01:02","265521"
"95519588","2003515","0","@Timmmm either I ran it before and forgot, or... I don’t know :P","2019-01-24 05:17:50","5306470"
"48807746","27956097","1","Because SharePoint exposes web URLs as file paths, it runs into a separate limitation: the Windows file path length limit of 260 characters (or 248 characters when using an API). For more details about this limit, check out the ""Maximum Path Length Limitation"" section here: https://msdn.microsoft.com/en-us/library/aa365247(VS.85).aspx","2015-05-20 06:48:17","2701677"
"64604309","20531076","0","It's just common sense, how you update something when you don't know what it is you are updating? POST is for creating a new resource.","2016-07-27 09:23:42","300797"
"64604703","5201642","5","Make sure your working copy has no other changes (`git stash` them or something). Otherwise, you have the chance to commit them into the squashed commit too, which might be not something you intend to do.","2016-07-27 09:33:02","207791"
"4103349","2919360","90","This one emphasizes the primary intent of the ternary operator: value selection. It also shows that more than one ternary can be chained together into a single expression.","2010-10-04 09:14:21","163227"
"111620219","49804612","0","This is a good answer. It may have been missed because it does not directly answer the question, but it's also important to understand that 'you usually don't need to do that'. Especially since the other solutions are so messy.","2020-07-27 06:44:01","441829"
"4110794","927386","533","And if the commit was to the wrong branch, you may `git checkout theRightBranch` with all the changes stages. As I just had to do.","2010-10-05 03:44:20","10259"
"4122716","1473742","47","If you are using a good browser, you can just use `array.indexOf(object) != -1`","2010-10-06 04:17:24","118631"
"18596066","10593138","1","What is `searchbox` in the snippet?","2012-11-26 07:14:36","782094"
"33428410","18792061","27","`x ? true : false` is usually redundant. It is here.","2014-02-26 04:38:53","707111"
"18615684","3356227","1","yes, the [json-schema google group](https://groups.google.com/forum/#!forum/json-schema) is fairly active and I would recommend [JSV](https://github.com/garycourt/JSV) for a good JavaScript implementation of a JSON Schema validator.","2012-11-27 11:34:05","404282"
"111644275","67699","0","I believe the key is in https://stackoverflow.com/a/18894949/10020074 It appears that git pull is really pulling ALL branches to local, all you need to do is checkout to the branch you want, and checkout will automaically create that local branch. Is a matter of understanding what pull and fetch do behind the scenes.","2020-07-28 01:40:12","10020074"
"111647761","62508583","0","Assigning to the prototype of a global object is called prototype population and considered a pretty bad anti pattern. It is only acceptable for polyfills that implement the specified behavior of a function for old engines that don't support it yet. This implementation has different semantics than the spec. Consider 'hi'.replaceAll('.', 'x') // => 'xx'","2020-07-28 03:16:47","5587737"
"79396707","3413739","1","I'm curious. Is the 65k URL a data scheme URI or really a URL in the classic sense?","2017-09-14 10:50:23","6921751"
"64636461","15782391","1","Make that `color: inherit;` maybe.","2016-07-28 01:25:09","4633197"
"64636811","36394436","1","How about downvoted due to the fact that it won't actually work as you need a -r to run rm recursively anyway :) (Someone didn't copy correctly)","2016-07-28 01:55:34","100652"
"48854800","20081966","3","sorry, but install Ruby for that kind of work ? More logical is implementation on bash, which will work out of box.","2015-05-21 07:37:04","1221842"
"95561912","25553225","0","This is terrible advice. This doesn't just reset your remote, this deletes the actual files from the folder you are doing. This was not clear at all to me, and I thought you were saying you were simply resetting the git head, not resetting your current files to what is in the repository. If my notebooks from yesterday were not in my RAM I would have lost everything I did yesterday.","2019-01-25 10:41:32","3802697"
"48855702","20081966","1","@Reishin Ruby is installed on the box just like Bash, at least on OSX. Please see: http://stackoverflow.com/questions/2342894/why-and-when-to-use-shell-instead-of-ruby, where this topic has been discarded as opinion-based by SO.","2015-05-21 08:03:07","8047"
"18634280","2117523","39","@DrewNoakes - UUIDs aren't just a string of completely random #'s.  The ""4"" is the uuid version (4 = ""random"").  The ""y"" marks where the uuid variant (field layout, basically) needs to be embedded.  See sections 4.1.1 and 4.1.3 of http://www.ietf.org/rfc/rfc4122.txt for more info.","2012-11-27 10:13:12","109538"
"48856674","20081966","5","@Yar this link is out of the context and have a more broader scope. I tell only about git and as topic is not originated only for OSX, that choose is strange for other systems (e.g. *UNIX, Windows)","2015-05-21 08:33:30","1221842"
"111657563","32039692","0","Look for CS 61B Lecture 19: Asymptotic Analysis","2020-07-28 09:05:28","1110437"
"79407236","237028","12","""it could be a for loop, but it could also be code like `otherlist.extend(mylist)`"" -> This is incorrect. `extend()` modifies the list in-place and does not return an iterable. Trying to loop over `otherlist.extend(mylist)` will fail with a `TypeError` because `extend()` implicitly returns `None`, and you can't loop over `None`.","2017-09-14 02:48:17","406776"
"95571762","33765206","0","@AaronHall Although your use of metasyntactic `expressionN` for all instances is consistent, it might be easier to understand with naming that distinguished the conditional test expression from the two result expressions; eg, `result1 if condition else result2`. This is especially evident when nesting (aka chaining): `result1 if condition1 else result2 if condition2 else result3`. See how much better that reads this way?","2019-01-26 02:12:47","471272"
"64652816","37304637","5","ChainMap was backported for earlier Pythons: https://pypi.python.org/pypi/chainmap","2016-07-28 11:19:43","260122"
"79412310","5334825","4","@AleksYa: the does not end version could be done using negative lookbehind as: `(.*)(?<!hede)$`. @Nyerguds' version would work as well but completely misses the point on performance the answer mentions.","2017-09-14 04:53:33","2771889"
"111665366","1144783","13","Use regex instead of string, should look like `str.replace(/abc/g, '');` so g to get all matches.","2020-07-29 06:17:18","9438090"
"95575895","33765206","0","@tchrist thanks for the review - if you look at the revision history, this post currently has two revisions. Most of my other answers, especially the top ones, have been revisited again and again. This answer never gets my attention because the community wiki status gives me no credit for the content, and so I never see any votes on it. As I don't really have time for an edit on this right now, frog knows when it will come to my attention again in the future. I can see you've edited the top answer, so feel free to borrow/quote my material from this post in that one (and cite me if apropos!)","2019-01-26 06:24:21","541136"
"64671387","23853061","2","It works, but they should have used a ""rebase fork"" and ""push"" button. In this way it seems so odd to me. Not very intuitive..","2016-07-28 06:32:42","408487"
"4167578","1845995","21","This is legit per Javadoc (not a hack) though I would rewrite the method as `editView.setInputType(InputType.TYPE_NULL);`","2010-10-11 08:49:27","135946"
"95581586","509377","0","note that backticks are deprecated in favour of `repr`","2019-01-27 01:36:46","4518341"
"48881153","2079545","16","`while( x-- > 0 ) actually means while( x > 0)` - I'm not sure what you were trying to say there, but the way you phrased it implies the `--` has no meaning whatsoever, which is obviously very wrong.","2015-05-22 12:28:30","1711796"
"48882255","1755737","1","This would be better as a footnote in another answer or a comment - it clearly doesn't explain what `-->` means, which is what was asked.","2015-05-22 12:55:22","1711796"
"4172004","162056","38","@Justin Think of Git as tracking *content* rather than tracking files. Then it's easy to see that the content you've updated *isn't* in the repository and needs to be added. This way of thinking also explains why Git doesn't track empty folders: Although they are technically files, there isn't any content to track.","2010-10-12 09:17:27","31582"
"79429594","1274447","0","@CharlesBailey I have too many files and folders in `.gitignore`. How to remove them from the index in one step? not one by one with `<file>` as you said.","2017-09-15 06:34:57","421467"
"111681453","22654961","0","Worked great for me.  Did have to git push origin ___ --force - actually I was a develop branch and it worked great on there","2020-07-29 02:54:30","412154"
"111684738","62508583","0","Thanks Moritz
I think **extending or modification** of the prototypes of any objects, especially native ones is consider bad practice, but not to add new method

If you have any source Please share","2020-07-29 04:38:59","8438035"
"79439663","16957078","0","I used your command in function withing .bashrc      


findin(){

	grep -rnw ""$2"" -e ""$1""	

}","2017-09-15 11:12:20","1220652"
"95596165","39847263","0","Note: Array.prototype.filter is ECMAScript 5.1 (No IE8).

for more specific solutions: https://stackoverflow.com/a/54390552/8958729","2019-01-27 07:45:05","8958729"
"95596195","54390552","0","Note: Array.prototype.filter is ECMAScript 5.1 (No IE8)","2019-01-27 07:46:27","8958729"
"18665369","2590281","63","Or from the other side of the fence: PUT if the client determines the resulting resource's address, POST if the server does it.","2012-11-28 07:47:28","428241"
"79447312","11227877","5","@DanielFischer does compiler knows which array is sorted and which one is not?","2017-09-15 02:16:54","4285898"
"64690320","29535421","0","This is how I like to do it. Using an arrow function it can be a one-liner. I'm curious about performance. Also worth nothing that this *replaces* the array. Any code with a reference to the *old array* will not notice the change.","2016-07-29 08:50:36","99777"
"95598417","48388013","0","This answer was already given [in 2009](https://stackoverflow.com/a/1026087/1269037).","2019-01-27 10:11:28","1269037"
"95598444","31392914","0","How is this any better than [the 2009 answer](https://stackoverflow.com/a/1026087/1269037)?.","2019-01-27 10:13:30","1269037"
"33476613","9180445","14","This works very well if you accidentally commit the wrong, non-master branch, when you should have created a new feature branch.","2014-02-27 04:47:42","1032935"
"79453813","36394436","1","Warning: This technique doesn't actually cause git to ignore the file, instead it actually causes git to delete the file. That means if you use this solution, any time anyone else does a git pull, the file will get deleted. So it isn't actually ignored. See the solution suggesting git update-index --assume-unchanged instead for a solution to the original question.","2017-09-15 05:33:53","1257764"
"79461366","522569","4","@adg I don't see how avoid `enumerate` saves any logic; you still have to select which object to index with `i`, no?","2017-09-15 11:15:20","1126841"
"95615422","53826836","1","I was pushing and yet github didn't show my new branch. 
That last `--set-upstream` made it work.","2019-01-28 12:58:03","1541141"
"64709347","12184274","3","Erorgh!!! Did I just delete my project folders with git clean -df? How do i get this back? Please help!!!! I dod a ls and I cannot see another folder that I had no intention to delete","2016-07-29 05:17:39","2441441"
"4204394","952952","569","I tried a test with the same data, using `itertools.chain.from_iterable` :         `$ python -mtimeit -s'from itertools import chain; l=[[1,2,3],[4,5,6], [7], [8,9]]*99' 'list(chain.from_iterable(l))'`.   It runs a bit more than twice as fast as the nested list comprehension that's the fastest of the alternatives shown here.","2010-10-15 01:21:33","192812"
"33486883","373848","3","I wanted an early version of a single file because I had overwritten 150 lines with a badly chosen copy/paste.  `git checkout <commit hash> <filename>` worked for me.  This should not be the accepted answer, IMHO.  `git reset` did not.","2014-02-27 08:58:24","1551948"
"33489884","5190323","14","Another advantage is that `git merge --squash` is less likely to produce merge conflicts in the face of moves/deletes/renames compared to rebasing, especially if you're merging from a local branch. (disclaimer: based on only one experience, correct me if this isn't true in the general case!)","2014-02-27 10:21:00","118220"
"79478964","27458534","1","I re-created [these excellent examples on *SQLFiddle.com*](http://sqlfiddle.com/#!17/10d3d/29) for anyone to try running. Uncomment any of the queries you wish to run.","2017-09-16 07:35:24","642706"
"64724733","178386","6","@vbullinger 42ms is actually a bit longer than I would like to wait for the website to respond to my actions - that means around 3 frames of animation dropped/delayed only at 60 fps","2016-07-30 09:13:45","639370"
"111719951","62508583","1","Extending and ""adding new methods"" seems like the same thing to me. This is a problem because now there actually is a replaceAll method in the spec and it has different semantics which might break code, even in external dependencies. See: https://flaviocopes.com/javascript-why-not-modify-object-prototype/","2020-07-30 05:24:46","5587737"
"95634857","31825535","3","I think it's worth remarking that this method is for matching lines that *are not* the word 'hede', rather than lines than *don't contain* the word 'hede' which is what the OP asked for. See my answer for the latter.","2019-01-29 12:05:37","2428487"
"33496058","17378317","2","That's Java EE too :: [javax.ws.rs.core.MediaType](http://docs.oracle.com/javaee/6/api/javax/ws/rs/core/MediaType.html#APPLICATION_JSON)","2014-02-28 03:01:06","538921"
"79488796","16880062","0","'Pass its inner value' is meaningless.","2017-09-17 10:09:47","207421"
"111730350","26853961","0","Here's the expected release schedule: https://www.python.org/dev/peps/pep-0596/","2020-07-31 01:53:46","541136"
"79495390","16880062","0","@EJP thanks for the note, excuse my bad English from 2013, I've edited the whole thing, if you see a better wording, you may suggest or edit","2017-09-17 04:41:46","2128327"
"79501656","3737139","0","@Gordon I recently closed [this question](https://stackoverflow.com/q/46269478/1415724) and wanted to use this Q&A to close it with, however the `?` query string character isn't included here. I closed the question with two other ones instead that directly address it. Do you feel that it should be added in this Q&A here?","2017-09-17 10:52:07","1415724"
"79505236","44724095","0","Worked for me! Thanks!","2017-09-18 04:00:54","7838048"
"33528992","22039047","2","This filter invalidates many common valid e-mail addresses...
For example: user+tag@gmail.com","2014-02-28 07:03:57","1713351"
"4248688","72156","155","Good answer, but kinda misses the question. I was looking for a one-liner to checkout all the remote branches.","2010-10-19 09:01:04","64313"
"33537495","20241145","4","I went for the good enough `rm [...] .` solution, as at least I could grok how it worked. I found no great documentation on what `update-index` & `--assume-unchanged` do. Can anyone add how this compares to the other, in that I would like to remove all files that would have been ignored? (Or a link to clear explanation?)","2014-03-01 12:12:09","2533127"
"18744467","8439617","4","To capitalise the first letter you could use the first letter selector:

p.capitalize :first-letter {text-transform: capitalize;}

Apparently Safari struggles with this, but haven't looked into it.","2012-12-01 11:34:20","406592"
"48964429","2003505","67","Note: for Git 2.5+ (Q2 2015), the exact message will be ""**`deleted remote-tracking branch`**"": see https://github.com/git/git/commit/ccd593cffaa020ff767860ec211462b8dbd727a6#diff-d18f86ea14e2f1e5bff391b2e54438cbR268","2015-05-25 02:57:35","6309"
"95671051","38578","6","@Damian yes, OUTER JOIN and FULL OUTER JOIN are equivalent, along with LEFT/RIGHT JOIN are equivalent to LEFT/RIGHT OUTER JOIN, in the same way INNER JOIN is equivalent to a simple JOIN","2019-01-29 10:26:21","825227"
"18751848","9131633","2","Variant you propose returns if element visible on html, my variant returns if element was directly hidden by your javascript code/view engine. If your know that parent elements should never be hidden - use  .hasClass() to be more strict and prevent future bugs. If you want to check not only visibility but element state set too - use .hasClass() too. In other cases .closest() is better.","2012-12-01 08:27:09","571203"
"111765491","35446009","0","Nice work. Could be useful to provide a tl;dr summary at the bottom, i.e. throwing out the solutions that have problems with line breaks / unicode and then (out of those that remain) saying which is fastest with or without external libraries.","2020-08-01 11:16:23","1063716"
"64783021","79936","1","Stacks are NOT managed by the Garbage collector.  Therefore any allocation or deallocation of memory must be done manually.","2016-08-01 03:32:33","1789573"
"79543169","2003515","0","Why do I need to specify remote when pushing?","2017-09-19 12:46:53","4854931"
"111773718","179147","1","@Akhila: Not sure why you mentioned my name. Rewriting comit messages of old commits can be done using `git rebase -i oldcommithashhere^` and replacing `pick` with `edit`.","2020-08-01 07:46:42","1593077"
"111773981","179147","0","I couldn't find the name of any person on the answer so when I opened it, last edit showed your name. But that was worth it :) Thank you for that answer!","2020-08-01 08:03:44","5727233"
"111778713","53203953","0","Very clever indeed!","2020-08-02 04:19:27","1927991"
"64792735","21718540","30","`$ git revert --no-commit 53742ae..HEAD` returns `fatal: empty commit set passed`","2016-08-01 08:30:18","1017550"
"79552245","37614185","11","Because ```git clean``` apparently also deletes everything that is ignored. It just deleted my ```node_modules``` folder. Doing this would first stage all files except for the ignored ones, and then delete them by doing a reset. Ignored files will not be touched.","2017-09-19 07:54:18","636578"
"48986351","1644241","1","Well, also `while(0 <=-- x)`. But this's getting silly(er) :p","2015-05-26 07:57:21","1280333"
"111798180","9180445","0","@PhiLho Thanks! I used your syntax - a little more explicit, a little safer","2020-08-03 04:03:55","106906"
"79569975","161813","0","Github.com has a nice way of visualizing the issue. Make sure you see [this](https://stackoverflow.com/a/41555708/5175709) answer. (It has ways to also edit and resolve right from the site, but that's just a convenience.)","2017-09-19 03:02:51","5175709"
"33610057","2386013","0","in your example you call `helloWorld` twice. This is terrible. you have no idea what could be the consequences !","2014-03-03 02:26:15","671543"
"4301783","163234","8","Using ""git add"" is the real trick here.  You may not even want to commit (maybe you want to stash), but you have to do ""git add"" to complete the merge.  I think mergetool does the add for you (although it isn't in the manpage), but if you do the merge manually, you need to use ""git add"" to complete it (even if you don't want to commit).","2010-10-25 09:37:00","86967"
"64829029","162056","1","Step 2 amuses me.  It sounds so easy.  Then one day you have a merge conflict that impacts thousands of files written by people that no longer work for the company.  Sigh...","2016-08-02 05:08:29","15689"
"4306358","59921","14","When I do `./foo/script`, then `$(dirname $BASH_SOURCE)` is `./foo`.","2010-10-25 05:06:20","2859"
"4311598","2691891","77","I agree, wherever idempotence is concerned it should trump any other concerns since getting that wrong can cause many many unexpected bugs.","2010-10-26 05:56:09","1868"
"33617075","630475","164","@JörgWMittag Idempotence catchphrase?  How about ""Send and send and send my friend, it makes no difference in the end.""","2014-03-03 05:13:28","229096"
"18820010","4114122","30","Could you write the whole number? like: `git reset --hard 0d1d7fc32e5a947fbd92ee598033d85bfc445a50`","2012-12-04 01:58:13","800011"
"49018699","92395","39","Nice answer/explanation.

How is this answer justifying Python's motto as described in this article ?

http://www.fastcompany.com/3026446/the-fall-of-perl-the-webs-most-promising-language

""Stylistically, Perl and Python have different philosophies. Perl’s best known mottos is "" There’s More Than One Way to Do It"". Python is designed to have one obvious way to do it""

Seem like it should be the other way!
In Perl I know only two ways to execute a command - using back-tick or `open`.","2015-05-26 09:16:27","472485"
"18822779","10701801","27","No need for inline styling. Just add a class to the field (maybe use a weird word that could never mean anything to a bot), and hide it via the site's CSS file. Like: `<input type=""text"" name=""email"" class=""cucaracha"">` and in your CSS: `.cucaracha { display:none; }`.","2012-12-04 03:17:51","321555"
"79604561","3737139","0","@Gordon The ""... Argument unpacking (since PHP 5.6)"" hyperlink for https://wiki.php.net/rfc/argument_unpacking produces as ""502 Bad Gateway"" for me today on a few browsers. You may want to look into that and am unsure if you saw my previous comment just above this one a few days prior. I saw [this question](https://stackoverflow.com/q/46321942/1415724) today and was going to close the question with this one, but cannot since the link isn't valid right now.","2017-09-20 12:22:18","1415724"
"79604860","3737139","0","@Fred-ii- 1. Let's stick to PHP syntax only, `?` in a URL is unrelated. 2. This is a community wiki, edit/add as needed.","2017-09-20 12:28:38","476"
"79604931","3737139","0","@deceze Oh I see. Ok well, if it's unrelated then it (I) shouldn't add to it then, correct? Edit: I see you fixed the reference for the `...` link.","2017-09-20 12:30:15","1415724"
"49020404","21409180","7","There is no guarantee that order matters in the list of object name/value pairs.  A parser could parse them ""out of order"" and then this is broken.","2015-05-26 10:26:08","364818"
"18825947","4114122","19","@MathiasMadsenStav Yes, you can of course specify commits by the full SHA1. I used abbreviated hashes to make the answer more readable, and you also tend to use them if you're typing out. If you're copying and pasting, by all means use the full hash. See [Specifying Revisions in man git rev-parse](http://www.kernel.org/pub/software/scm/git/docs/git-rev-parse.html#_specifying_revisions) for a full description of how you can name commits.","2012-12-04 04:55:52","119963"
"111837812","40480","4","We would more commonly say that a variable ""passed-by-reference"" can be mutated. The term appears in textbooks because language theorists needed a way to distinguish how you treat primitive data types (int, bool, byte) from complex and structured objects (array, streams, class) -- that is to say, those of possibly unbounded memory allocation.","2020-08-04 11:35:05","1570563"
"49043017","14419556","4","""you instantly pick out pairs"" -- Sigh indeed. No, it is obviously not ""instant"", and the brain's processing time goes up non-linearly with the number of socks ... as does the time to physically reach random positions on the table. Anyone who has actually sorted socks knows that it goes *much* faster if you use a number piles that you can quickly reach, and avoid random access.","2015-05-27 12:17:21","544557"
"49043190","14416010","0","""Sorting, of course improves efficiency"" -- No, it *of course* does the opposite.","2015-05-27 12:21:50","544557"
"49043361","14418638","0","""As for me, this helps to wear them down in pairs. Otherwise I can end up with three very worn socks and one brand new one. Kinda silly."" -- What's ""kinda silly"" is that you get the same amount of total wear time either way, so it's stupid to sew tags into identical socks to distinguish them ... and if the point is to pair socks of equal degrees of wear, you can do that visually (to the precision needed). ""I always throw out the whole pair."" -- More stupidity stemming from the stupid tagging.","2015-05-27 12:25:35","544557"
"49043746","14416010","0","@JimBalter - Hm? I was comparing it to the naive algorithm where you compare each sock with each other sock. Shouldn't sorting improve that?","2015-05-27 12:34:32","41360"
"4339838","72156","34","The question was about cloning all remote branches, not checking them out. And, as I noted above, you really don't want to make any more local tracking branches than necessary, because when they get really stale, they can cause headaches.","2010-10-28 12:43:44","12089"
"33627614","12077178","2","This is bad, particularly in IE (up to version 10, not sure about 11). Clicking a link with an empty href results in an unnecessary (and probably unwanted) request being fired, and in IE, it attempts to open Windows Explorer.","2014-03-03 10:12:49","597460"
"111846527","37614185","0","Is it necessary to specify HEAD here ? I tried without and it worked.","2020-08-04 04:06:51","741368"
"64855424","37011914","0","from the example site: 

""/toBeReplacedString/gi is the regex you need to use. Here g represents for global match and i represents case insensitive. By default regex is case sensitive""","2016-08-03 10:15:16","3777098"
"49051984","14416010","0","@JimBalter - OK, wait, what? Let's analyze this. Suppose you have N pairs of socks (that's 2N socks). The worst case scenario is - the first N socks you pull are each of a different pair. So you've got N socks lined up and only the N+1 sock actuall removes something. In the naive scenario, the first sock would require 0 comparisons, the second 1 comparison, etc. until the Nth sock would require N-1 comparisons. Altogether that's N*(N-1)/2 comparisons. For removing, the worst case is pretty much the same. So this algorithm is O(N*N).","2015-05-27 03:24:51","41360"
"49052364","14416010","0","@JimBalter - OK, so now take sorting. Suppose each **pair** of socks has a number printed on both of them. The numbers are from 1 to N, of course. Now whenever I take a new sock out, I keep the line in front of me sorted. I can find the place to insert the new sock in O(logN), and I can insert in O(1). Since this is Real Life and I can just shove it in place while shifting all other socks at the same time. On a computer you could use a balanced tree to the same effect (trees are harder to work with in Real Life).","2015-05-27 03:33:18","41360"
"64861358","671508","0","May I convince you to replace all mentions of 'verb' with 'method'. The specifications (RFC2616 and so forth) do not use the term 'verb' anywhere, only method. I will also pose the question: Are the methods 'OPTIONS' and 'HEAD' verbs?","2016-08-03 12:36:22","292408"
"49052445","14416010","0","@JimBalter - All in all, taking the first N socks will be an O(NlogN) operation, and then taking the remaining socks too. So, as far as I can see, sorting DOES help - at least, from a theoretical standpoint. Did I make a mistake somewhere?","2015-05-27 03:34:59","41360"
"49055443","2003515","434","Don't forget to do a `git fetch --all --prune` on other machines after deleting the remote branch on the server. ||| After deleting the local branch with `git branch -d` and deleting the remote branch with `git push origin --delete` other machines may still have ""obsolete tracking branches"" (to see them do `git branch -a`). To get rid of these do `git fetch --all --prune`.","2015-05-27 04:51:36","52074"
"33632837","6217372","0","for more information about revert: [link](https://www.atlassian.com/git/tutorial/undoing-changes#!revert)","2014-03-04 02:22:33","177653"
"33634497","5916151","0","@ChristopherHarris, I have added what I needed to the plugin to allow some parameter flexibility. This made inline processing easier without the type conversion. Esp from disparate databases with 'ideas' about what ""true"" is. Fiddle: http://jsfiddle.net/Cyberjetx/vcp96/","2014-03-04 03:59:27","561710"
"111858159","48253599","1","Nice aliases, I love how they meld very naturally with `bash` commands. I can see this being causing the least amount of mental friction when switching between `bash` and `git`. Bravo!","2020-08-05 01:37:14","3838537"
"33641237","1126089","3","Is `git clean` the best answer here?  Seems like removing files isn't necessarily what the OP wants. They asked for 'an overwrite of local files' not deletion.","2014-03-04 08:28:11","464273"
"64878690","21422128","1","Windows doesn't like files without names and requires special magic to accomplish this (aka a bash-like terminal app or equivalent).","2016-08-03 07:46:04","2673386"
"64878936","932982","3","@GreenAsJade Actually, it doesn't do *precisely* what was asked for, as the directory *isn't empty*. And as other users suggested, it's a bad idea to prefix with ""git"" as it's misleading---this is not a ""git aware"" strategy.","2016-08-03 07:54:52","2673386"
"79644025","40322672","0","Actually they don't do the same. # makes you jump to top of the page.","2017-09-21 10:58:26","4470838"
"111870193","2117523","6","I know you've added a lot of caveats in your post, but you're better off just striking out the first answer now, a lot of noobs will just come to this answer and copy the first thing they see without reading the rest. In reality [you can't reliably generate UUIDs from the Math.random API](https://crypto.stackexchange.com/questions/81619/is-it-possible-to-create-a-128-bit-uuid-from-a-weak-entropy-source) and it would be dangerous to rely on that.","2020-08-05 11:16:54","13338620"
"18859735","2389423","51","What i found useful was to look at ""git reflog"" and look for the last commit that i did in master.  Then do `git reset --hard <commit_sha>`","2012-12-05 04:53:50","138557"
"64896195","179147","0","Very good response but you don't talking about the 3th option like ""change commit message on previous commit before HEAD which already not push"".","2016-08-04 08:27:46","1259842"
"49065984","52719","41","Neither the `git stash`, nor any variety of `git checkout` will discard unstaged deletes. According to the output of `git status`, the actual correct answer here is some flavor `git reset HEAD`","2015-05-27 10:27:26","1135316"
"33655136","11644161","6","Is this going to be deprecated in python 3.0?","2014-03-04 02:16:18","719016"
"33658701","17782979","23","Possibly I'm missing something but in your `j` equals 0 or 1 method why don't you just multiply your value by `j` before adding it rather than using the array indexing (possibly should be multiplied by `1-j` rather than `j`)","2014-03-04 03:38:24","2187042"
"95783960","244858","0","`_comment` is also the official workaround within composer.json as committed by composer author Seldaek in [98b0af1](https://github.com/composer/composer/commit/98b0af1386f7ff730c3330e2525c1d66998c7f90)","2019-02-02 12:12:35","277494"
"33665795","11828270","58","Don't forget the **colon**! You should type `:quit` and then hit the `[ENTER]` key.","2014-03-04 06:33:48","1440242"
"111890199","630475","0","Just to put things into perspective on the big word idempotent. It just means, POST is like, myWallet.AddMoney(999) and PUT is myWallet.SetMoney(999).","2020-08-06 01:11:30","441851"
"33698316","67712","25","Maybe this answer was given a long time ago when git worked differently, but I think it's misleading today. `git clone` does download all the remote branches, but it only makes a local branch of master. Since `git branch` only shows local branches, you need `git branch -a` to see remote branches, too.","2014-03-05 01:05:12","3198108"
"33698575","13575102","0","Something went wrong during the edits here. Now this answer doesn't make sense. The ""`--bare`"" mentioned in the last sentence doesn't exist in the given command list.","2014-03-05 01:11:15","3198108"
"49092123","2691891","1","I wonder if what he means by ""**POST** can update a resource"" is that by POSTing to a collection you are adding an item to it and therefore ""updating the collection"". That distinction seems a *bit* misleading. I like the answer, though.","2015-05-28 01:43:21","3469725"
"49092192","18243587","3","This is the best answer, here, I think: none of this ""POST can update a resource"" nonsense. I like your statement, ""Update can only be performed with PUT"".","2015-05-28 01:44:40","3469725"
"111905041","4754797","0","`git checkout ""${branch##*/}""` would suffice to create tracking branches instead of `git branch --track ""${branch##*/}"" ""$branch""`","2020-08-06 12:54:25","636762"
"64937265","38692464","5","this is not even a proper answer","2016-08-05 07:17:26","4067759"
"64938022","59969","7","Does this work like this:  `if $dir is a dir, then echo ""yes""`? A bit of explanation would help :)","2016-08-05 07:38:24","2519416"
"79697514","630475","1","Assuming I having the following URL: test.awesome.com/questions, is the above saying that I would PUT to that URL to create a new resource?  I thought it's POST to a collection and PUT to a URL with a specified ID.  Isn't it PUT here: test.awesome.com/questions/1 and POST here: test.awesome.com/questions?  Or, is it saying if test.awesome.com/questions/1 doesn't exist, PUT will create it or replace it if it already exists on the server?","2017-09-22 04:11:22","5596684"
"111916829","82831","9","To check whether a Path object exists independently of whether is it a file or directory, use `my_path.exists()`.","2020-08-06 07:40:12","1601580"
"18924301","10044540","32","Rewriting history on a shared repository is generally a very bad idea.  I assume you know what you're doing, I just hope future readers do too.","2012-12-07 04:02:12","425313"
"49108946","470376","2","Is this idiomatic in python? Seems confusing but maybe its convention","2015-05-28 08:57:14","47545"
"64945785","34704195","0","this seems convoluted.   'object' is a poor name, 'item' might be better.   the filter function logic should just be return currentObject === item; and the ternary operator is uncessary..","2016-08-05 11:15:02","7652"
"79708645","36463546","0","if you use the cherry-pick method, you need to then reset the remote & merge of newbranch. I don't know the git commands to do that, I find it easier to just edit `.git/config`","2017-09-22 11:57:39","173542"
"49115297","8888015","6","To be correct, the uncommited changes are lost but old commits are dangling, waiting for garbage collection. You can still see them in `git reflog` and move your `HEAD` back with `git reset --hard HEAD@{1}`.","2015-05-29 03:01:36","568857"
"18931628","179147","19","What @Sam says also seems to work if you just type `git commit --amend` with nothing else following.","2012-12-07 08:37:31","884640"
"79722935","46382081","0","Thank you for your answer! If you think that your answer contributes something valuable to the question, be sure to further explain your code and what it does and why it works, thanks!","2017-09-23 05:29:25","5507624"
"79724973","13459923","0","Often times, if you want to solve your problem with regex, you end up with two problems.","2017-09-23 07:18:54","959552"
"79725132","32166837","2","Regex shouldn't be used where not necessary. It's greatly inefficient and it doesn't make code any more concise either. Moreover, `stringVal[0]` would be `undefined` for empty `stringVal`, and as such attempt to access property `.toUpperCase()` would throw an error.","2017-09-23 07:28:17","959552"
"79725193","4448825","0","Firstly, it does something else than OP asked for, secondly regex is an inefficient overkill in this case, lastly don't modify prototypes of something you don't own","2017-09-23 07:32:10","959552"
"79728601","19670755","0","@Joshcodes Interesting. to clarify: _Performing a POST of data which has an ID which matches a resource already in the system is a conflict""_ Isn't your prescription that a POST never includes an ID since the server decides the ID?","2017-09-23 11:46:53","162215"
"64965037","1274057","10","You need to use `--skip-worktree`, see: http://stackoverflow.com/questions/13630849/git-difference-between-assume-unchanged-and-skip-worktree/13631525#13631525","2016-08-05 08:33:17","73955"
"79734409","1274081","2","Seems to be the only way, that I can see.  It's a massive bug (not 'feature') in git that as soon as you add a file/folder to .gitignore, it doesn't just ignore that file from that point on - forever - everywhere.","2017-09-24 09:09:17","2326613"
"64974902","38071922","6","The OP specifically said no frameworks. Hence the downvote.","2016-08-06 09:56:51","1358676"
"18944655","10044540","0","Yes rollback is dangerous. Make sure that your working copy is in the desired state before you push. When pushing then the unwanted commits gets deleted permanently.","2012-12-08 02:14:43","78336"
"79738905","19670755","0","Iain, the client determines the ID. The server determines the URL.","2017-09-24 02:01:00","965382"
"49150222","7081","7","That's the problem, they are not 'C#' aliases, they are 'C' aliases.  There is no native 'string' or 'int' in the C# language, just syntactic sugar.","2015-05-29 08:23:54","365462"
"111952191","52347409","0","so happy that I found this. thank you! almost went nuts!!","2020-08-08 02:10:49","868736"
"33736758","5343267","0","My answer does the same thing, but is much safer. :) You don't need all the ""assuming"" stuff.","2014-03-06 09:11:03","179978"
"33736827","2389423","0","Instead of doing manual work, you could do the line in my answer below which should always work without the manual bits.","2014-03-06 09:12:31","179978"
"33743070","2389423","0","@Velmont: what you don't notice is that my answer is now 4 (FOUR) years old. Remind me: how much git has evolved from that time? Aye, I'll update the answer since you are correct :)","2014-03-06 11:46:44","5731"
"111957207","63313690","2","What's the difference to [this post](https://stackoverflow.com/a/2117523/13865476)?","2020-08-08 10:19:50","13865476"
"111968977","63313690","0","@fcdt - the difference is **`c === 'x'`** instead of `c == 'x'`.","2020-08-08 10:30:37","3744182"
"79783055","417184","34","@Paul Dixon It's really nice to see people that are willing to go above and beyond in answering questions on this site. Obviously people are showing their gratitude with the current upvote count being 3734, but I wanted to say thanks! :)","2017-09-25 07:20:10","1965524"
"95879258","105034","1","Weird that no one has mentioned this yet but for completeness, there's a plethora of [guid generators on npm](https://npmjs.org/search?q=guid) I'm willing to bet most of them work in browser too.","2014-02-03 03:54:16","5056"
"111973183","61351911","0","Checking `Object.keys().length` was already suggested on this question in 2009.  https://stackoverflow.com/a/679937/2943403 So this posted answer is half flawed and the other half redundant.","2020-08-09 06:58:12","2943403"
"95887828","11593797","0","Just `:tagname` should work for the remote deletion.","2019-02-05 09:32:11","832230"
"95888002","5201642","2","A noteworthy difference between this approach and ""real"" rebase is that the authors of the original commits are lost here.","2019-02-05 09:38:10","539599"
"95888572","50231389","1","@arcee123 Yes, but the subsequent reset undoes the revert of all changes.  The problem is that `git-revert` only operates on the whole repo, so to compensate we have to undo everything else.","2019-02-05 10:01:28","2946652"
"95888634","50231389","2","I recommend using:
1. `git revert --no-commit <commit_hash>`
2. `git reset HEAD`
This saves an extra commit floating around and does all the changes only in your working directory.","2019-02-05 10:04:03","2946652"
"79788310","46105020","0","This seems much more complicated than the accepted answe.  What is the benefit?","2017-09-25 10:43:42","1341825"
"79788406","15755041","0","slow, but the most straightforward","2017-09-25 10:50:21","324428"
"79789291","46105020","2","If you need to delete several thousand tags, then the speed is 10-100 times faster","2017-09-25 11:48:22","657764"
"79789334","44372239","0","Interesting. You learn something new about a Unix command everyday. I'll need to test my use case with this alternative.","2017-09-25 11:51:16","657764"
"79789932","46105020","0","Thank you for clarifying.  The OP asked about deleting a single tag.  I couldnt imagine why someone would use this approach for a single tag.  Perhaps this answer is better for another question involving deleting many tags","2017-09-26 12:28:37","1341825"
"79790023","46105020","0","I don't think it exists. I could create it to answer myself. Do you want to think that's appropriate?","2017-09-26 12:34:06","657764"
"79790131","46105020","1","I do!  I think it's a fairly common practice here, actually.","2017-09-26 12:41:57","1341825"
"95907621","35585468","1","Note that MDN says that IE DOES interpret let correctly. Which is it? https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let","2019-02-06 12:42:50","8007395"
"79806799","37614185","5","@Andreas it doesn't delete ignored files for me (git 2.14.1). [You should run `git clean -n`](https://stackoverflow.com/a/64966/2448440) anyway before doing the real deletion (or use [`git clean -i`](https://stackoverflow.com/a/20846779/2448440)).","2017-09-26 11:12:11","2448440"
"65038476","1845995","0","It works, but it's also hiding the cursor. I need the cursor, but no system keyboard.","2016-08-08 06:51:20","1047507"
"65038920","10439581","0","Your ""update"" was the only working solution for me. I'm looking for a solution at least two hours :)","2016-08-08 07:05:38","1047507"
"65042670","31733623","6","@pspi Having versions below 1.0.0 is ""unlikely""? Out of 60 we've got ~15, and most of them aren't obscure.","2016-08-08 09:08:43","438992"
"33787151","22039047","1","Have a look at http://en.wikipedia.org/wiki/Email_address#Valid_email_addresses and http://data.iana.org/TLD/tlds-alpha-by-domain.txt","2014-03-07 10:31:09","372239"
"33792347","2389423","2","@MarcinGil ORIG_HEAD existed at least in 2009 :) Which is 5 years ago.","2014-03-07 12:51:30","179978"
"33793302","15995104","4","The other problem with code like this is your serverside code has to deal with placeholder text as empty input, which has problems with edge cases where you want to enter a town called ""Town"".

Instead of checking values against the placeholder text you should really use a data-modified flag on the input, and then clear the input on form submit if the flag is not set.

And for AJAX interfaces you may not even have a form, so you should be able to associate an arbitrary submission event with the input.

This is one of those really simple situations that isn't.","2014-03-07 01:16:02","318411"
"95925900","53112709","1","This is 100% the easiest way to do this.  If your current HEAD _is_ the correct state you want, then you can skip #1.","2019-02-06 10:26:49","242447"
"33796238","2389423","1","@Velmont but AFAIR not --merge ;) Anyway your answer is cool.","2014-03-07 02:24:44","5731"
"65065312","31733623","0","@DaveNewton ouch... even if the version is above 1.0.0 there are no guarantees that the project is following semver, though","2016-08-09 12:18:35","5032692"
"79827392","37614185","12","`git clean` deletes ignored files only if you use either the `-x` or `-X` option, otherwise it just deletes untracked files.","2017-09-26 08:17:16","1743811"
"33812626","5916151","0","@JoeJohnston In a perfect world, that shouldn't be built into the plugin. Instead, it should be converted to a true/false value before being using with the plugin. What's to say a database doesn't consider '0' true? It all depends on the database.","2014-03-07 09:42:55","696056"
"112029450","59917955","3","The hoisted column is incorrect. They all hoist variable. The difference with `var` is that they hoist but do not initialize to the `undefined` value. If they did not hoist, they would not mask variables of the same name in enclosing blocks: https://stackoverflow.com/q/63337235/2326961","2020-08-11 09:43:20","2326961"
"79838525","337006","18","@vidstige: `${BASH_SOURCE[0]}` instead of `$0` will work with `source my/script.sh`","2017-09-27 06:48:00","790070"
"49235265","2389423","0","I had done worse, I changed the origin without paying attention. Fortunately it is to solve! **---** `--- git reset --hard [sha-commit-before-merge]
git push [origin] [branch] --force` **---**  [source](https://coderwall.com/p/o0krbw/undo-a-git-merge-that-has-been-pushed-to-the-server)","2015-06-01 08:32:16","2435210"
"79851255","246128","0","While both `-h` and `-L` opts for `test` find wide dual support, there is a preference to favor `-L`. See these stackoverflow questions: [ref 1](https://stackoverflow.com/questions/5767062/how-to-check-if-a-symlink-exists) and [ref 2](https://stackoverflow.com/questions/1997666/difference-between-test-h-and-test-l). However, your milage may vary depending on who is refusing to follow standards.","2017-09-27 12:26:21","2367317"
"33835794","10701801","1","FYI, it is called the honeypot technique. Very useful against bots, presumably not so much against spamming sweat farms where real humans interact with your forms.","2014-03-08 08:02:24","53960"
"95973266","35644413","0","I'm quite fond of ` -I Ignore binary files.`.","2019-02-08 08:29:38","117471"
"19062329","2866221","52","I know its an old comment, but I wonder your question @MFD3000, because the docu says: returns true, if object is empty (as the name indicates it)","2012-12-12 07:44:55","1430733"
"49264881","5537012","0","I can't see how this can be a waste of time.
When your TEMPLATEPATH is obviously dynamic you can't use the .gitkeep solution.

And even with a nondynamic folder structure you should add some more stuff instead of removing the very good solution of checking directories e.g. check for permissions and chmod the files. Adding a way to mark directories inside a global .gitignore would be perfect for me. Something like #keep /path/to/dir","2015-06-02 01:58:41","4470838"
"4554681","671132","47","This answer misses the point. HTTP is barely mentioned in Fielding's thesis.","2010-11-18 02:22:49","359996"
"33859770","46170","2","@Kato: It uses some incompatible extensions, including `(?>` to stop backtracking and `(?<angle><)…(?(angle)>)` to avoid providing a lengthy `|`.","2014-03-09 08:05:57","707111"
"112063267","7244456","0","@jww there is no issues with SVN, you may always switch to it.","2020-08-12 10:55:49","2511795"
"65132130","2765461","1","""William's"" link broken again; new link seems to be http://git-wt-commit.rubyforge.org/","2016-08-11 01:07:30","202201"
"79872792","16609755","0","What if you do not use ""<commit_id>"" and simply use ""git reset --hard""? I typically just want to get rid of my latest updates that I have not committed yet and got back to the latest commit I made, and I always use ""git reset --hard"".","2017-09-27 11:30:18","4242086"
"79872871","6866485","2","What is the difference between `git reset --hard HEAD~1` and `git reset --hard`, if what you need is to simply get rid of all of the changes you made after your latest commit? I always use `git reset --hard` and it takes me back to my latest commit. For an analogy, I feel that it is kind of closing an application without saving changes so that everything that was on RAM memory is lost, but what you had on ROM memory is kept, using your latest commit as the ROM memory in this analogy, and your changes that have not been committed as stuff in the RAM memory that has not been saved yet.","2017-09-27 11:35:43","4242086"
"112079932","19095988","0","git commit -am ""Remove ignored files"" was the missing step to the accepted answer (at least for me)","2020-08-12 08:43:10","396483"
"19112077","11444416","46","Remember you can create block whenever you want. function() { code;{ let inBlock = 5; } code; };","2012-12-14 10:14:27","667700"
"96013109","30052371","2","`result = {1: x, 0: y}[a > b]` is another possible variant (`True` and `False` are actually integers with values `1` and `0`)","2019-02-09 06:07:40","1046007"
"79895034","16609755","7","@JaimeMontoya To undo latest changes you can use `git reset --hard` , but if you have to hard remove last ""n"" commits you specify a SHA","2017-09-28 01:10:31","2349141"
"79899731","6866485","1","Citing @poorva from comments in other posts below: 'To undo latest changes you can use git reset --hard , but if you have to hard remove last ""n"" commits you specify a SHA'.","2017-09-28 03:00:43","4242086"
"65157540","29847192","22","`git branch <branch-name>` and `git checkout -b <branch-name>` both create a branch but checkout switch to the new branch","2016-08-11 02:37:00","2119757"
"65165358","630453","2","`idempotency` is the key. Read [PUT or POST: The REST of the Story by John Calcote](https://jcalcote.wordpress.com/2008/10/16/put-or-post-the-rest-of-the-story/). If your method is idempotent, go with PUT. If not go with POST.","2016-08-11 06:12:54","696627"
"65168600","30253376","4","""In strict mode octal literals are not allowed (these are literals that start with 0x ...)"" octal literals start with a leading `0`.","2016-08-11 07:52:32","1204134"
"65172861","8212184","0","@MykhayloAdamovych: If meaningful values for array items will become known in arbitrary sequence, and it will be necessary to read some array items before meaningful values have been assigned to all of them, it will generally not be possible to statically rule out the possibility that items will be read before a meaningful value has been determined.  If Hoare doesn't like nulls, I'm curious what kind of default value or behavior he'd prefer?  Trapping when a null is read from the array might sometimes be better than waiting until it is dereferenced, but would make it impossible to copy...","2016-08-11 10:41:27","363751"
"65172937","8212184","0","...a partially-populated array by iteratively copying the items therein.  The only other choices I can see is to say that attempting to dereference a pointer read from an array slot that hasn't yet been written will access some default object (which would for most purposes seem rather silly) or will have C-style ""Undefined Behavior"".  I'd say trapping null pointers are better than any alternative I can see.","2016-08-11 10:45:05","363751"
"79928729","6581949","7","`Now you wonder why the heck is it written in lowercase, and not Type?` - well because it's implemented in C - it's the same reason defaultdict is lowercase while OrderedDict (in python 2) is normal CamelCase","2017-09-29 10:47:27","281545"
"79933988","14415881","1","For socks, I think using a bucket sort would be the most efficient method. 
have your pile in one spot and your buckets in another. 
pull a sock, put it in a new pile of socks that match that sock.
as long as you have enough table space, you can sort your socks in O(n) time, which is the lower limit, if you're doing this yourself. adding extra workers allows you to push towards O(log n)","2017-09-29 01:23:33","1833878"
"65183381","52719","1","In the same spirit of this answer, if you do not want to pollute the stash you can just create a new branch, switch back to the original branch, reset, then delete the newly created branch.","2016-08-12 08:13:34","245268"
"112110583","6866485","2","Given how many times I've Googled this, I think I need to tattoo `git reset --soft HEAD~1` on the back of my hand.","2020-08-13 07:16:11","114558"
"79937170","5189600","1","@Cheeso, [this article](https://www.atlassian.com/git/tutorials/rewriting-history#git-rebase-i) helps explain the `squash` and `fixup` designations used during an interactive rebase.  Specifically, the `squash` and `fixup` designations tell Git how to combine the commit messages.","2017-09-29 02:48:20","5447681"
"33912259","176274","18","@AdamGent: That sounds like a Java implementation quirk, and not normative. The [`java.net.URI` doc](http://docs.oracle.com/javase/6/docs/api/java/net/URI.html) itself says ""every URL is a URI, abstractly speaking, but not every URI is a URL"". And `java.net.URL` does weird stuff like checking equality of URLs by resolving host names to IP addresses (which seems at odds with RFC 3986 sec 6 in the first place, and breaks w virtual hosts). I think this just means the Java Standard Library has some inconsistent class behavior.","2014-03-11 05:00:37","105904"
"33912938","1984603","12","This is wrong. @JörgWMittag is mostly on point. URLs are URIs, and they're ""fully qualified""; so the ""URL"" in this answer is both. But `/some/page.html` is not a URI. It is a ""relative-ref"", which is a kind of ""URI-reference"". Combined with a base URI context, it can be resolved to a URI, but is not itself a URI. See [Section 4.1 of RFC 3986](http://tools.ietf.org/html/rfc3986#section-4.1). CodeIgniter's probably using the terms wrong and that should be called out; the Q (as currently edited) isn't framed as CodeIgniter-specific.","2014-03-11 05:33:19","105904"
"79938709","417142","1","If your input needs to be in URL parameters, then you might want this as long as possible. Tableau allows you to embed webpages into dashboards, and make the URL dynamic based on what the user clicks on. I might want to pass a 100's of pages of text as a URL param to do some sentiment analysis and then return a result. These 100's of pages of text would change depending on which book the user clicks on.","2017-09-29 03:28:54","6314220"
"112113419","60492563","0","the first sentence isn't _quite_ true. a staticmethod can access public class members by specifying the class name, just as any caller could","2020-08-13 09:18:31","5986907"
"112113448","47591541","0","methods don't always make changes","2020-08-13 09:19:46","5986907"
"112113794","30329887","0","This question mentions access of private class members. I want to highlight that (depending on your definition of private), `@staticmethod`s have a different access level to `@classmethod`s. The former shouldn't access class private class members","2020-08-13 09:37:01","5986907"
"33915997","176274","1","I think I figured out the Java `[` and `]` bracket thing. RFC 3986 sec 3.2.2 says ""[IPv6 host addresses] is the only place where square bracket characters are allowed in the URI syntax."" If you use them in the right place, `java.net.URI` accepts them. `new java.net.URI(""foo://[1080:0:0:0:8:800:200C:417A]/a/b"")` succeeds for me in Java 1.7. `""foo://example.com/a[b]""` errors. This sounds in line with the RFC. The form `new URI(""http"", ""example.com"", ""/a/b[c]!$&'()*+"", null, null)` will %-encode the `[]`. That `java.net.URL` accepts them elsewhere sounds like it's doing less validation.","2014-03-11 07:27:30","105904"
"33918565","176274","0","@AndrewJanke: Thanks - not entirely sure where that leaves my answer, admittedly :)","2014-03-11 08:53:47","22656"
"33928010","176274","0","@AndrewJanke Actually its the opposite. The URI parser in Java is stricter (as in it follows the *should not*) and yes other languages like Python have this problem : `urlparse.urlparse('http://blah.com/a[b')` and `urlparse.parse_qsl('a=[',True,True)` should fail but does not (notice how I even passed the strict option on that last one). I blogged about this here which has some more relevant links: http://adamgent.com/post/25161273526/urls-are-not-a-subset-of-uris . You should also know all of the servlet containers (I have used) will happily pass you URLs with `[` and `]` in the path.","2014-03-11 12:43:53","318174"
"33929477","1984603","3","When I answered the question it was tagged under #codeigniter. so it was answered as such.","2014-03-11 01:17:51","124378"
"4626530","72156","0","I ran into a problem where git responded with: ""fatal: git checkout: updating paths is incompatible with switching branches"".  I had to issue a ""Git pull"" first, then ""git checkout -b <remote_branch> origin/<remote_branch>""","2010-11-24 03:10:37","203573"
"65203727","271616","7","1/2 I have to agree that a `IllegalArgumentException` is better than a plain-vanilla `NPE` for these type of situations. I see a NPE as an indication that somewhere in the code, something unsafely de-referenced an expression that happened to be null (assuming all known and declared preconditions and invariants were met). An illegal argument exception OTH tells me a well-known precondition or invariant was not met.","2016-08-12 05:28:59","201722"
"65203849","271616","7","2/2 - That is, a NPE tells me there is a yet-undocumented null bug within the method (or within the methods it calls) or that there is a null precondition that we have not coded for. An illegal argument exception tells there is a bug *outside* of this method lying somewhere along the call chain that leads to the current method. Sticking to this pattern (within reason obviously), it does lead to faster root-cause analysis of errors (specially the nasty, intertwined ones.)","2016-08-12 05:33:47","201722"
"33943745","176274","1","@AdamGent Maybe I need to do some more reading on this. Where is the ""_should not_"" you're referring to? In RFCs back to RFC 1630, I only see them saying that [ and ] ""must"" be escaped or ""may not"" appear.","2014-03-11 07:58:30","105904"
"33944092","176274","0","@AndrewJanke I included the link in my blog post (you might have missed it) http://tools.ietf.org/html/rfc2396#section-2.4.3 (the continued page 10). Yes that is RFC 2396 but most things probably follow that older spec instead of RFC 3986 which I haven't looked at extensively.","2014-03-11 08:08:09","318174"
"33944283","176274","0","@AndrewJanke The characters like `[`, `]` are called **unwise** hence the should not. I can't find where it says *should not* for unwise (maybe an older spec) but its definitely inferred.","2014-03-11 08:12:45","318174"
"33944291","176274","1","@AdamGent Yes, I read it from your blog post. The word ""should"" doesn't appear in section 2.4.3. The normative language is in the last sentence, and it's a ""must"": ""Data corresponding to excluded characters must be escaped in order to be properly represented within a URI."" Maybe it's a different section?","2014-03-11 08:12:58","105904"
"33944386","176274","0","@AndrewJanke I'm not really sure. My goal just like my blog post is not really to be pedantic but informative for others to avoid the pitfalls I have had. In the new spec for URI, URL might be a subset of URI but in the wild that is certainly not the case.","2014-03-11 08:15:32","318174"
"96058794","67458","0","Your script will blow up with ""~/my_dir"", no need for crazy kids.","2019-02-11 03:00:12","1949418"
"33946224","176274","4","@JonSkeet Maybe just need to differentiate between standards vs implementations? E.g. ""Formally, according to RFCs, all URLs are URIs. (RFC excerpt.) But existing implementations may not match the spec exactly, possibly for interoperability, and may use URLs that are not valid per the RFCs. And because it's a complicated area, some people and documents might use 'URL' to mean something different from the RFC-specified thing."" Sort of like how most email validation routines don't match the RFC definitions.","2014-03-11 09:06:38","105904"
"33946243","176274","0","let us [continue this discussion in chat](http://chat.stackoverflow.com/rooms/49506/discussion-between-andrew-janke-and-adam-gent)","2014-03-11 09:07:11","105904"
"112141061","13308579","0","The logic in your script is not correct.  The `[ ""$REPLY"" != ""y"" ] ||` will only skip the next line `echo ""about to auto-commit any changes""` and continue running the rest of the script.
The line should read something like `[[ ""$REPLY"" != ""y"" ]] && { echo ""Exiting branch reset""; exit; }`.","2020-08-14 07:03:20","6163180"
"112145030","22417539","0","Easy. This is the best answer.","2020-08-14 10:35:04","541068"
"19189719","13920259","7","""Otherwise seems to serve no function"": not strictly true. See above discussion.","2012-12-17 07:46:51","834176"
"112159783","950146","0","I have loaded div dynamically by clicking menu without page loading by using URL hash. My problem is when i click same page 2/3 times js loading 2/3 times. thats why every event occurs multiple time.  I want to check js file already loaded into footer/head before appending in that code:  var js = document.createElement(""script"");

js.type = ""text/javascript"";
js.src = jsFilePath;

document.body.appendChild(js);","2020-08-15 05:33:47","4865187"
"4667304","180085","90","Incidentally, `$parent_of_flawed_commit` is equivalent to `$flawed_commit^`.","2010-11-28 11:26:12","4937"
"4676132","1126089","2","I do not think this works in general. Isn't there a way to do basically a git clone remote via a forced git pull?","2010-11-29 06:30:01","287238"
"65253105","23853061","3","Each time you do this it adds to the fork a commit ahead of the original","2016-08-15 03:55:02","2389337"
"112180759","4753609","0","but isn't the question related to centering a div entirely and not just the text? can text-align be used to center align divs? or is it just for text?","2020-08-16 06:48:08","5356465"
"65264063","16956810","0","To search non-recursively in a given path the command is `grep  --include=\*.txt  -snw  ""pattern"" thepath/*.","2016-08-15 12:34:35","1100107"
"112183291","8888015","0","Lost all my local commits with your suggested commands.","2020-08-16 09:37:47","54783"
"65275596","10459739","0","Nowadays, the current idiom is enumerate, not the range call.","2016-08-15 06:12:50","541208"
"65277293","80113","385","I'm really confused by the diagram at the end. I thought I got it until I saw that image.","2016-08-15 07:06:04","5870336"
"65277835","1213360","1","Great explanation of some of the concepts, but those diagrams are really confusing imo.","2016-08-15 07:24:29","5870336"
"80018768","37613351","0","doesn't answer the question as wel as the others, but +1 for information that is relevant!","2017-10-02 07:06:25","4628115"
"34003086","8809472","88","[performance.now](https://github.com/daniellmb/perfnow.js) would be even better. Unlike Date.now, the timestamps returned by `performance.now()` are not limited to one-millisecond resolution. Instead, they represent times as floating-point numbers with up to **microsecond precision**. Also unlike Date.now, the values returned by performance.now() **always increase at a constant rate**, independent of the system clock which might be adjusted manually or skewed by software such as the Network Time Protocol.","2014-03-13 04:25:07","131944"
"96102416","13444382","0","This is a really concise answer. Can you also describe why the REST is called stateless?","2019-02-12 05:15:49","2746110"
"80023602","46533936","0","Fielding added [some further rules](http://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven) RESTful APIs/clients have to adhere","2017-10-02 10:09:46","1377895"
"80023812","45938512","0","If you look at the constraints Fielding put on REST you will clearly see that an API needs to have reached Layer 3 of the RMM in order to be viewed as RESTful, though this is simply not enough actually as there are still enough possibilities to fail the REST idea - the decoupling of clients from server APIs. Sure, Layer 3 fulfills the HATEOAS constraint but it is still easy to break the requirements and to couple clients tightly to a server (i.e. by using typed resources)","2017-10-02 10:21:52","1377895"
"80025279","5032238","1","@jpmc26: It's not that there are no race conditions; it's that your program doesn't contain two _different_ places where you might detect what (due to races) is really the same condition.","2017-10-02 11:58:43","8586227"
"80025676","5032238","0","@DavisHerring What you say isn't exactly true. An existence check occurs any time you access the directory or its contents. So if you create the directory and then open a file in it, you're still vulnerable to the same race condition. The answer is good; it's just still not safe if another program is modifying stuff, which is what Heikki (not the answer) asserted.","2017-10-03 12:27:41","1394393"
"80025922","5032238","0","@jpmc26: The races are materially worse the other way: with `if not path.exists(...)` a concurrent `mkdir` can give you an exception (despite the check).  More broadly put, the check doesn't protect you from having to deal with any race condition, so it's strictly inferior to include it.","2017-10-03 12:47:20","8586227"
"80026083","5032238","0","@DavisHerring *This answer doesn't prevent you from having to deal with any race conditions, either.* If your program is competing with another program for control of a directory, you're *doing it wrong*.","2017-10-03 12:59:06","1394393"
"80026903","5032238","0","@jpmc26: It prevents the `mkdir` race (in that you have two clear cases and obvious code paths to deal with them).  Contention doesn't have to be a ""battle"": it's easily useful to have several programs create different parts of a directory.","2017-10-03 02:03:28","8586227"
"80037263","59839","0","Using test does NOT work with an unplugged usb stick, since the journaling FS pretends the directory is still there if you already checked it before. I found that in this case checking the exit code of ls was the only way to check reliably if the directory exists:

`if ls ""$DIRECTORY""; then echo ""dir exists"" ; fi`","2017-10-03 09:41:24","241740"
"49447600","52713","3","This will only discard changes to existing files. It will not discard any new files that you have added since the last commit.","2015-06-07 02:33:30","753632"
"65315059","23938696","1","This is now a standard: http://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.find","2016-08-16 05:38:11","177920"
"96148802","13159111","2","Why `and &` is  `0 0 0 0 1 0 0 0`  and `or |` is  `0 0 0 0 1 0 1 1`?","2019-02-13 09:47:40","10451543"
"112226158","40630","0","This is just wrong. What Java calls ""reference"" C++ calls ""pointer"". What C++ calls ""reference"" does not exist in Java. C++ reference is pointer like type but with global scope. When you change a C++ reference all occurrences of that references are changed, both in called function but also in a calling function. Java can't do that. Java is strictly pass by value, and changes to java references are strictly local. Java called function can't change reference value of calling function. You can emulate C++ reference by using wrapper objects like AtomicReference.","2020-08-18 09:14:22","1193657"
"80058918","549","1","@ChrisPillen For a while people could tell if a user was a bot because, when moving to click an enter button, a bot would go straight down then straight across. Humans, of course, move in weird, pseudo-random diagonal lines. So bot-writers responded by having their bots move in weird, pseudo-random diagonal lines. If you can program your site to expect behavior, someone can program their bot to behave that way; that's just an arms race. It's much better to rely on things provably infeasible for computers.","2017-10-03 07:44:44","5212501"
"96159649","2003515","0","Note that this can fail with `! [remote rejected] <branch_name> (refusing to delete the current branch: refs/heads/<branch_name>)` `error: failed to push some refs to 'git@github.com:<org_name>/<project_name>.git'` if you have set this branch in Github as your default branch. If you have, go to your project in Github -> ""Settings"" -> ""Branches""  and then change your Default Branch to another. Then repeating your command to delete the branch will work.","2019-02-14 08:08:29","1852005"
"96173124","25938347","0","@blitzen9872 agree on this. But was mentioned exactly because it used so often in for distributuon in praxis, again i don't like it either.","2019-02-14 02:37:17","504913"
"49465464","4701836","6","@DavidRR to be fair, how to handle groups is another debate altogether. `GET /users` makes sense, it reads as you want, but I'd be ok with `GET /user/<id>` or `POST /user` (with payload for said new user) because it reads correctly 'get me users 5' is odd, but 'get me user 5' is more natural. I'd probably still fall down on the side of pluralisation though :)","2015-06-08 07:57:14","300797"
"49465619","5431108","1","@Joshcodes don't forget that you can have many URIs referencing the same underlying resource. So what Ether said is sound advice, the client can PUT to a URL (that might be more semantic, like `PUT /X-files/series/4/episodes/max`) and the server respond with a URI that provides a short canonical unique link to that new resource (ie `/X-Ffiles/episodes/91`)","2015-06-08 08:02:33","300797"
"49465688","7866699","2","""Prefer PUT over POST""... care to justify that?","2015-06-08 08:04:31","300797"
"49465771","18243587","5","No, PUT is not for update or create. It is for replacing. Note that you can replace nothing with something for the effect of creating.","2015-06-08 08:07:28","300797"
"49465841","20531076","1","PUT is not for update, it is for replace, note that to create you are replacing nothing with something. POST is absolutely not for update in any shape of form.","2015-06-08 08:10:32","300797"
"49465881","20541819","6","PUT is not for update, it is for replace, note that to create you are replacing nothing with something. POST is absolutely not for update in any shape of form.","2015-06-08 08:11:59","300797"
"49465911","21156240","1","I think you've managed to provide one of the few good examples of how to use PUT, well done.","2015-06-08 08:13:00","300797"
"49465975","26211171","0","For the most part, from reading through all this noise, you seem on the ball. I would say though, we should refer to PUT as the replace method, rather than the create/update. I think it better describes in one what it does.","2015-06-08 08:15:20","300797"
"49467885","7866699","1","@thecoshman: Sure. I wrote that as a general advise. My reasoning is that PUT is idempotent, hence better from a network perspective. POST is also more general, so by recommending PUT you avoid POST being used for situations where PUT would have sufficed. POST is also heavily overused due to browser restrictions, and so a recommendation against it will have positive effects for REST as a concept. There are also some positive effects in the URL scheme when the clients are in control of the URL construction IMO, but I cannot fit that into a comment here.","2015-06-08 09:08:54","83741"
"49472286","20783081","1","Thanks suraj. The reason because its not been voted much. And the ans is not accepted by the questioner.","2015-06-08 11:03:16","1776255"
"96182135","5201642","1","Not sure what version this was added in but you can use this one liner to reliably reuse the latest commit message and author: `git reset --soft {base-commit} && git commit --reuse=HEAD@{1}`","2019-02-14 07:13:49","187780"
"34077953","178344","21","@chiborg Yes, but sometimes that's what you want and I had to learn the hard way how ""clever"" jQuery was...","2014-03-14 05:56:14","2056448"
"112259714","4729334","3","Excellent explanation. But the logic behind slicing is very non-intuitive.","2020-08-19 10:06:49","2610768"
"49476481","18243587","0","@thecoshman I have posted in my answer the relevant parts of the HTTP/1.1 spec. Read the last part of my answer entitled `Spec`. The spec clearly states that `PUT` is used to *create* or *update* an entity.","2015-06-08 12:50:09","2458234"
"49476780","18243587","2","@7hi4g0 PUT is for for updating with a complete replacement, in other words, it replaces. You replace nothing with something, or something with a completely new something. PUT is not for making a minor change (unless you have the client make that minor change and provide the entire new version, even what is remaining the same). For partial modification, PATCH is the method of choice.","2015-06-08 12:57:21","300797"
"49477242","18243587","0","@thecoshman I never said that `PUT` should be used for partial modification. If you don't like the terminology, I can restate. The spec clearly states that `PUT` is used to *create* or *modify* an entity.","2015-06-08 01:07:40","2458234"
"49477320","7866699","0","@AlexanderTorstling excuse whilst I try to tease out solid reasoning others might benefit from. Better from a network perspective how? Sure if your network goes down and you failed to confirmation you can just re-create, but what if it did work, and then someone else modified? Your re-PUT will overwrite what they did. You make it sound like POST has some extra overhead compared to PUT (where PUT would have sufficed). I think the fact POST is overused should not mean we advise against it when it is the correct choice, just learn to advise the right choices. That Last point is rather subjective.","2015-06-08 01:09:30","300797"
"49477614","18243587","0","@thecoshman I guess you can say, *create* or *replace*, but the two are different actions according to the Spec. Either way, *update*, *modify*, *replace* are only terms.","2015-06-08 01:15:34","2458234"
"49479100","28342808","1","@Joel just checked this on my mac, both commands are legit (`vim -version` 7.3).","2015-06-08 01:47:50","2790048"
"96184663","19095988","0","For more details about what each of the flags mean to `rm` see [this post](http://www.codeblocq.com/2016/01/Untrack-files-already-added-to-git-repository-based-on-gitignore/).","2019-02-14 08:52:57","35690"
"49481105","7866699","0","@thecoshman: I was thinking of retries, yes. PUT concurrency can be controlled by conditional headers like If-Modified et al. Doing the same for POST would result in much coarser locking. You have a point in advocating the right choices, I however had no intention of banning POST. Perhaps ""Use PUT when possible"" would have been a better wording?","2015-06-08 02:28:40","83741"
"19291711","8330107","2","I know I did. I'd add one thing, in case the entire string starts capitalized: pieces[i] = j + pieces[i].substr(1).toLowerCase();","2012-12-20 09:16:13","1223667"
"49485329","20241145","0","If you already added the file using `git add`, use `git reset [file]` to undo your add and use this command to forget the file.","2015-06-08 04:02:07","811008"
"65367758","19095988","0","Thanks! There was no way was going to go through all the files listing which ones I wanted to be ignored next commit.","2016-08-18 12:07:34","2374028"
"49485977","28865728","15","A file path is not a URL or URI unless you put the `file://` prefix on it.  Although browsers do generally handle non-URL formatted file paths.  [Mozilla publishes their test cases for file URLs](http://www-archive.mozilla.org/quality/networking/testing/filetests.html).","2015-06-08 04:19:43","1145388"
"49489079","5431108","0","@thecoshman the issue is the concern for the URL structure does not belong to the client. Reading about self-discovery (also part of REST) may help make this clear.","2015-06-08 05:50:32","965382"
"19304760","176264","34","Tor the webmasters take on this question: [What is difference between URI and URL](http://webmasters.stackexchange.com/questions/19101)","2012-12-21 10:14:48","527702"
"49492986","4114095","116","Here's [a very clear and thorough post](https://github.com/blog/2019-how-to-undo-almost-anything-with-git) about undoing things in git, straight from Github.","2015-06-08 07:41:52","1446845"
"34089148","21510402","24","OWASP recommendation is interesting because of its simplicity. Anyone know a reason Google's way is more secure?","2014-03-15 01:47:22","878969"
"65382680","7094191","0","If you look closer, InputMethodManager.HIDE_IMPLICIT_ONLY and InputMethodManager.SHOW_IMPLICIT have the same value, which is ""1"", so there is no difference between these calls. => not working","2016-08-18 10:43:08","1235910"
"112285696","57613696","1","No: `error: The following untracked working tree files would be overwritten by merge:` - i don't care about those files. If it where only two or three I would just delete them. But there are so many.","2020-08-20 06:40:01","341091"
"4788581","3737177","169","For everyone's sake, please remove the bolded information about pre-incrementing being infinitesimally faster. This is the absolute worst example of premature optimization and this kind of information should not be in people's heads if they are just starting to learn PHP.","2010-12-08 11:49:02","296308"
"4793148","3737177","15","@Lotus - I consider it a fun fact. If you're a beginner to PHP, or C++, etc, it seems pretty wacky that ++i and i++ are different enough to work at different speeds. I found it fascinating.","2010-12-09 10:47:44","186636"
"65408604","33735369","8","I think `return proxy.has(obj)` is much cleaner than two lines with if-else statement here","2016-08-18 11:30:47","2043175"
"4798382","3737177","13","@Peter Ajtai Yes, it's interesting, but from the way you've structured your post you make it seem like one of the prime facts of PHP that is absolutely vital to using the language.","2010-12-09 05:43:36","296308"
"49530940","7866699","0","@AlexanderTorstling well, my main point was that your answer states you should have a preference, with no justification for it. Your responses here however seem fairly justifiable. That said, I don't think it's the correct reasoning to use for PUT vs POST","2015-06-09 04:12:54","300797"
"49531046","18243587","0","@7hi4g0 my point is, if you read the rest of that sentence from the spec, you are updating that URI to have a completely new resource at that location. As such, it is replace 100% with what data is included in this `PUT` request. Likewise, I'd argue that create is effectively just replacing 'nothing with something'. And so, you can ""Keep It Simple Stupid"" by just saying ""PUT is for replacing"".","2015-06-09 04:15:36","300797"
"49531147","5431108","0","@Joshcodes then by that logic, a client should never use PUT to create as they shouldn't be concerned with with providing the URL. Well... unless the server provided a URL to PUT to if the client wants to put to it... something like ""PUT /comments/new"" and the server might respond ""204 /comments/234532"" but that seems a bit RPC to me, the client should just POST to /comments...","2015-06-09 04:18:27","300797"
"80145666","34511442","1","Can you add thSoft's `git commit -am ""Remove ignored files""` afterward to your answer? Your answers combined got me through things : j","2017-10-06 12:07:15","616514"
"96242432","48415961","0","could that second function to reuseable??","2019-02-17 02:02:09","10449299"
"49538168","246128","217","This accepted answer is not ok, it doesn't work with symlinks and is overly complex. ````dirname $(readlink -f $0)```` is the right command. See https://gist.github.com/tvlooy/cbfbdb111a4ebad8b93e for a testcase","2015-06-09 07:32:10","704087"
"112313934","1644241","1","With any level of compiler optimisation, there is **no difference in efficiency.** The assembly output is identical.","2020-08-21 01:36:47","31945"
"19369124","12791414","4","I think this is the proper way... other syntax look more like hacks to me.","2012-12-24 05:45:08","258289"
"4807915","452820","2","But on the same page, see the link to http://types.cs.washington.edu/jsr308/ for info about using the Checker framework to add the @Nullable and @NonNull type annotations in Java 7.","2010-12-10 01:00:31","13140"
"80155502","549","0","@LordFarquaad I understand that. But that means, there a several bot writers out there, who do not make the effort. And time is special. Because the bot writer needs to build in time loops. That means bot authors need more time to run their bots. Which, in some cases, will crush their business model.","2017-10-06 08:50:31","1056644"
"49540027","18243587","1","@thecoshman You could, but it wouldn't be too clear that create is also covered in there. In this case, it is better to be explicit.","2015-06-09 08:21:12","2458234"
"80156799","417184","0","Is GET parameters included in this 2000 limit of URL?","2017-10-06 09:26:00","1273587"
"4816664","245213","5","@StaxMan they were dropped exactly because people started using them as metadata. Crockford said it breaked the compatibility for what the format was designed, and I agree: if you want metadata, why not include it as actual data? It's even easier to parse this way.","2010-12-11 09:03:56","124119"
"49542370","18243587","0","@7hi4g0 I would generally say that POST is (usually) more appropriate for create, but still. I think we can leave it at that, we've at least given people sensible discussion to think about, which IMO is the most important thing to have when you have fluffy 'guideline' :P","2015-06-09 09:37:49","300797"
"80159306","21422128","2","Elegant: the `.keep` file _together with the commit message_ shows the intent of ""keeping"" the project structure. Adding Readme or Abouts I think will cause more confusion...","2017-10-06 10:39:44","2506817"
"19380047","246128","1","Do not `cd` to other directory before this code, otherwise it will be wrong.","2012-12-25 12:13:16","1094962"
"112320045","406243","0","The `egrep` one: `egrep -v ""hede|hihi|etc""`","2020-08-21 08:07:07","6329629"
"80162671","417184","1","@cytsunny yes they are","2017-10-06 12:15:36","6521"
"80163520","927386","4","It is almost a comprehensive answer. In case your 'last commit' === 'your first commit' — reset will do nothing but throw nice fatal message. In this case use `git update-ref -d HEAD`.","2017-10-06 12:36:48","4814774"
"65435447","20241145","17","This answer would be a lot more useful if it explained exactly what the given command does, e.g. how it's different from the other suggested solutions.","2016-08-19 03:39:50","423105"
"65435707","30942174","3","Another caveat: on pull, this will cause the file to be deleted in others' working directories, right?","2016-08-19 03:46:04","423105"
"49547103","16957078","1","Also, note that it is case sensitive.","2015-06-10 02:09:27","3457981"
"65437617","671132","0","@EmilH Very informative, and the example starting from the base resource really helped me understand how Level 3 REST service traversal works. I had a massive change in understanding what REST really is (although I knew a little bit about HATEOAS before). It seems like there is a huge difference between Level 2 REST APIs and Level 3 REST APIs; The former follows the whole HTTP-VERB noun-resource URI thought, while the latter tries to emulate how a user on a browser surfs the web. Is my understanding correct?","2016-08-19 04:41:02","3040381"
"65439461","20241145","2","E.g. if I use this option, will other repos that pull from the remote know to stop tracking the file? (Maybe only if I add the file to .gitignore?)","2016-08-19 05:43:26","423105"
"80175609","21409180","2","Behaviour of a JSON parser with this kind of code is undefined. There is nothing to say that the parser behaves as if only the last value was present. It could behave as if only the first value was present, or any value, or as if the value was an array.","2017-10-06 06:24:09","3255455"
"96268834","682343","2","This command CLEARS / DELETES STUFF IN THE INDEX. What the OP and other people actually want is to UNDO THE CHANGES IN THE INDEX and NOT DELETE STUFF. Git reset . is the correct answer.","2019-02-18 08:43:32","1469614"
"112344289","394809","1","I sometimes wonder how it is possible that a yes or no question gets 26 answers","2020-08-22 02:58:07","7330813"
"19400707","487258","0","I think you will find this: http://www.youtube.com/watch?v=6Ol2JbwoJp0 video helpful.","2012-12-26 03:12:49","1752268"
"80185713","19876416","1","@Auxiliary - included a sample output to avoid any confusion for the readers.","2017-10-07 05:56:16","2581128"
"112350704","48360733","0","No idea what it's supposed to do, I'm confused :s","2020-08-22 12:27:49","639370"
"49578435","5431108","0","@thecoshman yes, the client really should never use PUT. What's RPC about that?","2015-06-10 05:11:08","965382"
"96284627","419185","34","Out of curiosity: What hapens if I run `subprocess.run('foo_bar.py')` in a python script? I suppose that `foo_bar` will be started with `__name__ = '__main__'` just like when I tipe `foo_bar.py` in cmd manually. Is that the case?
Taking @MrFooz' Answer into account there should not be any problem doing this and having as many ""main"" modules at a time as I like. Even changing the `__name__` value or having several independantly creates instances (or instances that created each other by `subprocess`) interact with each other should be business as usual for Python.
Do I miss something?","2019-02-18 04:09:14","7967942"
"34167452","630475","8","PUT should only be used to create a resource if the client cares about the resource's name. A client caring about a resource's name indicates coupling. Coupling is the result of poor practices. Therefore, use POST. If there is concern about a resource being created twice with POST (since it's not idempotent) read [this answer](http://stackoverflow.com/questions/630453/put-vs-post-in-rest/19670755#19670755).","2014-03-17 07:00:28","965382"
"112358877","62259741","1","This changes other characters too. The question asks ""How do I make the first letter of a string uppercase, _but not change the case of any of the other letters_?""","2020-08-22 08:28:56","5351721"
"112360714","48360733","0","Does `Promise.resolve(value)` resolve a cloned `value`? I doubt it, past myself.","2020-08-22 10:41:13","4510033"
"65465194","19670755","0","@Joshcodes i'm seeking an answer to http://stackoverflow.com/questions/39057416/how-to-ignore-multiple-clicks-from-an-impatient-user. commenting now to point your attention to it.","2016-08-20 07:20:24","2517838"
"65465213","19670755","0","@Joshcodes i'm aware the work on http://stackoverflow.com/questions/39057416/how-to-ignore-multiple-clicks-from-an-impatient-user doesn't comply w/Restful architecture. yet works for our case as an exception.","2016-08-20 07:21:14","2517838"
"65465244","7866699","0","@AlexanderTorstling commenting to point your attention to http://stackoverflow.com/questions/39057416/how-to-ignore-multiple-clicks-from-an-impatient-user. maybe you can help.","2016-08-20 07:23:05","2517838"
"49586906","1126089","1","`git clean` by itself doesn't seem to help, @Arrowmaster 's solution is closer, but a better one by Lloyd Moore is in the next answer.","2015-06-10 09:12:20","64240"
"112361715","62259741","0","you can ignore the other extra step of code : +word.slice(1).toLowerCase();","2020-08-23 12:17:49","11198747"
"80200182","43854346","0","Thanks, I added an edit to clarify that valuesAreEqual can be substituted. I agree that the JSON approach is slow -- but it will always work. Should definitely use better comparison when possible.","2017-10-07 08:33:21","5666034"
"4865462","1628584","14","But then how would you push this to another repository? I get rejected when I do `git push` after `git reset --hard HEAD~3`.","2010-12-15 07:41:33","432"
"80206295","18309057","16","@cocco So you wrote misleading, unreadable code in a SO _answer_ in order to save a few keystrokes? Please don't do that.","2017-10-08 06:20:55","37168"
"4871787","1628563","147","Note: I asked the opposite question [here](http://stackoverflow.com/questions/3492536/git-point-branch-to-new-commit)","2010-12-16 08:56:06","11410"
"96306989","5189600","1","Note that you can re-order commits when rebasing interactively - e.g. if you made commits A, B, then C, you can squash commit C onto A by swapping the order of the lines of B and C when prompted (and changing C to ""squash"").  Useful if you have committed more work since the commit you are trying to squash.","2019-02-19 09:55:10","2713487"
"34186464","17782979","14","@steveha Multiplication should be faster, I tried looking it up in the Intel books, but couldn't find it... either way, benchmarking also gives me that result here.","2014-03-18 08:45:05","1031591"
"34186699","17782979","20","@steveha P.S.: another possible answer would be `int c = data[j]; sum += c & -(c >> 7);` which requires no multiplications at all.","2014-03-18 08:52:11","1031591"
"19444116","135248","26","Using `buttons` is a better choice here while using a `span` is not.","2012-12-28 08:33:06","69310"
"65487801","15762329","1","I should also reiterate yckart's comment that `for( i = 0; i < arr.length; i++ )` would be a better approach since it preserves the exact indices versus whatever order the browser decides to store the items (with `for in`). Doing so also lets you get the array index of a value if you need it.","2016-08-21 11:20:39","3672465"
"65499346","38657362","7","for *PUT* is similar to **INSERT or UPDATE** query","2016-08-22 09:25:53","4632019"
"65499700","630475","63","Thinks of them as: PUT = insert or update; POST = insert. So when you make two PUT - you get the one new record, when you do two POSTs - you get two new records.","2016-08-22 09:34:34","4632019"
"49611161","20117438","0","Why have such a huge solution when others are so much more elegant and much simpler?","2015-06-11 12:20:33","2618653"
"49611194","27639544","12","So you need to install node and a package to capitalise a string. Bit of overkill.","2015-06-11 12:21:15","2618653"
"96321241","419185","31","@hajef You're correct about how things would work with `subprocess.run`. That said, a generally better way of sharing code between scripts is to create modules and have the scripts call the shared modules instead of invoking each other as scripts. It's hard to debug `subprocess.run` calls since most debuggers don't jump across process boundaries, it can add non-trivial system overhead to create and destroy the extra processes, etc.","2019-02-19 04:16:03","25050"
"80253492","417184","0","Is this true for modern browsers? https://stackoverflow.com/questions/46629900/creating-temp-urls-in-single-page-applications","2017-10-09 05:52:26","7707677"
"4916400","671132","19","This answer doesn't mention the purpose of REST, and makes it seem like it's all about clean URIs. While this might be the popular perception of REST, D.Shawley's and oluies answers are more accurate - it's about being able to take advantage of features built into the architecture, like caching, by working with it instead of against it. Prettier URIs are mostly a common side effect.","2010-12-20 08:49:03","82898"
"65528763","25289549","6","You should time `^(?!.*hede)` too. /// Also, it's probably better to rank the expressions for the matching corpus and the non-matching corpus separately because it's usually a case that most line match or most lines don't.","2016-08-23 12:07:23","589924"
"4920949","671132","9","@user35, @T.R., Of course you're right about all that, and I agree with you. But exactly because it's such a complicated idea, most people won't be interested (or even able) to understand the concept in detail. My explanation is an oversimplified example of what it looks like when some of the RESTful principles are applied to the by far most common usecase - http based web services. I still think my answer is good enough as a quick five minute introduction, but of course I'd encourage anyone to read about it in more detail, for example the other, much better, answers on this page.","2010-12-21 07:38:52","73772"
"49638005","901712","0","For properties, use .prop(). .attr() is for attributes.","2015-06-12 02:16:27","1392539"
"80286739","7359734","3","Portability note: [MERGE](https://en.wikipedia.org/wiki/Merge_(SQL)) is ANSI SQL; [UPDATE...FROM](https://en.wikipedia.org/wiki/Update_(SQL)) is not.  Having used both, I find MERGE semantics more intelligible - I'm less likely to mess up doing a MERGE than an UPDATE...FROM.  YMMV.","2017-10-10 02:22:25","876993"
"112422319","63572807","0","Can you please elaborate what the above code is doing ? Try to give proper answers rather than one liners.","2020-08-25 09:29:21","11259455"
"112425714","63572807","0","@KhalidKhan updated, anyways it was self explanatory but due to the delete vote, which was unnecessary, i updated the answer, whoever asked for delete might try to understand now.","2020-08-25 11:30:40","11967725"
"112426658","59814938","0","Hi, although this answer's contents are accurate, it really doesn't answer OP's question (which is how to return something from an asynchronous call?)","2020-08-25 12:02:39","5777021"
"19493912","1473742","1","`var inArray = function(a,b,c,d){for(c in b)d|=b[c]===a;return!!d }`","2012-12-30 06:54:24","1249219"
"80294084","549","0","@Chris Parts VI and VII in the top answer address throttling, so time is impacted regardless. My point is that calculating some number that a human probably won't beat goes against one of the security fundamentals, which is that you shouldn't try to ""outsmart"" a bot. It's true that if you're clever enough you can beat most bots, but getting involved in an arms race like that usually means you've got a fundamental flaw somewhere else. It's much better to remove that flaw than try to stay a step ahead, because sooner or later a bot is going to outpace you, and they only need to do that once.","2017-10-10 05:45:37","5212501"
"112442601","63572807","0","This doesn't work, `{ignoreCasing}` tries to destructure undefined in your example. And `this` doesn't refer to the string when using the arrow function","2020-08-25 09:12:32","243444"
"96372970","49343276","0","This will exactly convert your changes and discard newly added files from previous commit.","2019-02-21 01:07:57","4553305"
"96373015","11828270","2","From the command line you can quit vim as soon as you entered it: `vim --cmd q` . This can be used along with  `-V` option: `vim -V20vim.log --cmd exe +q`. The newly created vim.log can be useful for diagnostic/debugging purposes.","2019-02-21 01:11:41","5411198"
"96373081","12725425","0","Are there really 26 voters who believe this is correct?","2019-02-21 01:17:14","1081110"
"96373371","12725425","0","@Andy I was working with Java back when I answered this where it does make a difference, not sure if the question specified .net when I answered it as it's been edited since then","2019-02-21 01:36:53","1250250"
"34260864","14423956","0","@Christian If you have only black socks, matching socks is not a problem.","2014-03-19 07:55:55","1446048"
"34260999","1213360","20","This answer was the best in my opinion, because it helped me understand what a return statement really is and how it relates to this ""return address"" that I come across every now and then, what it means to push a function onto the stack, and why functions are pushed onto stacks. Great answer!","2014-03-19 07:59:21","706853"
"112449774","63572807","1","@JakeCoxon yeah my bad, updated the answer to fix the issues :D cheers!","2020-08-26 06:09:17","11967725"
"112450928","35446009","54","It seems this answer is incomplete","2020-08-26 06:59:37","9925065"
"49675284","15412749","5","That's not centering the div, that's centering the text.","2015-06-12 11:50:25","4356188"
"34266142","14423956","0","@OllieFord You honestly have no idea :)","2014-03-19 10:28:41","1050373"
"80312628","67458","1","@tvCa Many scripts which were happy in standard *nix environments suddenly find themselves in Windows environments (think cygwin, or git for Windows/Msys2). Or they just are leat loose on Samba shares. It is no coincidence that more and more tools get the option to produce or process NUL terminated file names.","2017-10-11 07:40:36","3150802"
"112473477","59916","0","Have to say it is annoying how full of pitfalls this is... the problem is `$0` -- in Windows it's always the script name, so this is very simple: `%~dp0`","2020-08-26 07:44:04","63209"
"96422461","19950727","0","This method overwrites `x` with its copy. If `x` is a function argument this won't work (see [example](https://pastebin.com/QXmyn9m8))","2019-02-22 09:27:27","704244"
"4996571","178450","176","This solution would seem to encourage the confustion of `visible=false` and `display:none`; whereas Mote's solution clearly illistrates the coders intent to check the `display:none`; (via mention of hide and show which control `display:none` not `visible=true`)","2010-12-29 06:30:57","351980"
"19559006","10701801","0","Careful of usability, as users who want to use auto-populating fields by plug-ins or browser settings may populate these fields automagically.  Then you're hurting your users above preventing hackers.","2013-01-02 07:52:58","209259"
"19561451","178450","3","What does `$(element).is("":visible"")` return, if the element is visible in terms of not `having display:none` or `visibility:hidden`, but the user scrolled down so he doesn't actually see it? Is there a simple way to check that?","2013-01-02 09:30:44","562769"
"96429485","54506767","12","This answer makes the assumption that the OP (or any user with a similar question) is both familiar with _C_ *and* knows what an entry point is.","2019-02-22 12:44:37","8159847"
"34295305","4754797","5","This command creates the feature branches from remote as normal branches (not feature branches) - how to fix this?","2014-03-20 02:31:48","1861622"
"80330289","31210295","3","how are two instructions executed together? is this done with separate cpu cores or is pipeline instruction is integrated in single cpu core?","2017-10-11 02:49:42","4767498"
"65625751","161813","0","A niche, related question on resolving a conflict in just one file, from command line, using three-way merge with given strategy: http://stackoverflow.com/q/39126509/245966","2016-08-25 08:48:56","245966"
"65625867","3407920","0","If instead of brutally doing `git checkout --ours file.txt` you want to perform an automatic three-way-merge on that file using `--ours` strategy, you can use `git merge-file` for that, see http://stackoverflow.com/q/39126509/245966","2016-08-25 08:52:15","245966"
"49705000","29606109","0","You can add to your note, that there is no `full outer join` in MySQL either.","2015-06-14 01:34:13","3444240"
"80347064","46382081","1","this worked for me. most of the time display block then margin auto for inner div doesnt work but with the display flex in outer div worked great. thanks alot. I havent tried the display flex before.","2017-10-12 01:13:39","3330188"
"19588864","2341539","0","I don't like using JSON because it can't work with circular object structures.","2013-01-03 06:28:59","945873"
"112524683","30138655","0","it could use a better name, though... i don't use it everyday and it's get hard to remember this name when i want to use it!","2020-08-28 12:18:55","274502"
"5018461","40483","1","I'm pretty sure it will throw a ConncurrentModificationException before the underlying collection is modified, though I could be wrong.","2011-01-01 01:46:36","4257"
"80358785","46382081","0","me too. using display table also great. my another answer. https://stackoverflow.com/questions/5703552/css-center-text-horizontally-and-vertically-inside-a-div-block/46452713#46452713","2017-10-12 09:30:18","7656367"
"65651749","3407920","2","Why would you fetch before a pull? Doesn't it always fetch when you pull automatically?","2016-08-25 08:25:04","541208"
"49741064","1021384","19","+1 This is the RIGHT ANSWER, as it correctly handles the case where some files have both staged **and** un-staged changes. Note that this solution DISCARDS the unstaged changes; if you wish to retain them, then you should use @greg-hewgill 's answer of `git stash save --keep-index`.","2015-06-15 03:12:18","202130"
"112534661","42954820","0","I don't know if that last example is accurate. Because by calling it not from a function but a direct command line its still considered part of the same function. So, if you called it from outside of a function, it shouldn't behave in the same way.","2020-08-28 06:20:50","7667993"
"112539698","26853961","0","What `x` and `y` did you use in the benchmarks? And I find `dict((k, v) ... for k, v in d.items())` somewhat clumsy and artificially inefficient. No need to unpack and repack every item. I think it should be `dict(item ... for item in d.items())`.","2020-08-28 10:56:35","13008439"
"112540029","26853961","0","@superbrain x and y I don't recall right now. that's a fair point about item. I'll review it.","2020-08-28 11:23:51","541136"
"112540795","26853961","0","@AaronHall With fresh new benchmarks, thanks :-). You have another `dict((k, v) ...)` a bit higher in your post, btw. And I just thought of another solution that I think hasn't been mentioned yet: `dict([*x.items(), *y.items()])`. It's a bit slower for me than the `chain` one.","2020-08-29 12:43:33","13008439"
"112541641","26853961","0","While possible, that's using the ""new way"" except for lists instead of dictionaries - I'm not going to suggest people are doing something we have no evidence they're doing that is clearly suboptimal... you could do even more things that are suboptimal, so I'm not going to introduce the idea.","2020-08-29 02:31:49","541136"
"112546856","53183593","0","The only reason is missing coreutils on mac. I am using `SCRIPT=$(realpath ""${BASH_SOURCE[0]}"")` + `DIR=$(dirname ""$SCRIPT"")`.","2020-08-29 10:15:02","404949"
"96476792","419185","9","i have a doubt in foo2.py example in the food for thought section.what does from foo2.py import functionB do? In my view it just imports foo2.py from functionB","2019-02-24 01:47:03","8546736"
"34355643","4090938","1","@Catskul Only --git-dir is relevant (the config is in the git dir, independent of work tree location), and it does work for me. Are you sure you specified the path to the actual .git dir, not its parent directory?","2014-03-21 09:53:19","119963"
"96483004","2251026","0","your answer seems strange to me. I just opened a `subprocess.Popen` and nothing bad happened (not had to wait). Why exactly do we need to worry about the scenario you are pointing out? I'm skeptical.","2019-02-24 07:38:51","1601580"
"112563999","5196340","0","You could simplify this using `gawk`. `git -c core.editor=""gawk -i inplace '{if(NR>1 && \$1==\""pick\""){\$1=\""squash\""} print \$0}'"" rebase -i --autosquash HEAD~5`.","2020-08-30 08:56:26","2682729"
"96485702","54133107","3","There was nothing about MacOS in the question. I think this answer should start with ""Another approach is to use PHP instead of relying on BASH"". Because this reveals only at the end of the answer.","2019-02-24 10:14:20","5253659"
"80423729","11227877","6","@AnandTyagi As Peter Wone noted, it's not that the compiler knows which array is sorted or not. Imagine an extremely simple branch predictor that takes the same path as the previous iteration, e.g. a train taking a left if it took a left last time, and vice versa. For a sorted array of 256 ints, (ignoring the undefined first iteration), the prediction would be correct from 2-128, wrong at 129, and then correct from 130-256. Now, that's a terrible branch predictor that would only work in this specific situation, but a really good predictor should still handle this capably.","2017-10-13 09:43:01","1054647"
"19635709","38565","1","I appreciate the simple yet realistic example. I changed a request like `SELECT c.id, c.status, cd.name, c.parent_id, cd.description, c.image FROM categories c,  categories_description cd WHERE c.id = cd.categories_id AND c.status = 1 AND cd.language_id = 2 ORDER BY c.parent_id ASC` to `SELECT c.id, c.status, cd.name, c.parent_id, cd.description, c.image FROM categories c INNER JOIN  categories_description cd ON c.id = cd.categories_id WHERE c.status = 1 AND cd.language_id = 2 ORDER BY c.parent_id ASC` (MySQL) with success. I wasn't sure about the additional conditions, they mix well...","2013-01-05 11:11:24","15459"
"80427904","16957175","26","Note that [ripgrep](https://github.com/BurntSushi/ripgrep) is faster than anything else mentioned here, including The Silver Searcher and plain 'ol grep. See [this blog post](http://blog.burntsushi.net/ripgrep/) for proof.","2017-10-14 04:01:00","3538165"
"34380502","7286050","5","I agree. Many if not most regular expressions are not regular languages and could not be recognized by a finite automata.","2014-03-22 09:36:09","540815"
"34380673","477578","0","@shannon: Absolutely - as long your user data is protected by strong encryption, you could theoretically upload it to Pastebin and it wouldn't be a problem -- and yet I don't think anyone would feel comfortable with such a setup. Some frameworks actually provide such an encrypted-cookie solution as an alternative to a session database, and it is a viable solution, no doubt. The problems begin when people implement that solution with weak or no encryption (and they do), or exceed the data limits on cookie data.","2014-03-22 09:44:35","57068"
"34380829","477578","0","@JensRoland: I guess my thought was, if we assume the encryption is weak, then we have to worry that even a simple session token is also not safe, and we risk session hijacking, replays, and any number of other related attacks.","2014-03-22 09:53:08","608220"
"112576431","80113","0","Some more notes possibly relevant to readers: **1**. the Memory Management Unit (MMU) maps the physical memory addresses in a page table to virtual addresses. **2**. The stack is useful for maintaining contiguous memory locality, where in the heap data could be spread between several memory devices such as RAM, L1 cache, L2 cache, etc. **3** consider storing a fixed array of 10 elements, each side by side in memory on the stack, iterating/seeking an element is trivial. 10 items in a linked list on the heap may require lookups to not only different block of mem but different mem devices.","2020-08-30 11:10:24","2873090"
"65695521","36837818","0","I'd prefer bjfletcher's answer, which could be as short as `items= items.filter(x=>x!=3)`. Besides, the OP didn't state any requirement for large data set.","2016-08-27 01:55:25","2565778"
"5073391","178450","97","That is correct, but `:visible` will also check if the parent elements are visible, as chiborg pointed out.","2011-01-06 12:30:27","25449"
"65712285","59895","0","@Blaisorblade writes ""If hardlinks are a problem, don't use them"".  That is not possible.  Every entry in a directory is a hard link.  Every path to a file is a hard link.  Without hard links, you cannot access a file.  The problem with this question is in the wording: files are not stored in directories.  Directories are nothing but a list of hard links.","2016-08-27 08:37:38","140750"
"112587396","56163573","2","Force is destructive. This is not squashing commits rather removing the last three commits and adding them back as a fourth (now new) commit, essentially rewriting the history which can break the repo for other users until they also force pull. This will also remove any other commits your team has pushed meanwhile.","2020-08-31 10:26:53","1295564"
"65716534","6985636","0","Also,did GAMITG **really** make an edit just to remove a piece of whitespace from a non-code portion of the post? O_O","2016-08-28 03:25:05","220043"
"96510378","419185","1","@MrFooz I never intended to do anything like this xD
It just came to my mind and I realized that it was strange enought to possibly help ppl. wrapping their minds around this sort of stuff.

@user471651 Why should `from foo2 import functionB` import foo2 from functionB? That's a semantic contortion. `from module import method` imports the method from the modul.","2019-02-25 03:51:16","7967942"
"65722836","59895","2","@WilliamPursell Then read that as ""avoid adding a second hardlink to the file"", which I think was clear in context and is a standard abuse of language. The Bash FAQ lists other and more relevant concerns, though it seems more bent on discouraging this than describing when this is safe.","2016-08-28 12:13:41","53974"
"65737175","67699","28","Seeing all the upvotes, answers, comments on answers and the mind-boggling number of views, I think it is time git added a command for doing this. And right you are @huggie, my thoughts exactly.","2016-08-29 04:29:36","3375713"
"5101452","114549","2","in some cases writing `!important` clause for margin style of inner div would be necessary, e.g. when you wrote something like this `outer div {margin: 0.5em;}`","2011-01-08 09:00:04","409149"
"96563621","52713","0","This removes all the uncommitted changes. If I want to remove only changes made after `git add <filename>`?","2019-02-27 03:21:47","4053000"
"19706815","11551718","44","He's talking about the fact that a base64 encoded jpeg is technically a URL, because it's specified as data:*. While he's correct in stating that it is a valid URL, I don't think that's what the question was asking.","2013-01-08 08:24:04","962090"
"65778886","2590281","1","@PK_ the server validates the URL. The client would have to adhere to the url schema the server supports. Invalid urls would be rejected by the server.","2016-08-30 06:44:42","23963"
"5123371","944352","2","Alternatively you could use OfType too: Enum.GetValues(typeof(T)).OfType<T>(). It's too bad there is not a generic version of GetValues<T>() then it would be even more slick.","2011-01-10 10:38:58","83658"
"65784739","39221334","0","Please edit with more information. Code-only and ""try this"" answers are discouraged, because they contain no searchable content, and don't explain why someone should ""try this"".","2016-08-30 09:22:26","4579155"
"96577845","47457772","1","Depends how many times you sort the data compared to how many times you loop on it. The sort in this example is just an example, it doesn't have to be just before the loop","2019-02-27 12:23:22","536086"
"5124827","671132","6","It is complicated, and your description isn't inaccurate. I only bring it up because some misinterpret REST as being a lot of work for no real benefit, and hence strictly academic, not realizing that its goals are very pragmatic things like scalability. I think it's important that the top answer not be able to be misconstrued as supporting that misinterpretation, so I appreciate your effort to address my complaint.","2011-01-11 01:37:18","82898"
"5124996","178450","2","Tsvetomir, this doesn't work for IE7 - even when the elements are hidden it thinks that visible=true. Please correct your answer to avoid misleading people. visible and display are different properties and should be treated as such. Mote's answer is the correct one.","2011-01-11 02:07:31","57997"
"112664110","6472397","2","Having undefined values makes it more difficult to understand. Here is the true story https://jsfiddle.net/rjdx34k0/3/","2020-09-02 07:13:06","1974961"
"96593943","47713014","0","Do you have to remove the old origin before you add the new origin?","2019-02-27 08:17:19","2690677"
"34479281","5537012","3","Just so we're all on the same page, I do not do this anymore. It's a waste of time. The `.gitkeep` convention is a much better practise.","2014-03-25 03:41:01","445126"
"65809691","826782","16","Can I just say: please don't do this. From my experience, I more often than not acctually *want* to select some text that also serves as a button, to copy-paste it somewhere else. It would be unimaginably infuriating not to be able to do that because some web developer went out of their way to purpousely disable this feature for me. So please don't do this unless you have a very, *very* good reason.","2016-08-30 08:10:51","1003886"
"49884528","23853061","3","The merge itself appears to be the 1 commit ahead as soon as you complete the pull request and this is normal. I have noticed that the switching branches no longer works for me.","2015-06-18 07:15:23","1362146"
"65815553","14419556","3","I can't believe you can score 19K on SO answering a question about socks","2016-08-31 01:02:39","342669"
"96606846","47713014","0","I didn't remove from the project anything. I simply do the above steps and it worked","2019-02-28 07:56:35","6262169"
"34489055","671132","1","@PedroWerneck That's basically what everyone still considers it to be .. no? Plus, drastically changing the answer after hundreds of upvotes is kinda dishonest (no one upvoted the new version of the answer; all the upvotes were for the old version)","2014-03-25 07:46:58","35364"
"34489527","671132","6","If there's widespread misconception around a subject, perpetuating that in the name of popularity goes against the purpose of a community wiki. Since it was the same original author who changed, I don't see where the dishonesty is. Rather, it's quite honest for him to do that and reflect his improved knowledge on the subject.","2014-03-25 08:01:21","1202421"
"34491783","14415881","16","This question is chock full of engineering tunnel vision. Not everything's a nail. Sorting real life socks is very dependent on the performance limitations of the human visual cognitive system and her manipulators. We can, to an extent, pattern-match socks using our parallel vision processing (visual cortex FTW). We can also, to an extent, do motion planning in parallel with acquiring the next pair of socks to pick out of the pile. The theoretic description of the algorithmic complexity of real life sock searching is nothing like what you describe.","2014-03-25 09:05:03","1329652"
"96615671","53689911","4","I don't really see how this proves anything? The only thing you have shown is that ""not doing all the work of sorting the whole array takes less time than sorting the whole array"". Your claim that this ""also runs fastest"" is very architecture-dependent. See my answer about how this works on ARM. PS you could make your code faster on non-ARM architectures by putting the summation inside the 200-element block loop, sorting in reverse, and then using Yochai Timmer's suggestion of breaking once you get an out-of range value. That way each 200-element block summation can be terminated early.","2019-02-28 12:18:29","3950982"
"96616030","47457772","3","Yes, that's exactly the point I made in my first comment :-) You say ""The branch prediction will miss only once."" But you are not counting the O(N log N) branch prediction misses inside the sort algorithm, which is actually greater than the O(N) branch prediction misses in the unsorted case. So you would need to use the entirety of the sorted data O(log N) times to break even (probably actually closer to O(10 log N), depending on the sort algorithm, e.g. for quicksort, due to cache misses -- mergesort is more cache-coherent, so you would need closer to O(2 log N) usages to break even.)","2019-02-28 12:28:14","3950982"
"96616273","47457772","1","One significant optimization though would be to do only ""half a quicksort"", sorting only items less than the target pivot value of 127 (assuming everything less than *or equal to* the pivot is sorted after the pivot). Once you reach the pivot, sum the elements before the pivot. This would run in O(N) startup time rather than O(N log N), although there will still be a lot of branch prediction misses, probably of the order of O(5 N) based on the numbers I gave before, since it's half a quicksort.","2019-02-28 12:34:48","3950982"
"96616372","17782979","2","Bit shifting is a zero-cost operation in ARM, so you may find the bit-shifted version is faster on ARM.","2019-02-28 12:37:24","3950982"
"49890792","2386013","0","Netbeans also has support for `@NotNull` and `@Nullable`.","2015-06-18 10:51:35","1026453"
"34491813","14415881","11","IOW: Real-life sock sorts are completely insensitive to what underlying algorithm you use, and you can't really choose an algorithm because your visual and motor cortex has already chosen one for you. An optimal one, as far as I can tell. The manipulation time trumps everything else. My finding is (and damn I've spent a couple of hours recording myself and analyzing the recordings): you can easily saturate your manipulators, and that's the end of it. All you need is a sufficiently big table. The CS stuff comes in only if your load doesn't fit on one table.","2014-03-25 09:05:56","1329652"
"34492089","14419556","5","Sigh. When you have socks spread out on a table, you don't actually need to do anything special. With good lighting and good vision, you *instantly pick out pairs*. It's completely automatic, and our brain processes the image of each sock in parallel and also indicates the pair that has highest certainity of being matched. If the table is sufficiently large, you may need a couple of visual scan targets (pegs sticking out from a workbench, say) to enforce a visual scanning pattern that goes over the entire table. The time cost of this is proportional in number of socks.","2014-03-25 09:13:36","1329652"
"34492204","14423956","1","@Christian You need good, task-specific lighting, probably at an oblique angle so that the patterns stand out more. Machine vision people should chime in here with real-life recommendations.","2014-03-25 09:17:27","1329652"
"34493845","14423956","3","@KubaOber An easier solution overall might be to just replace the pairs of Sock objects by instances of a WashablePair class. There are socks that come with built-in buttons to enable this but there are also solutions to retrofit conventional socks with the ability to remain paired throughout the washing process. I just personally never got around to refactor my sock collection.","2014-03-25 10:14:36","1050373"
"112681016","417184","1","@Marvin yes! I'm astonished this is now 11 years old - I think it's time to review all the information presented, but I believe the core advice still stands.","2020-09-03 10:39:11","6521"
"5174691","4407335","39","nice code molokoloco :D , although I personally would stay well away from using it, as sometimes you may need the values different for different browsers, and it relys on JavaScript. Making a class and adding it to your element or applying the css to your type of element in your style-sheet is pretty bullet proof.","2011-01-14 01:07:07","370286"
"5174816","4358620","32","you should remove the * selector from your example, its really in-efficient and there really isnt any need to use it in your example is there?","2011-01-14 01:15:46","370286"
"96618329","27020944","0","I'd like to second your statement ""can be run successfully when you close your wifi"". ""git clone"" really does result in a repo containing all branches.","2019-02-28 01:32:58","803336"
"96618425","34122093","1","I don't like your usage of the word ""download"" in ... _""download"" them manually one at a time_. All info is, in fact, already downloaded after having cloned the repo. The only thing one needs to do is creating local tracking branches (which is also possible when offline, which proves that all the information is in the repo).","2019-02-28 01:35:45","803336"
"80550593","1628584","0","Following these instructions caused me to lose all the commits I was trying to move. Now I have to do the work all over again. Resetting the commits from master had the effect of changing the fork point of the branch, which had no commits of its own.","2017-10-18 02:31:06","4230643"
"5174919","4358620","70","@Blowsie: I don't think so: the CSS 2 spec states that `*.foo` and `.foo` are precisely equivalent (in the second case, the universal selector (`*`) is implied), so barring browser quirks, I can't see that including the `*` will harm performance. It's a long-standing habit of mine to include the `*`, which I originally started doing for readability: it explicitly states at a glance that the author intends to match all elements.","2011-01-14 01:24:43","96100"
"5175193","4358620","40","oooh after some further reading, it seems * is only un-effiecient when using it as the key (the righmost selector) ie .unselectable * . Further info here http://code.google.com/speed/page-speed/docs/rendering.html#UseEfficientCSSSelectors","2011-01-14 01:49:02","370286"
"5177770","178450","48","You have a point - I'll make it clear that the code checks only for the `display` property. Given that the the original question is for `show()` and `hide()`, and they set `display`, my answer is correct. By the way it does work with IE7, here's a test snippet - http://jsfiddle.net/MWZss/ ;","2011-01-14 04:54:41","25449"
"65837195","14419556","0","@Mick Isn't http://stackoverflow.com/questions/927358/how-to-undo-last-commits-in-git more egregious? :) Btw, the daily gain is capped at 200 points.","2016-08-31 01:17:55","122718"
"5178836","2389423","138","I don't think this will (always?) work -- the ""one prior the merge"" will be the most recent commit that was merged in from the other branch -- it won't be the most recent commit on the current branch. Right? (This might just be a result of what `git log` chooses to show by default -- maybe there is a different output of `git log` or `git reflog` could be used for this)","2011-01-14 06:12:24","168143"
"96621706","54233941","3","This answer is misleading. SemVer clearly states, *A normal version number MUST take the form X.Y.Z [where] X is the major version, Y is the minor version, and Z is the patch version.*","2019-02-28 03:03:03","1998086"
"34499026","932982","9","This is perfect for *cache* folders.","2014-03-26 02:30:07","970175"
"96621811","47499979","0","Again, this answer is misleading. SemVer clearly states, *A normal version number MUST take the form X.Y.Z [where] X is the major version, Y is the minor version, and Z is the patch version.*","2019-02-28 03:06:03","1998086"
"5185998","2389423","6","I think it might depend whether you squash merge.","2011-01-15 12:45:21","5731"
"80566408","6232535","2","Please bear in mind that if you want your **remote branch** to have a **different name**, you should **change the name locally first**. For example, let's say I have a branch locally named a-named-branch and I want to push it to remote. If I run `git push origin new-named-branch` I'll get an error that says `error: src refspec new-named-branch does not match any.` The fix is to run `git branch -m new-named-branch` and then running `git push origin new-named-branch`.","2017-10-18 12:00:25","1128216"
"96624815","50231389","0","@greg-hewgill 's answer is better and spot on. This one is lousy and should not be used.","2019-02-28 04:27:03","1208597"
"65853962","37190132","7","Those terms existed long before Java or C. Pointer was only ever a method for implementing one of them. If you accept Java's definition for them, then they become meaningless because by that definition, every language ever created is only Pass by Value.","2016-08-31 09:05:00","658018"
"96626721","49420387","0","Note that the `json` approach is faster than `ast.literal_eval`, but it's also not as comprehensive. It can't handle Python literals not in the JSON spec, so no `tuple`s, `set`s, `frozenset`s, `bool`s (it can handle JSON bools, but not the result of stringifying a Python bool directly), etc. `ast.literal_eval` is slower, but at least some of that is a consequence of handling more complex inputs. That said, I'm pretty sure it could be faster if they bothered to optimize it, it's just pretty rare that evaluating strings of Python literals is the chokepoint in code.","2019-02-28 05:29:29","364696"
"80583933","36463546","3","Too bad this isn't the accepted answer. I followed the steps in the accepted answer and lost 6 commits, just as you described!","2017-10-18 08:02:03","4230643"
"5198090","1375234","19","Why not use the yield keyword here instead instantiating a list?","2011-01-16 10:18:16","214146"
"49918806","23839198","6","Great answer; however, the command will fail if you have paths with spaces on the middle, e.g.: ""My dir/my_ignored_file.txt""","2015-06-19 03:29:27","881619"
"49919074","23839198","8","git ls-files --ignored --exclude-standard | sed 's/.*/""&""/' | xargs git rm --cached","2015-06-19 03:36:02","881619"
"19777451","394809","174","In the Python 3.0 official documentation referenced in a comment above, this is referred to as ""conditional_expressions"" and is very cryptically defined.  That documentation doesn't even include the term ""ternary"", so you would be hard-pressed to find it via Google unless you knew exactly what to look for.  The [version 2 documentation](http://docs.python.org/2/reference/expressions.html#conditional-expressions) is somewhat more helpful and includes a link to [""PEP 308""](http://www.python.org/dev/peps/pep-0308/), which includes a lot of interesting historical context related to this question.","2013-01-10 05:57:30","86967"
"49921585","23768878","9","Technically, `this.checked` is using straight Javascript.  But I love that cross-jQuery-version answer!","2015-06-19 04:50:35","1181535"
"5218513","271553","1","With Andersen - I would love Java's exception system to be able to include the name of a variable that's being worked upon, so that NullPointerExceptions would not only indicate the line the exception occurred on, but also the variable name. This should work just fine in unobfuscated software.","2011-01-18 12:53:01","204840"
"112734134","4089452","0","I turned off my wifi and I am no longer connected to the network, and still `get remote get-url origin` still showed correctly the remote repository URL.","2020-09-05 07:18:51","2856202"
"80608499","39437","16","Put it this way: if you need to put two lines of comments explaining your one line of code to the people you hand your code off to...have you really done it in one line? :) I fully agree Python is not good for this: there should be a much easier way. While this answer is more pythonic, is it really all that explicit or clear? `Update` is not one of the ""core"" functions that people tend to use a lot.","2017-10-19 01:07:09","1886357"
"96657228","22941865","3","Is that [tag:Lisp]?","2019-03-01 03:02:34","1275774"
"65890485","28617347","0","all the branches are 'origin\my_branch_name', which is not definitely what I want.","2016-09-01 05:49:46","3375713"
"96661231","34435000","0","Minor quibble:  There should be a colon between [domain] and [port].  IE:  example.com:1234","2019-03-01 05:03:43","1420506"
"112742845","72156","1","too much noise in this question :(   just did this and worked like charm `git branch -a | grep -v HEAD | perl -ne 'chomp($_); s|^\*?\s*||; if (m|(.+)/(.+)| && not $d{$2}) {print qq(git branch --track $2 $1/$2\n)} else {$d{$_}=1}' | csh -xfs`","2020-09-05 05:00:20","4173238"
"112745402","9329496","0","Is there a way to do it in just one line of code. For example in facebook I like to speed up videos with `document.getElementsByTagName(""video"")[28].playbackRate = 2.2`. If I could easily map across all elements then I could avoid having to identify which video (e.g. index 28 in this case). Any ideas?","2020-09-05 07:39:20","5783745"
"96676669","5201642","1","Try to get used to `git push --force-with-lease` instead of `git push -f` !","2019-03-02 10:29:18","1987247"
"5237437","4199917","46","usually a reload is enough (faster than restart). Also, note that you can now do ""sudo service apache2 reload"".","2011-01-19 05:37:04","38557"
"65910537","20241145","0","For the files in submodule, we need execute the command in submodule folder.","2016-09-02 08:56:50","1739662"
"80634562","45779600","0","If you want to use that in the context of `x = [condition] and ([expression_1] or 1) or [expression_2]` and `expression_1` evaluates to false, `x` will be `1`, not `expression_1`. Use the accepted answer.","2017-10-20 06:37:01","1116842"
"65914275","22417576","1","Thanx for the find version. My grep version (busybox for NAS) hasn't the -r option, i really needed another solution!","2016-09-02 10:34:12","2619679"
"34558817","19095988","230","To highlight the difference between this answer and the accepted one: Using this commands you don't need to actually know the affected files. (Imagine a temporary dir with lots of random files that should be cleared off the index).","2014-03-27 10:17:37","1415304"
"112766859","63123622","2","Just learned this today. And people should use this instead of some other hacky ways to solve the centering issue. For people who want to learn more about this, check out https://web.dev/one-line-layouts/","2020-09-07 01:23:33","1727948"
"112771583","7866699","0","it is ok according to RFC https://tools.ietf.org/html/rfc2616#page-54","2020-09-07 07:17:44","6628397"
"49964697","762297","0","This is one of the most important distinctions between let and var and it's not in the accepted answer haha.  Especially considering the numerous bugs that can occur thanks to hoisting and scoping. I feel like there aren't many differences between let and var if you don't mention hoisting.","2015-06-21 04:12:13","3082194"
"19842200","246128","7","Note that BASH_SOURCE was added for debugging purposes in version bash-3.0-alpha. So if you are working with a legacy system this won't work.","2013-01-11 11:12:38","306560"
"5252289","3406317","24","Please don't use a `for in` loop to iterate over an array - `for in` loops should be used strictly for objects only.","2011-01-20 04:33:00","313758"
"112791205","12184274","0","A good explantation of `git clean`, options and usage: https://www.atlassian.com/git/tutorials/undoing-changes/git-clean","2020-09-07 09:07:04","9652400"
"96713082","36035604","2","Thank you very much. `git stash` and `git stash pop` part very helpful","2019-03-04 05:41:27","7699859"
"34591058","671508","0","URIs? Is anyone using URNs to implement REST services?","2014-03-27 11:58:07","54323"
"65942668","8472700","3","note that the first version, the one ` window.crypto.getRandomValues`, does not keep the Version 4 UUIDs format defined by RFC 4122. That is instead of `xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx`  it yields `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx`.","2016-09-03 07:58:23","1711186"
"112801523","40938883","0","it fails when all elements are not list. (e.g. lst=[1, [2,3]]). of course integer is not iterable.","2020-09-08 08:32:47","9582462"
"34596798","22654961","1","Current directory. I guess this would work only if you are in a top directory.","2014-03-28 05:35:03","390363"
"112813091","26853961","1","Wow! That's a thorough answer. One minor comment, though: ""the intended usage for `dict(**y)` is for creating dictionaries for readability purposes"". I would argue that it's also to make the code less error prone, because `dict(a=17, b=19, a=23)` would fail with ""SyntaxError: keyword argument repeated"", while `{""a"": 17, ""b"": 19, ""a"": 23}` would not (with 23 overwriting 17) and your accidental double key `""a""` would've gone unnoticed. Of course, if you want to allow double keys (I cannot see why, though), then `{...}` syntax is the way to go. Many linters, of course, warn of double keys.","2020-09-08 03:04:58","1667018"
"5283694","59916","40","+1, but the problem with using `dirname $0` is that if the directory is the current directory, you'll get `.`. That's fine unless you're going to change directories in the script and expect to use the path you got from `dirname $0` as though it were absolute. To get the absolute path: `pushd \`dirname $0\` > /dev/null`, `SCRIPTPATH=\`pwd\``, `popd > /dev/null`: http://pastie.org/1489386 (But *surely* there's a better way to expand that path?)","2011-01-23 10:30:43","157247"
"96729877","5201642","0","Don't forget `+` if your other commits were already pushed to remote - i.e. `git push origin +name-of-branch`","2019-03-04 03:10:27","4843137"
"34611799","7251912","15","@NateS Many people had already pointed out that the answer was no. I suggested a better way to achieve the OP's goal. That's an answer.","2014-03-28 12:57:24","109011"
"34612290","59916","2","Even with `bash`, `$0` is not always enough. A script may source another script!","2014-03-28 01:08:25","17945"
"34612390","66271","0","This doesn't work if the script sources another script and you want to know the name of the latter.","2014-03-28 01:10:27","17945"
"34612455","3674520","4","Doesn't work if the script is being sourced from another script.","2014-03-28 01:12:03","17945"
"65962633","5036460","0","The +new Date does not seem to work in Chrome 52, if the desired effect is to generate an integer. I am confident it worked on older Chromes.","2016-09-04 08:56:34","333361"
"50005057","3195229","0","Type checking at compile time refers to the return value of the function, which in this case will throw an error if you're trying to assign the enum to a list of a different type. Some of the solutions here return generics which will only fail during runtime.","2015-06-22 06:47:18","81112"
"34622439","671132","0","Absolutely correct @cwap! As well as Web 2.0 and AJAX. Terms made up by the industry to basically confuse the masses into thinking it's something new. The concepts are as old as the web itself. If we need to give them a name, so be it. Personally XMLHttp was perfectly fine by me...","2014-03-28 05:14:56","1052622"
"96733373","54845819","0","Have you ever tried DeBounce [Email Validation](https://debounce.io)? I suggest taking a look at this.","2019-03-04 04:48:07","796200"
"112819759","63344366","0","This is *technically* not a compliant UUID4. It's neat that it has the timestamp, but you are better off using a UUID1 at that point. With this scheme, there's a 1 in 10,000 chance of a collision every time there is a millisecond collision, which if you emit events every second, that's 1/1000, or 1 in 10 million, every second. That's pretty much guaranteed to occur in any production bigger than basically hobby scale.

Semantically, UUIDs shouldn't be timestamp fields. That's what timestamp fields are for. They are meant for ""give me an ID which will NEVER collide"".","2020-09-08 07:30:29","3988037"
"112823602","63344366","1","@DeusXMachina thanks for commenting, I 100% agree. That's why in NodeJS library, which I've pointed at the end of my post, I use `process.hrtime.bigint()` for timestamps, which gives me nanosecond scale (1 million chance in a second) + random number from `10000` to `90000` at the end. So finally it goes to multi-billion chance in 1 sec, if my calculations is right. Anyway this is non-standard approach with specific use case, as I've mentioned above.","2020-09-08 11:04:45","10917379"
"34624418","21862907","9","I don't know who voted it negative. But this is a work around which has worked in fact i used this approach to create a whole application.  The jquery.ajax don't return data so its better to use the above approach. If it's wrong then please explain and suggest better way to do it.","2014-03-28 06:12:35","1560518"
"80699694","14364249","0","The concern about race conditions noted by @sleepycal is addressed in the comments on Heikki Toivonen's answer for many (most) use cases, including mine. If you're worried that someone else is going to remove the directory, you're still going to need to check that before using it later on. Creating multiple places where you check for what you'll need later just adds complications.","2017-10-22 04:21:27","507544"
"34631464","3104376","23","@MarnenLaibow-Koser there are still valid uses for comments even for data stream (or even packet) usage: inclusion of diagnostics metadata like creation time or sources is common use with XML, and perfectly sensible for JSON data as well. Arguments against comments are shallow, and any textual data format should allow for comments, regardless of implied intended usage (nothing spec suggest JSON can not be used elsewhere, fwiw)","2014-03-28 10:09:27","59501"
"112836021","419185","2","I loved how subtly this line solved my confusion: "" ""Running"" the script is a side effect of importing the script's module.""","2020-09-09 10:39:54","4972447"
"5295786","59916","11","@T.J. Crowder I'm not sure sure `dirname $0` is a problem if you assign it to a variable and then use it to launch a script like `$dir/script.sh`; I would imagine this is the use case for this type of thing 90% of the time. `./script.sh` would work fine.","2011-01-24 12:55:08","4249"
"5295839","59916","2","@matt b: As I said, it's fine as long as your script using it doesn't change the current directory. If your script does, then you try to launch `./script.sh` and `script.sh` is meant to be in the same directory as the original, it's going to fail because you're no longer there. See also: http://stackoverflow.com/questions/4774054/reliable-way-to-get-the-full-path-to-a-bash-script","2011-01-24 01:00:29","157247"
"112842631","63344366","1","Ah, I missed that. Perhaps edit your explanation so that it's a bit more obvious you are using ns resolution. ""...produce a new UUID every millisecond + add a random 5-digit number"". Still, why not use uuid1? That provides 0.1 µs resolution plus another 48 bits of entropy. https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_1_(date-time_and_MAC_address)","2020-09-09 02:12:55","3988037"
"65975944","6620071","1","""f(x) ∈ O(upperbound) means f ""grows no faster than"" upperbound"" these three simply worded, but mathematically proper explanations of big Oh, Theta, and Omega are golden.  He described to me in plain english the point that 5 different sources couldn't seem to translate to me without writing complex mathematical expressions.  Thanks man! :)","2016-09-04 10:20:10","3724464"
"19902589","12791414","12","Yep, this is simple and works. Though I'd clarify the answer by specifying what's the variable part: `git push --delete origin ""TAGNAME""`, where TAGNAME is the name of the original tag.","2013-01-14 04:57:05","351716"
"65978111","2691891","0","I agree with this answer. Key difference is idempotency of PUT. I found a very good explanation of idempotency at https://stormpath.com/blog/put-or-post","2016-09-05 02:01:43","2491830"
"5309448","72156","2","Note also that ""git fetch"" with no arguments will fetch any new remote branches, that appeared after you initially cloned it. Otherwise they might not appear when you run ""git branch -a"".","2011-01-25 10:55:46","327153"
"19910897","4448825","0","+1, this is what I was really looking for. There is a minor bug though, it ought to be `return.this.toLocaleLowerCase().replace(` ...","2013-01-14 09:55:51","7602"
"96769561","34122093","0","@bvgheluwe that's why it is in quotes.","2019-03-05 04:21:10","3245486"
"112856520","5767357","315","Serious question: why doesn't JavaScript allow the simple and intuitive method of removing an element at an index? A simple, elegant, ```myArray.remove(index);``` seems to be the best solution and is implemented in many other languages (a lot of them older than JavaScript.)","2020-09-10 12:16:32","8949733"
"112858953","63822216","6","They were asking for an empty directory, not an empty repository. Also, you’ve assumed they are using GitHub when they only talked about git.","2020-09-10 03:57:52","1820617"
"96775378","34899183","3","Save a lookup by iterating the key/value pairs directly: `z={k: v for d in (x, y) for k, v in d.items()}`","2019-03-05 07:33:32","364696"
"96781508","215731","2","Use `git checkout 5364aee~1 path/to/dir/*` to restore a whole directory of files to their version prior to 5364aee.","2019-03-05 11:56:32","555139"
"66009382","246128","1","To deal with symlinks, use `pwd -P`","2016-09-06 12:29:24","2272506"
"112881347","630475","0","@EugenKonkov - So what happens when I use post to update an existing resource as mentioned in the answer ? Do we get back a new resource or do the updates get applied to the existing resource ?","2020-09-10 05:49:38","6648326"
"112881363","630475","0","@JörgWMittag - Please see the comment by Eugen Konkov. Does that sound correct ? Here is the comment - Thinks of them as: PUT = insert or update; POST = insert. So when you make two PUT - you get the one new record, when you do two POSTs - you get two new records.","2020-09-10 05:50:19","6648326"
"34668799","671508","4","A URN is a URI that uses the `urn:` scheme.  Conceptually there is no difference; however, a URN does require that you have a separately defined method to ""locate"" the resource identified (named) by the URN.  Care must be taken to ensure that you don't introduce implicit coupling when relating named resources and their location.","2014-03-30 02:45:37","41747"
"96787917","50342967","7","The second one would create the directory, if it didn't exist at first. Then it's not idempotent.","2019-03-06 06:47:44","1278112"
"112893170","630475","1","@MasterJoe: indepondent means that despite on any requests you made you will get same result. For Our PUT. When you did one request - you __get one record in database__ with your dara. When you did two requests - you __get one record__ in database with your data. When you did **N** requests **you get one record** in database with your data. When you do **POST request** - after each request you will **get new additional record** in database with your (POSTed) data.","2020-09-11 06:32:45","4632019"
"112893322","630475","1","@MasterJoe: No body does not restrict you to make POST requests to your site indepondent. This is up to your site API. This probably will be just a surprise for your users who does not read your API's documentation.","2020-09-11 06:39:38","4632019"
"112899536","20241145","0","This option still showing all tracked files as modified which one does not want to see and simply get rid of just seeing them without deleting","2020-09-11 10:33:20","6209197"
"5363161","4726918","16","The function *should* have no effect on an string which is already uppercase. The question specifically asked for the remaining characters to be untouched; see his example with ""the Eiffel Tower"" -> ""The Eiffel Tower"". You definitely should not lower-case everything first.","2011-01-28 08:32:07","229044"
"19951609","1473742","1","did underscore remove include?","2013-01-16 04:04:41","109749"
"19957050","1473742","1","@jcolebrand I updated the answer. include is still there, but is in the docs listed as an alias for contains","2013-01-16 09:11:48","3571"
"19959445","3417733","3","Though that answer might not fit exactly the description, it still saved me from the frustration of git twiddling with the carriage returns (event with autocrlf false). When git reset --hard HEAD does not leave you with ""no"" modified files, these ""-f"" flags are quite helpful. Thanks a bunch.","2013-01-16 10:28:58","587220"
"80783837","92395","0","which of the commands you recommended block my script? i.e. if I want to run multiple commands in a `for` loop how do I do it without it blocking my python script? I don't care about the output of the command I just want to run lots of them.","2017-10-24 07:08:43","1601580"
"80786478","6866485","1","Can you rearrange the post to make the --soft the first suggestion shown?  One of our engineers didn't read the full article and used --hard on a shared working directory, which luckily only cost us one day of work.  - Thanks.

P.S. Yes, we know using shared working directories are bad practice, but this isn't storing code, but puppet configuration.","2017-10-24 08:32:28","2035417"
"50107926","24559952","1","A **MVC** viewpoint: The blog [Rest Worst Practices](https://jacobian.org/writing/rest-worst-practices/) suggested not to **conflating models and resources**. The book [Two Scoops of django](http://twoscoopspress.org/products/two-scoops-of-django-1-6) suggests that the Rest API is the view, and not to mix business logic into the view. The code for the app should remain in the app.","2015-06-25 06:20:37","362754"
"19972619","5032238","17","Raising the exception only when `exception.errno != errno.EEXIST` will unintentionally ignore the case when path exists but is a non-directory object such as a file. The exception should ideally be raised if the path is a non-directory object.","2013-01-16 05:13:21","832230"
"80796289","24583680","2","Down-voted because this answer is not correct in some aspects. Hashtable does not implement the Map interface, but only extends the Dictionary class, which is obsolete.","2017-10-25 05:42:32","785622"
"66069131","52719","1","You can create an alias for `stash save --keep-index --include-untracked` and use the stash as a recycle bin so you can always easily restore your changes if cleaning them up was a mistake.","2016-09-07 12:57:59","417791"
"112934517","18740042","9","Such an awesome answer that even a fool like myself was able to understand. I would add also amend that ""pass by value"" literally means that the literal value in the stack is passed.","2020-09-12 09:22:32","10095010"
"96822302","16957078","0","or more minimalistic, `grep -r 'rrr' ./`. (or as mentioned -R instead of -r, so as to include symbolic links)","2019-03-07 02:07:57","385907"
"80804124","179147","0","`git commit --amend -m ""New commit message""` allows you to use ""#"" in your commit messages without altering Git configuration","2017-10-25 09:26:56","108390"
"112941673","63778064","0","RegExp.Escape was based on my answer linked here: https://stackoverflow.com/a/63838890/5979634","2020-09-13 09:47:49","5979634"
"19995335","14220323","87","@Pommy: If you want to use jQuery, you have to include it. Please refer to http://docs.jquery.com/Tutorials:Getting_Started_with_jQuery.","2013-01-17 10:47:54","218196"
"19996093","932982","32","I think the README solution proposed by @JohnMee should be used together with this one; the .gitignore file provides an explanation of what we want to keep out of version control, while the README file explains what is the purpose of the directory, which are both very important pieces of information.","2013-01-17 11:11:58","83284"
"96827884","37049724","0","Why oh why clearing stash? In addition to being a non-solution, this is actually harmful. Reading the very first sentence of the question immediately invalidates the stash solution (which could be useful ONLY to reset to the LAST commit).","2019-03-07 07:35:51","1057485"
"34735578","8212184","0","As of ""Assigning a Tree to a List"" you were not talking about Java, did you? Because Java is 'compile time strict type' language (it's memory model differ from C++, C# though). Java compiler will not give you an opportunity to assign Tree to a List.","2014-04-01 09:56:18","448078"
"50129824","24559952","1","Another good article: [WikiPedia about Resource-Oriented Architecture](https://en.wikipedia.org/wiki/Resource-oriented_architecture)","2015-06-25 03:14:56","362754"
"66088436","30479554","20","The use of ""let"" just defers this problem.  So each iteration creates a private independent block scope, but the ""i"" variable can still be corrupted by subsequent changes within the block, (granted the iterator variable is not *usually* changed within the block, but other declared let variables within the block may well be) and any function declared within the block can, when invoked, corrupt the value of ""i"" for other functions declared within the block because they *do* share the same private block scope hence the same reference to ""i"".","2016-09-07 11:10:20","2324063"
"80822917","4089430","30","`git remote get-url origin` does not work for me--possibly deprecated? `git remote show origin` worked though.","2017-10-25 04:47:04","1406888"
"34738391","8212184","2","As of ""Maybe<T> or Optional<T>"" you still need to write code like `if (maybeNull.hasValue()) {...}` so what is the difference with `if (maybeNull != null)) {...}`?","2014-04-01 11:06:15","448078"
"34738895","8212184","0","As of ""Java doesn't have null propagation, which would eliminate the problem"", usually propagation is about 'exceptional cases'. But data availability or non-availability is a common business flow in most cases. If it is something exceptional in data non-availability (which is dictated by business) you should explicitly throw reasonable exception with a reasonable message. Null propagation (with line number inside?..) would be really horrible as for me.","2014-04-01 11:17:38","448078"
"34739517","8212184","1","As of ""catching NullPointerException and returning null is horrible to debug. You end up with NPE later on anyway, and it's really hard to figure out what was originally null"". I'm totally agree! In those cases you should write a dozen of 'if' statements or throw NPE if business logic imply data in-place, or use null-safe operator from new Java. But there are cases when I don't care about what exact step give me null. For example calculating some values for the user just before showing on the screen when you do expect data could be missing.","2014-04-01 11:32:50","448078"
"112954628","6841333","1","@Phil H ""seconds since the epoch"" (i.e. Unix time) is non-linear as well, in the sense that POSIX seconds are not SI seconds and vary in length","2020-09-13 11:57:48","1303846"
"112958629","9329496","2","@stevec: Array.from(document.querySelectorAll('video')).forEach(video => video.playbackRate = 2.2);","2020-09-14 06:24:41","101811"
"5421639","826849","128","I wouldn't recommend doing this, because it doesn't actually fix the issue; disabling text selection - it merely hides it. This can lead to bad usability, because if I drag my cursor around the page I could be selecting any arbitrary text without knowing it. This can cause all kinds of weird usability ""bugs"".","2011-02-02 03:01:40","343152"
"112964891","63323682","0","Customise what parts? Your answer needs more explanation (see @rakib_'s answer for an example)","2020-09-14 10:31:38","123632"
"50146253","3356227","0","@Munhitsu Manatee.Json (.Net) extensively supports JSON schema.","2015-06-26 12:26:29","878701"
"50146320","20267852","3","If you're using a schema to validate the JSON, it may fail due to the extra fields.","2015-06-26 12:30:20","878701"
"50146340","244858","1","If you're using a schema to validate the JSON, it may fail due to the extra fields.","2015-06-26 12:31:20","878701"
"50146357","19655633","0","If you're using a schema to validate the JSON, it may fail due to the extra fields.","2015-06-26 12:32:11","878701"
"34752582","3104376","2","@StaxMan No. Comments in a data stream are just wasted bytes. If metadata like creation time can't be inferred from the stream itself, then why not make it actual, parseable content in the stream? Arguments *for* comments are shallow: if something is worth including, then it's worth including it *as data*.","2014-04-01 04:38:37","109011"
"34759597","180917","6","If you just do `echo bla > file` you will not get `file: File exists` because `>` will overwrite the file if it's already there or create a new one if it doesn't exist.","2014-04-01 07:53:56","1013618"
"50160767","5334825","0","`^((?!hede).)*$` worked for me using the jQuery DataTable plugin to exclude a string from the dataset","2015-06-26 10:34:16","738909"
"66125790","5036460","0","@MarcusJohansson people should be using `Date.now()` if they are using a newer browser like Chrome. I tried this in Chrome 52 and Chrome Canary 55 and `+new Date` still worked.","2016-09-08 08:43:47","47604"
"66127928","39390369","0","This answer turned up in the low quality review queue, presumably because you don't provide any explanation of the code. If this code answers the question, consider adding adding some text explaining the code in your answer. This way, you are far more likely to get more upvotes — and help the questioner learn something new.","2016-09-08 10:09:31","4895725"
"96883737","244858","2","@RobFonseca-Ensor but what if we will have a field called `__comment`? We would need to have a new field `___comment`.","2019-03-08 05:27:56","4581336"
"34768075","22273883","1","Yes, I believe this is a duplicate. The top answer by Justin Poliey has solved the problem in the same way.","2014-04-02 02:00:10","3471286"
"80853618","37155553","0","That is if you want to `print()` in both cases - and it looks a bit more pythonic, I have to admit :) But what if the expressions/functions are not the same - like `print('yes') if conditionX else True` - to get the `print()` only in truthy `conditionX `","2017-10-26 11:40:17","3446126"
"5445970","470376","666","Note that this one always evaluates everything, whereas the if/else construct only evaluates the winning expression.","2011-02-04 02:25:24","321935"
"20062948","14415881","465","I use pigeon hole principle to pair exactly one from the laundry pile. I have 3 different colors of socks (Red,Blue and Green) and 2 pairs of each color. I pick up 4 number of socks each time and I always make up a pair and get to work.","2013-01-19 03:37:34","189608"
"20062951","14415881","2","I would think you could simplify it somewhat by assuming that some subset of pairs of socks are fungible; I have about six pairs of socks that are identical. Also: neat question!","2013-01-19 03:37:45","21294"
"20063038","14415881","1","Pick your favourite ordering principle (colour, texture, thickness), sort by that, pick adjacent pairs","2013-01-19 03:42:31","85371"
"20063279","14415881","62","Yet another pigeon hole principle: if you take a subset of n/2 +1 socks, there *must be* at least one pair in this subset.","2013-01-19 03:57:54","905902"
"20064940","14416010","7","This is also what I do, (note that if you simply leave spaces then inserts are also O(1) ), but it scales poorly with theoretically large numbers of socks.","2013-01-19 05:40:42","845092"
"20064991","14415881","7","also, you discard hashes beccause you cant make copies, but note that its easily possible to make a hash set that doesnt need copies, both in computing and in laundry.","2013-01-19 05:42:42","845092"
"20065156","14415881","3","@MooingDuck: If you have something specific in mind, please post it, note that I do not ""discard it"" - this is only my initial thaughts - that might be wrong, the question itself does not forbid hashing, it only requires the algorithm to be in-place (and efficient). As said, I will also appreciate an answer that deals with the other aspects (small/large scale, and equivalence to the distinctness problem - that will show O(nlogn) is basically the best I can get without extra space)","2013-01-19 05:54:19","572670"
"50175184","18982837","0","It is overwritten by the new name/branch. For example if you have the following branches in git:
master
b1 <-- current branch
b2
after you do 'git branch -M b2' you will only have:
master
b2 <-- current branch

b1 will be gone and if you wish to recover it you should check it out by its hash. You can see it by typing 'git reflog'. Cheers.","2015-06-26 04:48:39","1587601"
"66155282","8888015","0","can this technique work for individual files? for example `-- index.php helpers.js ect.` in place of `--all` ?","2016-09-09 03:47:54","5111949"
"20068922","14418638","3","Socks often come in 4-packs and larger, since that is cheaper, but that also makes them indistinguishable. To counter this, my wife sews a tiny mark onto each new pair of socks I buy. The mark is of a different color for each pair, or of a different shape, if she runs out of colors. With this approach you don't even need a limited set of attributes. Just sew a unique number on each pair. :) For extra points, use binary.","2013-01-19 09:45:58","41360"
"34789609","13106558","4","I think it's acceptable for hard-coded commands, if it increases readability.","2014-04-02 01:07:44","51197"
"20070882","14419556","75","This is exactly what I do! I make piles dependent on the style of the opening of the sock (I only have white), that gives me enough ""buckets"" to quickly match each of those up.","2013-01-20 12:00:45","80274"
"20072839","14419228","0","I think strictly speaking radix sort won't do because ""assume each sock has exactly one matching pair.""  Though in most practical applications it would work out well.","2013-01-20 03:08:41","348975"
"20073636","14415881","7","remark that if you had an infinite number of different symmetric pairs of socks (i.e. left=right), then, in fact, just picking out one of each is not possible unless you accept the axiom of choice (http://en.wikipedia.org/wiki/Axiom_of_choice).  What consequence does this have on pairing?  how is this relevant to computability? http://math.stackexchange.com/questions/269902/what-is-the-relationship-between-zfc-and-turing-machine","2013-01-20 04:52:15","1779316"
"20073797","14416010","15","scales poorly with theoretically large numbers of **types of** socks","2013-01-20 05:14:19","340947"
"20074171","14419537","0","This is what I do ... O(n)","2013-01-20 05:55:13","742390"
"20074330","14415881","2","By the way, this is better known (sort of) as the game of [Concentration](http://en.wikipedia.org/wiki/Concentration_(game)) - making pairs from a large random group.","2013-01-20 06:13:47","500202"
"20074764","14415881","3","A good algorithm to do by hand might be a shift-reduce algorithm. Add a new sock to the pile randomly and as soon as you have a pair on top, ""reduce"" and take the pair away. Eventually you'll get most of them. Remainder can be manually handled or algorithm restarted. Not computer science in the slightest but reasonably good since you can cheat a bit and pick up the right sock sometimes.","2013-01-20 06:56:45","1127972"
"20076106","14416010","0","@StevenLu - as I said - it's n*n or nLogn, depending on whether you sort it or not. So it scales about as poorly as any sorting algorithm. If you want faster, number them and use radix sort.","2013-01-20 09:34:20","41360"
"20077151","14418638","31","@Vilx- WHY?!? Isn't the whole point that they be indistinguishable?","2013-01-20 11:10:28","1973271"
"20077318","14419556","1","Whether sorting is beneficial or not is dependent on the problem domain, specifically on the topography of the phase space of the primary grouping criterion. As a counterexample to your statement, almost all my socks are in some variation of black, so the primary grouping criterion is shape instead - and a quick way to determine a black sock's shape is to examine the length. In this case, I would argue, sorting adds to the efficiency.","2013-01-20 11:26:23","724361"
"20077569","14419556","1","I addressed parallelism and the element distinctness problem.","2013-01-20 11:45:14","122718"
"20077602","14419556","1","@TheTerribleSwiftTomato I believe sorting by length would only help here because humans are not good at ""hashing on length"". One could form piles for each millimeter of length, though. Each pile is addressable in `O(1)` so our distribution scheme still works and should be faster than sorting (actually, we *are* almost sorting but only by accident).","2013-01-20 11:46:57","122718"
"20077855","14419556","0","@usr: well, I would say it's because a) humans put a lot of emphasis on ordering (as e.g. the Ultimatum Game experiments show), b) humans have very powerful, parallelized optical recognition abilities - seeing a row of socks pulled out of a pile, sorted by length, you probably would be immediately able to place the next sock out of the pile in the ""right"" spot. The problem is, the question as currently posted lacks clarity in one regard: do we treat humans as actual biological entities (with all the possible optimizations), or as bio-robots without regard to their capabilities?","2013-01-20 12:05:09","724361"
"50181385","487300","0","Do you have an explanation like this for O(nlogn)?","2015-06-26 08:20:21","3915113"
"20078382","14418638","3","@flup - I think the whole point is to sell in larger bundles. :) As for me, this helps to wear them down in pairs. Otherwise I can end up with three very worn socks and one brand new one. Kinda silly.","2013-01-20 12:39:20","41360"
"20078407","14419537","2","@Pykler - It's O(n) in the best case and O(n*n) in the worst case.","2013-01-20 12:41:35","41360"
"20078448","14419556","0","How many times will you have to ""Recursively apply this scheme"" ""until you have distributed all socks onto very small piles that you can visually process immediately""? I would calculate that as O(n log n).  If my calculation is correct, how is this better than sorting?","2013-01-20 12:44:55","348975"
"20078686","14419556","0","@emory read the paragraph about the ""element distinctness problem"". I address these concerns there. One might well need only one step of distribution.; Asymptotic complexity aside, I'd argue that distribution onto piles is easier for humans than sorting along some arbitrary dimension and order (""Is red smaller than blue? Don't remember anymore..."").","2013-01-20 12:59:54","122718"
"20079070","14418638","13","I disagree with the calculation of O(n).  What is $k$? $k$ is the number of attributes.  I would argue $k$ is $O(log n)$ because it has to be enough to uniquely identify each pair.  If you have 2 pairs (black and white), then color ($k=1, n=2$) is enough.  If you have one pair of black, short; one pair of black, long; one pair of white, short; and one pair of white, long - then $k=2, n=4$.  Then if we limit $k$, we at the same time limit $n$.  If we are going to limit $n$ then order calculation does not make sense anymore.","2013-01-20 01:25:31","348975"
"20079788","14419556","32","I've tried this with my socks (I've got easily 30+ pairs) and man it is FAST. One problem I've found is when I can't have a good enough hash algorithm (I've got lots of white socks without any pattern) so it becomes hard. In that case, what would be the optimal way to do it?","2013-01-20 02:14:40","1152602"
"20079874","14419556","58","@NothingsImpossible that's how hash collision attacks feel like for a poor web-server! Are the white socks distinguishable by some attribute? There must be something you can distribute them on. Otherwise, you could just form pairs arbitrarily.","2013-01-20 02:22:03","122718"
"20079991","14419556","6","@usr They are distinguishable but not on a fast glance. Comparing with file hashing, it is like the colored socks are a 100KB file and the white ones are 1GB files, it takes much longer to analyze. What I do on practice is to use different socks anyway, because nobody will notice it.","2013-01-20 02:29:45","1152602"
"20080061","14416010","0","This is essentially storing found-but-not-matched socks in a hash-based lookup. With an ideal hash it is O(n), but if you've enough socks stored that the hash begins to degenerate, it becomes more complex accordingly.","2013-01-20 02:34:54","400547"
"20081147","14423956","239","as the number of socks increases, human's SIMD become no better than a CPU.","2013-01-20 03:42:16","309412"
"34794832","13308092","0","@Snow Crash, In your answer at the beginning `This helps:` link is broken. Please correct it. Thanks.","2014-04-02 02:51:55","1866401"
"96901349","54153341","0","Good. Have you ever tried other validation methods like PHP or API services? Like DeBounce [Email Validation](https://debounce.io) Tool.","2019-03-09 12:44:16","796200"
"20083089","14419556","1","Whether this satisfies the logarithmic space limit depends on the quality of the hash function. Let's say there is a perfect hash...it would take O(n) memory to remember which trait is associated with which bucket. This isn't an issue with an integer hash as you don't need to keep a table of values to buckets (you just apply some arithmetic) but it's an issue here. If you don't keep a lookup table in memory you need to do a scan of all the buckets, which (again, depending on the quality if the hash) could be no better than just scanning the pile.","2013-01-20 05:32:16","228171"
"20083371","14416010","0","I cannot imagine sorting, which sock is ""bigger"" or ""smaller"" than other? :D","2013-01-20 05:50:23","781743"
"20083749","14419556","2","@MarkPeters good point. One could argue that we are using the human brain as an associative array: we can immediately spot the appropriate pile that has a certain color. In that sense the brain is a parallel hardware machine.","2013-01-20 06:12:29","122718"
"20083973","14423956","26","The best answer, IMO.  While it's fun and clever (and appropriate for SO) to reduce a day-to-day problem to a computer algorithm, it makes much more sense to use the resolution power of man's eye/brain for a set as small as ~60 socks.","2013-01-20 06:27:06","841417"
"34796004","17782979","2","Good answer - since a lookup-table can also handle complex cases, where we cannot easily cheat with bit-manipulation","2014-04-02 03:15:02","3070062"
"20084546","14419556","0","For white tube socks, another frequent differentiator is the toe - different colored thread, an embroidered word, etc.","2013-01-20 07:01:13","29638"
"20084692","14415881","40","Great question! You might be interested in my article on a related problem, which is a discussion of the probability of pulling two matched socks out of the pile: http://blogs.msdn.com/b/ericlippert/archive/2010/03/22/socks-birthdays-and-hash-collisions.aspx","2013-01-20 07:08:45","88656"
"113007723","40630","1","C++ references have nothing to do with scopes. In implementation they are like pointers that are not allowed to have null values. The main difference beyond that is that syntactically they behave as aliases of the referenced data. In Java references work almost the same way, but have special rules that allow for: comparison with null and other reference values (using the == operator). C++ is also pass by value, although that value could be a pointer/reference to the reference.","2020-09-15 05:13:42","4100"
"20087357","14419556","38","This is a Radix Sort, which I agree is the right answer. @MarkPeters I don't think you need a lookup table. A single linear pass over the socks can convert the socks to number vectors, making the mapping of ""sock segment"" to bucket trivial. The socks can be tied to the vectors with string so that you don't need another linear pass at the end.","2013-01-20 09:31:36","182668"
"20087369","14419556","0","(@MarkPeters though I guess during that pass you'd need a mapping mechanism of some sort.)","2013-01-20 09:32:12","182668"
"80874514","2003515","0","@Alex78191 Because you may not want to push your branch to all your  remotes. However I use this alias when I want to push all my branch to all my remotes. https://stackoverflow.com/a/18674313/1308453","2017-10-26 08:38:01","1308453"
"34812750","14415881","1","@thang, you don't need to assume the Axiom of Choice if the number of socks is countable.","2014-04-02 11:21:06","230436"
"50198543","8888015","3","Want to point out here that it will also remove any changes made in any other branch which is not tracked remotely. I lost mine, hope others be careful.","2015-06-27 04:35:19","3286583"
"113013256","22417539","0","@BrentBradburn, would you provide an real-world example, I did not understand your answer.","2020-09-15 09:16:08","7551963"
"20090642","14425958","3","Human optimisation: I'd argue that as a human, for step 2, you should plonk the socks down in roughly ascending order, then repeat with finer and finer granularity until sorted, a bit like shell sort. This would be much faster for a human (visual estimation) than a comparison-swap based approach.","2013-01-21 01:16:43","1598537"
"20091374","14419537","2","Thats assuming that you cannot create a fully unique hash in your mind of all the socks you already seen, which for me is a O(1) to match a sock that I have seen and previously and placed in the waiting for matching *hash*","2013-01-21 02:22:06","742390"
"20091631","14418638","3","@emory, I think that you're looking for the backtick, not the `$` character, to make your stuff look code-y.","2013-01-21 02:46:28","57318"
"50206152","26410745","8","The two illustrations contradict each other.","2015-06-28 12:22:00","3990607"
"113014240","22417539","0","@MenaiAlaEddine-Aladdin, [gitk](https://git-scm.com/book/en/v2/Appendix-A%3A-Git-in-Other-Environments-Graphical-Interfaces) is a GUI for viewing your Git repository.  I highly recommend using gitk or something similar.  Exploring your repository with a graphical tool should help bring this into focus.

Using gitk, you can attach the head of branches (such as 'master' and 'my_new_branch') to specific commits in the history.  Once this is done, the steps 2, 3, and 4 are trivial.  See my previous ""Further elaboration"" comment for more...","2020-09-15 10:15:39","86967"
"66187719","21683994","2","@RoyTinker Greedy *scanning.* The parser has nothing to do with this.","2016-09-11 02:21:50","207421"
"20100217","14416010","0","This method is what I use, because it makes use of a nice heuristic: 
Since the ""pile"" sock-structure has several top elements, it is possible to select the one sock at the top that is most likely to match any of your previously picked socks.","2013-01-21 10:56:32","607917"
"113019872","57991193","0","but The filter() method creates an array filled with all array elements that pass a test so the sole purpose of the filter is  reducing and creating a new array","2020-09-16 06:15:35","4235636"
"113019977","57991193","0","Yes it does but that's only useful if you are using the returned value of filter by resigning it to the original variable or another one, and also it only works if it's given a return value in the function passed in as a parameter to it, but none if those things are done here so it's only purpose is iterating the array elements, which is what forEach is for","2020-09-16 06:20:35","2016831"
"113020008","57991193","1","You could instead do `let filter = 
  Object.fromEntries(Object.entries(myObject).filter(d =>  d !== 'regex'
))
`","2020-09-16 06:21:53","2016831"
"20102527","14419228","9","> It might take even more time than sequential search, which requires quadratic time in theory.

Yeah that is why I hate doing this, maybe I should throw away all my socks and start with case 1.","2013-01-21 12:19:11","44232"
"20104363","14423956","14","@LieRyan If the socks are uniformily distributed, you will end up noticing a pair in any sufficiently small set of socks due to the birthday paradox (unless you can distinguish colors to arbitrary precision, which I doubt) so the bottleneck here wouldn't be the human color matching algorithm but the spreading step.","2013-01-21 01:21:08","1102380"
"20105226","14418638","1","You're abusing Landau notation... Big Oh is used for the **upper bound**: see [Family of Bachmann-Landau notations](http://en.wikipedia.org/wiki/Big_O_notation#Family_of_Bachmann.E2.80.93Landau_notations). Also: ""You can achieve O(n) with radix sort."". O(n) for what? Building? Insertion?","2013-01-21 01:47:14","309483"
"20105350","14419556","0","cryptographic hash functions such as md5 are unnecessary here.","2013-01-21 01:51:38","309483"
"20105553","14419228","4","I find it easier to have all the same socks as well.  Every couple years I buy 10 of those 6 packs of socks when they are on sale and throw out all my old socks.  Just easier to match identical socks and they look better then old holy socks.  With this, just a simple first off the top of the pile is the fastest for me.","2013-01-21 01:59:07","275425"
"20105745","14419556","0","@JanusTroelsen true. It was an example for a practically perfect hash function. Any good hash function would do, but I had to name one for clarity.","2013-01-21 02:06:13","122718"
"113023548","40630","0","Changes to C++ references made by called method are also visible by calling method. That doesn't exist in Java and it is not a pointer like behaviour. In Java and C changes to pointer values are local only. I don't know how to properly call to this kind behaviour but it is somewhat similar to ""outer scope"" of some scripting languages.","2020-09-16 08:40:36","1193657"
"113023698","40630","0","For example of proper pass-by-reference see swap program here: https://www.geeksforgeeks.org/references-in-c/ It is not possible to write swap method in Java with same side-effects. There is  ""quality"" (a behaviour of language  operators) to C++ references which does not exists in Java references or C pointers.","2020-09-16 08:45:42","1193657"
"20106557","14423956","2","@Christian: Same for me. Therefore i always use the ""deal with it"" algorithm: It's the only usable one in this situation...","2013-01-21 02:30:59","1753601"
"20107714","14441092","2","So, basically other then splitting the problem into 2 subproblems (without resplitting it again later on) - it offers to ""cache"" as much elements I can (the top of each ""spot""), while piling it up, and repeat while there are still elements. Can you provide complexity analysis for it? My gut tells me it is going to be worse then O(n^2) at average case (though I cannot prove it yet), and you cannot bound the number of iterations you make. You are also going to need some randomization to guarantee you take the elements at different order each time. Or am I missing something here?","2013-01-21 03:07:40","572670"
"96930094","17853572","2","What does `Communication is Done by Representation` mean?","2019-03-10 09:59:38","2893446"
"34825389","14415881","1","@ApprenticeQueue say you're right, what would the choice function look like?  I think that you are (provably) wrong, but to give a hint, have a look at this: http://en.wikipedia.org/wiki/Axiom_of_countable_choice (a weaker version of AC).  To prove that even axiom of countable choice is independent of ZF is difficult and uses forcing.","2014-04-03 08:38:15","1779316"
"20109627","14423956","4","@Christian: If you only have black socks, wouldn't any sock match any other sock? ;)","2013-01-21 04:06:46","134409"
"20117560","14415881","1","Pigeonhole principle : http://en.wikipedia.org/wiki/Pigeonhole_principle","2013-01-21 08:34:28","358906"
"96942252","9158888","0","This solution ""just gets the path of the directory where the symlink it stored"", and that's what I actually want. PS: quoting still should be added.","2019-03-11 10:19:28","2253073"
"96942745","12184274","0","To understand and get used to how `git -df` works, I recommend adding the `n` option if you are still new to running the command, i.e. `git -dfn`. This will run it in `dry-run` mode so you can see what will get deleted without it actually deleting and doing anything. If you are okay with the result, you would run it again without the `n` option.","2019-03-11 10:34:17","535122"
"80929425","67712","1","@Cerran, thanks; I've updated my answer accordingly.","2017-10-28 03:34:38","10354"
"20126829","14423956","3","Yep. At the very least, after you're matched all the readily identifiable pairs, you're left with a much smaller number. I don't think I have any actual pairs left, so I tend to just iterate on ""find two socks that look less dissimilar than the average random pairing.""","2013-01-22 05:30:31","263268"
"20127574","14423956","5","I disagree to the claim that the brain is completely different architecture. The `""finding a matching pair"" can be one operation for a set that isn't too big.` is equivalent to searching in a machine cache - which is MUCH faster then RAM look-up, but you are going to load these socks into ""cache"" first, and thus the suggested approach will still be `O(n^2)` both for human and machine.","2013-01-22 06:18:06","572670"
"96947248","9158888","4","`dir=""$(realpath ""$(dirname ""${BASH_SOURCE[0]}"")"")""`","2019-03-11 12:52:28","2253073"
"34846224","1628584","0","If I then went to the newbranch and did a `git rebase master` would the newbranch get that commit removed though? If I used `merge` instead of `rebase` would I avoid this?","2014-04-03 04:41:08","349196"
"80932333","11828573","1","What if there is no escape key??","2017-10-28 06:17:39","503377"
"50239681","292357","43","Lots of folks coming from Mercurial keep using ""git pull"", thinking it's an equivalent for ""hg pull"". Which it's not. Git's equivalent of ""hg pull"" is ""git fetch"".","2015-06-29 10:15:53","1785164"
"20134708","14416010","0","@lttlrck - that works if your socks are different enough that you can find some pairs in a glance. Mine mostly require deeper inspection, so spreading them out doesn't help much.","2013-01-22 10:59:45","41360"
"66223774","244777","3","If you want a language for configuration with comments see [TOML](https://github.com/toml-lang/toml)","2016-09-12 01:20:35","108238"
"20139719","14419228","61","the down side of having all identical socks is that they tend to age at different rates. So you still end up trying to match them based on how worn they are. (which is harder than simply matching by pattern)","2013-01-22 01:45:32","1069607"
"113053018","244777","1","[manifest.json](https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json) supports `// comments`. Just in case someone comes here for this special case, like I did it before.","2020-09-17 06:48:06","11942268"
"20141174","14419556","0","I assumed everybody did it like this. Of course, I normally break the loop after discovering the first pair, since I'm lucky if sock draw filling results in a set of just socks.","2013-01-22 02:31:47","659190"
"20141537","14441092","0","worst case (assuming all pairs are men's and are different) would be n^2 and on the extreme other side the number of linear searches you would need would be n/2. I would improve my answer later today to explain how the iterations would be performed on reducing sets.","2013-01-22 02:42:18","1445354"
"20142454","14423956","13","@dpc.ucore.info No, because they have different woven cuff patterns, cuff lengths, overall lengths and shades of black (my wife would probably physically hurt me for that last one).","2013-01-22 03:07:10","1050373"
"20146177","14421438","25","Upvote for 'non-algorithmic' answer. This is exactly what I do and it works wonderfully. The replacement issue is not a problem if you 'rotate' your sock stock by placing washed socks in back and pulling from the front of the drawer in the morning. All socks wear evenly. When I start noticing some wear on one, I put on the shopping list to completely replace that entire class of socks. For the old socks, I give the best 20% to Goodwill (tied in a grocery sac so they don't get mixed back in) and pitch the rest. You're not wasting socks, at this point, the 80% only have 6 months left anyway.","2013-01-22 04:51:03","37769"
"20146241","14421438","2","BTW (1) Binding your socks results in the elastic one one being stored stretched and the will fail much more quickly. Limiting the kinds of unique socks you have makes binding unneded. (2) A disadvantage of limiting unique socks is that for people with certain fashion concerns, the method may be unsuitable.","2013-01-22 04:53:36","37769"
"50256709","19467001","1","Can't you use `rebase` for the same thing?","2015-06-29 05:37:49","1048572"
"80946962","11828573","2","The use `ctrl [` to do the same.","2017-10-29 12:30:00","1445334"
"34867569","21605159","0","jQuery to update user's input capitalized:

$('.on-change-capitalize').change(function(){
   $(this).val($(this).val().capitalize(true, true));
}); btw, it also works with utf8 chars ;) thanks!","2014-04-04 06:51:32","1737158"
"96962150","32484278","0","This is the right way. Rebase approach is good, but should only be used for squash as a last resort solution.","2019-03-11 08:13:27","4621324"
"96968474","52339862","0","This is a great library.  I was trying to explain it to a coworker the other day adn described it like this: `invoke` is to `subprocess` as `requests` is to `urllib3`.","2019-03-12 02:00:27","9074332"
"20150509","14418638","0","@Xymostech you are correct.  It does not seem I can edit my comment to correct that mistake.","2013-01-22 07:10:59","348975"
"113069065","1473742","0","Great answer. NOTE: `includes` (and `indexOf`) DO NOT convert type. You'll have to do that in the code I suppose `console.log(['joe', 'jane', 'mary', 46].includes(Number('46')));`","2020-09-17 03:41:51","441878"
"113069408","63261182","1","in my case 3rd command is taking care to rename remote branch, without executing above 2 nd command. Is it necessary to delete before renaming remote branch?","2020-09-17 03:53:17","610194"
"50268457","19467001","0","Yes you could alternatively use `rebase` on the detached branch in the scenario above.","2015-06-30 01:32:12","227176"
"20157125","14423956","2","@Christian Even among my black socks I can easily identify differences in length, patterns and shades to find matching pairs. It's not as easy as noticing my only pair of bright orange socks, but it's still quite easy. I always spread my socks so they point in the same direction side by side, this seems to make it easier to locate pairs and to pair them.","2013-01-22 11:05:12","2118"
"113074205","63261182","1","@SP007, The 2nd command is not essential, but I'm a little worry about clarity on git server. so I don't keep useless branches.","2020-09-17 06:52:35","6877799"
"80967160","40722084","1","this does not handle arrays, that are, indeed, objects as well.","2017-10-30 08:02:38","4537906"
"20157929","14468913","0","That is usually how I do it. Works much better than iterating through all the remaining socks each time.","2013-01-22 11:46:13","643192"
"113084280","63950139","2","This just repeat https://stackoverflow.com/a/57880896/6309.","2020-09-18 06:17:04","6309"
"50282282","1628584","1","sykora maybe you want to check out the meta-discussion over there: http://meta.stackoverflow.com/questions/298067/top-voted-answer-is-dangerous-hiding-safer-answer?cb=1 - maybe you want to extend your answer to reference the very neat version @aragaer gave below (very underrated contribution as I think)","2015-06-30 10:29:52","386398"
"20171751","14423956","3","@Annan Well, lucky you then, because I can't :)","2013-01-23 11:22:27","1050373"
"20173197","14468913","0","Nice approach and I think it can be applied to some real CS problems as well. Can you please add an example of such (a CS problem where we could use a similar approach to solve problems)? Also, how does this solution scales for millions of socks?","2013-01-23 12:08:44","572670"
"20179827","14423956","211","You had better hope you have an even number of socks, otherwise you are going to be folding socks for a long time...","2013-01-23 03:14:17","968201"
"34912713","22523469","2","""git branch -D master"" delete the branch. so be careful with it. I prefer to use ""git checkout origin/master -b <new branch name>"" which create a new branch with a new name and you done need 3,4 lines. Also recommended to use ""git clean -f"" as well.","2014-04-05 11:49:57","251491"
"66277381","25553225","0","@Zaz: You are right; maybe I should have clarified that. Only files/changes that have been either added to index (/staged) or have been committed can possibly be recovered. Uncommitted, unstaged changes _are_, as you said, completely thrown away by `git reset --hard`.","2016-09-13 09:17:10","455269"
"66277535","25553225","1","As a sidenote: Everytime a file is staged, `git` stores its contents in its object database. The stored contents are only removed when garbage collection is executed. It is therefore possible to recover the last staged version of a file that was not currently staged when `git reset --hard` was executed (see the posts linked above for more information).","2016-09-13 09:22:52","455269"
"66279752","11593797","0","I got `fatal: remote part of refspec is not a valid name in :/refs/tags/0.0.1`
...?","2016-09-13 11:17:09","2496266"
"20194037","14448883","1","This is probably pretty close to my mental process. I have an added layer of pre-sort optimization. My athletic socks get washed with the whites and my dress socks get washed with colors.
This means that as long as I don't dump two loads of laundry together, my socks are already grouped by type. The white load goes really fast (many identical socks) but the dress socks take longer. Other key tip--make more available memory for the sort (fold and remove all non-socks first and THEN run the pairing algorithm)","2013-01-23 10:39:05","675727"
"66286885","36463546","8","Most people don't rewrite published history, especially on `master`. So no, they are not dangerously wrong.","2016-09-14 06:59:48","315024"
"5570462","397740","6","This is now part of Google Guava.","2011-02-13 08:55:52","454470"
"50303488","19095988","0","what is the purpose of the `-r` flag before `--cached`? Seems to work without it","2015-06-30 07:15:18","3828228"
"113102707","63851961","0","If you decide to answer an older question that has well established and correct answers, adding a new answer late in the day may not get you any credit. If you have some distinctive new information, or you're convinced the other answers are all wrong, by all means add a new answer, but 'yet another answer' giving the same basic information a long time after the question was asked usually won't earn you much credit. You've added 'pretty pictures' — I'm not convinced they're all that beneficial. They'd be illegible if I was using a cell phone to read this answer.","2020-09-18 05:32:56","15168"
"81003985","2610497","1","Is there any way to change the color of single character in placeholder ?","2017-10-31 05:39:30","4395050"
"20214353","1628584","2","Why is `git reset --hard` recommended so often?  Why not `git checkout head~3 .` (Note the `.` or you'll end up on a headless branch)?  (of course `head~3` could be replaced with alternatives mentioned above).  Seems `checkout` is much safer since it won't destroy your history.  Did I miss something?","2013-01-24 01:54:52","258662"
"97033907","52719","0","`save` option is deprecated in favour of `git stash push`. It differs from ""stash push"" in that it cannot take pathspecs, and any non-option arguments form the message. [git-scm.com](https://git-scm.com/docs/git-stash)","2019-03-13 04:21:22","3816639"
"81029565","4183018","10","Yes. The JSON format has a lot of dead-space between elements and is space-insensitive in those regions, so there's no reason why you can't have single or multi-line comments there.  Many parsers and minifiers support JSON comments as well, so just make sure your parser supports them. JSON is used a lot for application data and configuration settings, so comments are necessary now. The ""official spec"" is a nice idea, but it's insufficient and obsolete, so too bad.  Minify your JSON if you're concerned about payload size or performance.","2017-10-31 05:36:52","88409"
"81036788","179231","3","The list of cases handled (`Works for all versions`) above has one item == `when the file it`. Can anyone appropriately complete that sentence fragment?","2017-10-31 09:22:37","915044"
"20231220","14419556","51","A guy I went to college with actually had PairIDs.  It was sewn on each pair of socks with thread:  1, 2, 3, 4...","2013-01-24 10:51:29","5486"
"97047092","16957078","0","One of the strings I was looking for contained special characters.  You want to add a -F so it counts string literals.","2019-03-14 01:00:25","1965679"
"113141751","57880896","0","Thanks @Tycholiz. At the time the question was asked and the answer accepted, this new command did not exist :) So it makes a lot of sense that it is not the accepted answer :)","2020-09-20 07:54:48","9210961"
"34954247","8888015","0","This should be the accepted answer. Works fine for me. I guess the assumption here though is that you do not have local commits, which in my case is good as the ""local"" only possesses a deployment key.","2014-04-07 04:02:37","95552"
"20238460","14515952","2","@Adrew but this link is showing working example of this function. I think a practical answer may weight over a full page of text :)","2013-01-25 06:30:44","1045296"
"20248935","14419556","2","For a huge number of socks this might be the solution but it would probably be overkill to keep piling recursively. Given that the piling process will be much more difficult each time you try to distinguish socks in a pile since the difference would not be immediate for the human eye/brain. So i would think just one or two rounds of piling would be enough to start matching in a pile.","2013-01-25 01:29:54","1987208"
"34967643","16839350","0","will it work if last 2 lines are inserted in `do-while` loop?","2014-04-07 11:34:26","1851302"
"66338004","52704","14","`git-clean` only removes untracked files from the working tree https://git-scm.com/docs/git-clean","2016-09-15 12:29:43","1661299"
"113151880","63950139","0","It sure is, just stating the obvious and that git tries to help with the comments from a 'git status' call :-)","2020-09-21 08:44:11","1369474"
"113157249","62178856","0","@JohnConde. The proposal of [Nullsafe operator](https://wiki.php.net/rfc/nullsafe_operator) is accepted and implemented in PHP 8. Kindly update your answer. Also update RFC link.","2020-09-21 12:06:19","4903314"
"113157319","62178934","0","@Berto99 The proposal of [Nullsafe operator](https://wiki.php.net/rfc/nullsafe_operator) is accepted and implemented in PHP 8. Kindly update your answer. Also update RFC link.","2020-09-21 12:08:59","4903314"
"50364940","4754797","13","I'm trimming just `remotes/origin/` to preserve namespaces: `for BRANCH in $(git branch -a | grep remotes | grep -v HEAD | grep -v master); do git branch --track ""${BRANCH#remotes/origin/}"" ""${BRANCH}""; done`","2015-07-02 08:33:47","547223"
"20257783","14423956","3","Similarly, selection sort is faster than merge sort for sufficiently small samples","2013-01-25 06:15:06","127880"
"81059821","47055819","2","When giving an answer it is preferable to give [some explanation as to WHY your answer](http://stackoverflow.com/help/how-to-answer) is the one.","2017-11-01 01:48:47","7311767"
"113167268","4682612","1","This doesn't do anything. If i `git clone`, then run your command, i still only have `master`.","2020-09-21 05:41:27","430062"
"113167375","72156","0","Alright, I flexed my editorial privileges and updated this answer.","2020-09-21 05:45:21","430062"
"20270134","14418638","0","@Xymostech LaTeX tags anyone? StackOverflow really should have them, they do come in *really* handy sometimes.","2013-01-26 07:06:40","1102380"
"97071872","50841981","0","I'm glad git now does this. However, the OP was asking about not tracking modifications in files present in the .gitignore, not deleted files still showing a status.","2019-03-14 03:26:21","706913"
"81068801","80094","0","@PeterMortensen it's not POSIX, portability not guaranteed.","2017-11-01 05:38:27","13097"
"81074879","44700108","0","FYI, Firebase Realtime Database does not allow the use of '/' in a key. so this can be a nice convention for your own use, but you cannot do it in Firebase","2017-11-01 08:44:58","4231147"
"5642445","1342312","24","I disagree. For-in loops should not be used for arrays for precisely this reason. Using for-in loops will break when using one of the popular js libraries","2011-02-18 02:51:40","181894"
"81075818","16956844","0","@fedorqui: I am surprised to hear that `grep` slows down on `-i` and long words, as I should have thought that the [Boyer-Moore](https://en.wikipedia.org/wiki/Boyer-Moore_string_search_algorithm) “generated-skip-length-table-driven” string search algorithm would be just as fast on `-i` and faster on longer words — presumably Linux `grep` is using something simpler! But https://en.wikipedia.org/wiki/Boyer%E2%80%93Moore_string_search_algorithm#Implementations says it is used!","2017-11-01 09:18:37","4847772"
"66361389","36463546","0","@Makoto, after performing the ""Do NOT do this"" steps `git reflog newbranch` will have a single entry `db8f2fe newbranch@{0}: branch: Created from oldbranch` where `db8f2fe` is the hash of _T3_, and more importantly `git reflog oldbranch` will list the exact hashes of T1, T2 and T3. Together, it's clear that commits T1,T2,T3 were already part of oldbranch when newbranch forked off from it, hence they will be unexpectedly removed from newbranch by the next `git rebase`. Hence also `git merge-base --fork-point newbranch oldbranch` will fail to find the fork-point (instead of printing M3's hash).","2016-09-16 02:32:21","691281"
"66361390","36463546","0","@Makoto, if instead you perform either of my alternative steps, `git reflog newbranch` will start with `4b242c2 newbranch@{3}: branch: Created from HEAD` where `4b242c2` is the hash of _M3_, followed by 3 entries for the cherry-picks. And `git reflog oldbranch` will list T1, T2 and T3, but they will have different hashes there than they do in newbranch, since they were copied to newbranch by cherry-picking (in particular, cherry-picking updates the timestamp - assuming it has been longer than a second since the commit was created - causing it to get a new hash even if it's a fast-forward).","2016-09-16 02:32:28","691281"
"66361403","36463546","1","@GordonBean, yes, it is good that `git rebase` removes M2 from your topic branch when M2 is removed by rewriting from origin/master. It just means you have to be careful in this particular case (splitting existing commits from a local branch onto a dependent local branch), since git can't distinguish the two cases.","2016-09-16 02:33:40","691281"
"66361431","36463546","4","@Kyralessa, the `-t` you are referring to in `git branch` happens implicitly if you have `git config --global branch.autosetuprebase always` set. Even if you don't, I [already explained](http://stackoverflow.com/questions/1628563/move-the-most-recent-commits-to-a-new-branch-with-git/36463546?noredirect=1#comment60571505_6796816) to you that the same problem occurs if you setup tracking after performing these commands, as the OP likely intends to do given their question.","2016-09-16 02:36:03","691281"
"66361441","36463546","3","@RockLee, yes, the general the way to fix such situations is to create a fresh branch (newbranch2) from a safe starting point then cherry-pick all the commits you want to keep (from badnewbranch to newbranch2). Cherry-picking will give the commits new hashes, so you'll be able to safely rebase newbranch2 (and can now delete badnewbranch).","2016-09-16 02:36:53","691281"
"66361449","36463546","2","@Walf, you misunderstood: _git rebase_ is designed to be robust against upstreams having their history rewritten. Unfortunately, the side-effects of that robustness affect everyone, even if neither they nor their upstream ever rewrite history.","2016-09-16 02:37:33","691281"
"34990216","4456438","6","It may not help you that much with the specific problem, but SOAP 1.2 allows for nullable values, see http://www.w3.org/TR/2001/WD-soap12-20010709/#_Toc478383513","2014-04-07 09:04:17","499466"
"66366309","36463546","0","Okay, I do prefer the `cherry-pick` method since it's impossible to lose the commits (always visible in `git log`). However, if history is never rewritten, how does this lost commit situation occur?","2016-09-16 07:04:50","315024"
"20290070","373848","8","'git checkout <commit hash>' command has given me back my older version of the project exactly this for which I was searching Thanks Chris.","2013-01-27 09:26:39","1578898"
"50387675","7216269","0","If your intent is to create a backup (not a mirror), I would instead use `git-bundle`","2015-07-02 05:51:26","1049112"
"66375323","12184274","2","@user2441441: you're out of luck: you've cleaned files that were not under version control. Important files should _always_ be under version control (not necessarily as part of the repository they're located in: you can put them in another, private repository and symlink to them). And files that are in a repo's working directory but not in the version controlled by that repo should always be [`.gitignore`d](http://stackoverflow.com/documentation/git/245/ignoring-files-and-folders).","2016-09-16 11:32:19","745903"
"66385995","21890252","0","@dashesy Thanks for the (unintentional) reminder that folks might not be familiar with `--amend`. I've updated the answer to provide the hint.","2016-09-16 04:11:29","1580288"
"113217979","470376","3","It's a ""cool"" and interesting idea, no doubt. But real-life code should be easy to read and least error-prone. If one of my developers used this I would ask him to change it. Since IMHO this should not be used in production code, I have down voted the answer.","2020-09-23 10:16:49","502727"
"97120676","6985636","0","btw, this will break uppercasing acronyms so be careful y'all <3","2019-03-15 09:53:43","220043"
"97120902","16880000","0","This is the most direct replacement for the old ``remote get-url`` option. It's a drop-in replacement.","2019-03-15 10:07:18","4521815"
"35018297","3407920","1","should we do 'git commit -m ""using theirs""'? Last time I only ""add"" resolved file and it was enough to continue merge operation.","2014-04-08 01:45:13","1406807"
"50423566","6841333","4","And another from the same guy, @ThorbjørnRavnAndersen: https://www.youtube.com/watch?v=Uqjg8Kk1HXo (Leap seconds). (This one is from Tom Scott's own YouTube channel, not from Computerphile.)","2015-07-03 04:23:47","209139"
"81130628","31210295","3","@M.kazemAkhgary It's all inside one logical core. If you're interested, this is nicely described for example in [Intel Software Developer Manual](https://software.intel.com/en-us/articles/intel-sdm)","2017-11-03 07:45:12","6583956"
"20333939","14452144","4","HashMap iterator is fail-fast not fail-safe. Thats why we have ConcurrentHashMap that allows modification while iteration. Check this post http://www.journaldev.com/122/hashmap-vs-concurrenthashmap-%e2%80%93-example-and-exploring-iterator","2013-01-28 09:13:09","926520"
"35042133","3104376","0","@StaxMan I believe I'm backing up everything I say with facts, so as *not* to make it just my personal opinion. If there's anything I haven't backed up sufficiently, let me know. ""Your claim that all metadata ought to be data is just nonsense"" No, you're demonstrably wrong here. The only reason to include metadata, I think, is so it can be parsed. If it's going to be parsed, then just make it real data, not comments. Do you have a use case in mind for which this won't work?","2014-04-09 03:14:31","109011"
"35042175","3104376","0","@StaxMan ""most other text formats recognize this much (XML and YAML have comments)"" XML and YAML are designed for files; JSON was simply extracted from JavaScript, and I think it makes a horrible file syntax (YAML and even XML work better in this case). It's true that JSON files may occasionally need comments, but JSON files are themselves a bad idea when YAML does the same job better. :)","2014-04-09 03:16:53","109011"
"113252761","7589612","0","Big +1 for recommending `diff3`. The default conflict style makes some conflicts literally impossible to resolve. For more information see https://stackoverflow.com/questions/27417656/should-diff3-be-default-conflictstyle-on-git/63739655#63739655","2020-09-24 11:14:27","997606"
"97158695","15315403","0","@ChristianHujer He probably means `buffers` instead of `lines`. UTF-8 codepoints/characters can be multi-byte.","2019-03-17 08:07:31","1548776"
"5699852","1126089","12","@mathick: `git fetch origin && git reset --hard origin/master`","2011-02-23 04:24:56","227513"
"113262522","50522849","1","Brilliant. Thanks! People do not consider automated scripts when answering. This is very elegant when you just can't pass the branch name along.","2020-09-24 04:24:57","1137016"
"50452946","28865728","2","See [section 1.1 of the RFC](https://www.ietf.org/rfc/rfc3986.txt) -- ""Uniformity provides several benefits.  It allows different types of resource identifiers to be used in the same context, even when the mechanisms used to access those resources may differ.  It allows uniform semantic interpretation of common syntactic conventions across different types of resource identifiers...""","2015-07-05 02:11:57","1145388"
"81163788","10836683","0","text-align is actually necessary for it to work in IE quicks mode, so if you don't mind adding a little expression to support older browsers keep it there. (IE8 with IE8 rules and IE7 rules both work without text-align, so may be it's only IE6 and older that are concerned)","2017-11-04 02:02:51","2500000"
"113273394","22417539","0","I agree that this is the safest way, and also as a note to Git-novices, if it's your first time using this command you can also create duplicate branches of the target and working branch to get a feel for the command first before actually applying it to the real branches.","2020-09-25 01:42:09","2445763"
"113275414","22417539","0","Important to note that method assumes the working branch being squash will be deleted afterwards, because if you add more changes to it and then do a regular `git merge` it will bring merge all of the previous commits that were squashed","2020-09-25 04:21:52","2445763"
"20361682","14441092","0","@amit EDIT NOTE: originally i wanted to point out that hashing is possible.  But due to human mind behavior being sporadic hashing is not totally reliable and thus a mixture of hashing and linear searching have been suggested. I am in favor of linear searching as against any other form of searching since it involves least stress on human mind. Since hashing method might prove quite stressful linear searching would be quite a relief. IMHO, Efficiency should be measured with respect to time required to complete this operation rather than iterations required.","2013-01-29 04:35:50","1445354"
"20368804","115983","392","@tiwo I for one disagree that it's not useful. Your directory hierarchy is part of your project, so it should be version controlled.","2013-01-29 08:19:57","1227469"
"81183834","1984225","0","Art of speech of communication is to be able to use commonly-use plain English to explain rocket science! Kudo","2017-11-05 12:10:04","5063031"
"35078756","3104376","3","My canonical use case are log files that are streamed over to be aggregated or stored; so stream/file distinction is virtual and transient. As to skipping: all properties are visible, and there are two main ways to deal with it -- (a) classical, you must know what everything is (to the degree at least that you can skip it), or (b) ""anything goes"", i.e. just use what you know. It is only trivial to skip metadata in latter case. But I see that you can not conceive of the simple notion of diagnostics-only comments -- no point in arguing past each other here.","2014-04-09 07:41:57","59501"
"50485988","6866485","1","Adopted your illustrations with some improvements. http://ru.stackoverflow.com/a/431521/181472","2015-07-06 11:09:09","2790048"
"35086948","406230","13","This question has been added to the [Stack Overflow Regular Expression FAQ](http://stackoverflow.com/a/22944075/2736496), under ""Advanced Regex-Fu"".","2014-04-10 01:30:10","2736496"
"66475710","67748","0","What happens when the remote no longer exists but Git is too stupid to acknowledge its been deleted? This assumes you updated and `git branch -a` continues to lists it as a remote branch.","2016-09-19 10:14:42","608639"
"97197798","27458534","0","@zarose The answers using Venn diagrams are unclear, incomplete & wrong, including in their use of Venn diagrams. See my first comment on the question & elsewhere on this page. Tolerating such writing is not a learning style. It's clearly a writing style. And (from the upvotes & comments) a reading style.","2019-03-19 12:02:34","3404097"
"5737261","2611372","3","Probably the best suggestion so far, though still an issue for keeping files as an interchange format, as they need pre-processing before use.","2011-02-25 11:04:33","438971"
"35098314","21862907","18","Sorry, I forgot to leave a comment (I usually do!). I downvoted it. Downvotes don't indicate factual correctness or lack of, they indicate usefulness in the context or lack of. I don't find your answer useful given Felix's which already explains this only in much more detail. On a side note, why would you stringify the response if it's JSON?","2014-04-10 09:18:07","1348195"
"97205473","15315403","0","Oh yes, they can, and most of them are, multi-byte in UTF-8. Only US-ASCII-7 is not multi-byte in UTF-8. If it's buffers, as in the code, it makes sense. Just not with lines.","2019-03-19 08:07:43","3554264"
"35101095","21862907","9","ok.. @Benjamin i used stringify, to convert a JSON Object to string. And thanks for clarifying your point. Will keep in mind to post more elaborate answers.","2014-04-10 10:27:10","1560518"
"50500239","392748","3","MAJOR difference when tested properly for the aforementioned reasons of quicker to only check type inequality. https://jsfiddle.net/4jhuxkb2/","2015-07-06 05:04:57","2607894"
"66493455","37274801","3","Of course, the correct command is ""git checkout -- ."" a single dot.  In the comment, the three dots were a grammatical thing, to indicate there are many other options that could have been used..","2016-09-20 11:01:00","1149606"
"35109832","10442532","5","This worked for me! But why did you put **input.setInputType(0)** ? I couldn't interact with the _EditTextView_ when I had that line of code (It worked when I removed it).","2014-04-10 01:52:53","2151779"
"81219365","42852256","0","the question is about finding which files contain a string, not about finding a string in a file.","2017-11-06 10:40:49","1983854"
"97222408","49969162","2","It won't delete the files from the remote repository?
What if I want to keep the files both in local repo and remote repo but make git ""forget"" about them?","2019-03-19 03:35:13","5433168"
"20414238","3104376","2","You might find it interesting to hear, from the author of JSON, why comments were left out of the spec: http://youtu.be/-C-JoyNuQJs?t=48m53s","2013-01-31 03:29:22","916892"
"20414414","8099186","6","Use -ms-user-select: none; (for IE10) and your jQuery ""if"" should be this: if (($.browser.msie && $.browser.version < 10) || $.browser.opera)","2013-01-31 03:42:15","24267"
"113334075","63323682","0","customise means  choose ""hack""(searching string) keyword and /etc location according to your demand. you can also use below command
grep -ErIRi  hack  /*","2020-09-27 05:07:24","10000566"
"97230887","49969162","0","AFAIK this won't delete files from history because we're not using any history changing commands (correct me if I""m wrong). This only adds a new commit by deleting files ignored in gitignore from git. Those files will be there in the historical commits","2019-03-19 08:00:57","1311745"
"20422032","1081601","92","In the last example, @pbreitenbach uses `PUT fname=Jonny`. This would set `lname` and `age` to default values (probably NULL or the empty string, and integer 0), because a `PUT` **overwrites the whole resource** with data from the representation provided. This is not what is implied by ""update"", **to do a real update, use the `PATCH` method** as this does not alter fields which are not specified in the representation.","2013-01-31 09:43:18","760706"
"35130304","1785783","1","@Muhd: Return should activate `click` on links…","2014-04-10 11:47:16","707111"
"20424360","5343267","3","Thanks! This is perfect if (and only if) you have a remote repository.","2013-01-31 10:59:35","799508"
"50540459","2866221","65","Typical JS snobbery in these comments. Everyone knows a huge proportion of JavaScript on the web is written on jQuery, so it is perfectly acceptable to provide a solution here for jQuery if it already has a built-in method for testing objects. It's likely that thousands of developers looking for help will find this answer helpful. Nobody said it's the only way to do it. I notice how nobody acts all elitist about the guy who posted a solution to use `underscore.js`...","2015-07-07 03:35:10","851885"
"20435271","2862736","0","As it happens, there was a last commit... but I was specifically asking about removing a single file from the commit, not every file from the commit.","2013-01-31 04:21:37","14069"
"81255493","114543","30","Of those great answers, I just want to highlight that you must give ""#inner"" a ""width"", or it will be ""100%"", and you can't tell if it's already centered.","2017-11-07 08:22:14","802544"
"20436319","4682612","6","After I did `git remote update`, then tried `git branch`, I only see local branches.  But if I do `git branch -a` I can now see the remote branches and I can do a `git pull <branchname>` to get the branch I want. -- I landed on this question from a Google search, and this answer solves my problem.","2013-01-31 04:47:57","332472"
"66531508","37220122","0","or it might be used the same way as jQiery extend: `angular.extend({},obj);`","2016-09-21 09:07:42","1138949"
"50547098","2219560","0","Little thing, if you actually did push the commit to a remote before editing, you can ""fix"" it with git push -f <remote> <branch>, aka force push. It'll overwrite the previous commit. Not the best method as @Dan explained, but there's not much you can do there.","2015-07-07 06:31:33","3082194"
"50547966","2219560","0","@Wade You should avoid using force push on a shared repo at all costs. Doing so pretty much guarantees a conflict for anyone else using this remote. The only legitimate reason I can think to force a history change is to remove highly sensitive data from an unsecured repository (e.g. accidentally committed 'passwords.txt'). In all other cases, use `git revert` instead. If you *must* force push, read this first: http://blog.sensible.io/2012/10/09/git-to-force-put-or-not-to-force-push.html","2015-07-07 06:54:55","770230"
"20442125","14423956","1","Funny, I had read that question when it popped in news hacker, with no  answers yet. I was pairing my socks, and - giving a little attention at how I managed to be 'efficient' - came to the same conclusion! Cooooooooooool ! ;-)","2013-01-31 07:53:46","356411"
"20444790","9244805","3","I agree with Hedgehog. If you do the popular answers here, you are more than likely going to find you've inadvertently killed a lot of stuff that you didn't really want to lose.","2013-01-31 09:28:03","297485"
"50555853","30131247","1","Worked great for me. Every other post says this is so complicated, but this did exactly what is expected. I suppose it only worked because there were conflicts, which doesn't exactly answer the original question.","2015-07-07 11:56:39","759051"
"113369560","61754517","0","Any clarification on why this answer is downvoted? Is os.path.exists() not a solution?","2020-09-28 10:51:45","9549847"
"50561830","22345808","25","You can also just do away with all the nonsense of npm prepending your versions with a `^` or a `~`. Set this if you want to have tight control over your versions:  `npm config set save-prefix=''`","2015-07-08 06:11:58","630170"
"50562655","11828573","48","To be honest, I have a harder time using vim's help system than using vim itself, and mostly rely on quick ref cards and online documentation.","2015-07-08 06:40:07","698835"
"113384881","19506355","1","This helped. The merging chapter ist important for me.","2020-09-29 12:14:38","4130788"
"50573467","1755737","8","In x86 ASM, the `LOOP <address>` decreases the `ECX` register, then jumps to `<address>` unless the decrementing of `ECX` resulted in zero.  Decrementing the loop counter towards zero allows the compiler to generate a single `LOOP` instruction, whereas incrementing or counting to other values requires separate INC/DEC/ADD/SUB, compare, and conditional jump instructions.  Modern compilers can often convert other loops to a `counter --> 0` loop if the value of `counter` isn't used in the loop.","2015-07-08 11:26:58","1156377"
"50573707","1755737","4","Continuing my previous comment:  `MOV ECX, value`, `@start:`, `<code>`, `LOOP @start` is an x86 ASM equivalent for `counter = value - 1; while (counter --> 0) { <code>; }`.  Note that it will barf if `value` is initially zero, so an extra check is needed pre-loop.","2015-07-08 11:32:17","1156377"
"113387697","105074","1","@AbhiBeckert the answer is from 2008 and for node.js projects it might be valid to choose a dependency more over project size","2020-09-29 01:48:11","4125622"
"81287939","89238","0","You can also save your result with the os.system call, since it works like the UNIX shell itself, like for example os.system('ls -l > test2.txt')","2017-11-07 11:19:20","1751920"
"20468479","244777","30","If you, like me, were wondering whether `//comments` are OK for the specific use-case of a Sublime Text configuration file, the answer is yes (as of version 2). Sublime Text will not complain about it, at least, whereas it will complain about `{""__comment"": ...}` in the console, because it is an unexpected field.","2013-02-01 03:12:22","884640"
"20469537","61212","97","This interactive git cheat sheet http://www.ndpsoftware.com/git-cheatsheet.html shows the git workspace (google gives you better results with ""workspace"" than ""working copy"").","2013-02-01 03:43:02","468252"
"81293509","246128","3","So, @tvlooy, if I'm running on macOS, your solution is to install a software package so I can use your answer? That's far worse than the little bit of complexity of the accepted answer (assuming no symlinks).","2017-11-08 05:13:54","762175"
"113394834","62220397","1","This is NOT what resolving merge conflicts mean!","2020-09-29 05:51:57","602037"
"113395142","40523","6","so what happens to ""Fifi"" in the 1st example? Does it cease to exist, was it never created, or does it exist in the heap but without a reference variable in the stack?","2020-09-29 06:03:35","12383992"
"81299800","6581949","22","It's a community wiki answer (so, those who commented with corrections/improvements might consider editing their comments into the answer, if they're sure they are correct).","2017-11-08 08:59:31","2962794"
"113398924","16956810","0","@kenorb's is, by far, the best answer! https://stackoverflow.com/a/30138655/274502 too bad it didn't get more love.","2020-09-29 08:39:13","274502"
"20476738","6866485","3","Since so many people are supportive of the answer, I offer this feedback: write a quickly-readable and easily-executed set of instructions that I can run to fix my problem.  The other answer has it; this one does not.","2013-02-01 07:39:49","327547"
"97294873","1473742","2","""widely"" is misleading, since IE 11 does not support it","2019-03-21 02:20:33","38940"
"113402270","24713353","4","I like the idea of naming slices. I would suggest `(start:stop)` notation is misleading and `(start_at:stop_before)` notation may have preventing me searching out this Q&A in the first place.","2020-09-29 11:59:26","6929343"
"113403311","24713353","0","@WinEunuuchs2Unix that's great feedback - this is a standard Python behavior, but it could be made clearer in that sort of way, so I'll consider updating my material to include this semantic.","2020-09-30 01:37:49","541136"
"97297795","50231389","0","This is exactly what is needed for a true revert of specific files. I needed to undo changes to a few files from an earlier commit that had already been pushed to the remote repository. I reverted, reset, and committed the result:
  `git revert _oldcommit_ --no-commit`
  `git reset -- _unchanged1_ _unchanged2_ ...`
  `git commit -m ""branch without changes to specific files""`
The new branch tip reflected all changes except the reverted files.","2019-03-21 03:30:51","1307074"
"97298185","50231389","0","@DanielTranca Greg Hewgill's answer is not better if you want to revert changes. There may be intervening commits that changed other portions of the files. Nir M.'s answer addresses reverting only what was changed to the specific files in a single commit; his is the better answer to reverting, which I confirmed by arriving at equivalent steps myself.","2019-03-21 03:40:40","1307074"
"35199903","14418638","0","@Xymostech: Some SE sites (like Mathematics) let you use the `$` to mark up LaTeX.","2014-04-13 05:07:54","1079573"
"113410027","62220397","1","But it overcomes the error message. Beginners may just want to undo their changes to ""resolve merge conflicts"". The warning is bold. Advanced users can fiddle with committing, pushing, fetching, adding, editing, merging, creating branches.","2020-09-30 08:23:57","11769765"
"97303895","14352675","2","Just a note - in Python 3, `range` also returns a generator instead of a list, so you'd also see a similar idea, except that `__repr__`/`__str__` are overridden to show a nicer result, in this case `range(1, 10, 2)`.","2019-03-21 06:33:13","1822164"
"113417767","122704","89","Beware!
`var A = { b: [ { a: [ 1, 2, 3], b: [4, 5, 6], c: [7, 8, 9] } ] };
B = Object.assign( {}, A );
delete B.b[0].b;`
It will also modify object A !","2020-09-30 12:54:16","1076652"
"113421412","61754517","3","@YashNag [from another answer](https://stackoverflow.com/a/84173/843953): Unlike `isfile()`, `exists()` will return True for directories.","2020-09-30 02:44:31","843953"
"66595112","2389407","0","This worked perfectly for me, resetting head like that makes much more sense than half the answers here.","2016-09-22 06:00:13","1321468"
"66597582","33213161","0","This comment was ridiculously helpful and doesn't seem to be documented very well. Do you have a link to the documentation around this behavior? This answer about v0 projects has helped me a lot.","2016-09-22 07:15:23","552840"
"66597641","33067594","0","Telling people to avoid starting projects from 0 because library and consuming developers don't understand the system is a terrible solution. I think @asdfasdfads has much better information.","2016-09-22 07:16:39","552840"
"5844631","5196340","7","+1: that's fun and instructive, in that it's wasn't at all obvious to me that you can put anything more complex than the name of a program in the GIT_EDITOR environment variable.","2011-03-04 09:04:37","223092"
"20503107","2669766","240","Why doesn't the request to obtain this data require a CSRF-token instead?","2013-02-03 01:43:47","397331"
"20503548","246128","22","Sometimes `cd` prints something to STDOUT! E.g., if your `$CDPATH` has `.`. To cover this case, use `DIR=""$( cd ""$( dirname ""${BASH_SOURCE[0]}"" )"" > /dev/null && pwd )""`","2013-02-03 02:33:52","716468"
"66602884","79936","0","One minor/special case, _registers_ in the processor - for a C/C++ compiler if a ""stack"" variable is detected to have a very short lifetime or the code can be suitably optimised a variable may never get into what a user might think of as the ""memory"" but be held _really_ close at hand to the processor in it's _own_ small number of working registers.  This is often the case for values used to ""index"" into an array of things because, particularly for Complex Instruction Set Processors they have fast/efficient Op-codes that _use_ those registers for this type of operation!","2016-09-22 10:20:23","4805858"
"66603580","19602603","0","Do know where `event` comes from. You need to give a better explanation of the way you resolve it instead of you writing an answer. Please!","2016-09-22 10:54:34","4111295"
"113434633","4591639","12","Objects have properties, not variables. ;-)","2020-10-01 12:42:04","257182"
"20515654","2669766","5","Wouldn't returning an object containing the array, instead of the array directly, also solve the problem?","2013-02-03 06:26:38","207371"
"66614173","33067594","0","@ProLoser I just think that the system should be simplified, and we shouldn't use 0.x versions.","2016-09-23 08:16:32","588759"
"81347765","671118","0","Just to add a phrase I really believe wraps lot of meaning: ""REST is about taking How Human Web  works and applying it on programmatic WEB""","2017-11-09 10:38:28","1000827"
"50630274","16191917","2","This answer is dangerous because the code can throw a NullPointerException. `activity.getCurrentFocus()` can return null.","2015-07-09 03:20:13","2458815"
"50630818","2219560","0","@Dan I understand that. That's why I said it's not the best method, and pointed to your comment. But if they have already pushed to their upstream remote, there is very little they can do that wouldn't cause conflicts.","2015-07-09 03:32:55","3082194"
"50631834","72156","1","What do you mean by ""other branches hiding in your repository!"" Any reason why they are hidden? I don't get this @emk","2015-07-09 03:58:30","981616"
"66622209","33213161","0","I don't have a link: I found this information too by googling and playing with npm semantic version calculator https://semver.npmjs.com/","2016-09-23 12:01:05","970769"
"66622349","1274081","0","This is exactly what I did. Simply move the files to a folder outside of git, then do ""git add ."", ""git commit"". (This removed the files) then add the gitignore, referencing the files/folders, commit again to add the gitignore file to git, then copy/move back in the folders, and they should be ignored. NB: it will appear that the files were deleted from GIT, so would probably remove them from other checkouts/pulls, as mentioned in above solutions, but since you are making copies of them initially, this isnt as much of an issue IMHO. just let the rest of the team know...","2016-09-23 12:04:27","3333486"
"50635435","2219560","1","@Wade I disagree with ""there is very little they can do that wouldn't cause conflicts."" I was responding specifically to your earlier statement ""but there's not much you can do there."" There *is* something you can do, that *will not* cause conflicts. As I suggested, you should use `git revert` instead of `git push -f`. Revert will add a new commit that reverses the changes made in the reverted commit(s), rather than modifying history; thereby eliminating conflicts. http://git-scm.com/docs/git-revert","2015-07-09 05:35:29","770230"
"66634297","33067594","1","The use case around early lifecycle development and v0 makes a LOT of sense. Learning how v0 behaves properly has actually made me look forward to other early-lifecycle projects. It means you can have a rapidly changing API with lots of backwards incompatibility without being forced to declare your project as 1.x (aka: stable) when it really isn't.","2016-09-23 05:26:18","552840"
"66634329","33213161","2","Needs to be added to their documentation in a more formal way. I gave a talk at Sony to my engineering team because it seems to so easily get overlooked. http://slides.com/proloser/semver-v0","2016-09-23 05:27:13","552840"
"66638996","33067594","0","I understand it, but I just don't like how it works with semver and qualifiers","2016-09-23 08:03:08","588759"
"81371939","179231","0","by far, the best","2017-11-09 08:49:01","7316365"
"5887867","238862","2","Isn't `[].indexOf` creating a new array and then accessing `indexOf`, whilst `Array.prototype.indexOf` just accesses the prototype directly?","2011-03-08 11:47:00","31671"
"113479228","63803809","3","You Sir are the real MVP!","2020-10-02 02:10:39","267874"
"113482027","10113231","0","after trying this command I still get the same error "" untracked working tree files would be overwritten by merge "" and a long yet incomplete list of the files I can't simply force it to overwrite.","2020-10-02 03:48:12","7098259"
"113484041","33211500","0","Nice. By first using `checkout -f` into the branch I wanted to merge from, that got rid of all the problematic untracked files. Then I could checkout again my destination, and finally merge without issues.","2020-10-02 05:06:32","7098259"
"20556447","2669766","4","@PedroFelix No, that wouldn't solve the problem since the same attacks mentioned in the post could still be performed. Overriding the accessor methods to retrieve the info.","2013-02-05 02:36:58","86018"
"50665780","23796058","2","Just what I needed.  Squash down commits from my feature branch, and then I git cherry pick that commit into my master.","2015-07-10 12:34:47","366073"
"20558701","2669766","191","@JakubP. Storing and maintaining CSRF-tokens at Google's scale requires a large amount of infrastructure and cost.","2013-02-05 05:12:13","26406"
"20559612","2669766","138","@JakubP. anti-CSRF tokens mess with caching, and require some amount of cryptographic evaluation server-side.  At Google scale, that would require a lot of CPU.  This sort of offloads it to the client.","2013-02-05 06:10:02","76392"
"50673315","14502904","9","Leaving aside the question of whether exploiting the short-circuit behaviour of boolean operators as a flow control mechanism is bad style or not, the bigger problem is that this *doesn't answer the question at all*.","2015-07-10 03:33:06","1709587"
"50676257","2219560","0","@Dan Ohh I see what you mean. Yeah that would work. If they were working on their own branch, they'd still have conflicts even with `git revert` though, no?","2015-07-10 04:56:37","3082194"
"97383066","51011507","2","Yes, point 1 is vital to understand. From that, the need for this mechanism become clear.","2019-03-24 09:16:18","7549483"
"81399023","16956844","0","@PJTraill I don't know the specifics. Common sense would say that looking for ""abc"" is easier than ""Abc"", ""aBc"", ""abC"" and so on, and timing examples showed me a big difference. But I am sure you know more about it than me! Maybe worth a question?","2017-11-10 02:06:51","1983854"
"50679853","2219560","0","@Wade `git revert` won't introduce any conflicts that `git commit` wouldn't also introduce. It's simply adding a new commit that happens to contain changes which reverse changes made in a previous commit. In most cases, anyone merging your branch will just be doing a fast-forward.","2015-07-10 06:52:33","770230"
"113501882","2117523","2","Instead of the ""updates"" sections (that is what the revision history is for), it would be better if this answer is as if it was written today.","2020-10-03 03:31:05","63550"
"113506496","50998496","0","Why the last term? It doesn't seem to do anything.","2020-10-03 08:20:30","63550"
"113506660","49804612","0","But this only works in a web browser? What about offline unit testing (say, under Node.js)?","2020-10-03 08:31:42","63550"
"113506948","22396258","0","It is better to avoid ""Update"" (meta information that belongs in the revision history to this post). Instead apply it to the content (not this post), e.g. *""Mixture was open sourced on 2015-04-12, and it was discontinued on 2016-07-26.""*","2020-10-03 08:50:59","63550"
"113506994","28389515","0","An explanation would be in order. E.g. what is the idea (principle of operation) and how does it work?","2020-10-03 08:53:44","63550"
"81409858","8347427","0","margin-left: auto; margin-right: auto; centres a block level element","2017-11-10 07:15:55","4612518"
"81409870","8347427","0","The default width for most block level elements is auto, which fills the available area on screen. Just being centered places it in the same position as left alignment. If you wish it to be visually centered you should set a width (or a max-width although Internet Explorer 6 and earlier do not support this, and IE 7 only supports it in standards mode).","2017-11-10 07:16:10","4612518"
"50687455","21683994","4","Also known as greedy parsing, if I recall correctly.","2015-07-11 01:04:15","163227"
"113516562","50998496","0","readFileSync returns buffer. `+ ''` converts that into string.","2020-10-04 12:20:24","1602301"
"66686650","34757096","17","@Jeach: the containers don't have their own kernel, they're sharing/using the one of the host. So you can't run containers that need different kernels on the same machine/VM.","2016-09-26 02:08:24","276648"
"20588983","115983","4","@JonBentley sure you are right! It's a pity that git fails to respect this part - but as long as this isn't fixed, it is useless to have empty directories in a repository (note that git ignores empty directories when checking out as well)","2013-02-05 10:35:55","1307866"
"5941192","238862","4","@alex yes `[].indexOf === Array.prototype.indexOf` (try it out in FireBug), but conversely `[].indexOf !== Array.indexOf`.","2011-03-11 01:32:29","16271"
"66743901","417184","20","in Chrome in 2016 I've been able to open a url with 260300 ascii chars using the osx open command from a simple script, and could confirm that all the characters were passed through to the server. The url in the browser gets truncated to 32791 characters, concludinding with ... (%E2%80%A6%E2%80%A6)","2016-09-27 11:19:20","333068"
"20623437","14220323","17","In Solution 1, sub jQuery, I could not understand this line: `If you use any other jQuery AJAX method, such as $.get, $.getJSON, etc., you have them to $.ajax.` (Yes, I realize my nick is a tad ironic in this case)","2013-02-06 09:07:03","1447509"
"113534273","11227809","9","@screwnut here's an experiment which would show that partitioning is sufficient: create an unsorted but partitioned array with otherwise random contents. Measure time. Sort it. Measure time again. The two measurements should be basically indistinguishable. (Experiment 2: create a random array. Measure time. Partition it. Measure time again. You should see the same speed-up as sorting. You could roll the two experiments into one.)","2020-10-05 08:26:16","58668"
"20627138","14220323","39","@gibberish: Mmmh, I don't know how it can be made clearer. Do you see how `foo` is called and a function is passed to it (`foo(function(result) {....});`)? `result` is used inside this function and is the response of the Ajax request. To refer to this function, the first parameter of foo is called `callback` and assigned to `success` instead of an anonymous function. So, `$.ajax` will call `callback` when the request was successful. I tried to explain it a bit more.","2013-02-06 11:29:52","218196"
"97419179","5201642","0","@AdrianRatnapala I've not tried it yet, but EthanB added an [answer](https://stackoverflow.com/a/21890252/836169) below, based on this one, to do something like that using `.gitconfig`.","2019-03-25 10:18:03","836169"
"35301221","14423956","1","I suggest changing this to `while(pair = notice_any_matching_pair()) {` for a failsafe in case no match can be found (i.e. if there is no match, or if the number of socks that can fit in memory is not enough to find a match).","2014-04-15 09:46:19","638544"
"113542136","10113231","0","hmmm... maybe try ```git add .``` first","2020-10-05 01:17:53","1327548"
"113556666","506004","8","Note: Similar behaviour to HTTP redirect for `replace()` means it won't create an entry in your browser's history.","2020-10-05 10:51:21","2588261"
"113565224","64220381","1","Could you, please, provide a link to the documentation entry with the `dict.union` method?","2020-10-06 08:35:34","7851470"
"113565282","11227902","4","@MatiasChara it's really hidden, see https://en.wikipedia.org/wiki/Bitwise_operations_in_C#Right_shift_%3E%3E ; ""however most compilers will perform an arithmetic shift, causing the blank to be filled with the sign bit of the left operand"". I guess it's a de-facto standard by now.","2020-10-06 08:37:45","493759"
"81460082","79923","4","@mattshane The definitions of stack and heap don't depend on value and reference types whatsoever.  In other words, the stack and heap can be fully defined even if value and reference types never existed.  Further, when understanding value and reference types, the stack is just an implementation detail.  Per Eric Lippert: [The Stack Is An Implementation Detail, Part One](https://blogs.msdn.microsoft.com/ericlippert/2009/04/27/the-stack-is-an-implementation-detail-part-one/).","2017-11-12 10:38:03","46249"
"20652703","14468913","0","I think this is basically th same as the other answer here, http://stackoverflow.com/a/14423956, from Jan 20. Both +1. Human vision system is massively parallel.","2013-02-07 04:44:32","849891"
"20653042","14577444","1","this is the same as http://stackoverflow.com/a/14423956 and http://stackoverflow.com/a/14468913 I think.","2013-02-07 04:54:19","849891"
"50758994","22395328","4","your code may lose data when the subprocess exits while there is some data is buffered. Read until EOF instead, see [teed_call()](http://stackoverflow.com/q/4984428/4279)","2015-07-13 06:52:13","4279"
"20657495","14577444","0","@WillNess Yep, with a bit more of explanation","2013-02-07 07:19:52","1466267"
"50759218","7286050","0","This can be syntactically simplified to `^([^h].*|h([^e].*)?|he([^h].*)?|heh([^e].*)?|hehe.+)$` or `^(([^h]|h[^e]|he[^h]|heh[^e]|hehe.).*|h|he|heh)$`.","2015-07-13 06:59:10","1711796"
"113582027","522578","5","@TheRealChx101: It's lower than the overhead of looping over a `range` and indexing each time, and lower than manually tracking and updating the index separately. `enumerate` with unpacking is heavily optimized (if the `tuple`s are unpacked to names as in the provided example, it reuses the same `tuple` each loop to avoid even the cost of freelist lookup, it has an optimized code path for when the index fits in `ssize_t` that performs cheap in-register math, bypassing Python level math operations, and it avoids indexing the `list` at the Python level, which is more expensive than you'd think).","2020-10-06 06:19:33","364696"
"113582068","28072982","1","@Bergi: It won't, but you can just add `count = 0` before the loop to ensure it has a value (and it's the correct one when the loop never assigns to `count`, since by definition there were no items).","2020-10-06 06:21:09","364696"
"113582127","23886515","0","@hygull: Turning `index` into `(index)` won't change a thing on either Py2 or Py3. I feel like maybe you're thinking of the change to `print`; the only way to make that work on both Py2 and Py3 is to add `from __future__ import print_function` to the top of your file to get consistent Py3-style `print`, and change the `print` to `print(index, item)`. Or you read an earlier edit of the question when `index` was the original `tuple`, not unpacked to two names, but the parentheses still don't change anything if you fail to unpack.","2020-10-06 06:23:25","364696"
"113582233","522569","0","@Graham: Using `range` would be a premature pessimization, as `zip` (`itertools.izip` on Py2) is strictly better for that case. About the only use case for `range` I know of where there isn't a better alternative is iterating over overlapping slices of a sequence (where you need the index, but then use it to slice, so getting a value with the index isn't helpful). You could make it work without `range` (and for non-sequences) with `itertools.tee`, but it's ugly.","2020-10-06 06:27:30","364696"
"50764151","52713","1","Interesting. For some reason, this doesn't actually work in a submodule. This has just been driving me nuts! I was CERTAIN that `git clean -- .` should do what I wanted it to do. Reading this answer and testing it confirmed it. But for some reason, IT DOESN'T WORK IN SUBMODULES! Why not? <sigh>","2015-07-13 09:37:11","134692"
"35349317","134853","13","The shebang (`#!`) does the trick but it's definitely bad practice.","2014-04-17 12:23:12","657200"
"113590247","49388237","0","This is a nice alternative to achieve a similar end result. I came looking on how to do it using rebase, but I chose this way better. I keep forgetting about the existence of `git merge`","2020-10-07 02:11:02","5394326"
"50777473","28890441","2","Note that this gives the number of seconds (not milliseconds) since UNIX epoch. If you want the milliseconds, use `moment().valueOf()`. See my answer.","2015-07-14 08:33:29","3694557"
"66801566","2389407","0","HEAD^ equals commit prior to HEAD?   and ^^ is two commits prior?   Guessing this won't work with fast forward merges?","2016-09-28 04:17:44","47281"
"66805819","31250734","2","Might be worth looking into Safari too. Safari is the only browser that does not support client-generated downloads. The workarounds are: a) open a BLOB URI (a short, temporary URI that points to an in-memory Blob) in a new window, b) open a base-64 encoded data URI in a new window (may be very long, but supports mime typing). Details here: https://github.com/eligrey/FileSaver.js/issues/12","2016-09-28 06:16:37","199296"
"50801328","727725","7","Just add to what @HawkeyeParker said,  `rm` command uses getopt(3) to parse its arguments. `getopt` is the command to parse command arguments. http://www.gnu.org/software/libc/manual/html_node/Getopt.html","2015-07-14 06:11:41","416394"
"50806156","8944077","1","And of course this is why messing with the git internals is contraindicated.","2015-07-14 08:34:52","2056448"
"97470273","14824401","9","His merge is committed but not pushed (see title), he has already merged, your command works only when he is still in the middle of a merge","2019-03-27 09:42:16","594765"
"113619230","64220381","0","@Georgy: er.. no. Looks like they haven't been update yet to include `dict.union`. However they do include the `d | other` syntax for dictionary unions - below `d.values` (but it has no html anchor). I moved the whatsnew announcement link to the top.","2020-10-07 09:37:28","210945"
"20709813","5032238","188","Note that the above code is equivalent to `os.makedirs(path,exist_ok=True)`","2013-02-09 03:36:16","703382"
"20711929","11892411","0","This do more than only check for existance: This check for accessibility at your user level. SO question stand for *existance* only. So right answer is `test -d` as @Grundlefleck explained.","2013-02-09 08:16:45","1765658"
"113624068","105074","4","@Phil this is a  ""highly active question"", which means it should have an excellent answer with a green tick. Unfortunately that's not the case. There is nothing wrong or incorrect with this answer (if there was, I'd edit the answer) - but another far better answer exists below and I think it should be at the top of the list. Also the question is specifically relating to javascript in a browser, not node.js.","2020-10-08 03:47:19","19851"
"50828457","19095988","13","@gudthing -r stands for ""recursive""","2015-07-15 11:24:12","284577"
"20715187","11892411","8","@F.Hauri - He didn't ask for anything more, that's true.  However, I've found that I typically need to know more than that.","2013-02-09 11:50:43","667820"
"6020607","292359","13","Is a ""git push"" also a ""git fetch"" (in the other direction) followed by a ""git merge""?","2011-03-16 11:51:52","631051"
"6021064","292359","136","@espertus: No. Pushing never automatically does a merge. The user is expected to pull, resolving any merge conflicts locally, *then* push back to the remote.","2011-03-17 12:41:04","893"
"113639095","309424","0","Does this answer your question? [Scanner is skipping nextLine() after using next() or nextFoo()?](https://stackoverflow.com/questions/13102045/scanner-is-skipping-nextline-after-using-next-or-nextfoo)","2020-10-08 02:02:19","6304094"
"113642251","4999483","0","where I can find .git/config","2020-10-08 03:36:42","10879651"
"113644439","56953920","0","How is this different from previous answers?","2020-10-08 04:48:33","63550"
"113644510","58731581","1","JSON5 isn't the fifth version of JSON.","2020-10-08 04:51:09","63550"
"113644531","61069506","1","How is this different from previous answers?","2020-10-08 04:51:44","63550"
"113644711","51232322","0","What is a *""jcomment""*?","2020-10-08 04:57:20","63550"
"113644767","20267852","0","How is this different from previous answers?","2020-10-08 04:59:33","63550"
"113644966","27169861","0","In which context does strip-json-comments run? Node.js?","2020-10-08 05:06:12","63550"
"113645270","22537629","0","Tell that to the [Jest](https://en.wikipedia.org/wiki/Jest_(JavaScript_framework)) developers (e.g., configuration file `package.json`).","2020-10-08 05:17:39","63550"
"81554381","36463546","1","Instead of using the relative revision format, just take the current HEAD revision e.g. `aaaaaa`, the new HEAD for master `bbbbbb`, and the revision after `bbbbbb`, e.g. `cccccc`, then do
`git reset --keep bbbbbb` ;
`git checkout -t -b newbranch` ;
`git cherry-pick cccccc..aaaaaa`","2017-11-15 07:39:44","498968"
"20746130","5361169","0","If you want to sync the whole directory with the remote repo, this is the way to go.","2013-02-11 12:04:55","1343851"
"81561513","42963059","2","OK so I guess steps 1. and 2. are mutually exclusive:
if abc1 is your last commit there is no need for 2. and if there were other commits after abc1 you can directly do 2.","2017-11-15 10:58:32","4374441"
"66853380","27664932","0","I have the same problem, unfortunately, none of these commands worked for me. `git status` still reports a list of modified files.","2016-09-29 08:37:50","895589"
"6043940","3413739","9","If the instability is around 65k it is probably right there near 65535 (2^16 - 1). Maybe they loop through chars using short i? Just a thought. I wonder what URL they tested for 65k+ o_o;;","2011-03-18 11:46:12","578023"
"113653275","27169861","0","@PeterMortensen i tried for node.js. you can try whether works on client-side js.","2020-10-08 11:44:12","978320"
"50865147","12184274","43","As @ctlockey said, the first command also **delete directories if they are composed of ignored files only**... Lost a whole bunch of configuration files on my project :( Be careful.","2015-07-16 08:00:59","1433392"
"81597254","5201642","0","I put this into `~/bin/git-funge` as a script because we have to have single commit messages on pull requests. Now I just write `git funge HEAD~3` and edit my messages to suite a single PR message and save and it is all sorted. :) Thanks for a great answer. (funge is my way of meaning fungible but reads better as a verb :P)","2017-11-16 06:49:21","1212371"
"81597811","10701801","0","It would take only a brief analysis of how your site does logins to be able to duplicate authentic login attempts.","2017-11-16 07:09:38","747739"
"97546476","179231","1","What's with the long hash at the bottom?  Is it a signature of some kind?  What does it tell us?","2019-03-29 08:57:22","446106"
"97547022","179231","1","In fact, why is this Copyleft in the first place?  Does the author (""user25866"") want attribution, despite the answer being a community wiki?  I don't think SO is a good place to dump a little snippet and then attach a license to it.  To guard ownership and authenticate changes, a Github Gist would be much better.","2019-03-29 09:13:52","446106"
"113677190","26853961","0","@VedranŠego - There's a lot of cases where you would prefer to override. As an example - hieratical value setup. You have your base config in dictionary and overrides coming from a different dict. Doing copy & update works, but that's inconsistent API design. list+list work.... while dict+dict doesn't.","2020-10-09 06:19:53","46489"
"20774511","944352","3","Maybe someone could show how to use these extensions? The compiler do not show extension methods on enum EnumExample.","2013-02-12 08:01:30","281014"
"113680791","26853961","0","@AleksandrPanzin, I said ""I cannot see why [you'd want double keys in a single `dict` definition]"". Of course you'd want proper updates between multiple dictionaries, but I don't see the purpose inside a single definition (like two `""a""` keys in my example).","2020-10-09 09:22:55","1667018"
"97556574","82852","13","Note that `FileNotFoundError` was introduced in Python 3. If you also need to support Python 2.7 as well as Python 3, you can use `IOError` instead (which `FileNotFoundError` subclasses) https://stackoverflow.com/a/21368457/1960959","2019-03-29 01:44:15","1960959"
"6076554","4407335","63","'user-select'- Values:	none | text | toggle | element | elements | all | inherit - http://www.w3.org/TR/2000/WD-css3-userint-20000216","2011-03-21 09:44:40","370286"
"66893716","417184","0","I'm noticing long URLs not work in a web app I am working on. Still debugging but I know it breaks at 4,000 character so I'm assuming Edge 38 has the same limitations as IE11's 2048?","2016-09-30 09:53:23","4671250"
"113692626","2765421","3","@VividD _""added an illustrative picture""_ - Seriously? o.O","2020-10-10 02:46:04","402037"
"81623326","161813","0","Please select a correct response to this question so that it gets pushed to the top. I only say this because there are now multiple pages of answers.","2017-11-16 05:34:27","2480715"
"97568457","43901924","2","you can also add characters (letters ) like this: `Array.from((window.crypto || window.msCrypto).getRandomValues(new Uint32Array(4))).map(n => n.toString(16)).join('-')`","2019-03-29 07:55:51","729003"
"50913061","52713","1","I prefer the `git stash save --keep-index` solution, because it creates a commit. Even if I do a `git stash drop` immediately after the `stash save` the commit can still be restored. So the `git stash save ...` solution is safer just in case you discarded too much. E.g. using http://stackoverflow.com/questions/89332/recover-dropped-stash-in-git","2015-07-17 10:41:56","974186"
"97575192","487300","0","although missing some points, this is a very good explanation of the basics of Big O. thank you.","2019-03-30 05:10:33","7994214"
"113709522","359509","4","I'd also point out that 0 === -0 and NaN !== NaN, which can be confusing sometimes. If you want to differentiate ±0 and consider NaNs equal, use Object.is (ES2015)","2020-10-11 01:39:27","13458117"
"113717510","21641213","0","You can use [`pathlib.Path.exists`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.exists), which covers more cases than `is_file`","2020-10-11 09:13:00","1013719"
"50933426","16880000","2","good one :
this also would provide the same for previous versions
     > git remote -v| grep fetch|awk '{print $2}'","2015-07-17 08:26:41","1691387"
"20819776","13459923","5","Even though this has quite some votes, this is by far the slowest solution posted here. I've put together a little speedtest with the most popular answers from this post, here: http://forwebonly.com/capitalize-the-first-letter-of-a-string-in-javascript-the-fast-way/","2013-02-13 01:17:16","1146033"
"97596903","244777","4","One of the key goals of JSON is to eliminate the boiler plate of formats like XML. It's all about the data and minimum markup. It's an opinionated format explicitly preventing you from using comments. json-schema will help somewhat in helping people understand the data, in a similar manner to XML schemas, but tool support needs to improve. JSON has crept into other areas than for transfer across the internet now, and I do agree that it would be handy with comments for that use.","2019-03-31 11:08:48","437315"
"6117697","426276","28","@Xian removing the the checked attribute makes it impossible to reset the form","2011-03-23 03:27:32","234670"
"6117825","426273","3","@Michah removing the the checked attribute makes it impossible to reset the form","2011-03-23 03:32:40","234670"
"6117835","3533701","5","@livfree75 removing the the checked attribute makes it impossible to reset the form","2011-03-23 03:32:58","234670"
"20835216","14423956","0","I don't think you need to make your horizontal surface single-layered, and thus prohibitively large, given a large pile of randomly-assorted socks. Nor is preemptively sorting necessary, since through the recursive SIMD matching process you will be sorting. If you have a pile, you are likely to have at least one match visible. When you no longer have a visible match, remove items from the pile into another of its 'type'. You will eventually find another match visible _on_ the pile, or will have made one when transferring to the bespoke 'type' pile. How fast is this? that's for a mathematician","2013-02-13 09:03:26","237723"
"20835300","14416010","3","what value does inserting a sock between 2 other socks provide to the goal of pairing socks? there is no cardinality of socks. :-x","2013-02-13 09:06:20","237723"
"113746872","7216269","0","I had to do [this](https://stackoverflow.com/a/49339040/4414935) to be able to push back to origin.","2020-10-12 09:16:29","4414935"
"50951376","21963136","22","This code still contains a couple of errors: the `Math.random()*0xFFFFFFFF` lines should be `Math.random()*0x100000000` for full randomness, and `>>>0` should be used instead of `|0` to keep the values unsigned (though with the current code I think it gets away OK even though they are signed). Finally it would be a very good idea these days to use `window.crypto.getRandomValues` if available, and fall-back to Math.random only if absolutely necessary. Math.random may well have less than 128 bits of entropy, in which case this would be more vulnerable to collisions than necessary.","2015-07-18 05:55:51","1180785"
"113750706","64220381","2","I'd love to know why this is being downvoted. It answers the question, and assuming you can use python 3.9+, it's a better answer than all of the others.","2020-10-13 02:32:29","210945"
"20846677","14416010","0","@JoeBrockhaus - `Sorting, of course improves efficiency, especially in real life where you can easily ""insert"" a sock between two other socks.` What I mean is - **if** you can compare socks, then you can sort them, and insertion helps speed up sorting (the easiest sort for humans is Insertion Sort, which benefits greatly from this operation).","2013-02-14 07:55:23","41360"
"113763089","5190323","0","I would also argue that ""elegant"" is not the right word to use here. I would say it's slightly quicker rather than slightly more elegant since you don't spawn an editor. It's a great advantage but a hard reset also seems dangerous since you could easily lose your data.","2020-10-13 11:55:16","611175"
"113763149","37268543","0","I am constantly using this command. I recommend to add an alias for that called `gr3`:
`alias gr3='git rebase -i  HEAD~3'`","2020-10-13 11:57:05","611175"
"6134871","59839","2","For modern versions of bash, ksh, etc. [...] is a builtin","2011-03-24 02:22:17","127259"
"66974633","28365125","20","People, click on the link to interact with the different columns. This cheatsheet is the best resource I've seen to fully understand the differences between each command.","2016-10-04 12:41:48","2440911"
"97629801","215731","1","Can anyone explain the sidenote? Why is there a difference between switching between branches and discarding changes in the working directory? Doesn't switching a branch discard changes if the file names match?","2019-04-01 03:21:01","10450161"
"81698484","44661513","3","Can you elaborate on this statement? ""Although it's not a good practice, I'm using os.F_OK in the call, but that's just for clarity (its value is 0)""","2017-11-19 01:46:40","1949550"
"66986353","8888015","1","didnt work for me. tried this solution, tried `git clean -dfx`. tried `git pull -f`. still have the same error message.","2016-10-04 09:47:35","3143953"
"35536085","5201642","2","When doing the soft reset, what's the best way to auto-determine the target commit id, i.e. of the last pushed commit? I don't want to have to lookup and count `3`, for example.","2014-04-22 06:45:27","832230"
"35536270","21890252","6","Interesting, but I'd much rather type the squashed commit message myself, as a descriptive summary of my multiple commits, than have it auto-entered for me. So I'd rather specify `git squash -m ""New summary.""` and have `N` determined automatically as the number of unpushed commits.","2014-04-22 06:50:40","832230"
"97637345","215731","2","@MarkBolster: The form of the command shown in the answer uses `git checkout --` for restoring specific file contents. Of course, the other completely different use of `git checkout` is for switching branches. It's unclear to me why somebody chose to use the *same* command name for two completely different things. (And no, switching branches never discards changes, if you try to do that, git will complain and ask you what you would like to do with the changes that would be overwritten.)","2019-04-01 07:45:38","893"
"20863849","630453","42","It seems to me that this debate has arisen from the common practice of oversimplifying REST by describing the HTTP Methods in terms of CRUD operations.","2013-02-14 05:05:15","1603791"
"20864661","273227","25","`os.path.exists` also returns `True` for a file. I have posted an answer to address this.","2013-02-14 05:32:59","832230"
"20865058","5032238","59","@Navin The `exist_ok` parameter was introduced in Python 3.2.  It is not present in Python 2.x.  I will incorporate it into my answer.","2013-02-14 05:46:44","832230"
"35537322","5423934","10","you need to traverse up the DOM to check the node's parents, or else ,this is useless.","2014-04-22 07:20:11","104380"
"35542825","487258","1","See this [demonstration](http://mohalgorithmsorbit.blogspot.com/2014/04/asymptotic-analysis-vehicles-race-and.html).","2014-04-22 10:16:40","3344832"
"113778957","7077","0","What do you say to the fact that you could define your own type “String” but can’t do the same for “string” as it’s a keyword,  as explained in https://stackoverflow.com/questions/7074/what-is-the-difference-between-string-and-string-in-c/27965515#27965515","2020-10-13 09:37:09","234954"
"81719320","44661513","6","@sk8asd123: Kind of hard to doo it in a comment: generally, it's best to use constants with functions that they come together with. That applies when working with multiple modules that define the same constant, because some might not be up to date, and it's best for the functions and constants to be in sync. When working with *ctypes* (calling the functions directly) I should have defined the constant (from *MSDN*), or not use a constant at all. It's just a guideline that I use, in 99.9% it probably makes no difference (functionally).","2017-11-19 11:54:34","4788546"
"35551299","5201642","14","@A-B-B: If your branch has an “upstream” set, then you may be able to use `branch@{upstream}` (or just `@{upstream}` for the current branch; in both cases, the last part can be abbreviated to `@{u}`; see [gitrevisions](https://www.kernel.org/pub/software/scm/git/docs/gitrevisions.html)). This may differ from *your* “last pushed commit” (e.g. if someone else pushed something that built atop your most recent push and then you fetched that), but seems like it might be close to what you want.","2014-04-23 06:13:02","193688"
"81722008","46078150","14","This answer would be a lot more useful if you explain why you are using it this way. i.e. why someone should use '--track' and so on...","2017-11-20 03:19:36","1155079"
"67018204","59969","6","`cmd && other` is a common shorthand for `if cmd; then other; fi` -- this works with most programming languages which support Boolean logic, and is known as [short-circuit evaluation](https://en.wikipedia.org/wiki/Short-circuit_evaluation).","2016-10-05 04:03:39","874188"
"35557657","22199804","17","I needed to write git reset --soft ""HEAD^"" with double quotes, because I write it from Windows command prompt.","2014-04-23 09:13:35","957286"
"20886806","944352","0","@Tomas did you put the extensions in another namespace? Did you add the correct using statement?","2013-02-15 11:24:55","23805"
"6198110","682343","20","Hah. I followed this same process. Except I gave up and said `rm -rf .git`, `git init` because I didn't trust `git rm --cached` to keep my working copy. It says a little for how git is still overly complex in some places. `git unstage` should just be a stock standard command, I don't care if I can add it as an alias.","2011-03-29 03:45:18","462702"
"51009280","176264","35","Kathy: ""Is that your dog?""
Bob: ""It would be more correct to call him a canine.""
Kathy: ""No, he's a dog. You, sir, are a pedant.""","2015-07-20 06:49:26","2225646"
"35567418","4799818","20","The original question asked for a solution that does not use `try`","2014-04-23 01:10:01","771473"
"113792114","348234","0","I don't know if I did this right, but `git reset <file>` seemed to also delete the file from my file system as well, which is obviously not what you want.","2020-10-14 10:18:14","685984"
"113796596","46461041","0","The results differences are too small to be considered as a difference. If you'll run the test 100 times, you will get 100 results.","2020-10-14 12:59:30","380561"
"51021063","29648972","2","Lisiting Available Idempotent Operations: GET(Safe), PUT & DELETE (Exception is mentioned in this link restapitutorial.com/lessons/idempotency.html). 

Additional Reference for Safe & Idempotent Methods w3.org/Protocols/rfc2616/rfc2616-sec9.html","2015-07-21 04:00:20","452708"
"113800001","46461041","0","@RonnySherer, are you familiar with jsperf? 
Tests were made after running more than 10 million times!","2020-10-14 02:44:03","266068"
"20906944","452820","8","This operator exists in [Groovy](http://groovy.codehaus.org/Operators#Operators-SafeNavigationOperator), so those who want to use it still have that as an option.","2013-02-15 10:53:23","446921"
"113802200","215304","3","But short, not, long, float, double, et al *are* descriptive, because they’re in the language spec. C# is not C. I prefer them on declarations because they’re concise, small, and aesthetically pleasing. I do prefer the Torre library names on API’s where the API has a data type dependency.","2020-10-14 03:49:42","618649"
"20912524","5343267","0","How could I do it if I don't have the remote reference?, do `git reflog` to find where I was previous merge and then `git reset --hard HEAD@{some_number}` work?","2013-02-16 07:19:14","1197775"
"113808911","44078785","1","Building on @SephReed's comment, I think having the date part first is nice since it sorts chronologically, which may provide benefits later if storing or indexing the IDs.","2020-10-14 08:15:32","10682164"
"51029751","23853061","0","@RenniePet In the ""This branch is x commit(s) ahead of (original)"" message, the x commit(s) refer(s) to a those/that which you made and the upstream forkee has not (yet) merged. The x in the message will increase with every commit you make to that fork.","2015-07-21 09:20:57","3673398"
"20923397","1081601","24","Nicholas is right. Also, the URI for the first POST creating a user should be called users because `/user/1` makes no sense and there should be a listing at `/users`. The response should be a `201 Created` and not just OK in that case.","2013-02-16 07:58:38","428241"
"35588042","21890252","1","@A-B-B, This sounds like a separate question. (I don't think it's exactly what the OP was asking; I've never felt a need for it in my git squash workflow.)","2014-04-23 10:29:20","1580288"
"97696058","54094030","1","This is the answer that worked for me when trying to update an array based on radio button toggling.","2019-04-03 11:52:46","8585525"
"51045316","6232535","1","For those still confused about the concept I like to ""THINK"" of it that `git push -u origin myepicbranchname` is equal to `git checkout -b myepicbranchname` in terms of what it does. Git push does do more but in terms of simplicity this is most likely what you want to know about the two ;)","2015-07-21 03:14:56","2224331"
"113829987","231801","0","Unfortunately this answer is not true at all. This is not what python interpreter does with generators. It is not creating a class starting from the generator function and implement `__iter__` and `__next__`. What it is acutally doing under the hood is explained in this post https://stackoverflow.com/questions/45723893/how-does-a-generator-function-work-internally#comment78413677_45727729. To cite @Raymond Hettinger  *""generators are not implemented internally as shown in your pure python class. Instead, they share most of the same logic as regular functions""*","2020-10-15 01:52:39","10403090"
"113832081","41448584","1","""You could also rebase your development branch on your now up-to-date local master."" How can I do this?","2020-10-15 02:55:05","7762882"
"67085059","36463546","0","Note: to check which commits to include, you can use `git reflog` which gives the HEAD@{xxx} reference.","2016-10-06 03:14:43","354709"
"81777692","13242127","0","If you have locally created files like option files, put them in `.gitignore`.","2017-11-21 11:41:39","324531"
"51080289","2866221","1","@BadHorsie that is bm. So each time a question about dates in javascript is asked we should answer with a random function of a date library? And the reason nobody acts 'elitist' about the underscore.js answer is only because he is not the accepted answer.","2015-07-22 11:52:03","1682627"
"51081494","2866221","15","@Tristan jQuery is hardly some random library, is it? It's only the most popular JS library of all time, on which millions of sites rely. I don't see the problem with posting both answers so that there is a pure JS solution, and a jQuery solution so developers who are working on jQuery sites know about a quick built-in function.

Obviously nobody is suggesting you load the entire jQuery library on your site for the sole purpose of using one small utility function... It's pretty obviously meant to be a solution for people already using jQuery...","2015-07-22 12:19:24","851885"
"67109097","52704","28","To clarify Asenar's comment above, `git-clean -df` can be dangerous. It will delete local untracked files (e.g. covered by a .gitignore)  Read all below carefully and consider git checkout .    instead","2016-10-07 08:05:12","765827"
"35609777","9197466","0","This is incorrect. For POST, the state is also undefined **only** until the first successful retry. Then, either the server accepts the POST (message never arrived), throws a 409 conflict for a duplicate ID (message arrived, response was lost), or any other valid response.","2014-04-24 12:13:04","965382"
"113849837","2117523","4","If you _really_ want to keep the versioning inline, and not behind revision history, you have to reverse the order : keep the most up to date answer as first.","2020-10-16 07:15:18","24760"
"20960918","417142","0","@gerryLowry: Windows tools already tend to have problems even compiling with long file names, so this usually isn't a concern if you only use `MapPath` for actual file names.  One hopes that the extra-long url names are not paired with extra-long file paths, since the latter results in an unusable mess whereas the former may just be a developer abusing get requests where he should be using post requests.","2013-02-18 12:41:12","18192"
"35610190","2691891","0","This is dead wrong. Idempotence should **not** decide if PUT or POST is used. Who owns the responsibility for the URL structure decides if PUT or POST is used. To understand how to handle duplicate POST requests see [this answer](http://stackoverflow.com/questions/630453/put-vs-post-in-rest/17114749#19670755).","2014-04-24 12:22:17","965382"
"113851636","41448584","0","First run `git checkout my-dev-branch` to switch to your dev branch then `git rebase master`. You could also just run `git rebase master my-dev-branch` which basically combine those two commands. See [git rebase docs](https://git-scm.com/docs/git-rebase).","2020-10-16 08:26:12","3969362"
"20970983","7436646","0","+1, but it when ISDIR does not exist at all you get an error message as well as your diagnostics message.","2013-02-18 05:46:52","274579"
"81797547","630475","0","Does idempotency of PUT mean we cannot have the same resource name or that objects that have the same hashes cannot exist at the same time ?","2017-11-21 07:56:01","1763367"
"81800680","477819","0","Using ""text/plain"" is a bad practice in general. There are, for instance, attacks in the web platform that would allow cross-origin data theft if you fail to send an appropriate MIME type value.","2017-11-21 09:27:46","126229"
"81801259","34839890","0","So let is hoisted, but unavailable? How is that different than 'not hoisted'?","2017-11-21 09:46:30","2004532"
"113860806","11227902","31","Incidently branch prediction failure can also be [exploited by a program to obtain crypto keys being used by another program](https://eprint.iacr.org/2006/288.pdf) on the same CPU core.","2020-10-16 02:04:41","774575"
"81803243","630475","0","@wedran idempotency means, that if someone calls PUT once or multiple times, the outcome is still the same. So an operation, where every call causes a change (e.g. a counter to increment) wouldn't be idempotent ( http://www.restapitutorial.com/lessons/idempotency.html ). I would recommend reading through all answers answers here to get a better understanding. It doesn't have anything to do with the resource name or a hash.","2017-11-21 11:02:51","756976"
"81803473","2590281","0","I'm working on a project where the id's are known to the client. So I'd like to use PUT for creation. However, a colleague disagrees with the argument that it would be confusing if the resource would get deleted while someone else does a PUT (to update as a whole), now the resource would be recreated, even though it was deleted. His point is, that in a POST, PUT, DELETE scenario PUT should return a 404 if someone wants to update a resource and it doesn't exist. Any thoughts that might help?","2017-11-21 11:15:12","756976"
"113867725","40523","0","What do you mean by the last sentence `but it is not possible to change the value of the variable aDog itself.`?","2020-10-16 06:33:44","1289801"
"97735331","53183593","6","Or, more obscurely, on one line:  `DIR=$(realpath ""$(dirname ""${BASH_SOURCE[0]}"")"")`","2019-04-04 11:55:34","6136214"
"81806934","36910139","1","@yeliabsalohcin You don't explain ""as expected"" here or ""works"" in your comment on the question. It's just some unexplained personal misconception you strangely expect others to have. If you treat words as sloppily when you are reading--misinterpreting clear writing and/or accepting unclear writing--as when you are writing here then you can expect to have misconceptions. In fact this answer like most here is unclear & wrong. ""Inner Join: Returns matched records from both tables"" is wrong when input column sets differ. It's *trying* to say a certain something, but it *isn't*. (See my answer.)","2017-11-22 02:52:49","3404097"
"81809807","671118","0","RESTful programming (rpc framework) is a popular but not best rpc framework. Http POST and json rpc framework is better than REST rpc framework. Which method should I use when I want to add a login api? GET?POST? Should I use json in POST body or should I use http query in POST body? How do i parse a REST response body? Will the server use json? Will the server use http query? REST just make things complex and not consistent. I can just use POST and json to do whatever I want.I do not want to care about GET/POST/DELETE stuff.","2017-11-22 05:55:17","1586797"
"67127005","21349740","1","I see only downside compared to using `find … -exec grep 'str' {} \;` (if you have to use `find` at all).","2016-10-07 04:14:29","2261442"
"81811143","2590281","2","HTTP says ... when a client 'puts' to a url, it is requesting that url to hold that data. It's up to the server to decide if it's happy to do that. If you want 'DELETE' to stop PUTs working... then that's fine, but can you ever have anything at that url ever again? If so, then you should probably let the subsequent PUT through... after all one of your users is trying to put content at that location for a reason. Who's to say who was more correct? :) the answer is.. ""your domain"". Do what models your domain. but PUT means ""I am trying to store this here"".","2017-11-22 06:47:53","23963"
"81821913","35022676","2","You can make it focusable by adding `tabindex=""0""` to the span. That said, using button is better because it gives you the desired functionality for free. To make it accessible using a span you not only need to attach a click handler, but a keyboard event handler that looks for presses of space bar or enter key and then fires the normal click handler. You would also want to change the second CSS selector to `.funcActuator:hover, .funcActuator:focus` so the fact that the element has focus is apparent.","2017-11-22 11:45:07","778975"
"113889647","46461041","0","Every measurement has disturbances. The computer it not in the same state and this is not the only process running on the computer.
When the difference is so small, it means that you cannot rely on it and it is virtually the same.
Try to run the sane test 10 times one after the other and you'll see that the numbers are different. Pretty close, but not the same.","2020-10-17 09:30:51","380561"
"81828953","30606474","6","This contribution demonstrates that a ""block"" can simply be a set of lines enclosed in brackets; i.e. it doesn't need to be associated with any sort of control flow, loop, etc.","2017-11-22 02:37:22","3422060"
"67154090","12725425","0","Care to name these other languages, because I know of none in .net where string != System.String.  Also, literal has nothing to do with string vs String...","2016-10-08 06:53:24","347348"
"51128609","31392914","0","Done @Ram. Also included examples.","2015-07-23 01:14:47","3697630"
"113900013","46461041","0","@RonnySherer js perf creates a virtual environment especially to account for processes with those small differences. It is not running on my computer. It runs only that. When something is so small maybe someone should not give a damn. BUT never the less I count it correctly and I report it. If someone wants to use it inside a loop with billions of iterations then he should pick the function with the best performance.","2020-10-18 01:09:33","266068"
"6293980","5305908","44","+1, Good suggestion, an empty directory does not make any sense unless it is going to be used in the future. So create a README file inside it and write what this directory is for, and what files will be put there in the future.  
That solves both two problems.","2011-04-04 12:08:16","495838"
"81833522","34839890","0","Hopefully Brian or Bergi come back to answer this. Is the declaration of let hoisted, but not the assignment? Thanks!","2017-11-22 04:18:57","2004532"
"21020028","373848","2","'git reset <commit hash> <filename>' didn't change my specific file I wanted to change.  Is there a way to checkout the version of the file, specifically, and not checkout the entire project?","2013-02-20 01:18:31","327547"
"51136828","12196466","6","Safari, as of now, still requires `-webkit` flags for flexbox (`display: -webkit-flex;` and `-webkit-align-items: center;` and `-webkit-justify-content: center;`)","2015-07-23 03:59:08","756329"
"97768474","35585468","0","@KatinkaHesselink : I don't see the MDN saying any like that. As far as I can tell, they merely left out a quirk in IE11 that others have correctly documented. See also https://stackoverflow.com/questions/2356830/what-browsers-currently-support-javascripts-let-keyword.","2019-04-05 09:49:06","1946501"
"21039873","178386","114","When you're dealing with a couple of elements and very little is going on - i.e. THE ABSURDLY VAST MAJORITY OF CASES - the time issue is a ridiculously minor concern. Oh, noes! It took 42 ms instead of 19 ms!!!","2013-02-20 02:56:49","467380"
"21042690","2389423","0","I think if it is a FF merge you would probably be best off with something like:
git reset --keep master@{1}","2013-02-20 04:05:58","1062131"
"21048262","6866485","45","BEWARE! This might not do what you expect if your erroneous commit was a (fast-forward) merge! If your head is on a merge commit (ex: merged branch feature into master), `git reset --hard~1` will point the master branch to the last commit inside the feature branch. In this case the specific commit ID should be used instead of the relative command.","2013-02-20 06:46:35","655582"
"113914255","5445161","0","Shouldn't we close the scanner before returning the value?","2020-10-19 06:13:18","4425158"
"97780075","9180445","0","This works great if you want to reply the commits ontop of a existing branch instead of creating a new one with the misplaced commits on. A situation I've sometimes gotten myself into when working on many features in parallel.","2019-04-05 03:06:08","274752"
"113917044","64423113","4","question is about Pulling, not Pushing.","2020-10-19 08:16:44","2125110"
"51162987","14521765","6","BTW, this is written in [documentation](http://git-scm.com/docs/git-clean) : Git will refuse to delete directories with .git sub directory or file unless a second -f is given. But thanks anyway!","2015-07-24 09:03:05","3364871"
"113926938","122704","0","@GabrielHautclocq what's the solution in this case?","2020-10-19 02:12:35","2392106"
"113927452","927358","1","To do something simple in git either do Impossibly Hard Task A or Impossibly Hard Task B. Then mess it up slightly and try and revert by doing Impossibly Hard Task C or Impossibly Hard Task D.","2020-10-19 02:27:30","343204"
"113928703","50937561","0","TypeError: Cannot read property 'constructor' of undefined","2020-10-19 03:08:04","2392106"
"113934028","1145525","15","I discourage from using replaceAll at this moment (2020). It is not supported by some browsers that had updates in this year https://caniuse.com/?search=replaceAll It is too early","2020-10-19 06:31:11","38940"
"113938181","470376","1","@JDM there's no ambiguity since `bool` is actually a subclass of `int`.  And I'd argue that this answer and your variant of it are *both* ugly.","2020-10-19 10:02:12","5987"
"113942164","39848137","0","You know, you're basically replacing Null, with your own version of Null, then saying use this version of Null, so you don't have to use the other one that came with the language  :)","2020-10-20 03:09:44","3152516"
"113943990","5190323","0","@LosManos I just found that we can use the command in powershell.
git merge --squash 'HEAD@{1}'
just put HEAD@{1} inside ' ' to make it work.","2020-10-20 05:36:30","9822763"
"21076580","6866485","1","Upon further thought this behaviour nay have been a result of merging the master branch into the feature branch first, testing and then (fast-forward) merging the feature branch into the master.","2013-02-21 02:05:28","655582"
"81884007","34839890","0","It's interesting it is even called hoisting when it comes to let. I get that technically the parsing engine is pre-capturing it, but for all intents and purposes a programmer should treat it as if it doesn't exist. The hoisting of var on the other hand has implications to a programmer.","2017-11-23 11:49:43","2004532"
"113953468","40480","2","I want to note that you do not have to think about this in most cases. I programmed java for many years until i learned c++. Until this point in time i had no clue what pass-by-reference and pass-by-value are. The intuitive solution always worked for me, which is why java is one of the best languages for beginners. So if you currently are worried, if your function needs a reference or a value, just pass it as it is and you will be fine.","2020-10-20 11:44:50","11670196"
"113959918","62778080","0","It's not the answer to the question, but it helped me and saved my time. This email-validator package seem to help round about half a million other (downloads) per week. So worth to mention and deserves some upvotes.","2020-10-20 03:02:32","2828026"
"113960535","61896436","3","A valuable complement, but I disagree: `option_value or 10` is *not* better than `option_value if option_value is not None else 10`. It is shorter, indeed, but looks weird to me and may lead to bugs. What happens if `option_value = 0`, for instance? The first snippet will run `run_algorithm(0)` because `option_value` is not `None`. The second and third snippets, however, will run `run_algorithm(10)` because `0` is a falsy. The two snippets are not equivalent, and hence one is not better than the other. And explicit is better than implicit.","2020-10-20 03:21:40","5811400"
"113966837","40480","18","Java pass the reference by value.","2020-10-20 07:05:56","287316"
"35687717","348170","4","I made a little summery which shows all ways to unstage a file: http://stackoverflow.com/questions/6919121/why-are-there-2-ways-to-unstage-a-file-in-git/16044987#16044987","2014-04-26 12:09:03","1353930"
"51198969","176279","4","Square brackets are not valid in either URIs or URLs.  See this question which has many references to the specs: [Are square brackets permitted in URLs?](http://stackoverflow.com/questions/40568/are-square-brackets-permitted-in-urls).    When square brackets appear in either, they should be encoded.","2015-07-25 10:44:12","1145388"
"97809884","54094030","6","Beware, if `""stringToRemoveFromArray""` is not located your in array, this will remove last element of array.","2019-04-06 11:35:39","4322159"
"21084878","927386","147","zsh users might get: `zsh: no matches found: HEAD^` - you need to escape ^ i.e. `git reset --soft HEAD\^`","2013-02-21 05:47:56","166128"
"35697703","22560766","0","This must be why Netbeans auto-completion has no idea what I am talking about!","2014-04-26 08:16:19","472495"
"113991961","46461041","0","The virtual environment is on a server which might do some other stuff. I did some tests. The results are never exactly the same.","2020-10-21 02:54:40","380561"
"21096142","487258","3","It allows us to compare the efficiency of our solution to other solutions. Simple time tests will not work, because of external variables (e.g. hardware and problem size (e.g. How many items we are trying to sort)). Big-O allows us to standardize the comparisons.","2013-02-22 01:11:22","1190934"
"6372815","2798934","23","I've done this and some local files that were no longer in repo were left on the disk.","2011-04-08 04:00:57","80421"
"114012285","46461041","0","This site was built only for doing this one thing, so its safe to assume that they did their job. Anyway, SO users can assume anything. I am just reporting the results.","2020-10-22 08:14:52","266068"
"51228236","72156","1","@uDaY by ""hiding"" he meant that `git branch` does not show remote branches by default, so you need to use `git branch -a` to show all branches.","2015-07-26 07:05:32","134344"
"97830582","67699","1","Now that it's been a while since I learned more about git, I realized my confusion then stemmed from the name ""remote branches"" and ""remote tracking branches."" Git stores stuff in a tree. Branches (be it remote, remote tracking, or local) are ""labels"" to the tree. When cloning, everything in the tree gets cloned. And every `origin/XXXX` (remote branches) are labeled. (They are really local labels you keep). A local master branch usually is made to be a ""remote-tracking branch"" (Notice the dash I added to clarify.) But you can create other local branches which bear the tracking ability.","2019-04-08 02:46:28","133747"
"97830676","67699","1","So, branches are labels. There are really all local to you. A ""remote branch"" (origin/XXX) is a local label to match the remote (as latest as you've known since the last fetch). A ""local branch"" is a local label. And a local branch can have the ability to ""track"" and becomes a ""remote-tracking"" branch. The ability to track really just means you save a few keystroke, no need to specify which remote branch you're pulling or pushing. That's it. No more, no less. And when you clone, tree gets cloned, and the local `origin/xxx` are labeled.","2019-04-08 02:56:16","133747"
"67241757","33067594","3","It feels more like an opinion and shouldn't be framed as a generally accepted approach. And ^0.1.x gets patches perfectly fine.","2016-10-11 04:01:45","552840"
"114022487","61896436","0","@ruancomelli: Good point. I've modified the answer to reflect that correction.","2020-10-22 02:04:43","3358488"
"114022542","61896436","4","As for it looking weird, I wonder if it looked weird to you because you noticed the imprecision (that it was not really equivalent). To me it sounds natural because it reminds me saying in English: ""Use this or that (if the first option is unavailable)"". But of course that is subjective. It is useful to know it does not look natural to everybody.","2020-10-22 02:06:23","3358488"
"67248499","79988","0","If your language doesn't implement garbage collection, Smart pointers (Seporately allocated objects that wrap around a pointer which do reference counting for dynamically allocated chunks of memory) are closely related to garbage collection and are a decent way of managing the heap in a safe and leak free manner.  They are implemented in various frameworks, but are also not that tough to implement for your own programs as well.","2016-10-11 07:10:40","2129481"
"35732980","1984225","5","_..a Uniform Resource Locator (URL).. specifies where an identified resource is available **and the mechanism for retrieving it**._ So in other words, there is no such thing as a ""relative"" URL?","2014-04-28 07:51:38","565153"
"67250457","27394089","5","This is actually a prime example of when NOT to use `xargs` like that .. consider this.  ```echo ""file bar.txt has bar"" > bar.txt; echo ""file foo bar.txt has foo bar"" > ""foo bar.txt""; echo ""You should never see this foo"" > foo; find . -name ""*.txt"" | xargs grep -i foo # 
./foo:You should never see this foo``` . The `xargs` here matched the WRONG file and did NOT match the intended file.  Either use a `find .. -print0 | xargs -0 ...` but that's a useless use of a pipe or better `find ... -exec grep ... {} +`","2016-10-11 08:10:13","742600"
"67250783","21349740","1","This would break horribly if any of the files found by `find` contained spaces .. you could end up `grepping` the wrong files and/or missing the right files altogether.  Just use `find ... -exec grep ...` if you have a need to use `find` .. but in this case a `grep -r ...` suffices.","2016-10-11 08:19:36","742600"
"97845110","927358","22","For VsCode users , just type ctrl +shift +G and then click on three dot ,ie , more options and then click on undo Last Commit","2019-04-08 12:15:40","9717508"
"114042952","6472397","0","Oh nice, I was that close to make an edit to remove the what I thought to be the extra space in the beginning. Nice job, +1","2020-10-23 07:34:08","5675325"
"114074059","4591639","0","*functions* and **dates** as well","2020-10-24 12:54:51","104380"
"114074247","33419329","0","Not quite a 100% clone","2020-10-24 01:07:56","104380"
"114074339","46759423","0","Tour `test` object is **too naive**. it must have some `undefined`, functions, dates and `null` and not just a bunch of strings","2020-10-24 01:13:24","104380"
"114074371","56336059","0","Far from ""best"". maybe for simple objects.","2020-10-24 01:15:25","104380"
"114074438","40326630","0","fails completely with a simple test of `[1,2]`","2020-10-24 01:19:00","104380"
"114077045","5767325","2","array.remove(index) or array.pull(index) would make a lot of sense. splice is very useful, but a remove() or pull() method would be welcome... Search the internet, you will find a lot of ""What is the opposite of push() in JavaScript?"" questions. Would be great if the answare could be as simples as plain english: Pull!","2020-10-24 03:51:29","1693189"
"114083264","122704","0","@GabrielHautclocq You have just discovered what a ""shallow copy"" means. ""@medBouzid"" The solution is to ""deep copy"" the object, instead of shallow copying.","2020-10-24 10:37:46","3395831"
"114087564","122704","0","I was just demonstrating by example that you cannot use Object.assign for deep cloning an object.","2020-10-25 07:47:58","1076652"
"114095475","2919360","1","Use: `return 3 if t > 10 else t/2`","2020-10-25 04:41:01","774575"
"114095743","394809","1","@KaanE. and most of all being copy-paste of each other with different comments. So the value is in the comments... Anyway as of 2020 the comprehensive answer is in the ['Ternary Operators'](https://book.pythontips.com/en/latest/ternary_operators.html) documentation: ""*Ternary operators are more commonly known as conditional expressions [...] they became a part of Python in version 2.4.*""","2020-10-25 04:53:50","774575"
"51245181","161813","0","Don't forget that you can mitigate most merge conflicts by regularly merging downstream!","2015-07-27 09:50:33","1043198"
"51252184","30479554","65","That is actually cool. I would expect ""i"" to be defined outside the loop body contains within brackets and to NOT form a ""closure"" around ""i"".Of course your example proves otherwise. I think it is a bit confusing from the syntax point of view but this scenario is so common it makes sense to support it in that way. Many thanks for bringing this up.","2015-07-27 12:49:33","51765"
"35752810","4448825","0","`String.prototype.capitalize = function(){ return this.replace(
/(^|\s)[a-z]/g , function(m){
 return m.toUpperCase();
 });
};`

I refactor your code a bit, you need only a first match.","2014-04-28 04:29:38","1926221"
"81940883","34329128","0","@Rizier123 : What does mean by ""Heredocs can not be used for initializing class properties. Since PHP 5.3, this limitation is valid only for heredocs containing variables.""?","2017-11-26 03:48:16","2839497"
"51274009","21890252","0","is there a way to squash all the commits for that branch instead of last X commits?","2015-07-27 11:07:17","2785428"
"114129818","336868","0","Function definitions are executed when code enters the surrounding block, rather than when it enters the enclosing function.  I don't know if things always worked that way, but it would be unavoidable if a block used `let` or `const` to define a variable that was closed over by a function within it, and applying that rule consistently is probably better than applying it only when unavoidable.","2020-10-26 09:37:35","363751"
"114136322","64420270","0","Welcome to Stack Overflow.
If you decide to answer an older question that has well established and
correct answers, adding a new answer late in the day may not get you any
credit.
If you have some distinctive new information, or you're convinced the
other answers are all wrong, by all means add a new answer, but 'yet
another answer' giving the same basic information a long time after the
question was asked usually won't earn you much credit.","2020-10-27 05:48:34","15168"
"97899150","54506767","3","This answer also assumes that no code (other than definitions without side effects) take place before the `if __name__ == ""__main__""` block. Technically the top of the script executed is the entry point of the program.","2019-04-09 09:35:39","2275559"
"114147904","8888015","0","Note that the master branch is now called main branch by default so pay attention copy-pasters, as these command may not work any more.","2020-10-27 01:21:45","10626396"
"35774046","373834","5","@Bombe - ""Git never removes anything. Your old commits are still there but unless there is a branch tip pointing at them they are not reachable anymore."" - but commits like this are pruned after some set time, so ""Git never removes anything"" is untrue.","2014-04-29 07:07:42","882906"
"114157678","40523","46","To me, saying that an object's reference is passed by value is the same as saying that the object is passed by reference.  I'm a Java novice, but I presume that (in contrast) *primitive data* is pass by value.","2020-10-27 06:46:01","3230708"
"35787454","215731","12","@shadowhand: Is there a way to reverse that, so it's the version right after?","2014-04-29 12:57:17","2736496"
"35794125","246128","5","Why not use the following command? `DIR=$(dirname -- ""$(readlink -f -- ""${BASH_SOURCE[0]}"")"")`","2014-04-29 03:18:51","52499"
"35795780","14423956","2","There are some serious limitations to flat-surface-visual-scan performance. If there are a lot of relatively unique pairs (no plain white socks here), you quickly exceed the visual scan capability of the human brain. Requiring more brain attention for matching means you can't watch TV while you pair your socks. Someone else mentioned the practical problem of finding a large enough flat surface. Finally, as the area of the surface increases, you start having problems with distance and visual angle when viewing socks closer to the horizon, and physically traversing your sort area.","2014-04-29 03:55:17","5114"
"35800585","215731","17","@aliteralmind: No, unfortunately the Git history shortcut notation only goes backwards in history.","2014-04-29 06:02:22","893"
"97941692","7734259","0","Wow, this is much simple then doing command lines which you don't understood. **This is definitely recommended for a beginner like me.** Thanks for writing this up!","2019-04-11 04:27:43","7494877"
"114163870","40643616","0","Unfortunately that HTML Imports link says that the feature was deprecated and removed from Chrome - https://www.chromestatus.com/feature/5144752345317376","2020-10-27 11:41:40","63069"
"51312028","21890252","0","@MohamedElMahallawy What would that even mean? All commits to branch X, since it diverged from branch Y? You'd still need to enter the name of branch Y. For me, it's simpler to just count the number of commits.","2015-07-28 07:15:04","1580288"
"51312364","2386013","1","It's worth noting that TYPE_USE annotations (since Java 8) let you treat null annotations as an integral part of the type system, including in particular generics. This means that conceptually **all contract violations can be detected by the compiler**. Eclipse supports this since Java 8 was released, see http://help.eclipse.org/topic/org.eclipse.jdt.doc.user/tasks/task-using_null_type_annotations.htm","2015-07-28 07:25:03","4611488"
"114164325","54986702","0","This is a wonderful solution and very well explained. Bravo and thank you.","2020-10-28 12:17:03","63069"
"35809050","14364249","6","@CharlesL. An exception is probably cheaper than the disk IO of the check, if your reason is performance.","2014-04-29 10:39:07","1394393"
"35809094","5032238","27","@HeikkiToivonen Technically speaking, if another program is modifying the directories and files at the same time your program is, your entire program is one giant race condition. What's to stop another program from just deleting this directory after the code creates it and before you actually put files in it?","2014-04-29 10:41:14","1394393"
"51316154","79936","0","_•You would use the heap if you don't know exactly how much data you will need at runtime or if you need to allocate a lot of data_ . Also to Control the lifetime of an object","2015-07-28 09:13:30","2365568"
"97956869","52719","0","@WojtekOwczarczyk So after using `stash save --keep-index --include-untracked`: How would you restore the changes if you realise that cleaning up was a mistake?","2019-04-11 12:50:17","5306400"
"114178008","630453","0","The idempotency is important.  But, to be idempotent, you must have a unique key (or set of keys).  If the unique key is specified in a POST call twice, the second should generate an error.  In a PUT call, it should create/update/replace the resource.   It is possible to have a POST call and not provide a unique key (it just creates a new resource each time).  However, it is not possible to do PUT call without a key.","2020-10-28 12:51:29","4811918"
"81995624","215731","0","The command above worked for me. However, auto-complete suggested a capitalized version of the file, and that produced ""FILE1/TO/RESTORE did not match any file(s) known to git."" Cases need to match what git has in the repository.","2017-11-27 08:56:53","277649"
"114189265","3406317","0","please don't override builtins https://developers.google.com/web/updates/2018/03/smooshgate","2020-10-28 07:05:58","8784402"
"114190254","61896436","2","Much better! And thanks for the explanation regarding the ""or""-idiom. It looks weird to me because I tend to think of `or` as a function mapping two arguments to a boolean, so I expect it to return either `True` or `False` (this happens in many other programming languages). But ""use this or that"" is a nice mnemonic and will definitely help me (and hopefully others) to remember this pattern.","2020-10-28 07:44:20","5811400"
"35813544","14415881","2","You can save memory by immediately stuffing the pile from the basket to the drawer instead of spreading them out on a surface (to find matching pairs). Just look for a matching pair from the drawer when you need it.","2014-04-30 03:13:19","1164937"
"82011279","43365551","2","excellent. the checkout does in one command what the most popular one does in two. can also be followed up with `git clean -fd` to clean files not in the index.","2017-11-28 09:03:36","200987"
"82014153","16956844","0","How can I modify this command to look only in specific file types, e.g. in `.py` and `.txt` files?","2017-11-28 10:13:23","1534017"
"82017964","16956844","2","@Cleb see [grep, but only certain file extensions](https://stackoverflow.com/q/12516937/1983854)","2017-11-28 11:46:40","1983854"
"6443962","927386","541","If you're working in DOS, instead of `git reset --soft HEAD^` you'll need to use `git reset --soft HEAD~1`.  The ^ is a continuation character in DOS so it won't work properly.  Also, `--soft` is the default, so you can omit it if you like and just say `git reset HEAD~1`.","2011-04-13 02:15:10","5486"
"114204633","122704","0","`Object.assign()` is indeed useless if your object to copy contains arrays in it, especially arrays of objects. Just found that out the hard way...","2020-10-29 09:56:03","4037019"
"82030597","36393773","16","""Docker is just a fancy way to run a process, not a virtual machine."" this is a great summary, thanks!","2017-11-28 04:54:34","1568042"
"67326550","80113","11","@Anarelle the processor runs instructions with or without an os.  An example close to my heart is the SNES, which had no API calls, no OS as we know it today - but it had a stack.  Allocating on a stack is addition and subtraction on these systems and that is fine for variables destroyed when they are popped by returning from the function that created them, but constrast that to, say, a constructor, of which the result can't just be thrown away.  For that we need the heap, which is not tied to call and return.  Most OS have APIs a heap, no reason to do it on your own","2016-10-13 03:06:55","929845"
"97993261","39858","2","[Works fine in Python 3 and PyPy and PyPy 3](http://s.webcore.io/7f2e276d9614/dict-merge.svg), can't speak to Jython or Iron. Given this pattern is [explicitly documented](https://docs.python.org/3.7/library/stdtypes.html?highlight=dict#mapping-types-dict) (see the third constructor form in this documentation) I'd argue it's not an ""implementation detail"" but intentional feature use.","2019-04-12 01:10:50","211827"
"114227872","40938883","0","also, mind that list of strings will be flattened to a list of characters","2020-10-30 02:05:13","3844376"
"114230160","52301527","1","This isn't removing the property, it's creating a shallow copy and not copying across the specified key and value. That's a very big difference.","2020-10-30 05:40:34","257182"
"6465613","2691891","2","Yes. In fact, AtomPub protocol defies this (or more accurately, restricts its semantic meaning of PUT): ""PUT is used to edit a known Resource. It is not used for Resource creation."" Just because AtomPub protocol says so (which is valid by the way) doesn't mean all RESTful protocols must follow it. (because REST is generic)","2011-04-14 04:04:01","122441"
"97997430","12791414","0","I had 'bad' tag name created on remote server somehow, which had special characters, so I can't sync with that, so simply removed that with your suggestion:   git push --delete origin ""service--<default>--151""        , can't remove it not with intellij, not with stash, not with sourceTree. Thanks !","2019-04-12 02:54:16","1051462"
"114235005","309424","0","Remember that you need to take the encoding of the input stream in consideration.  The system default is not necessarily always the one you wan.t","2020-10-30 09:52:23","53897"
"82037935","19970416","0","This is very misleading.  You certainly _can_ change the value of an argument from within a method.","2017-11-28 08:33:54","179850"
"35840825","22529246","0","Removes last item if searched item not found","2014-04-30 05:05:56","623700"
"35850793","14415881","11","I am sure someone has already posted this, but you are inferring from the incorrect assumption that there is a pair for each sock. I mean - come on, do you really think that each sock that you are laundering has a matching one...","2014-04-30 10:33:42","1182899"
"114256860","1274447","0","Even when it's added to git ignore? It will be removed from other developers on the next pull?","2020-10-31 05:36:09","6842763"
"82051033","7923161","1","...and safer to use :O","2017-11-29 07:31:21","4037019"
"21245808","3104376","19","@MiniGod I have already heard Doug's thoughts on this topic many times. I addressed them long ago in my blog post: http://blog.getify.com/json-comments/","2013-02-26 11:21:25","228852"
"82065817","470376","3","This trick may help avoid timing based attacks on algorithms if it always evaluates both possible results and avoids skipping code (an 'if' skips).","2017-11-29 01:59:33","818065"
"35875672","22529246","1","yes correct, you should know which element you want to remove like in the other examples.","2014-05-01 05:00:06","626762"
"82076110","18994918","0","@TomMyddeltyn: [As of Python 3.3, `os.replace`](https://docs.python.org/3/library/os.html#os.replace) portably performs silent replacement of the destination file (it's identical to `os.rename`'s Linux behavior) (it only errors if the destination name exists and is a directory). So you're stuck on 2.x, but Py3 users have had a good option for several years now.","2017-11-29 06:14:56","364696"
"82076178","18994918","0","On the `rename` example: It should still be done with `try`/`except`. `os.rename` (or `os.replace` on modern Python) is atomic; making it check then rename introduces an unnecessary race and additional system calls. Just do `try: os.replace(filepath, filepath + '.old') except OSError: pass`","2017-11-29 06:17:31","364696"
"82076526","44661513","3","@CristiFati: As of 3.6, [`glob.iglob` (and `glob.glob` as well) are based on `os.scandir`](https://docs.python.org/3/whatsnew/3.6.html#optimizations), so it's lazy now; to get the first hit in a directory of 10M files, you only scan until you reach the first hit. And even pre-3.6, if you use `glob` methods w/o any wildcards, the function is smart: It knows you can only have one hit, so [it simplifies the globbing to just `os.path.isdir` or `os.path.lexists`](https://github.com/python/cpython/blob/3ae41554c69b807659fab815ad5675bed5ae237/Lib/glob.py#L41) (depending on whether path ends in `/`).","2017-11-29 06:29:02","364696"
"82076809","44661513","3","That second part of my comment (non-wildcarded globbing doesn't actually iterate the folder, and never has) does mean it's a perfectly efficient solution to the problem (slower than directly calling `os.path.isdir` or `os.path.lexist` since it's a bunch of Python level function calls and string operations before it decides the efficient path is viable, but no additional system call or I/O work, which is orders of magnitude slower).","2017-11-29 06:38:49","364696"
"114267336","64624489","12","`await` doesn't return a promise. It ""unwraps"" a promise and evaluates to that value ""in"" the promise. If what you said where true, why would the second `await` extract the value but the first `await` wouldn't? If you use just one `await` you get the exact same result.","2020-10-31 06:34:54","218196"
"98018497","53763656","5","thanks bro and i was about to do that scary stuff correct answer. lucky i scrolled down. i just want to delete merge head","2019-04-13 01:22:26","11059898"
"21256957","10563611","4","@dubiousjim: Actually, this is in the manual. git-checkout(1) says: ""If <branch> is not found but there does exist a tracking branch in exactly one remote (call it <remote>) with a matching name, treat as equivalent to 'git checkout -b <branch> --track <remote>/<branch>' "" (Git V.1.8.1.1).","2013-02-27 09:01:33","43681"
"35885551","7589612","8","The diff3 option is a great feature to have with merges. The only GUI I've come across that shows it is Perforce's `p4merge`, which can be installed and used separately from Perforce's other tools (which I've not used, but heard complaints about).","2014-05-01 10:15:41","303896"
"82092307","30138655","2","I also find extended globbing useful. But keep in mind that if there are really huge number of files, you can get a ""Argument list too long"" error. (Simple globbing is also prone to this kind of error).","2017-11-30 06:47:02","8868289"
"114282119","40499","0","JVMS 2.2 makes this pretty clear: There are ... two kinds of values that can be stored in variables, passed as arguments, returned by methods, and operated upon: _primitive values_ and _reference values_.""  Object references are values.  Everything is passed by value.","2020-11-01 03:52:57","3553087"
"21265726","417142","23","From http://support.microsoft.com/kb/208427 ""Maximum URL length is **2,083** characters in Internet Explorer""","2013-02-27 01:17:14","173149"
"114285208","60912261","3","Please add relevant information ..your comments are confusing","2020-11-01 06:39:33","1926632"
"35893349","14415881","4","The optimum solution to the sock pairing problem is to put them into the laundry *as a pair*. This reduces sort time to *zero* and resolves the single sock problem.","2014-05-02 06:12:27","540026"
"6518655","40483","0","It will *attempt* to detect concurrent modification and throw an exception.  But if you're doing anything with threads, it can't make any promises.  Absolutely anything can happen, including [breakage](http://lightbody.net/blog/2005/07/hashmapget_can_cause_an_infini.html).","2011-04-18 02:03:08","319403"
"21274838","2866221","22","including jQuery for such a basic task is not what I would call the right answer. It's true that nowadays jQuery is almost ubiquous, but still we shouldn't forget it is built around a very capable language itself.","2013-02-27 05:04:56","1231428"
"67381091","31836086","6","@JohnY Using GitHub will always create an extra commit.  You need to do all this in a shell on a local repo to avoid that extra commit.","2016-10-14 09:51:35","1117929"
"98056959","20241145","5","So this is only done locally, while `git rm --cached` will delete it upon pull for others. What if one simply wants to ignore future changes to the file, both on your machine and others (that already have the file), and not have it auto-deleted as it currently is on any machines?","2019-04-15 10:08:09","1172409"
"35910766","8888015","0","Won't this also throw away my local commits? I want to keep my commits, and only overwrite untracked/uncommitted changes.","2014-05-02 03:15:24","214416"
"21295673","6472397","370","I love this explanation, truly. For those who read it and don't follow, the analogy is this: the princess() function is a complex scope containing private data. Outside the function, the private data can't be seen or accessed. The princess keeps the unicorns, dragons, adventures etc. in her imagination (private data) and the grown-ups can't see them for themselves. BUT the princess's imagination is captured in the closure for the `story()` function, which is the only interface the `littleGirl` instance exposes into the world of magic.","2013-02-28 07:49:20","1146608"
"114309259","6858453","6","None of these points would affect this result - it falls squarely under the third bullet point - and moreover, this is a time several decades before UTC was even defined, and thus can not really meaningfully be expressed in UTC.","2020-11-02 04:11:29","5488931"
"67399571","37220122","2","@Galvani: It should be noted that `jQuery.extend` and `angular.extend` are both shallow copies. `angular.copy` is a deep copy.","2016-10-15 06:41:00","31532"
"35932041","23277075","0","The second way needs a Prototype, I prefer the first way, even if it's not the best one on performance due to you can use with a lot of browsers and with Node JS.","2014-05-03 10:03:02","1615183"
"35938667","18792061","1","@minitech Why do you say it is redundant?","2014-05-03 03:40:46","702353"
"35941104","18792061","11","`array.indexOf(search) >= 0` is already a boolean. Just `return array.indexOf(search) >= 0`.","2014-05-03 05:38:37","707111"
"35955755","14663381","1","What is bothering about *all* answers is that it seems _ok_ for JavaScript to store the `GUID` as a `string`. Your answer at least tackles the *much* more efficient storage using a `Uint16Array`. The `toString` function should be using the binary representation in an JavaScript `object`","2014-05-04 11:03:59","281306"
"67429887","2389423","0","@MarcinGil Could you please update the answer to say that YOU WILL LOSE CODE with git reset --hard? Or make git reset --merge the top part of the answer, rather than the end? I just lost some changes. They were relatively trivial, but for the next person they might not be.","2016-10-17 04:35:52","37168"
"67434267","2389423","2","@skypecakes: well I would assume that if someone wants to do ""undo"" - one expects some changes are reverted/lost. Anyway I'm curious of the scenario how have you performed the reset if you lost changes. Only the merge commit itself should be removed, nothing more.","2016-10-17 07:30:56","5731"
"35959558","292357","59","Our alternative approach has become `git fetch; git reset --hard origin/master` as part of our workflow.  It blows away local changes, keeps you up to date with master BUT makes sure you don't just pull in new changes on top on current changes and make a mess.  We've used it for a while and it basically feels a lot safer in practice.  Just be sure to add/commit/stash any work-in-progress first !","2014-05-04 02:32:18","631619"
"67439386","122102","1","here's a performance comparison between the most common types of cloning objects: http://jsben.ch/#/t917Z","2016-10-17 09:58:47","2689455"
"67440182","19442557","7","Worked seamlessly, especially when having cloned a single branch from a remote with multiple branches.","2016-10-17 10:19:54","3110416"
"51457606","18994918","4","This answer is wrong. `os.path.exists` returns true for things that aren't files, such as directories. This gives false positives. See the other answers that recommend `os.path.isfile`.","2015-08-01 01:54:35","763269"
"51457614","26335110","9","This answer is wrong. `os.path.exists` returns true for things that aren't files, such as directories. This gives false positives. See the other answers that recommend `os.path.isfile`.","2015-08-01 01:55:01","763269"
"51457619","27581592","5","This answer is wrong. `os.path.exists` returns true for things that aren't files, such as directories. This gives false positives. See the other answers that recommend `os.path.isfile`.","2015-08-01 01:55:13","763269"
"51457641","30444116","10","This answer is wrong. `os.path.exists` returns true for things that aren't files, such as directories. This gives false positives. See the other answers that recommend `os.path.isfile`.","2015-08-01 01:56:22","763269"
"114322637","26853961","1","huh; I would have expected `x | y` to be like `{**y, **x}`, not `{**x, **y}`","2020-11-03 04:27:24","17389"
"82149616","2003515","0","@Sheldon Which git version are you using? For me (git 2.7.4) `-d` is not working for `push`.","2017-12-01 02:57:56","2095383"
"98075408","9244805","0","The link about git stash --include-untracked destroying folders that are gitignored is dead - let's find a replacement.  In the meantime, the @Waif comment about **how this answer can destroy gitignore'd folders** should be upvoted, and preferably converted into a new answer. The [GitLab issue](http://blog.icefusion.co.uk/git-stash-can-delete-ignored-files-git-stash-u/) you linked has details.  I use `git stash` a lot and was very surprised to hear it can destroy files.","2019-04-15 08:09:36","992887"
"114329702","64409378","0","Running this program should help anyone understand this concept. https://pastebin.com/VEc8NQcX","2020-11-03 10:26:55","8439576"
"51464678","522569","52","Use enumerate instead","2015-08-01 09:28:53","908293"
"82153964","2003515","0","@luator I am using 2.8.1, and my apologies, `-d` as an alias for `--delete` was added in 2.8.0, see here: https://legacy-developer.atlassian.com/blog/2016/03/whats-new-in-git-2.8/","2017-12-01 04:53:03","3359162"
"67447386","7244456","11","Instead of the rebase command, i used the following:  `git merge --no-ff upstream/master` This way your commits aren't on top anymore.","2016-10-17 01:20:14","1754625"
"35969608","11664712","4","Actually, this does not reset every file because * uses shell expansion and it ignores dotfiles (and dot-directories).","2014-05-04 11:20:01","1201863"
"35969622","18475609","3","Mind that * will usually not include dotfiles or 'dot-directories' unless you explicitly specify `.*` or `.*.prj`","2014-05-04 11:21:06","1201863"
"21324851","682343","21","git rm --cached <file> is actually the correct answer, if it is the initial import of <file> into the repository. If you're trying to unstage a change to the file, git reset is the correct answer. People saying that this answer is wrong are thinking of a different question.","2013-02-28 10:14:57","3712"
"51476676","27581592","0","@Chris Johnson , os.path.exists() function checks whether a path exists in system. PATH may be a DIRECTORY or FILE. It will work fine on both the cases. Please try with some example","2015-08-02 02:51:41","2230891"
"35981345","20263348","1","This is the only valid answer. All the others disregard the fact that the most time is spent distinguishing between similar socks (so lumping them all together by physical appearance makes it even worse).","2014-05-05 09:43:09","734860"
"67458542","30038110","0","Perhaps the details on differences of folders are obvious to many ...but also very helpful for newbies. +1","2016-10-17 06:07:09","6253165"
"114351790","6232535","0","@JonathanMoralesVélez changing the local branch is not necessary. You can push your local branch to any remote branch name like so: `git push origin local-branch-name:remote-branch-name`. Where `origin` is the name of the remote (often times actually ""origin"", `local-branch-name` is the actual name of your local branch name, and `remote-branch-name` is your desired branch name you want to push to.","2020-11-04 02:28:33","920422"
"35982184","487300","0","@HollerTrain What he means is that in a given piece of code the cost is one even if you run the loop for many items it still only costs 1. An example might be an initialization before a loop. It also means for large numbers this factor you would ignore when looking at performance. 

Similarly if you run the logic once in the loop it would cost n where n is the number of iterations of the loops or items in this analogy hence the O(n). 

Nested loops scale much higher and are much more costly. If you run a loop once for each item and a nested one again for each item it would be n^2","2014-05-05 10:05:39","1966525"
"67463668","21057032","3","Can you explain the -u on the stash?  I do not follow how that works differently from git stash save.  I tried this and it worked.  Looked on git docs and could not find it there either.","2016-10-17 08:52:27","4184670"
"67464522","2389423","0","@MarcinGil The code I lost was (in my mind) not related to the undo. It was a set of modified files whose changes had never been committed. Changes I'd been sitting on for a month or so; not needed yet, but possibly useful in the future. After the git reset, those changes disappeared. None of those changed files were involved in the merge (or I'd have gotten errors during the merge operation). I'd been moving between branches all this time leaving those changes uncommitted, and git never seemed to care, so it surprised me that suddenly it removed them.","2016-10-17 09:22:40","37168"
"98108709","6428779","0","Thanks for the example.  Why did you find this easier than inheriting from MyBase, whose `__init__(self)` says `type(self)._order = MyBase.counter; MyBase.counter += 1` ?","2019-04-16 05:59:34","4105"
"67475927","2389423","0","@skypecakes Sorry for your lost code but sitting for a month on an changed and uncommitted code (even locally, not pushed) is for me truly unbelievable. I would strongly advise to read the Git Book if you haven't been even expecting what reset could do. Anyway sure, I can add a warning.","2016-10-18 07:26:34","5731"
"98108978","6428779","4","I wanted the classes themselves, not their instances, to be numbered.","2019-04-16 06:09:39","416467"
"67478234","67458","2","Ha. Spaces are just characters that have no glyphs usually. Anyway, you can escape them with a backslash.","2016-10-18 08:27:43","1722462"
"21358026","5091882","9","This is dangerous. Also misses lines like `good_stuff #comment_stuff`","2013-03-01 07:54:47","1315009"
"67479296","21057032","10","`-u` is equivalent to `--include-untracked`. You can find a help with `git help stash`.","2016-10-18 08:55:14","338986"
"67479774","52713","0","Suppose I made changes in file A (state1), and the file has been modified at Master (state2). If I do git checkout A, to which state will it point now, the previous state1, or updated state2..??","2016-10-18 09:08:32","2045807"
"36007110","406243","25","Tip: for progressively filtering out what you don't want: grep -v ""hede"" | grep -v ""hihi"" | ...etc.","2014-05-05 10:08:19","96855"
"36009840","11974631","12","This is a JavaScript question.","2014-05-06 12:54:05","519702"
"98118226","46107537","1","@LightCC This is not different than pulling from a previously added remote at all, except for the fact that you haven't added a [remote](https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes). So the disadvantage is that you'll have to enter the full repository URL everytime you want to `pull`.","2019-04-17 02:34:46","3258851"
"51509694","15818776","13","This answer is wrong. `os.path.exists` returns true for things that aren't files, such as directories. This gives false positives. See the other answers that recommend `os.path.isfile`.","2015-08-03 03:10:58","763269"
"98123488","11828270","6","@TomKelly Thanks a lot it helped me but it's actually `git config --global core.editor ""nano""` with a space, not a `=` sign","2019-04-17 07:29:00","1203116"
"36021793","6217372","2","To be confident that this revert has worked, you can do **git diff hash1 hash2** where hash1 is the committed revert, and hash2 is the old commit whose state you were trying to get back to. No output == success!

I was able to roll back multiple commits by doing this multiple times, starting by reverting the most recent merge and working backwards. **git diff** showed me that I ended up in the state I wanted.","2014-05-06 09:41:10","1780008"
"114385886","114549","0","display: flex; justify-content: center; this work perfect","2020-11-05 07:57:45","9331989"
"114386996","39067220","0","something simple as `print a || '<alt text>'` in ruby is pita in python `print a if a is not None else 'alt text'`","2020-11-05 08:44:21","3276830"
"67510769","2389423","0","@MarcinGil Thanks for adding that warning! I wasn't looking for an apology; like I said, it's no big deal for me. But for someone else it might be. And thanks for the suggestion, I will read the Git Book when I get a chance.","2016-10-18 11:45:12","37168"
"51572544","487300","0","Aren't the log numbers wrong? For example Log(1000) is 3","2015-08-05 05:54:17","129001"
"98151100","6428779","0","Right, duh. Thanks. My code would reset MyType's attribute on every instantiation, and would never set the attribute if an instance of MyType was never created.  Oops.  (And a class property could also work, but unlike the metaclass it offers no obvious place to store the counter.)","2019-04-17 09:58:00","4105"
"51582052","31826592","2","`This property allows you to specify a fill color for text. If it is not set, then the color property will be used to do the fill.` It sounds to me like you've got some other CSS rule that is setting the `color` property.","2015-08-05 10:25:49","160173"
"36045278","11974631","15","@Cobby - And this is a coffeescript answer.","2014-05-06 07:29:08","298758"
"98152196","630475","0","for PUT instead of create I prefer to say 'associate or modifiy the existing' it is much accurate","2019-04-17 11:15:36","1438644"
"98152408","5201642","2","I accidentally did `git reset --soft HEAD~3` twice. Be aware that they stack.","2019-04-17 11:34:14","2065702"
"67558098","682343","2","If the files have not yet in index, use `git rm --cache <filename>`, if the files already in index, but you don't want them to be in this commit, use `git reset <filename>`","2016-10-20 01:46:10","350580"
"114422205","1274447","0","It's important to RUN that COMMAND from your GIT ROOT DIRECTORY","2020-11-06 11:45:47","5094759"
"21414267","38578","3","yes great and excellent explanation. but why in column b the values are not in order? i.e it is 6,5 not as 5,6?","2013-03-04 08:39:36","2015204"
"114425827","21963136","9","Can I just say -- I cannot count how many times I've pointed devs to this answer because it so beautifully points out the tradeoffs between performance, code-elegance, and readability. Thank you Jeff.","2020-11-06 02:07:36","2186159"
"67570051","20267852","1","Some object unmarshallers (e.g. Jackson, under some configurations) throw exceptions on unknown fields.","2016-10-20 09:28:01","7512"
"36056243","5904539","0","This was what ultimately worked for me as I had force pushed my branch to the origin repo and kept getting merge conflicts when trying to pull it to my remote repo..","2014-05-07 05:16:17","745707"
"114433966","64718802","0","While this code may answer the question, providing additional context regarding why and/or how this code answers the question improves its long-term value. Consider reading [answer] and [edit] your answer to improve it.","2020-11-06 07:31:40","4284627"
"51593359","10375211","1","How can the above comment have 4 upvotes? Yes, `Object.keys` is a standard method but objects do not have a keys property. So this code will report any object as empty except it accidentally happens to have a property named `key` with a value which again as a property named `length` which is not zero. Horrible!","2015-08-05 02:45:24","471478"
"51593566","23853061","1","@RenniePet If you follow [these steps (mainly step 3)](http://2buntu.com/articles/1459/keeping-your-forked-repo-synced-with-the-upstream-source/) you can end up you can end up with __This branch is even with <parent>:master.__","2015-08-05 02:50:12","3024116"
"6640958","115992","75","Below answer is MUCH better. The fact that git the low level software doesn't allow it doesn't matter to me as much as HOW to actually use Git when I need an empty directory.  Adding a 2 line .gitignore seems acceptable to me.","2011-04-26 03:21:50","234125"
"67585716","671258","2","@Andy: A **client** stops being RESTful when you put a hardcoded URL in it. In particular, the RESTful service may decide to renumber users on a whim which breaks that non-RESTful client. The service stops being RESTful when there's no way to discover `/user/123/` from a documented entry point, which indeed means all clients have to hardcode that URL.","2016-10-20 03:19:21","15416"
"67586635","4999483","0","Bad form? Perhaps. But if you _need_ to do something the authors didn't expect anyone would ever need to do, then sometimes messing with the internals is required.  But you do have to be willing to accept the consequences if you get it wrong.  `Backup your local repository _before_ messing with git internals.`","2016-10-20 03:41:55","1456887"
"67592334","10757800","9","I believe that would be `git cherry-pick <<erroneous-commit-sha>>` @astronomerdave. From, Mr. Almost-2-Years-Late-to-the-Party.","2016-10-20 06:19:50","1803879"
"67592799","406260","1","What alternative is there? Ive never encountered anything that could do precise string matching besides regex. If OP is using a programming language, there may be other tools available, but if he/she is using not writing code, there probably isnt any other choice.","2016-10-20 06:32:10","3373283"
"82224374","45244453","0","you confused with the `Phone with low screen resolution` to the appropriate image","2017-12-04 12:30:52","859154"
"98173392","6581949","1","Dynamically creating methods is a bit more tricky than the text illustrates. While it works here it fails to account for cases where we refer to the `self` object. For example the method `def foo(self, *args, **kwargs): print(self, args, kwargs)` will do different things if created dynamically or as part of the class definition. The right way to create it dynamically is to execute the body in a namespace then attach it (see *Python Essential Reference 4th Edition, David Beazly p.138*).","2019-04-18 02:32:06","750670"
"67605981","26744616","0","yes I solved with `git push --force-with-lease` when the branch is mine. I don't have to take care about the history :)","2016-10-21 05:26:09","1823525"
"36078652","14415881","1","@amit you wrote using your naive technique you were doing *This requires iterating over n/2 * n/4 = n2/8 socks on average.*. What is the reasoning for this? How are the terms n/2 and n/4 appearing?","2014-05-07 03:02:45","1527084"
"36079646","11664712","0","You can run `git status` to see anything remaining and reset it manually i.e. `git reset file`.","2014-05-07 03:23:55","577878"
"36080310","14415881","1","@Geek You need to pair n/2 socks (this is where n/2 came from). by taking one sock, and finding its match. On average, you need to go through half of the left socks. At the first iteration this number is n/2, at second, (n/2)/2, ... the average of n/2,(n-2)/2,(n-4)/2,...,2/2 is n/4.","2014-05-07 03:38:12","572670"
"36083200","16317405","3","You could also use `title` as the attribute.","2014-05-07 04:50:34","3210837"
"114446892","5190323","0","I get ""Your branch is behind 'origin/master' by .. commits, and can be fast-forwarded"". I then do commit or pull or merge (--ff-only) and get the same commit history as before..","2020-11-07 01:30:19","1705829"
"114447114","22417539","0","The idea is to create a helper branch that is at head of master(latest commit) and goes down until the end of the squashed commit(1).Checkout master(2). Git merge --squash (3) How does git know to merge the helper branch and master? git commit(4) git branch -D helper (5)","2020-11-07 01:47:54","1705829"
"114447387","37268543","0","More on the git rebase -interactive [here](https://stackoverflow.com/a/35704829/1705829)","2020-11-07 02:05:15","1705829"
"21441199","3407920","195","Careful! The meaning of --ours and --theirs is reversed. --ours == the remote. --theirs == local. See `git merge --help`","2013-03-04 10:56:21","567399"
"21442837","38578","9","@Ameer, Thanks.  Join does not guarantee an order, you would need to add an ORDER BY clause.","2013-03-05 12:28:16","116"
"114453134","630453","0","All this talk about PUT being idempotent, and POST isn't, are ignoring the elephant in the room. The browser will retry either of them, even POST, if the connection is closed by the server, so you need to develop your API to be idempotent regardless, so when it happens to you, you can't complain! :)

The choice of method is almost moot.



https://stackoverflow.com/questions/15155014/inconsistent-browser-retry-behaviour-for-timed-out-post-requests/19697278#19697278

https://www.w3.org/Protocols/rfc2616/rfc2616-sec8.html#sec8.2.4","2020-11-07 08:14:26","7966077"
"114453575","46170","0","The `match` method returns an array, the `test` method, which returns a boolean, would be better for this situation.","2020-11-07 08:43:27","8559495"
"6666743","108203","6","Word to the wise:  It looks like this project was abandoned around the time this answer was posted.  I can't find any updates after 2008.  Caveat emptor and all that.  If I'm wrong, I hope someone will edit and provide a current pointer, because I'd love to have a tool like this handy.","2011-04-27 09:53:31","40093"
"114462786","4701836","3","@thecoshman You can read it like 'from users get me id 5' ;)","2020-11-08 11:56:13","4288004"
"114465677","43246375","0","More details on SO on the git rebase -interactive [here](https://stackoverflow.com/a/35704829/1705829)","2020-11-08 02:56:38","1705829"
"114465790","37268543","0","Git rebase -i .. turns the git commits around: the newest is the last in the list and the oldest the first.Am I looking wrong?","2020-11-08 03:03:34","1705829"
"98200054","43333425","0","I'm pretty sure it does (if I remember correctly).  Note that different nix distros and contexts like you bring up (and say Linux, vs Mac, vs Cygwin...bash vs dash...) handle all of this somewhat differently.  Hence the reason there are SOO many answers on this thread!  You'll need to test your use case to confirm.  I wish there were a solid, cross platform/context answer to this simple question!","2019-04-19 01:40:51","3220983"
"114473464","37268543","1","@Timo, correct.  Oldest at the top, newest at the bottom.  That's why you need to `pick` the first line.  And when you choose `squash` or `fixup` on a line, it will put the changes into the commit on the line above.","2020-11-08 11:05:17","848668"
"98202229","108203","0","@bradheintz check this answer, it sets up a git alias: https://stackoverflow.com/a/16563327/151841","2019-04-19 03:06:15","151841"
"114476912","49343276","0","will it remove the newly added files? or just undo the changes in the old unstaged files?","2020-11-09 04:45:57","597858"
"67632108","5201642","7","I want to upvote this, but I can't bring myself to be the one who changes the upvoted count from `1337`...","2016-10-21 05:30:49","118906"
"51642406","7094191","0","does not work, tested in radioGroup.setOnCheckedChangeListener, API 23","2015-08-06 04:50:14","753724"
"98217824","50780432","4","First option is O(n²), a terrible idea. If your list is 1000 elements long, it'll take literally a 1000 times longer than using `enumerate`. You should delete this answer.","2019-04-20 10:24:43","3064538"
"98219961","10459739","0","and it's the same as the older answer: https://stackoverflow.com/a/522576/6451573","2019-04-20 12:54:35","6451573"
"114498857","477819","0","Note that [RFC4627](https://tools.ietf.org/html/rfc4627) was obsoleted by [RFC7159](https://tools.ietf.org/html/rfc7159), itself replaced by [RFC8259](https://tools.ietf.org/html/rfc8259). The information provided here still holds.","2020-11-09 07:43:19","10367549"
"114499352","5445161","0","@OlegMarkelov probably.","2020-11-09 08:05:02","43151"
"21482091","163659","5","downloading beyond compare 3 worked great as a windows user didn't take me too long to learn and didn't need to change anything since git is set up to use it from the start. only problem is now i don't know the console command to say the merge conflicts are done.","2013-03-05 11:36:19","584947"
"82283473","406408","3","@Z.Khullah You're missing the `m` flag. Adding it in your regex didn't do the trick, but creating a new test with `m` did work on Regexr: https://regexr.com/3hj1b In short: it's a bug in Regexr.","2017-12-05 08:34:45","50476"
"114508863","40480","5","Putting it very concisely, this confusion arises because in Java all non-primitive data types are handled/accessed by _references_. However, passing is always be value. So  for all non-primitive types reference is passed by its value. All primitive types are also passed by value.","2020-11-10 06:56:25","365188"
"82286201","47500217","0","p.s.: JSLint (or Crockford ) is wrong for insisting, or asking you to use strict type comparison when dealing with values of the same type. The JavaScript `length` property is always of type: number. And therefore no room or a possibility for fake positives. Furthermore, there is no need for `dSele_UNVEHtype.value.length === 0` when you can use a direct shorthand of `!dSele_UNVEHtype.value.length` instead.","2017-12-05 10:08:53","5896426"
"51664156","16018266","0","Because I thought the other answers, at the time, didn't dismiss HashTable but explained that it was threadsafe. The truth is that as soon as you see HashTable in code, you should replace it with ConcurrentHashMap without skipping a beat. And if thread safety is not a concern then HashMap can be used to improve performance a bit.","2015-08-07 08:29:50","541755"
"82292014","136097","18","static methods are sometimes better off as module level functions in python for the sake of cleanliness.  With a module function it is easier to import just the function you need and prevent unnecessary ""."" syntax (I'm looking at you Objective-C). class methods have more use since they can be used in combination with polymorphism to create ""factory pattern"" functions.  this is because class methods receive the class as an implicit parameter.","2017-12-06 03:44:55","606725"
"51680652","11828270","9","Check [here](http://www.fprintf.net/vimCheatSheet.html) more commands.","2015-08-07 03:36:32","3923461"
"114527766","19298943","30","@MS Berends The `git remote -v` helped for verification, whereas the accepted solution did not provide that.","2020-11-10 06:49:17","2943352"
"98262574","8888015","0","When using ```git clean -dffx```, be sure to run it from [the git project's top-level directory](https://stackoverflow.com/a/20838589/1048186). It's a good idea to run ```git clean -ndffx``` first to list the files before they are deleted, since the -x deletes files that are .gitignored and not shown by `git status`","2019-04-22 03:26:08","1048186"
"51684423","19095988","2","This solution causes all current files to show up as ""new.""  Will they show up as new after the commit? [How to undo git rm -r . if you don't commit](http://stackoverflow.com/questions/2125710/how-to-revert-a-git-rm-r)","2015-08-07 05:29:45","1048186"
"98263411","35374073","2","You need to install `coreutils` from Homebrew and use `greadlink` to get the `-f` option on MacOS because it is *BSD under the covers and not Linux.","2019-04-22 03:59:00","3794873"
"98271527","45571781","0","Fails for python2.7 for the example nested list in the question: `[[1, 2, 3], [4, 5, 6], [7], [8, 9]]`","2019-04-22 09:34:17","6605826"
"98271614","40275594","1","Doesn't work for unevenly nested lists like `[1, 2, [3], [[4]], [5, [6]]]`","2019-04-22 09:39:37","6605826"
"82305878","826782","3","In year 2017, it is better way to use `postcss` and `autoprefixer` and set browser version, then `postcss` make everything cool.","2017-12-06 11:47:05","6877799"
"21526376","11478811","1","Agreed, albeit only conceptually. Yeah, one should HAVE A PLAN. But then you need programmers who CAN MAKE PLANS and have the ability to think logically and develop and maintain consistent patterns. And then there are employers whose main focus is money and wages ;-). And then start having a look at the JPA spec to get an impression of what constitutes a consistent pattern/plan and what it requires to develop and/or document it.","2013-03-07 01:19:05","1050755"
"21526406","11896966","9","Actually, your example constitutes code bloat: the first line is superfluous because the NPE would be thrown in the second line. ;-)","2013-03-07 01:21:24","1050755"
"21526482","7847199","25","I fail to see how this is more concise than ""someobject != null"".","2013-03-07 01:27:17","1050755"
"21526644","815232","71","@kommradHomer -- a ""regex invalid"" address is almost always valid, because whatever regex you use to validate an email address is almost certainly wrong and will exclude valid email addresses. An email address is `name_part@domain_part` and practically anything, **including** an `@`, is valid in the name_part; The address `foo@bar@machine.subdomain.example.museum` is legal, although it must be escaped as `foo\@bar@machine....`. Once the email reaches the domain e.g. 'example.com' that domain can route the mail ""locally"" so ""strange"" usernames and hostnames can exist.","2013-03-07 01:40:17","17300"
"82308884","6049090","5","Strictly speaking there is a way to recover an already staged file that was replaced with git add. As you mention git add creates an git object for that file that will become a loose object not only when removing the file completely but also when being overwritten with new content. But there is no command to automatically recover it. Instead the file has to be identified and extracted manually or with tools written only for this case (libgit2 will allow this). But this will only pay out if the file is very important and big and could not be rebuild by editing the previous version.","2017-12-06 01:07:37","1202966"
"82309418","6049090","3","To correct myself: Once the loose object file is found (use meta-data like creation date/time) `git cat-file` could be used to recover its content.","2017-12-06 01:22:17","1202966"
"98278324","30138655","8","For inhaling a whole file system, rg is gonna be far less painful than almost any other tool.","2019-04-23 06:11:54","9314483"
"21530189","11896966","1","True. A better example would be if the second line were `doCalc(someObject)`.","2013-03-07 05:23:03","1441122"
"6740073","426277","4","also $(selector).checked to check is checked","2011-05-02 11:56:23","144140"
"21532407","11896966","0","Depends. If you are the author of doCalc(), I'd suggest putting the check into that method's body (if possible). And then you most likely will call someObject.someMethod() where again there is no need to check for null. :-)","2013-03-07 07:07:18","1050755"
"51716606","4754797","2","I see it's in the answer and been repeated in the comments several times, so I've got to mention:  `git branch -a | grep remotes` can instead be `git branch -r` (with tweaks to later parts because the ""remotes/"" part of the branch name isn't in this output)","2015-08-09 04:18:10","500202"
"51718773","31824912","0","@j6m8 yes, `isReadableFile(path,fileName)` will return `True` if the file is reachable and readable by the process\program\thread","2015-08-09 07:46:31","2128327"
"21550710","630471","9","This is a fair guideline, but an oversimplification.  As the other answers mention, either method could be used for both create and update.","2013-03-07 03:55:49","425313"
"6755217","38578","502","An excellent explanation, however this statement: *An outer join of A and B gives the results of A union B, i.e. the outer parts of a venn diagram union.* isn't phrased accurately. An outer join will give the results of A intersect B in addition to one of the following: all of A (left join), all of B (right join) or all of A and all of B (full join). Only this last scenario is really A union B. Still, a well written explanation.","2011-05-03 07:57:42","198643"
"21553117","373848","62","To revert the file `git checkout <commit hash> <filename>` worked better for me than `git reset`","2013-03-07 04:53:47","125150"
"98299094","50930429","0","The ""reasoning"" link is broken.  Any chance of finding a current link to it?","2019-04-23 05:05:55","2552290"
"98299322","20434146","0","@KyleSimpson I'm surprised by your statement ""JSON is not a regular grammar and thus regular expressions are not enough"".  Are you sure regular expressions are not enough?   The fact that JSON isn't a regular language doesn't necessarily imply that.   The subtleties you pointed out (whether /* is escaped or inside a string literal) can certainly be handled by a regular expression.","2019-04-23 05:14:08","2552290"
"36183012","7244456","1","If you want to have the original repo locally and still want to update your fork, you can add your fork as a `downstream` remote similar to above, then push to it: `git push -f downstream`.","2014-05-10 03:36:40","1664597"
"67724774","273192","10","In case you came here to create parent directories of file path string `p`, here is my code snippet: `os.makedirs(p[:p.rindex(os.path.sep)], exist_ok=True)`","2016-10-25 03:40:27","1506477"
"114560089","2117523","1","""uuidv4"" is a little cryptic -- I'm naming it ""gitGudGuids"" in my project (joking).","2020-11-11 08:56:54","1415462"
"51736708","28598795","4","The result has nothing to (do per se) with primary/unique/candidate keys & foreign keys. The baviour can and should be described without reference to them. A cross join is calculated, then rows not matching the ON condition are filtered out; additionally for outer joins rows filtered/unmatched rows are extended by NULLs (per LEFT/RIGHT/FULL and included.","2015-08-10 04:27:54","3404097"
"51737908","477578","0","I'm thinking about the Session data: ""This fact should only ever be stored server side in the session data"". And about a clustered environment (like in a cloud)? How the user session should be stored?","2015-08-10 05:42:43","879821"
"21579421","64966","328","`git clean -f` works only in the directory where it's called (and subdirectories). If you want to clean the whole working copy, you should call it in its root directory.","2013-03-08 10:51:18","962758"
"67743191","25814247","0","A `Dictionary` is not a good idea: if you have an `Enum` like `enum E { A = 0, B = 0 }`, the 0 value is added 2 times generating an `ArgumentException` (you cannot add the same `Key` on a `Dictionary` 2 or more times!).","2016-10-25 01:00:14","4165377"
"82360529","47699462","2","pushd is to me the most elegant way of doing this. I was about to post it as an answer :)","2017-12-07 05:10:46","5412273"
"21587977","7770473","10","Lose the `z4 = {}` and change the next line to `z4 = x.copy()` -- better than just good code doesn't do unnecessary things (which makes it even more readable and maintainable).","2013-03-08 03:10:15","355230"
"98327948","50930429","0","Don, unfortunately, Google has killed the social media system that contained the post; I have no idea where the original poster went from there, if anywhere. I'll kill the link in the above info, though, so as to remove the ambiguity. Thanks.","2019-04-24 01:50:42","599484"
"6800050","5407529","1","This is inaccurate. setting the 'checked' attribute to '' will *not* uncheck check boxes in at least chrome.","2011-05-06 05:58:05","696056"
"98331985","45564790","0","This also works in [Git Bash](https://superuser.com/questions/1053633/what-is-git-bash-for-windows-anyway) (Windows).","2019-04-24 03:32:18","63550"
"98333219","46091641","0","I have indeed read your many comments. When you say, ""a Venn diagram, when properly interpreted, can represent inner vs outer join"" do you mean when properly interpreted by the observer or the Venn diagram itself? If the latter, please draw it :)","2019-04-24 04:08:07","15354"
"98333490","45564790","0","But it implies every file must searched (no filter on the file name or file extension level, like `.txt`). Or is there a way to do that?","2019-04-24 04:17:02","63550"
"98333571","47930652","0","[So `grep -rl`](https://stackoverflow.com/questions/16956810/how-do-i-find-all-files-containing-specific-text-on-linux/45564790#45564790) doesn't work with many matches?","2019-04-24 04:19:31","63550"
"98333921","46091641","1","I'm not sure what you are trying to say. I am talking about the standard interpretation of a Venn diagram as sets of elements. (Because some uses of diagrams don't even manage that.) ""Properly"" for an application includes saying what the sets and/or elements are. See comment at the top of this page with 50 upvotes re a Venn diagram for inner vs outer joins. I'll edit some of my comments into this question. I don't want a Venn diagram in this post.","2019-04-24 04:31:27","3404097"
"6803924","2691891","19","If POST can update a resource, how is that not idempotent? If I change a students age using PUT and do that 10x times the students age is the same if I did it once.","2011-05-06 10:54:35","61714"
"98337253","20434146","0","@DonHatch I am sure that regular expressions cannot accurately parse non-regular languages. That's sort of in the definition of the terms: a regular expression parses regular languages. This question is similar to the oft-debated, ""can html be parsed with regex?"" The emphatic answer is, in a specific case, sure, but in the general case, absolutely not. Regular expressions that have been extended with back-references and recursion can parse more complex languages, but not all non-regular languages.","2019-04-24 06:32:49","228852"
"51775736","23583655","16","awesome that worked for me in sublime text 2 using multiple words '`^((?!DSAU_PW8882WEB2|DSAU_PW8884WEB2|DSAU_PW8884WEB).)*$`'","2015-08-11 02:07:31","534525"
"98338570","20434146","0","@KyleSimpson I understand that a regex can't fully parse the language, but that doesn't necessarily imply your stronger claim that no regex can identify and remove comments, in this language.  In lex/yacc terms, I suspect comment identification/removal can be done by lex (the tokenizer, which understands only a regular language) while yacc would be needed to fully parse the language.","2019-04-24 07:23:34","2552290"
"98339547","47930652","0","""under many other Unix-like systems, arbitrarily long lists of parameters cannot be passed to a command, so the command may fail with an error message of ""Argument list too long"" (meaning that the exec system call's limit on the length of a command line was exceeded)""  ... https://en.wikipedia.org/wiki/Xargs","2019-04-24 08:03:23","553865"
"82382413","92395","0","@phoenix I disagree. There is nothing preventing you from using os.system in python3 https://docs.python.org/3/library/os.html#os.system","2017-12-08 09:27:04","7284582"
"82386506","3356227","0","This isn't relevant for all situations. I have one where I have a manually configured JSON to be parsed by something else (a package manager) that has its own schema. In that I want a comment such as /* It's better to use X instead from another package manager, however that manager doesn't provide X yet so. */.","2017-12-08 11:22:37","1918268"
"6811495","5407529","0","@xixonia I did test before I posted your fiddle doesn't work because you didn't change the menu on the left to include  jquery","2011-05-06 06:44:35","234670"
"6812668","5407529","0","@xixonia thanks again, It seems this doesn't work the same way in jauery 1.6 see note above thanks for adding your solution as well","2011-05-06 08:10:43","234670"
"6812678","5407529","1","mcgralim - in 1.6 its even easier....  `$("".mycheckbox"").prop(""checked"", true/false)`","2011-05-06 08:11:30","91914"
"6812705","5407529","0","@gnarf  thats great but now i'll have to go change that in all my code 8 ^ (","2011-05-06 08:14:00","234670"
"6812742","5407529","0","@mcgrailm - its still not released, but we may be adding some backwards compat for `.attr()` with boolean attributes -- although I wish we wouldn't -- Read: http://forum.jquery.com/topic/prop-attr-rewrite-again","2011-05-06 08:18:19","91914"
"6813441","426276","1","Problem here is if you need something that works for both versions. In that case, you can use the plugin. :) Thanks for the update!","2011-05-06 09:12:57","696056"
"36232608","275869","7","NullPointerExceptions are thrown for a reason. They are thrown because an object is null where it shouldn't be. It is the programmers job to FIX this, not HIDE the problem.","2014-05-12 07:49:02","1022330"
"21608270","11896966","0","Well, if you are not the author of `doCalc()`, and it doesn't immediately throw NPE when given null, you'd need to check for null and throw NPE yourself. That's what `Objects.requireNonNull()` is for.","2013-03-09 06:43:51","1441122"
"114620447","62778080","0","Saved me a bunch of time too.","2020-11-13 11:00:20","816620"
"114624129","45323085","0","@Sara can you define ""huge"" please?","2020-11-14 06:05:23","3064538"
"114627853","64409378","0","In this example you've not copied the Student object, so I think saying ""passing a copy of the value also changes the real value of the object"" is misleading.

The thing that you are copying, and passing-by-value, is the *reference* to the object. The object stays living on the heap, and there's just one of them. That's why when you use the new reference to mutate the object, you're mutating it for everyone else that has a reference to the object. There's only one object.

When the argument of the function is a primitive type, not a reference to an object, it is also copied.","2020-11-14 11:57:56","5437033"
"114632495","64103917","0","this will uppercase all words in a string","2020-11-14 04:57:39","3829174"
"114639695","64103917","2","no, it only capitalize ist letter of each word in a sentence 

https://www.w3schools.com/cssref/tryit.asp?filename=trycss_text-transform","2020-11-15 01:36:11","4227801"
"67786967","39848137","5","You are just modifying the check. No real benefit is received. Even though we put extra efforts to implement the suggested pattern, the code is still not clean.","2016-10-26 01:16:07","3619962"
"67790280","67712","1","Thank you.  This is kind of strange default behavior IMO.  I'll just chalk it up to more cryptic gitness.  If it downloaded the branches, why would it hide them when calling git branch?","2016-10-26 02:27:51","4076764"
"82414951","20388370","1","@Santosh You could edit my post and be useful to the community instead of childishly bragging against a non-native speaker and uselessly polluting the comments, which is [IN]consistent with average intelligent behaviour. That's why edits are for, btw. Thanks for the free lesson anyway, duly appreciated :)","2017-12-09 09:45:21","1403638"
"98368183","46091641","1","I don't want Venn diagrams either!","2019-04-25 03:52:29","15354"
"98371264","46091641","0","I must admit that, despite my quick phrasing in comments, because SQL involves bags & nulls and SQL culture doesn't have common terminology to name & distinguish between relevant notions, it is non-trivial even to explain clearly how elements of a Venn diagram are 1:1 with output ""rows"", let alone input ""rows"". Or what inner or outer joins do, let alone their difference. ""value"" may or may not include NULL, ""row"" may be a list of values vs a slot in a table value or variable & ""="" may be SQL ""="" vs equality.","2019-04-25 05:44:05","3404097"
"114654346","39067220","1","@VarunGarg But of course you can say `print(a or 'alt text')` in Python.","2020-11-15 08:24:04","1698431"
"82421359","271587","0","@monojohnny  does Validate use Assert statements into?. i ask that because Assert may be activate / deactivate on JVM and it's suggest do not use in production.","2017-12-09 04:03:31","2403791"
"82425650","12946734","0","IMHO, This is a implementation of Null Object Pattern with a yourself implementation  of Optional (Contract). How it behaves on persistence class class? I do not see applicable in that case.","2017-12-09 07:56:01","2403791"
"98376226","45224904","1","Re: the new final notes, WHATWG and co have landed on UTF-8 as the sole ‘correct’ encoding for all text interchange on the platform. This isn’t gonna change (and it’s a good thing). The ES issue is distinct from that, though — it’s about ES having a string abstraction where the code units of the internal ‘utf-16 + lone surrogates’ encoding (it’s neither UTF-16 nor UCS2 quite) ‘break through’ when using indexed address, String.prototype.length, etc. (1/2)","2019-04-25 08:54:33","1631952"
"98376240","45224904","1","The body responsible for ES is TC39 rather than W3C (or WHATWG, etc), and they cannot change the existing functionality because it would break the web. Instead, they can introduce new functionality that behaves correctly. They already have begun doing this — the 'u' flag on RegExp, String.prototype.codePointAt, and String.prototype[@@iterator] provide safer alternatives to the old APIs. (2/2)","2019-04-25 08:55:12","1631952"
"82426731","13676682","0","are you proposing intercept each method of entire app?","2017-12-09 08:54:59","2403791"
"82434819","36393773","0","Thanks! The credit for that goes out to programmerq from the `#docker` channel on Freenode IRC.","2017-12-10 08:55:27","1227991"
"82437767","4089430","65","`git remote -v` give you a lot of information, including this.","2017-12-10 12:21:49","53897"
"98387337","80113","1","Hi. I think your post (which is great otherwise) does not clearly state that the heap is slower than the stack only when you CREATE stuff (objects). When you ACCESS stuff, the heap should have about the same speed as the stack.","2019-04-26 08:19:57","46207"
"98388054","38989","5","In python 3 you would get TypeError: unsupported operand type(s) for +: 'dict_items' and 'dict_items' ... you should encapsulate each dict with list() like: dict(list(x.items()) + list(y.items()))","2019-04-26 08:45:27","775987"
"21638464","8099186","0","Be careful man !!! To make it selectable in firefox you must use `-moz-user-select: Normal;`","2013-03-10 04:53:37","903840"
"82449171","47696235","11","I needed to use `--delete` instead of `-d` to delete remote branch.","2017-12-10 11:22:24","3235499"
"21644227","8330107","4","Another solution to this case:

function capitaliseFirstLetters(s) {
    return s.split("" "").map(function(w) {
        return w.charAt(0).toUpperCase() + w.substr(1)
    }).join("" "")
}

Can be a nice one-liner if it's not put into a function.","2013-03-10 09:36:38","1437936"
"82465005","25814247","0","Why return a `Dictionary<,>` from a method named `ToList`? Also why not return `Dictionary<T, string>`?","2017-12-11 11:53:47","1915893"
"82465164","15457453","1","This also works in the `from` clause and the `foreach` header declarator.","2017-12-11 11:58:01","1915893"
"82466771","115992","1","@Amala: what are you referring to, when you say ""below"". The order of answers is changing...","2017-12-11 12:42:40","480982"
"67835530","40288213","19","This question is not about complications, but about ** Hidden Features and Dark Corners of C++/STL**","2016-10-27 03:32:01","777716"
"51847100","67458","22","@tvCa I find that users generally prefer to be allowed more flexibility in their directory names rather than being forced to make things easier for developers. (In fact, when dealing with long file names, I find ones without spaces to be a pain as that kills word wrapping even though I myself have suffered in the past from not accounting for paths with spaces in scripts and programs.)","2015-08-12 03:52:58","138772"
"114689784","61171280","3","This solution shouldn't be encouraged.  Using the`-f   (force)` option in `push` is a dangerous practice, particularly if you're pushing to a shared repo (i.e public history) that'll make life dfficult for contributors","2020-11-17 05:09:16","1717729"
"51852426","5361169","9","@earthmeLon, for that you might want `git clean -dfx`. The `-x` ignores .gitignore. Typically your build products will be in .gitignore.","2015-08-12 06:28:00","1212596"
"6881558","163659","381","Well, it doesn't necessarily open a GUI unless you install one. Running `git mergetool` for me resulted in `vimdiff` being used. You can install one of the following tools to use it instead: `meld opendiff kdiff3 tkdiff xxdiff tortoisemerge gvimdiff diffuse ecmerge p4merge araxis vimdiff emerge`.","2011-05-11 02:00:49","58994"
"82480784","671118","0","Mark Knol, using humour or any other human behavior (like saying 'thank you') is strictly prohibited by the moderators who have experienced humility enema's.","2017-12-11 07:14:03","5326704"
"114699016","60141523","0","This is the only answer that made sense so far. The objects are not passed as pure values because they aren't copied like in the C++ pass-by-value way.","2020-11-17 12:11:28","2545722"
"82481747","5189600","1","The explanation for `<after-this-commit>` is needlessly complicated. With a simpler explanation (the chosen words are almost self-explanatory, already, but the *given* explanation overcomplicates), this answer would be perfect.","2017-12-11 07:45:19","2956948"
"67846680","52704","20","'git clean -df ' Be warned! I tried that and lost key folders that are unable to be restored... Ouch!","2016-10-27 09:01:59","1688787"
"114714708","21963136","0","I don't know if @Broofa's answer has changed since these tests were run (or if the browser engines running the tests have changed - it has been five years), but I just ran them both on two different benchmarking services (jsben.ch and jsbench.github.io), and in each case Broofa's answer (using Math.random) was faster than this e7() version by 30 - 35%.","2020-11-17 09:24:32","9154668"
"114716583","4701836","2","@xuiqzy hmm, I quite like this way of thinking about it really, and expands nicely `GET /users/5/documents/4/title` would be like 'get the users, from there get me user 5, from there get me the documents, from there get me document 4, from there get me the title'","2020-11-17 10:54:23","300797"
"36323212","114549","1","To support mobile browsers, I do not recommend using `width: 50%`. Use something like `max-width: 300px` instead.","2014-05-14 09:21:34","1094772"
"21680252","477578","6","@MikeMike: ""..and loop through them in php"" -- why not just select the row in SQL? `SELECT * FROM LoginTokens WHERE UserID=[userid from cookie] AND HashedToken=[hash(token from cookie)]` should work just fine (remember to use prepared statements / stored procedures for the SQL though)","2013-03-11 08:39:36","57068"
"36326737","23648583","5","You should read question once again, there is nothing on affecting remote, but setting to same as remote, so you shouldn't do anything with remote, and this helped in my case and non of above.","2014-05-14 10:43:46","2846569"
"36327032","23648583","0","If you want to set it to the same as remote, you should at least do a fetch at some point don't you agree?","2014-05-14 10:50:14","1843331"
"36327595","23648583","2","you should at least try this or read docs: https://www.kernel.org/pub/software/scm/git/docs/git-checkout.html","2014-05-14 11:04:24","2846569"
"67872040","67699","1","@huggie is there less data sent over the wire for only a specific branch? If you're cloning the Linux kernel or some other beast, maybe that's preferable *by default* (though I agree that if you want it **all**, that should be easy too)","2016-10-28 02:37:00","194586"
"36337674","20267852","10","`Just make sure your ""notex"" names don't conflict with any real fields.` is the problem. This is not an arbitrary solution.","2014-05-14 02:42:45","300224"
"114727302","9053008","1","@Montaro exactly, without it, only the name of the remote is printed (e.g. `origin`).","2020-11-18 10:03:40","6225838"
"67875253","39492868","2","While I do find the tool a good idea the reality is that's BROKEN. It did load only 20 repos from my account and even the footer redirects to a website that does not exists. If that's fixed I will be a big advocate.","2016-10-28 04:07:47","99834"
"36341579","14624061","5","This is only useful if some other process hasn't added a prototype to your base object.  To make this truly workable, you need to test for obj.hasOwnProperty(name)","2014-05-14 04:10:12","443345"
"21683274","122102","15","Cloning objects is a tricky business, especially with custom objects of arbitrary collections. Which probably why there is no out-of-the box way to do it.","2013-03-11 10:25:34","419097"
"114748140","2003505","4","@Nathan, no, they're not wrong, but _they don't teach what you **don't know you don't know**_, whereas the one I link to makes this critical _unknown unknown_ become a _known unknown_ and then a _known known_. I didn't know you had a **1) local branch, 2) locally-stored remote-tracking branch, and 3) remote branch** until I read that answer. Prior to that I thought there was only a _local branch_ and _remote branch_. The locally-stored remote-tracking branch was an _unknown unknown_. Making it go from that to a _known known_ is what makes that answer the best.","2020-11-18 11:06:25","4561887"
"67882961","23853061","2","The steps need an update; essentially, you need to compare your fork as a base, with the original as the head fork. However, the commit history won't be clean. You can either merge or squash+merge, which will leave you with a merge commit, or ""Rebase and merge"", which will give ""This branch is X commits ahead, Y commits behind <original>"", and every commit will be ""with"" you.","2016-10-28 08:40:41","1269037"
"82503082","10305968","2","also if you hide input with opacity:0, it still gets selected with tab key","2017-12-12 11:08:36","177956"
"6926584","426276","6","As a side note, jQuery 1.6.1 should be fixing the issue I mentioned, so we can tehcnically all still go back to using $(...).prop(...)","2011-05-13 08:08:53","696056"
"114755893","35446009","1","I was curious about the Java 9 `InputStream.transferTo` and Java 10 `Reader.transferTo` solutions that were added since this answer was posted, so I checked out the linked code and added benchmarks for them.  I only tested the ""big string"" benchmarks.  `InputStream.transferTo` was the fastest of all the solutions tested, running in 60% of the time as `test8` did on my machine.  `Reader.transferTo` was slower than `test8`, but faster than all the other tests.  That said, it ran in 95% of the time as `test1`, so it's not a significant improvement.","2020-11-19 08:03:26","1108305"
"114755958","32352386","0","I benchmarked this [here](https://stackoverflow.com/questions/309424/how-do-i-read-convert-an-inputstream-into-a-string-in-java?page=2&tab=oldest#comment114755893_35446009), and found this to be the fastest solution on my machine, running in about 60% the time of the next-fastest solution benchmarked.","2020-11-19 08:05:56","1108305"
"36361801","3104376","0","@StaxMan ""My canonical use case are log files""—problematic in itself; JSON is not a good format for logging (too much punctuation compared to YAML or XML). ""It is only trivial to skip metadata in latter case.""—That's a strong argument for not using the ""classical"" method (in general, it's too easy to break it). ""But I see that you can not conceive of the simple notion of diagnostics-only comments""—What do you mean by diagnostics-only comments? I can't conceive of it if you don't explain it. :)","2014-05-15 05:50:56","109011"
"51896145","8888015","3","Backup the Folder with your local files including the .git folder in it.  Now you can't 'loose' anything if this fix doesn't work for you; you can make another copy and try something else.  Do not operate out of a single folder and trust git as if it were a 100% reliable backup tool.  One typo, especially in branch-land, can be a nightmare.  I suggest one backup old-school to tar.gz folders, and then run git out of the latest copy.","2015-08-13 06:44:38","2326613"
"67894582","9923354","3","The `this_is_how_slicing_works` is not the same as python slice. E.G. `[0, 1, 2][-5:3:3]` will get [0] in python, but `list(this_is_how_slicing_works([0, 1, 2], -5, 3, 3))` get [1].","2016-10-29 12:56:59","172677"
"98454197","46091641","0","Similar to our Cartesian-product-vs-relational-product discussion, I suspect it is the case that the Venn diagrams make a lot of sense to folk who already understand the differences between the join types!","2019-04-29 07:51:15","15354"
"98454380","34950096","0","@LearnByReading: my picture on the right is a right outer join i.e. replace `TableA a LEFT OUTER JOIN TableB b` with `TableB B RIGHT OUTER JOIN TableA a`","2019-04-29 07:58:14","15354"
"36377280","2386013","0","@Mechanicalsnail becuase it only ever returns ""hello world"", and can never return null.","2014-05-15 12:32:42","106261"
"114771014","348303","1","Since Git v2.23 the message has changed yet again. It now says `git restore --staged <file>`. See [my answer below](https://stackoverflow.com/a/62569076/9210961) for an update.","2020-11-19 05:02:13","9210961"
"114772885","21613658","0","is this reversible ? what if you load the file and write it back ?","2020-11-19 06:11:40","9400696"
"98460078","46091641","0","In the case of 'relational Cartesian product', that is a standard & reasonable name for a certain thing that people do generally understand & which is reasonably described as similar to a Cartesian product. In the case of SQL Venn diagrams, they don't make sense, people just assume they do, whether they do or don't understand the operators/differences.","2019-04-29 11:15:35","3404097"
"51923514","16957078","0","Hi, a naive question: why you use \*.{..} after -included, but *.{...} after -excluded?","2015-08-14 12:56:51","815653"
"51925724","16957078","0","@zell to indicate the type of file we want to search. From above ex, we only wanted to search files end up with .c and .h extension.","2015-08-14 01:50:44","2231815"
"67909220","179147","0","If you receive a `denying non-fast-forward` error using `git push -f` you need to set `receive.denyNonFastForwards false` on the server repository.  See http://stackoverflow.com/questions/9832348/git-push-rejected-error-failed-to-push-some-refs#9832377","2016-10-30 07:55:55","5022858"
"67913261","9923354","0","@Eastsun Oops, you're right!  A clearer case: `range(4)[-200:200:3]
== [0, 3]` but `list(this_is_how_slicing_works([0, 1, 2, 3], -200, 200, 3)) == [2]`. My `if 0 <= i < len(seq):` was an attempt to implement ""never go outside the sequence"" simply but is wrong for step>1.  I'll rewrite it later today (with tests).","2016-10-30 12:36:59","239657"
"98472429","51342794","3","This should be the accepted answer, instead it's almost the last since SO keeps awarding outdated questions. Btw, it's better using `/./` for two reason: `/\w/` will skip all the previous not letter characters (so @@abc will become @@Abc), and then it doesn't work with not-latin characters","2019-04-29 06:01:22","1850851"
"82523325","12946734","0","@Kurapika - agree. I think ""never use null"" is not entirely practical in Java.  But 99% of the time, it is, and is to be encouraged imo. I like what I see with languages like Kotlin that address this problem.","2017-12-12 08:28:40","1342121"
"21730589","115983","139","In my case, I'd like to add a directory structure for tmp files, but not the tmp files themselves.
By doing this, my tester has the correct structure (otherwise there are errors) but I don't clog my commits with tmp data.
So yes, it's useful to me!","2013-03-13 03:32:56","1253302"
"21732931","1274126","24","WARNING: this will delete the file from your entire history.  This was what I was looking for though, to remove a completely unnecessary and oversized file (output that should never have been committed) that was committed a long time ago in the version history.","2013-03-13 05:49:10","372757"
"82525095","246128","1","Why not use `realpath` (as in the other answers) instead of the `while` loop?","2017-12-12 09:31:16","21501"
"36398577","8439617","1","This answer is bad since it is not **JavaScript**.","2014-05-15 09:44:13","837165"
"114789273","22345808","0","`...will update you to all future...` who will update and when? should I run some command from the cli for the update to happen? or what should I do to force the update?","2020-11-20 09:47:08","9852082"
"114794025","5190323","0","How can I create a zsh function out of it with this line `git merge --squash HEAD@{1}` which results in a parse error.","2020-11-20 01:01:48","1705829"
"114796916","82852","2","@kyrill: Opening a file for appending is not the same as opening it for writing and seeking to the end: When you have concurrent writers, they will overwrite each other without `'a'`.","2020-11-20 02:48:42","601203"
"114798871","477819","0","@Omegastick True, however that page *does* have a link to the IANA list of ""all"" types linked in the answer.","2020-11-20 03:55:30","2415524"
"114806172","244777","1","Image the inventor of the hammer.  He probably wanted to bust up rocks into flecks that could be used to make knives and axes.  We'd still be in the stone age if he insisted that his tool could not be used for anything else, like hitting people attacking you, or turning wheat into flour, or driving nails.  It's the height of hubris to assume that it's MY way or nothing.  Neglecting comments is a great example of assuming this tool will never have another use than data communication between machines/programs.  Such lack of foresight is shameful.","2020-11-20 08:44:55","624814"
"67949790","38898933","42","**A picture is worth a thousand words**,   **Person A** - Ask's person B  details to fix his car, in turn **Person B** - Makes Ajax Call and waits for response from server for car fixing details, when response is received, Ajax Success function  calls the Person B function and passes the response as argument to it, Person A receives the answer.","2016-10-31 05:48:09","2218697"
"21759976","3407920","1","If you need to do it to many files:  git checkout --theirs *.java","2013-03-13 06:37:54","761284"
"51949975","16131743","0","I get `/dev/pts/30` with bash on Ubuntu 14.10 Desktop.","2015-08-15 11:29:23","1269037"
"51949996","476333","0","I get `/dev/pts/30` with bash on Ubuntu 14.10 Desktop, instead of the actual directory I run the script from.","2015-08-15 11:30:30","1269037"
"98506078","82852","15","@makapuf You can open it for ""updating"" (`open('file', 'r+')`) and then seek to the end.","2019-04-30 05:45:44","6362349"
"114815324","2003515","0","I just wanted to remove an entry from the `git remote -v` list (I correct: 2 entries, namely the upstream ones) and came across this post. Well my solution is to remove the **remote branch** from `.git/config` editing this file. I added them by accident with `git remote add ..`","2020-11-21 10:50:24","1705829"
"67957410","11593797","3","@ChaimEliyah you have a leading slash, maybe that's your problem","2016-10-31 10:21:33","1540818"
"114823353","80113","0","@SinaMadani - The diagram is showing that local variables and methods are reserved on the stack, but they reference objects allocated on the heap.","2020-11-21 06:56:05","5957027"
"98513407","35514432","1","`greadlink -f` unfortunately doesn't work effectively when `source`ing the script on Mac :(","2019-04-30 11:50:08","283398"
"21796827","59916","1","Cool, this doesn't resolve symlinks, which is exactly what I was looking for.","2013-03-14 04:45:38","198348"
"21810121","8099186","8","@mhenry1384 `jQuery.browser` has been deprecated as of version 1.3 and has been removed in version 1.9 - http://api.jquery.com/jQuery.browser","2013-03-14 11:58:05","192886"
"98519860","100146","17","Note that `__metaclass__` is not supported in Python 3. In Python 3 use `class MyObject(metaclass=MyType)`, see https://www.python.org/dev/peps/pep-3115/ and the answer below.","2019-05-01 08:36:00","2097"
"36452858","67699","2","@DayDavisWaterbury Here in Git 1.8.3.2, the checkouted branch won't be in 'detached HEAD' state, but the checkouted tag will be.","2014-05-18 02:55:09","1108071"
"36457851","8439617","0","@Jasny-ArnoldDaniels: You're correct, but this edit changes the meaning of the post too much. Better post it as a separate answer. Or rather downvote this and [upvote that existing answer](http://stackoverflow.com/a/11524251/1048572)","2014-05-18 10:06:55","1048572"
"21829559","8099186","0","@Wynand Good point. But what sort of ""feature detection"" exists to determine which CSS property to use?","2013-03-15 01:28:36","467386"
"98541887","13282142","5","This answer is *literally* identical to this [older one](https://stackoverflow.com/questions/179123/how-to-modify-existing-unpushed-commits/6258114#6258114). Have you checked existing answers before supplying another one?","2019-05-02 01:15:38","1269037"
"98541899","13010393","0","Downvoted as well. People just don't bother to [read existing answers](https://stackoverflow.com/questions/179123/how-to-modify-existing-unpushed-commits/6258114#comment98541887_13282142).","2019-05-02 01:16:22","1269037"
"98541910","15669052","1","The `git commit --amend` answer had already been given (several times) before you wrote yours. Why did you post it again? If you wanted to add a link to ""Rewriting Git History"" you could've edited one of the existing answers, or left a comment.","2019-05-02 01:17:45","1269037"
"98541937","28421811","3","The vim part is completely off-topic, and instead of encouraging users to spend time learning to use an arcane editor, why not teach them something more on-topic, like how to set up the default git editor to be something user friendly, like `nano`? We're talking about trivial modifications that need to be made to a text file, not hardcore coding that would generate a flame war about the ""best"" text editor.","2019-05-02 01:19:53","1269037"
"98542005","25178676","0","You don't need to use [that abomination](https://www.zdnet.com/article/vim-update-classic-unix-linux-editor-gets-first-update-in-years/). You can [set your git editor](https://stackoverflow.com/questions/2596805/how-do-i-make-git-use-the-editor-of-my-choice-for-commits) to something sane and user-friendly, like `nano` or Midnight Commander's mcedit.","2019-05-02 01:28:41","1269037"
"21832026","138934","1","This answer has man downvotes because (as noted in the other response) putting javascript in the actual tag is considered very bad practice.  Click handlers should never be in the HTML itself.

The top answer best explains this in detail.","2013-03-15 02:31:24","522624"
"7037844","2064441","22","Indeed, the Option pattern is awesome. Some Java equivalents exist. Guava contains a limited version of this called Optional which leaves out most of the functional stuff. In Haskell, this pattern is called Maybe.","2011-05-20 06:31:03","59441"
"82639767","40288213","3","`The OP's way:      9  8  7  6  5  4  3  2  1  0` and `The Garry_G way:  10  9  8  7  6  5  4  3  2  1`","2017-12-15 06:33:22","1030576"
"82644618","630475","0","Am I mistaken, or does this answer contradict the info in the question? There it says Post=Create.  Put=Update if possible. If not, create.  However here, it says 'Post=Update'.  I'm confused.","2017-12-15 09:43:41","168179"
"21856708","14464406","1","If you want to make sure your change from `git commit --amend` took affect you can use `git show` and it will show the new message.","2013-02-19 08:12:44","825364"
"36502840","6232535","102","It's also worth noting that if you have an existing tracking branch already set on the branch you're pushing, and `push.default` is set to `upstream`, this will not do what you think it will do. It will try to push over the existing tracking branch. Use: `git push -u origin mynewfeature:mynewfeature` or do `git branch --unset-upstream` first.","2014-05-19 06:07:28","157971"
"114876704","5767357","0","@default123 https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/delete","2020-11-23 10:48:08","1599699"
"114876720","5767325","0","For those who don't want `indexOf()` + `splice()`: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/delete","2020-11-23 10:49:22","1599699"
"98573224","28421811","3","@DanDascalescu: Because it's quicker to learn Vim using the instructions above than perform several rebases using nano. The whole reason git opens a text editor and not its own interface for rebasing is because Vim exists: it's lightweight, installed by default on most systems, and very easy to learn enough to perform a rebase with ease: e.g. `ddjjpZZ` moves a commit 2 down. There's nothing arcane about basic Vim knowledge; it takes 10min to become more comfortable with Vim than nano.","2019-05-02 10:07:53","405550"
"114882480","63344366","0","Invalid should be `xxxxxxxx-xxxx-Mxxx-Nxxx-xxxxxxxxxxxx`","2020-11-24 06:13:46","2494754"
"114887511","63344366","0","@NVRM It IS valid, you can check result in any online UUID validators, i.e. here: https://www.freecodeformat.com/validate-uuid-guid.php","2020-11-24 09:51:43","10917379"
"98589903","50391764","0","Describing java as ""pass-by-value"" is highly misleading.  For non-primitive types Java uses ""pass by value of the reference"".  ""Pass by value"" implies the value is copied when passed to a method.  It is not, the reference is copied.","2019-05-03 12:18:06","352035"
"114891463","15457453","1","This seems to be the cleanest approach.","2020-11-24 12:16:28","5151441"
"68028044","671508","0","PUT is to put something at a specific resource, meaning that the user knows where to put it, it can Create or Update. POST is to Create a new resource, and you expect to get back a link to the resource.","2016-11-02 07:27:32","4269730"
"21895781","35288","14","I'd suggest using syntax `git checkout -- foo` to avoid any mistakes if `foo` is anything special (like a directory or a file called `-f`). With git, if you're unsure, always prefix all files and directories with the special argument `--`.","2013-03-18 07:22:58","334451"
"82696368","47696235","3","`-d` option is an alias for `--delete` and if `--delete` work then `-d` should also work, if you forcefully want to delete a branch you can use `-D` instead of `-d` or `--delete`.","2017-12-18 09:48:42","4456413"
"7073436","275869","42","I agree - only in that situation. I can't stand programmers that have taken this to the next unnecessary level and write if (null != myVar)... just looks ugly to me and serves no purpose!","2011-05-23 06:14:16","181551"
"7080282","163659","31","Good point Josh.  On ubuntu I've had the best luck with meld, its three way merge display isn't bad.  On OSX git chose a nice default.","2011-05-24 05:08:08","101"
"36558211","2219560","2","@happycoder: Because the question is very popular and the first hit on Google (and many other search engines) for many git-related terms. And people find it useful.","2014-05-21 02:36:03","1438393"
"114940248","85711","0","This shows that java is not pass by value as it doesn't copy the whole object onto the stack like C++ does, as shown in the example above - ..., Dog obj,...","2020-11-25 11:03:36","1505487"
"114940516","51522896","1","C++ has true pass by value where it copies all the fields of the object onto the stack. Java doesn't do this so its not pass by value..","2020-11-25 11:25:08","1505487"
"52071620","16131743","0","@DanDascalescu Using the one-liner? Or the full code snippet at the bottom? And were you feeding it any tricky pathnames?","2015-08-19 06:34:53","558709"
"114959893","417184","1","@PetrNagy Sadly, in corporate environments, IE11 is still quite frequent.","2020-11-26 04:07:32","3527940"
"114966276","19160241","0","What if we want to update `Table2.col1`? how will we do that. table two is extracted on the base of the query condition.","2020-11-26 09:03:46","11812564"
"114967315","85711","1","No, Java passes references by value.  That's why when you overwrite objPtr in the java example, the original Dog object doesn't change.  But if modify the object being pointed to by objPtr, it does.","2020-11-26 10:03:16","8701"
"114968453","11227902","6","We used to always use C for maximum performance because there was so little overhead.  Today, performance depends heavily on picking the right algorithm, sorting data when optimal, better use of the cache, and branch prediction.  C still produces the fastest code, but does so only when programmers keep all of these things in mind and take advantage of the hardware.","2020-11-26 11:32:31","2755896"
"52085740","52713","5","Although it seems obvious, I think it's worth noting that this command should be run from the repository's top-level directory, as it cleans only the current working directory.","2015-08-19 12:35:16","308392"
"7097560","487278","2","@Paul Fisher: NP-hard doesn't mean ""harder than the hardest NP-complete problem"", it means ""at least as hard as an NP-complete problem"". There's a big difference!","2011-05-24 11:48:30","9536"
"21947409","7244456","0","@TimKeating Github does have web interface to deal with merges from others' pull request. I am wondering what will happen if i exchange the destination and my repo when sending a pull request.","2013-03-19 01:42:12","726667"
"36584239","901712","0","related http://stackoverflow.com/questions/4086957/jquery-see-if-any-or-no-checkboxes-are-selected","2014-05-21 03:18:50","759452"
"82742059","6232535","13","You can also use `git push -u origin HEAD`","2017-12-19 01:30:23","1059847"
"98645220","5190323","0","FYI: If you do `git merge --squash HEAD@{1}` and get a `error: unknown switch 'c` back you are probably running in powershell console. Probably easiest way to continue is to temporarily move to ordinary command shell through `cmd` then do your `git merge --squash HEAD@{1}` and then go back to powershell through leaving the command shell by `exit`. (I haven't bothered to figure out how to run the `git merge --squash HEAD@{1}` through powershell.)","2019-05-06 05:35:57","521554"
"68097498","29489427","2","This convention is no more valid: if you use Visual Studio 2015 and try to use `String` the program suggests you to ""simplify your code"", carrying it to `string`.","2016-11-04 02:04:39","4165377"
"82750078","18191073","0","This is a nice summary of methods. I think you should merge your other answer into this though. The truth is that enum are special and looping through them is often (usually) just as valid as enumeration because you know that the values will never change. IOW, If you have an enum that is changing all the time then you've chosen the wrong data construct to begin with.","2017-12-19 05:03:01","4138090"
"114993233","6841572","3","It happens twice a year anywhere that observes DST.","2020-11-27 10:57:12","181106"
"36594933","2219560","10","@AmalMurali, well. My point wasn't so much about the popularity of the question, nor the utility of the answer. But this particular answer is not the oldest answer, nor does it offer any further insight into the accepted answer. It appears to be a copy of a section of the accepted answer. That was my point. CHEERS!","2014-05-21 08:16:23","1833460"
"82756723","6866485","1","I'm trying git reset --soft HEAD~1 and I keep getting the following, why?:
fatal: ambiguous argument 'HEAD~1': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'","2017-12-19 08:53:19","416122"
"82757044","6866485","0","@gangelo, how many commits do you have in your repository?  More than one?  It's hard to reset back before _any_ commits, so I usually start a repo with a ""dummy"" commit (such as an empty .gitignore file) to get around this type of problem.","2017-12-19 09:05:53","5486"
"68109594","114549","1","This is far from being a perfect solution as anything inside the inner DIV must be displayed as a table's element","2016-11-04 07:40:38","3329664"
"82757583","6866485","0","@Kyralessa I only have 1 commit but it's not pushed because, oddly enough, I need to pull down my .gitignore file from my repository. I guess I can commit and apply the .gitignore after the fact, but I don't remember how to do that and remember it being a hassle. I only want to undo the commit I have to a point where if I do 'git status' I'll see all my files tracked, and ready to commit as if it never happened.","2017-12-19 09:28:01","416122"
"52106222","16957078","8","*grep -rnw ""String I was looking for""* done what I needed. Thanks!","2015-08-19 09:20:37","517381"
"82769068","6866485","0","@gangelo, have a look here for some ideas about how to revert that first commit: https://stackoverflow.com/questions/6632191/how-to-revert-initial-git-commit","2017-12-20 07:59:45","5486"
"21981559","2386013","68","The good thing about annotations, which `@NotNull` and `@Nullable` are is that they nicely degrade when the source code is built by a system that doesn't understand them. So, in effect, the argument that the code is not portable may be invalid - if you use a system that supports and understands these annotations, you get the added benefit of stricter error checking, otherwise you get less of it but your code should still build fine, and the quality of your running program is THE SAME, because these annotations were not enforced at runtime anyway. Besides, all compilers are custom ;-)","2013-03-20 09:49:23","254343"
"52114574","16131743","0","The one line plus another line to `echo $resolved`, I saved it as `d`, `chmod +x d`, `./d`.","2015-08-20 05:55:38","1269037"
"21984124","1628334","6","""it's not recommended to push into a non-bare repository (and not into the currently checked-out branch, in particular"" Why is that?","2013-03-20 11:00:35","418150"
"98669155","43826836","1","this worked for me the best, since I had already pushed the bad commit up to github","2019-05-06 08:36:37","6718485"
"36630594","1274447","100","This will delete the file on `git pull` though.","2014-05-22 04:04:32","190438"
"98671554","25446740","0","`#outer` doesn't need any `width:100%;` as the `<div>` by default always has `width:100%`. and `text-align:center` is also not a necessary at all.","2019-05-06 10:57:27","4606903"
"36630721","19095988","69","Same as the accepted answer. Files will get deleted on `git pull`.","2014-05-22 04:07:17","190438"
"115015960","7077","0","I gues then...  Just be conistent.  Use string or String or use a cerntain one in a specific case, but always in that case.","2020-11-29 06:50:28","2467934"
"7152522","292359","36","If I am at `/home/alice/` and do `git fetch /home/bob`, what parameters should I pass to the subsequent `git merge` ?","2011-05-27 07:38:02","11236"
"68165511","38198351","4","Thank you :) `git push -u origin <branch-name>` wasn't working for me but using `HEAD` instead of `<branch-name>` worked perfectly :)","2016-11-07 07:55:45","1611058"
"82789960","37614185","0","@user2864740 If I am getting it right, this option will not only removed untracked files but users will also lose any changes they made in tracked files. For those it `worked`, they may be looking to reset those changes apart from deleting untracked files, though that is not the question here.","2017-12-20 05:15:23","3276830"
"52135461","20434146","0","Your JS interpreter solution is the Nancy Pelosi approach to JSON parsing: you have to pass it to find out what is in it. Of course there may be unintended side effects.","2015-08-20 02:54:27","300224"
"98693426","14423956","0","@AkshayLAradhya spreading out is an O(1) operation called ""dump the washing bin"". There maybe some reshuffling needed, another O(1) operation","2019-05-07 02:28:46","8045100"
"98695822","522569","0","This representation is useful when I use numba or cython.","2019-05-07 03:36:47","5225993"
"82798750","16238123","1","This is exactly what I needed: something that overwrites untracked files that exist in the remote, and leaves everything else intact.","2017-12-20 10:37:58","4362848"
"36670497","1375234","9","@nawfal: Linq isn't available .Net CF 2.0.","2014-05-23 03:16:16","888479"
"98703965","54697653","4","I have been absolutely livid with frustration about squashing commits and how stupidly complicated it is - just effing use the last message and squash them all to one commit! Why is it that hard????  This one liner does that for me.  Thank you from the bottom of my angry heart.","2019-05-07 08:41:19","2308300"
"22031787","39437","91","To clarify why this doesn't meet the critera provided by the question:
it's not a single expression and it doesn't return z.","2013-03-21 01:15:45","887836"
"22034693","2389361","6","Please unselect the current winning answer, it's unsafe (as many pointed out) though still gathering votes. To me ""MBO""-s looks the best, although it has way fewer points.","2013-03-21 02:23:24","174284"
"22035010","5343267","2","No it's not the perfect one for this question, see the ""assume"" clause. MBO's answer actually covers this case, and the case where the merge is not the only local commit.","2013-03-21 02:29:49","174284"
"22035059","2389407","5","The best answer IMHO, incorporates the OP's own one (assuming only 1 step to revert, which seemed to be the case in the Q), as well as randomguy3's shortcut one(which works when ""your master branch didn't had any local changes"")","2013-03-21 02:31:01","174284"
"98712185","44781228","0","When branches get deleted on origin, your local repository won't take notice of that.

You'll still have your locally cached versions of those branches (which is actually good) but git branch -a will still list them as remote branches.

You can clean up that information locally like this:

`git remote prune origin`
Your local copies of deleted branches are not removed by this.

The same effect is achieved by using
`git fetch --prune`","2019-05-08 06:33:45","1436594"
"82813927","52704","60","hitting `git status` gives a suggestion on how to do that!  `git checkout -- .`","2017-12-21 10:42:13","5256516"
"7193140","135139","2","The link is (effectively) broken now.","2011-05-31 08:06:23","63550"
"36690393","9180445","5","The information on git cherry-pick is nice, but the commands in this post don't work. 1) the 'git checkout newbranch' should be 'git checkout -b newbranch' since newbranch doesn't already exist; 2) if you checkout newbranch from the existing master branch it ALREADY has those three commits included in it, so there's no use in picking them. At the end of the day to get what the OP wanted, you'll still have to do some form of reset --hard HEAD.","2014-05-24 09:08:16","446464"
"52185828","2334741","14","Somewhat related, I often like to write my UPDATE queries as SELECT statements first so that I can see the data that will be updated before I execute. Sebastian covers a technique for this in a recent blog post: http://sqlity.net/en/2867/update-from-select/","2015-08-21 07:48:36","1189592"
"36691997","682343","6","just goes to show how unintuitive and convoluted git is. instead of having parallel ""undo"" commands, you have to find out how to undo them. Like trying to free your leg in quick sand, and then getting your arm stuck, then getting your other arm stuck... every command should be done through GUI, with dropdown menus items for the options... Think of all the UI, productivity gains we've had, but we have this mess of a retro command line interface. It's not like the git GUI programs make this any more intuitive.","2014-05-24 10:54:36","2951835"
"36700227","11551718","69","Because a data URL contains the protocol ""data:"", and the identifier, it's everything you need to LOCATE that ""file"" (even if the ""Filesystem"" is the space of all possible files). It is therefore a URL, which is also a URI. (But definitely not ""not a URL"")","2014-05-24 06:19:56","2184580"
"98719355","47627685","0","This will also remove changes staged for commit, not only untracked files, which may not be what you want.","2019-05-08 10:26:20","2592309"
"7204258","180085","69","Never EVER do this (or rebase in general) if you have already pushed upstream!","2011-05-31 07:14:04","55254"
"36710459","14419556","0","+1 For the parallel solution, you can create a thread for each Color with its own list, if they go in sync, they can read the same data-structure with no wait","2014-05-25 08:37:03","2128327"
"115068928","46888156","3","I really have no idea why `git` command is so inconsistent and unintuitive to remember. Looks at the deletion, one is `-D`, another one is `-d|--delete`","2020-12-01 09:18:19","3164091"
"115069537","5767357","9","@Andrew sets and arrays are two completely different collection types.","2020-12-01 09:44:04","3314225"
"115071122","51522896","0","People who know only Java will never understand that ""passing by reference"" means nothing else than passing a reference (which is, basically, a pointer) by value. Which. of course, is what the JVM does.","2020-12-01 10:44:02","86604"
"7213475","682343","2","Did this and it deleted all my other existing files - unchanged - from the git backup. Re-adding them makes everything larger and destroys the proper history. Git is totally an unfinished project.","2011-06-01 09:09:18","87520"
"98735982","16047306","18","let's not forget that Docker for Mac and Docker for Windows do use the virtualization layer.","2019-05-08 06:43:57","768653"
"82854689","47500217","2","Why would you answer a 9 year old question, which already has 49 answers, which also has an accepted answer with over 5k upvotes, with an answer that contains a weird analogy and doesn't explain anything what has not been said already?","2017-12-22 01:49:14","2770280"
"7220872","1109022","17","What if you have only one EditText and several buttons, like check boxes and radios? The only place you need the keyboard is in the single EditText. How do you register to know that something else was chosen/clicked in order to hide the keyboard?","2011-06-01 03:48:11","435605"
"52212681","26433646","6","Exists doesn't differentiate between a file and a directory. os.path.isfile is a better way of checking whether file exists.","2015-08-23 02:12:50","4289417"
"52214035","16131743","0","@DanDascalescu The first line in your script needs to be `#!/bin/bash`","2015-08-23 05:07:50","558709"
"22082014","8439617","1","The question specifies 'JavaScript'. A CSS solution doesn't provide this.","2013-03-22 06:01:58","169334"
"115088691","5767357","0","@StefanFabian Yes, they are, but in many many cases they will be interchangeable.","2020-12-01 09:08:10","1599699"
"115092103","33092860","0","**Note:**
These imports didn't work for me.
Import statements have changed, as stated in the repo:
`const { v4: uuidv4 } = require('uuid');`
and ES6:
`import { v4 as uuidv4 } from 'uuid';`","2020-12-02 12:09:43","10947997"
"7239700","114553","52","and if you don't know the width? Say because the content is dynamic?","2011-06-02 03:45:28","128511"
"82876896","31478567","3","it all depends on the version of the python we are using. In 3.5 and above {**x,**y} gives the concatenated dictionary","2017-12-23 03:50:00","4667943"
"52233367","27476145","0","Yes, if you are going to post a black box answer please dig up the RegEx behind the email parser function and show us what it's using..","2015-08-24 02:09:39","2623804"
"98763114","47627685","0","Doesn't work: leaves some files. `git clean -ffdx` is the solution","2019-05-09 02:17:53","529442"
"22101516","9494042","5","You're using a hide flag in the showflags parameter. This only works because the constants use the same integers. [Example using the correct flags](http://stackoverflow.com/a/15587937/197359)","2013-03-23 02:35:12","197359"
"98765134","246128","1","The one-liner fails on OSX El Capitan, because of Bash Sessions, which pollute the output with `Saving session... ...copying shared history... ...saving history...truncating history files... ...completed.` 
This works:
`read DIR < <(cd ""$( dirname ""${BASH_SOURCE[0]}"" )"" >/dev/null 2>&1 && pwd)`","2019-05-09 03:13:53","2312060"
"22101754","15396882","1","Very clever. If the user wants another search, just click search again.","2013-03-23 02:48:56","197359"
"22105835","1985476","11","@DoctorT that's what `unsigned` is for","2013-03-23 06:39:13","1350209"
"98778540","53077310","0","An explanation would be in order.","2019-05-10 01:40:56","63550"
"52254047","18994918","6","On your third example, I create a link named `filepath` with the right timing, and *BAM*, you overwrite the target file. You should do `open(filepath, 'wx')` in a `try...except` block to avoid the issue.","2015-08-24 02:05:09","3212865"
"115124217","10563611","0","Most importantly to me if it doesn't exist it doesn't create one.","2020-12-03 01:07:30","561710"
"115124375","231855","3","The yield statement suspends function’s execution and sends a value back to the caller, but retains enough state to enable function to resume where it is left off. When resumed, the function continues execution immediately after the last yield run. This allows its code to produce a series of values over time, rather than computing them at once and sending them back like a list.","2020-12-03 01:23:36","14527222"
"115125079","32420732","0","See earlier comment 32

this is good, but the problem with this is that it must be inside a form tag and submitted by a submit input, which not everyone has the luxury of doing. Also, you can't really style the error message. – @Jason Nov 12 '11 at 0:08","2020-12-03 02:24:27","10002945"
"115127186","11237235","4","https://stackoverflow.com/questions/9745389/is-the-ternary-operator-faster-than-an-if-condition-in-java","2020-12-03 05:32:04","3924108"
"82904650","25938347","3","packaging applications in containers is an interesting and valid approach. However if you packaged it in docker this would be overkill, as there would not be straightforward support for dependencies or any shared libraries. This is exactly what new packaging tech like Ubuntu Snap and Flatpak for Redhat are trying to achieve. In my opinion, one of these packaging tech will win and become the future of packaging in linux.","2017-12-25 10:08:15","6419701"
"52259719","19670755","0","explaining things using short and effective language is also a desirable skill","2015-08-24 04:27:49","719278"
"22126033","487278","5","Viewers, don't forget that the mistake in this answer is confusing Big-O, Omega, and Theta. Read this answer, appreciate it, then look-up Theta (rough expected case) and Omega (rough lower bound); because Big-O is exclusively the rough upper bound.","2013-03-24 06:36:53","992184"
"98796976","1628584","0","worked for me only with creating a new branch. Moving to an existing branch wasn't possible","2019-05-10 02:17:49","7513730"
"98801135","39858","11","@amcgregor You missed the key phrase ""if y has any non-string keys."" That's what doesn't work in Python3; the fact that it works in CPython 2 is an implementation detail that can't be relied on. IFF all your keys are guaranteed to be strings, this is a fully supported option.","2019-05-10 04:27:02","3207"
"22139413","79936","43","""Responsible for memory leaks"" - Heaps are not responsible for memory leaks! Lazy/Forgetful/ex-java coders/coders who dont give a crap are!","2013-03-25 08:22:06","344398"
"82926824","47500217","1","Because there are to many professional misuses of JavaScript no matter how old they are. And you for instance was unable to understand what's it all about and capture the essence of the difference Live Script makes in contrast to static type languages. And why do we need its intelligent dynamics. JavaScript  was made for creative intelligent people not for dorks.","2017-12-26 01:13:19","5896426"
"82933650","237028","8","@pedro You have misunderstood that sentence. It means that python performs the two mentioned steps on `mylist` (not on `otherlist`) when executing `otherlist.extend(mylist)`.","2017-12-26 06:53:57","2099607"
"68296426","38047510","89","You sir deserve a +1 just for the effort of trying a 300MB URL","2016-11-10 12:57:10","832998"
"36800675","11551718","6","@DoubleGras Google Chrome for Mac does not allow me to paste a URL that long into my address bar","2014-05-27 11:34:56","699700"
"36801920","5480292","95","And just in case someone wonders how to delete multiple tags at a time you simple list them using white space, e.g. `git push --delete origin tag1 tag2`. Same is valid for local tags deletion `git tag -d tag1 tag2`","2014-05-28 12:54:24","407986"
"82938400","44078785","5","This is not UUID though?","2017-12-26 11:28:06","1519186"
"52292375","477578","0","@kavain: In such environments, it's common to keep sessions in a database (hosted on a separate server). This decouples sessions from the specific web server handling the request (stateless HTTP FTW) and has a minimum security level equal to your database security, which is usually a good thing","2015-08-25 12:36:42","57068"
"82945964","47500217","1","Yes I agree there are many misuses of JavaScript. However I still think your analogy is weird as in it can be easily misunderstood, and it does not cover the core basics in a meaningful way.","2017-12-27 08:22:29","2770280"
"22162830","873856","6","You should declare the array size beforehand rather than sizing it dynamically as you build the GUID. `var s = new Array(36);`","2013-03-25 08:03:59","1195036"
"98832132","44231561","0","@v010dya Fixed the answer, now it's `test-write-execute` as in the question, thanks for pointing out!","2019-05-12 10:59:49","7616532"
"36820115","11551718","2","Thanks for the info. I've just tested it successfully on Firefox and Chrome, Windows. So… it simply depends ;)","2014-05-28 12:09:00","289317"
"115178633","336868","4","The sentence ""due to hoisting"" might give a wrong impression that only the named function gets hoisted. In fact, both `var functionOne` as well as `function functionTwo` get hoisted to some degree - it's just that functionOne is set to undefined (you could call it half-hoisting, variables always get hoisted only to that degree) whereas function functionTwo is fully hoisted in that it's defined and declared. Invoking something that's undefined will of course then throw a typeError.","2020-12-04 07:19:45","1399132"
"68324196","630475","0","""With POST you can have 2 requests coming in at the same time making modifications to a URL, and they may update different parts of the object."" .......... you mean POST can update?","2016-11-11 07:03:20","760393"
"68324226","630475","0","""Used to modify and update a resource"" ....... you must meant 'or' here - right ?","2016-11-11 07:04:15","760393"
"115190113","45323085","0","Tried `numpy_flat` on the test example from Rossetta Code ([link](https://rosettacode.org/wiki/Flatten_a_list#Python)) and got `VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray`","2020-12-05 11:08:25","9962007"
"115192350","8888015","0","sorry. Too complicated. Just remove and clone again instead...","2020-12-05 01:46:42","12479791"
"52320492","348179","10","Isn't this going to remove the file altogether?","2015-08-26 05:29:10","1217913"
"22196949","10439581","0","Cool solution, however, if your front activity is not fullscreen, the keyboard is visible behind it. Also the keyboard's cursor movement aid is also still visible. And it's not skinnable.","2013-03-26 05:42:09","1015642"
"115209161","56117578","0","Good point @Edric.
I've updated the answer.","2020-12-06 11:18:08","579381"
"115214351","32484278","0","I'm getting everything up to date","2020-12-06 04:33:15","1011803"
"7334842","3407920","20","This was super helpful because I had a lot of merge errors with binary files (art assets) and merging those seems to always fail, so I need to overwrite it with the new file always and not ""merge""","2011-06-08 05:39:40","45979"
"68354835","35851710","1","Those are all URN's?  I'm still unsure of the semantics of each but, syntactically, I thought that a URN has no slashes (//).  See https://en.wikipedia.org/wiki/Uniform_Resource_Identifier  Or is the lack of // just the typical case and not a syntactic requirement of a URN?","2016-11-12 01:22:09","1220437"
"115228345","12429953","34","Java always passes arguments by value, but what you are passing by value is a reference to an object, not a copy of the object. Simple eh?","2020-12-07 08:48:06","692626"
"115233534","38776671","1","you must disclose affiliation when linking to external resources you're the author of.","2020-12-07 12:18:01","6451573"
"82990724","30123193","0","Man, this should be at the first page at very least","2017-12-28 04:42:29","3995261"
"82991670","47500217","0","The analogy given is the best ever illustration of their difference and the quality of use case. This is the best short essay to learn the absolute essence even if you are a complete newcomer to JS. And is equally good, probably better than my late answer on how to empty a JS array [for real].","2017-12-28 05:14:36","5896426"
"115247986","55628158","1","Glad to find this answer here. There is a difference and it's important.","2020-12-07 08:58:39","1339280"
"68368582","2584185","14","They're _applied_ as the 2 separate operators they are. They're only _written_ misleadingly to look like ""a single one"".","2016-11-12 05:56:09","2757035"
"68368604","12016806","2","@BenLeggiero That could 'work' in the sense of generating code that does something (while infuriating readers who don't like faux-clever code), but the semantics are different, as its use of predecrement means it will execute one fewer iteration. As a contrived example, it would never execute the loop body if `x` started at 1, but `while ( (x--) > 0 )` would. {edit} Eric Lippert covered both in his C# 4 release notes: https://blogs.msdn.microsoft.com/ericlippert/2010/04/01/some-last-minute-new-c-4-0-features/","2016-11-12 05:57:29","2757035"
"115250915","64506366","1","Good strategy. Couple of fixes for the code, though: I think you mean `a-zA-Z` instead of `a-zA-z`. But in either case, you have `i` flag in your regex, so you really just want `a-z`. But you also don't need the `i` flag because if the first char _isn't_ lower-case, you don't need to perform any replacement on it.","2020-12-07 11:23:18","507721"
"82996812","30123193","0","I would go `str = str.charAt(0).toLocaleUpperCase() + str.substr(1);`, though, to make this shorter","2017-12-28 08:31:24","3995261"
"98863557","80113","1","@sqykly Would it be proper to call older games OSs in and of themselves? They have some kind of graphical interface, manage low-level I/O, and have full access to all the hardware, as well as running as the ""root-level"" process. It's for these reasons that I've always seen them this way, and even consoles as new as the Wii only really ran one thing at a time: the HOME menu was built into each and every game, rather than being provided by the ""main OS"" (the main menu), which doesn't run in the background at all. Excluding newer consoles, most older games seem to each fill the role of an OS.","2019-05-13 03:01:28","690395"
"22220655","477578","0","Does anyone know where I can find a vetted PHP/MySQL implementation of Charles Miller's almost-10-year-old ""Persistent Login Cookie"" solution?  Please post it here:  http://stackoverflow.com/questions/15647261/where-can-i-find-a-php-mysql-implementation-of-charles-millers-persistent-logi","2013-03-27 11:25:38","869849"
"98867230","6866485","1","As mentioned by @Kidburla, when using `git reset --hard HEAD~1` deletes the current changes that were not commited. It's a bit confusing because it seems that (F) is representing these changes and you keep (F) after `reset --hard`. There should be a warning or something to prevent people from deleting their changes. Or you could also represent the ""uncommitted changes"" in the examples.","2019-05-13 05:09:17","9006048"
"83003503","4456438","4","Referenced on BBC: http://www.bbc.com/future/story/20160325-the-names-that-break-computer-systems","2017-12-29 03:55:46","260007"
"36863975","180085","1","This worked really well for me in a Git-SVN workflow where one git commit message in a batch of changes was rejected by an SVN pre-commit hook. I was able to reword and then the dcommit worked.","2014-05-29 01:32:15","294245"
"98869467","56117578","2","While this command may answer the question, providing additional context regarding why and/or how this 
code answers the question improves its long-term value. [How to Answer](https://stackoverflow.com/help/how-to-answer)","2019-05-13 06:40:57","2016162"
"7352624","1628584","32","I'd change 'git reset --hard HEAD~3' into 'git reset --hard origin/master'. Then you don't have to know how many commits you are ahead of master. It will sync your local master with the master on your server.","2011-06-09 03:31:28","1421542"
"36866384","237148","4","[IE9 now supports this](http://stackoverflow.com/questions/3629183/why-doesnt-indexof-work-on-an-array-ie8)","2014-05-29 02:33:11","542251"
"115259910","11227902","5","I have a hard time understanding the explanation. Because, even with branch predictor, isn't the computer still need to know if it guessed right or wrong in the end? Because if not, how will it know if it should do the rollback? And for knowing if it is right or wrong, isn't we need to compute the result of the if condition nonetheless? Which in the end, will consume the same resource without branch prediction, or even slower because we need to correct mistakes?","2020-12-08 09:26:56","8736053"
"98874872","33748600","0","I liked your method, it's highly unusual. However, I don't get why it would ""cause memory issues much faster""?","2019-05-13 11:28:29","4759176"
"36873707","10976934","18","Classic. I don't buy the argument that you must limit usability because someone might misuse a feature. That's simply dogmatic and short-sighted. The right thing to do is create a mechanism for including comments in JSON, just like every other language. We shouldn't be wasting bandwidth on a pointless philosophical jihad about maintaining ""purity"". Get over it, add comments, move on.","2014-05-29 05:52:44","2073814"
"68405497","163659","0","Should I use [meld](http://stackoverflow.com/a/137141/444079) to resolve conflicts?","2016-11-14 09:12:33","444079"
"7374748","163659","18","This opened KDiff3. Which I have absolutely no clue how to use.","2011-06-10 06:46:25","160173"
"115281010","5767357","3","You can simplify this solution by counting down instead of up: for ( var i = ary.length - 1; i >= 0; i-- ) { if ( ary[i] === value ) { ary.remove(i)} }","2020-12-08 10:30:20","3831435"
"98893489","42902131","3","This is what exactly i was actively looking for","2019-05-14 01:08:25","7098524"
"22239753","12791414","15","This works. One addition: If you have a branch and a tag with the same name, you can put the word `tag` before your tag name to make sure you get the tag, not the branch.","2013-03-27 08:08:57","46575"
"115287811","11227902","4","@HannaMcquaig Always has been","2020-12-09 07:05:41","10915534"
"22244735","178450","2","For other users wondering if this really does work in IE7, this might save you some time - it works, jquery 1.9.1: http://imgur.com/uKD4t8h","2013-03-27 11:02:55","176877"
"22247521","426277","6","I tried this exact code and it didn't work for me in the case of a select all / select none checkbox that needs to check and uncheck all as well as check their state. Instead, I tried @Christopher Harris' answer and that did the trick.","2013-03-28 01:26:21","530967"
"115297133","9329476","0","What do you mean by non-element properties?","2020-12-09 01:08:41","14747039"
"115297459","9329476","3","@Alex - Properties on the array that don't represent array elements. For example: `const a = [""a"", ""b""]; a.example = 42;` That array has three properties (other than the ones all arrays have), whose names are the strings `""0""`, `""1""`, and `""example""`. The property named `""example""` is a non-element property. The other two are element properties, because they represent the elements of the array.","2020-12-09 01:18:42","157247"
"22254556","59895","88","@jpmc26 There are two very common situations: Accidents and sabotage. A script shouldn't fail in unpredictable ways just because someone, somewhere, did a `mkdir $'\n'`.","2013-03-28 08:14:48","96588"
"22257946","8099186","0","@TomAuger You could use jQuery.support, it allows you to check for single features : [Link](http://api.jquery.com/jQuery.support/)","2013-03-28 10:10:17","2167128"
"36915763","163659","5","Or you can learn how to use vimdiff: http://www.rosipov.com/blog/use-vimdiff-as-git-mergetool/. It's actually much simpler than it looks.","2014-05-30 07:15:58","2578489"
"22266182","8099186","0","Yeah, but what exactly are you going to query in terms of support? I wasn't aware that you could query support for a particular CSS property...","2013-03-28 01:59:45","467386"
"52415368","244858","57","you could also use ""//"": this looks more native and is still repeatable in the same parent","2015-08-28 09:59:50","1990451"
"98903831","33748600","1","@parsecer because instead of running out when the RAM can't handle the memory being used, it dies when the stack can't handle more stack calls, which is a lot smaller of a number on any reasonable system.","2019-05-14 06:20:27","8200485"
"98906894","163659","0","This is super obvious in retrospect, but it tripped me so I will add -- you need to put your cursor over each individual merge conflict to use `diffg`. It will not automatically take the whole file.","2019-05-14 08:15:31","7498750"
"22272796","477578","0","@JensRoland: How would you select the row in SQL when the Token is hashed with bcrypt?  Please answer here:  http://stackoverflow.com/questions/15685951/how-to-check-cookie-token-against-bcrypt-hashed-token-in-db-when-using-persisten","2013-03-28 04:42:56","869849"
"22279445","12231177","4","Is there a version of this that does not change the commit if the regex doesn't find anything?","2013-03-28 08:08:13","390829"
"115323742","20241145","1","After setting `--skip-worktree` for one file, I cannot checkout another branch: `git checkout` says `Please commit your changes or stash them before you switch branches.` although `git status` claims `Your branch is up to date`, `nothing to commit, working tree clean`. So without additional research/explanation this answer might break stuff.","2020-12-10 09:55:06","1821701"
"115327041","32416338","0","I tried doing as suggested in this answer. NO FILES AT ALL were pulled down from the remote repository. Actually not very surprising when you think about it - after all there is no reference at all to `origin/<branch_to_force_pull>`.","2020-12-10 11:58:32","9213345"
"83067153","21409180","0","This is terribly bad advice. As others have pointed out before, the behavior is undefined. Different parsers will show different behavior. Some will return the first ""param"", some will return the second ""param"", some will stop with an error. It was said before, but this advice is so bad that it's worth repeating that it's bad.","2018-01-01 07:12:03","3554264"
"83072618","417184","0","Is the limit inclusive of the length of the URL fragments? IOW, does this answer speak only about the part of the URL before the '#' or does it speak of the total length of the URL (inclusive of the part before the '#', the '#' and the part after the '#')?","2018-01-01 02:26:25","5614968"
"83074550","509377","0","Actually there is still something left out e.g. if I type 'apple'[4:-4:-1]
I get 'elp', python is translating the -4 to a 1 maybe?","2018-01-01 04:39:09","5120376"
"98934526","12788094","0","This is dangerous! If you come back again to the form you lost everything!","2019-05-15 03:10:46","4606903"
"22298109","7542639","1","The second part works, but it is a bit clumsy. How line endings are handled, depends on `autocrlf` value... This won't work in every project, depending the settings.","2013-03-29 11:26:58","805284"
"115336563","31869042","0","Thanks for the summary. These steps are indeed powerful :)","2020-12-10 05:28:21","7717679"
"115337792","42263967","0","You had be until you used GOTO: :(","2020-12-10 06:15:03","61934"
"115337822","42263967","0","I often get my kids to help me with this task, which begs the question: Is this thread safe?","2020-12-10 06:16:35","61934"
"115337910","14419556","0","I gave this job to my kids, apparently they use BOGO sort which seems to work perfectly unless it doesn't.","2020-12-10 06:19:53","61934"
"22306659","12231177","3","AFAIK filter-branch --msg-filter will generate new commits in any case. However, you could check within the msg-filter, if the sed succeeded and use this information when the filter-branch operation ends to reset your tree to refs/original.","2013-03-29 04:16:25","710388"
"22307026","14260056","8","For me, using your command above actually creates a new commit with a new commit ID plus an extra commit saying ""merge branch"" as a default commit message.","2013-03-29 04:27:38","1523695"
"52432257","31298778","25","Not sure how `$a <=> $b` is different to `$a - $b`","2015-08-28 05:37:12","3215056"
"83092672","23886515","1","Better is to enclose index inside parenthesis pairs as (index), it will work on both the Python versions 2 and 3.","2018-01-02 11:31:38","6615163"
"115353309","65244249","2","This is almost the same as what [this answer](https://stackoverflow.com/a/55288670/7851470) proposes but with a redundant `flag` variable. Also, `true` and `false` should be capitalized. See [Built-in Constants](https://docs.python.org/3/library/constants.html?highlight=true#built-in-constants).","2020-12-11 09:29:17","7851470"
"115356079","1628334","0","@DanMoulding Why do you use `git fetch origin` ? `origin` being already set in `git reset --hard origin/master`, what would it change if I don't run `git fetch origin` ?","2020-12-11 11:19:27","931247"
"36965047","487278","0","""Traditional computers can't solve polynomial-time problems"" => This sentence is obviously wrong. Since O(n) is also polynomial time. Polynomial time algorithms are faster than Solution to NP and NP-hard problems. There are many n^2, n^3 and probably even higher power polynomial time algorithms deployed out there today, because they are the best available solution and they get the job done.","2014-06-02 06:32:15","1804124"
"115357483","8888015","0","If you run git checkout -b backup-master, you should go back to your branch (master in the example) before running the git reset. Otherwise, you can use git branch backup-master instead to create the backup branch but stay in master.","2020-12-11 12:19:53","1802750"
"52449362","7244321","2","Is this a duplicate of http://stackoverflow.com/questions/3903817/pull-new-updates-from-original-github-repository-into-forked-github-repository ?","2015-08-29 12:06:52","238320"
"68494559","4089452","1","But the original URL doesn't have to be the URL of the currently used remote. To show the actual used URL, you would need this solution then: http://stackoverflow.com/a/40630957/1069083","2016-11-16 11:30:10","1069083"
"36969484","2432799","39","I also had to `git remote set-url --push origin git://...` in order to set the origin ... (push) url.","2014-06-02 09:12:12","977939"
"52452679","932982","1","@GreenAsJade, but when you add files later, you probably *want* to delete this placeholder .gitignore. And when you do that, the files are tracked. I'm not saying your point is wrong, just a real edge case.","2015-08-29 03:15:51","1212596"
"115364799","1628584","0","Use ""git reset --soft"" to keep the changes locally","2020-12-11 04:37:22","2590485"
"115367367","62359248","0","works like a charm. Better than trying to generate manually. Very clever!","2020-12-11 06:15:25","2409545"
"36978809","7359734","0","If I can't guarantee teh results of a merge, and I can guarnatee the results of doing separate insert and update statments, then it is a bad idea to use merge.","2014-06-02 01:34:20","9034"
"22352249","10459739","24","This won't work for iterating through generators. Just use enumerate().","2013-03-31 06:24:21","548696"
"36984961","12077178","0","@squidbe: This was an old answer but I think that depends on how your JS is written.  If you didn't want that to fire, I think you would `onclick=""return run_foo()""` and have run_foo return `false` or just add a `return false` line after the function is called.  The point of this answer was that you could remove href tags when JS is enabled.  The ideal solution would be to populate the href with a fail-safe link most likely to a server-side rendered page `href=""render/full_page.script?arg=value"" onclick=""loadAJAXContent.call(this); return false""`","2014-06-02 04:13:33","183181"
"36988177","12077178","0","You are correct about the fail-safe solution. My point was that the href attribute value is not intended to ever be an empty string, and setting it to empty can cause unwanted side effects. Even when you return false, if there are errors in your script, the undesired request and undesired Windows behavior still occur. If the option is between leaving the hash in the href and removing it via script, I think it's better to leave it.","2014-06-02 06:03:39","597460"
"36993592","682343","2","@BarryKelly no it is not the correct answer. What you actually want to do is either `git reset` to undo all added files or `git reset <file>` to undo a specific added file. `git rm --cached` may work on the surface but what actually happens is it removes it from the tracking history as well which is not what you would want to do, unless, you added that file to a gitignore file where that file shouldn't have been tracked in the first place then in that case it would be ok.","2014-06-02 09:14:06","754854"
"68522636","487271","0","Couldn't get this one - `Hashtables are generally amortised (~= ""on average"") O(1) — once they're set up`? How does that happen? Even after creating hash of every key in the dictionary, dictionary data structure will have to do some binary look-up when I ask it for a key and its respective value pair. Isn't it?","2016-11-17 01:40:46","465053"
"115393682","2059394","0","This was the only one that worked for in 2020. I have a edit text on the main activity and don't want the keyboard to come up when starting the app.","2020-12-13 12:58:31","11181028"
"98969496","26853961","0","Strings only limitation for keywords expansion is enough to rule out `{**x, **y}` method. However, the `items` approach can be made workable by converting `dictitems` to `list` like `dict(list(x.items()), list(y.items()))`.","2019-05-16 03:00:10","3416302"
"7489188","229157","6","I agree with this option. If the anchor has no purpose other than JavaScript, it shouldn't have a href.  @Fatih: Using jQuery means that if JavaScript is disabled, the link will NOT have a pointer.","2011-06-17 07:32:17","272072"
"98971751","26853961","23","@MohammadAzim ""strings only"" only applies to keyword argument expansion in callables, not generalized unpacking syntax. To demonstrate that this works: `{**{(0, 1):2}}` -> `{(0, 1): 2}`","2019-05-16 04:07:57","541136"
"68530227","487271","2","@RBT: No, it's not a binary look-up. It can get to the right hash *bucket* immediately, just based on a transformation from hash code to bucket index. After that, finding the right hash code in the bucket may be linear or it may be a binary search... but by that time you're down to a very small proportion of the total size of the dictionary.","2016-11-17 07:57:40","22656"
"22381492","14418638","1","For emory: I disagree with the calculation of O(n). What is `k`? `k` is the number of attributes. I would argue `k` is `O(log n)` because it has to be enough to uniquely identify each pair. If you have 2 pairs (black and white), then color (`k=1, n=2`) is enough. If you have one pair of black, short; one pair of black, long; one pair of white, short; and one pair of white, long - then `k=2, n=4`. Then if we limit `k`, we at the same time limit `n`. If we are going to limit `n` then order calculation does not make sense anymore.","2013-04-01 07:01:25","544557"
"68541676","348170","5","If you use Eclipse, it is as simple as unchecking the files in the commit dialogue box","2016-11-17 12:49:17","3270270"
"98980827","48775964","0","[Making benchmarks in Java is not easy](http://tutorials.jenkov.com/java-performance/jmh.html#why-are-java-microbenchmarks-hard) (especially because of JIT).
After reading Benchmark source code, I'm convinced that those values above are not precise and everyone should be careful by believing them.","2019-05-16 10:08:04","1788304"
"83145891","16957078","0","--include-dir flag throws an error and is not mentioned in the grep man page (at least not on my centos nor debian machines).","2018-01-03 09:38:41","8455560"
"83147073","4114095","58","I love git, but the fact that there's 35 answers to something that should be incredibly simple exposes a huge issue with git. Or is it the docs?","2018-01-03 10:26:59","445303"
"37017711","682343","0","@JoeMoe1984 git reset doesn't work on empty repos (initial imports)","2014-06-03 01:40:23","3712"
"37021137","5201642","0","I like this solution in general but like providing my own commit message.  [**Here**](http://stackoverflow.com/questions/7275508/is-there-a-way-to-squash-a-number-of-commits-non-interactively/24018435#24018435) is a solution that sets up an alias so that you can do **git squash 3 'my commit message'**","2014-06-03 03:02:50","1202867"
"22388647","14472341","0","Ok, that's better, although it's still quite wrong ... this question is not about that. Whether or not the Church-Turing thesis is correct, both humans and our computers can sort socks. (The reality is that, humans, being highly finite entities, have far less computational power than Turing Machines ... and the same is true of our computers, but the limitations are different.)","2013-04-01 11:52:46","544557"
"37025314","179231","7","`readlink -f` is GNU-specific. BSD `readlink` does not have that option.","2014-06-03 04:48:15","805227"
"22389770","14472341","0","I disagree. Of course any of our current computers is essentially and enormous DFA (modulo i/o differences) rather than a TM.  Any analog device, however, such as our bodies, is capable of emulating an infinite tape.  We don't yet have a useful characterization of the way our minds compute.","2013-04-02 01:10:09","1161878"
"22390988","14472341","0","No infinite tape for humans or other physical devices because nothing in the human brain has infinite resolution, nor could it. It would also help to learn some neuroscience. In any case, there was no deep philosophical question here, regardless of your desire to inject one. But believe what you will ... this isn't the place for this sort of debate and I've had it too many times before. But I'm always amused by people who can barely solve the simplest problems (that's all of us) imagining that they are TM-equivalent.","2013-04-02 02:43:23","544557"
"115412438","58170871","0","[TODO] Include new functionality in PHP8 to use the splat operator with ""named parameters"" ref: https://stackoverflow.com/a/64997399/2943403","2020-12-14 01:10:24","2943403"
"7507154","60014","0","for `if [[ -d ""$TARFILE"" ]]` I'm getting [[: not found","2011-06-19 02:48:51","13198"
"115414421","20093702","1","The use of `lambda` functions is an overkill for this question","2020-12-14 04:29:48","6296285"
"37026808","682343","0","@BarryKelly I tried to edit my comment as I reread yours but I was too late. I missed that part of what you wrote ;). 
But yeah you're right, that would be another instance to use `git rm --cached`","2014-06-03 05:33:45","754854"
"83151519","16957078","1","@sf_admin You are right, actually there's no `--include-dir` option. Was wondering when this was included, on my first version? Can't remember. Would be nice if it was possible to see the answer change log like git.","2018-01-04 03:53:24","2231815"
"7508301","477578","249","@Jeff: I'm sorry to hear that you have issues with my reply. I didn't know there was a debate on Meta about this answer, I would have gladly edited it myself if you'd asked me to. And deleting my posts just deleted 1200 reputation from my account, which hurts :(","2011-06-19 05:00:57","57068"
"7519078","549","24","I think it'd be worth talking about sessions (including fixation and hijacking) cookies (the secure and http only flags) HTTP based SSO","2011-06-20 01:08:56","223992"
"22405478","15762612","16","When did `text/javascript` become obsolete? I'm still filling up HTML documents with `<script type=""text/javascript"" ...` tags.","2013-04-02 12:23:12","12870"
"22405922","15762612","8","It makes no difference for browsers, really. It's just obsolete for RFC standards: http://www.rfc-editor.org/rfc/rfc4329.txt","2013-04-02 12:34:43","2090976"
"37033715","826813","34","Highly interactive web app with a lot of drag & drop... accidental highlighting is a big usability problem.","2014-06-03 09:08:07","6791"
"83174685","952946","5","This article explains the maths of the inefficiency https://mathieularose.com/how-not-to-flatten-a-list-of-lists-in-python/","2018-01-04 04:46:19","3691115"
"52524681","23027643","1","Because     :not(':hidden')     is not the same as     is(':visible'). ""Visible"" works with css ""opacity"" not with JQuery ""show()/hide()"". Plus, there is no extra quotation. Every set plays a role in this little code.","2015-09-01 06:42:13","2151420"
"52526118","23027643","1","1) both `:visible` and `:hidden` check CSS element and ancestor visibility and not just the `display: none` as you now suggest. 2) quotes *inside a pseudo-selector* are *not* required if the selector contains only `:` and alphanumerics (e.g. `:not(:hidden)` is the same as `not(':hidden')` (only a little faster) and 3) how will you become better if you cannot accept that you may actually be incorrect sometimes? :)","2015-09-01 07:26:19","201078"
"115448030","44078785","0","For those wondering: `toString(36)` converts in a base-36 numeration (0..9a..z). Example: `(35).toString(36)` is `z`.","2020-12-15 08:57:01","1422096"
"115450098","17789187","1","Why need `getRootView()` , why not `getView()` only?","2020-12-15 10:21:01","3478155"
"83200757","5189600","4","It should be `<after-and-including-this-commit>`","2018-01-05 11:24:43","2011284"
"115455042","122704","9","@Gabriel Hautclocq this is because `A.b` or `B.b` are both referring to the same object in the memory. if `A` had a property with a non-object value (like numbers or strings), it'll be copied normally. But when a property containing an object value is copied, it is copied by-reference, not by-value. Also, keep in mind that an Array is an object in JS. proof: `typeof [] == 'object' && [] instanceof Array`","2020-12-15 01:21:27","1494686"
"115456154","122704","28","@Unicornist Yes and that's why Object.assign does not answer the question which is: ""What is the most efficient way to deep clone an object in JavaScript?"". So at least it should NOT be presented as an ES6 solution for deep cloning. The title ""ES6"" is misleading, at least it should be changed to reflect that this is not a deep cloning method. The ""shallow"" word is easy to overlook and a lot of people just take the simplest solution they find in Stack Overflow without reading everything. It is dangerous to rely on Object.assign for object cloning. Hence my remark.","2020-12-15 01:58:05","1076652"
"68590246","406408","42","Strictly speaking negative loook-ahead makes you regular expression not-regular.","2016-11-18 03:03:19","2014022"
"68590460","406408","80","@PeterK, sure, but this is SO, not MathOverflow or CS-Stackexchange. People asking a question here are generally looking for a practical answer. Most libraries or tools (like `grep`, which the OP mentions) with regex-support all have features that mke them non-regular in a theoretical sense.","2016-11-18 03:08:29","50476"
"68590485","31825535","0","There are more tools that allow it, one of the most impressive being [Ragel](http://www.colm.net/open-source/ragel/). There it would be written as (any* - ('hehe' any*)) for start-aligned match or (any* -- ('hehe' any*)) for unaligned.","2016-11-18 03:09:05","2014022"
"68591542","406408","23","@Bart Kiers, no offense to you answer, just this abuse of terminology irritates me a bit. The really confusing part here is that regular expressions in the strict sense can very much do what OP wants, but the common language to write them does not allow it, which leads to (mathematically ugly) workarounds like look-aheads. Please see [this answer](http://stackoverflow.com/questions/406230/regular-expression-to-match-line-that-doesnt-contain-a-word/31825535#31825535) below and my comment there for (theoretically aligned) proper way of doing it. Needless to say it works faster on large inputs.","2016-11-18 03:33:07","2014022"
"68591805","31825535","2","@reinierpost: why is it ugly and what's the problem with unicode? I can't agree on both. (I have no experience with vcsn, but have with DFA).","2016-11-18 03:39:42","2014022"
"22430316","7359734","18","This was around 10x quicker than the equivalent update...join statement for me.","2013-04-03 02:49:54","68432"
"115460536","105034","1","If anyone wants more options like different versions of the uuid and non standard guid support, REST based uuid generation services like these [https://fungenerators.com/api/uuid/ ] are an attractive option too.","2020-12-15 04:20:37","4220087"
"22432215","7354651","0","Martin - it took me a while to get the knack of what that statement does.  ""It's a select in a where clause but it's not a table subquery?"" was a proposition I was having difficulty wrapping my brain around.  Now that I've got it, I've come to learn how valuable a technique it is, especially for some kinds of Data Warehousing operations.","2013-04-03 04:53:44","116645"
"115461104","62359248","0","The performance is quite worst, but depending on the case it can be enough","2020-12-15 04:37:56","4467741"
"52544962","1628584","2","I'd like to know how to do that with the new GitHub Desktop software, if possible. I know my way around the command line for some things, but git is way too complicated in a text-based environment. Now that an accessible, free, GUI-based official solution is available, I'd like to use that.","2015-09-01 03:24:44","2434444"
"52545535","180085","0","The `git rebase --continue` was not necessary for me, rebase finished already.","2015-09-01 03:39:22","2851664"
"115465876","64908685","0","git merge does not only affect your working copy...","2020-12-15 07:34:37","524504"
"115467246","161813","0","I wrote [a short blog post](http://andrearomagnoli.com/2020/12/14/git-5-useful-pills) with some hints for new git users, I also speak about solving conflicts, maybe could help someone.","2020-12-15 08:29:08","1392008"
"7549874","3499225","9","@Mudu As a general rule, I prefer the expression in an if statement to be a more ""positive"" statement, rather than a ""negative"" one. So if I saw `if (!something) { x(); } else { y(); }` I would be inclined to refactor it as `if (something) { y(); } else { x(); }` (though one could argue that `!= null` is the more positive option...). But more importantly, the important part of the code is not wrapped inside `{}`s and you have one level less of indentation for most of the method. I don't know if that was fastcodejava's reasoning but that would be mine.","2011-06-22 12:05:02","65977"
"22439906","246128","0","Note that `dirname $0` appriach won't work on just started bash shell session. (Of course this is not the case of OP) Try it on just launched terminal. In contrast, `BASH_SOURCE` approach works well.","2013-04-03 09:41:13","246776"
"115484305","16957575","0","[For changing Bootstrap CSS](https://stackoverflow.com/a/57063996/10753968)","2020-12-16 12:10:18","10753968"
"37072917","16363110","10","Example of such a situation?","2014-06-04 07:29:55","1709587"
"7562220","5343267","76","@Carter it actually is not the best answer. It is possible that origin/master may be ahead of your local master just previous to the merge by some commits, in that case this might not give the desired results","2011-06-22 02:55:54","145525"
"83233569","271587","0","Don't think so - I believe it just throws a RuntimeException if validation fails","2018-01-06 02:45:25","184456"
"22450251","11566262","3","`ObjectInputStream` is about deserialization, and the stream have to respect the serialization protocol to work, which may not always true in the context of this question.","2013-04-03 02:17:13","48136"
"68603625","4753609","10","This is a nice solution. Just keep in mind that inner will inherit `text-align` so you may want to set inner's `text-align` to `initial` or some other value.","2016-11-18 09:52:45","488012"
"52559086","89243","5","Is there a way to use variable substitution? IE I tried to do `echo $PATH` by using `call([""echo"", ""$PATH""])`, but it just echoed the literal string `$PATH` instead of doing any substitution. I know I could get the PATH environment variable, but I'm wondering if there is an easy way to have the command behave exactly as if I had executed it in bash.","2015-09-01 11:17:07","3470632"
"115496499","406408","0","Thank you very much, and +1, but I would like to add, that if the string does not contain  the EOF, the correct regex will be ((?!hede).)*   ... Maybe it would be useful to include that into the post, for this comment will be surely lost - there're too many of them.","2020-12-16 07:13:28","715269"
"52581568","32353763","12","There is nothing special about using an object here. It would work as well if you assigned he response directly to `result`. It works because you are reading the variable *after* the async function is complete.","2015-09-02 01:18:11","218196"
"52582948","29011864","4","One may need vendor prefixes as well : `-webkit-transform: translate(-50%,0); 	-moz-transform: translate(-50%,0); 	-ms-transform: translate(-50%,0); 	-khtml-transform: translate(-50%,0); 	-o-transform: translate(-50%,0);`","2015-09-02 01:48:49","812102"
"52588141","9180445","2","Didn't work for me. Error message, ""nothing added to commit"". Previous cherry-pick is now empty. Allow empty or continue.    In any case, it didn't seem to work, commits didn't get moved over.","2015-09-02 03:45:52","295392"
"99066319","178450","1","Does not work with jQuery UI Selectmenu, It says my option is hidden even though it is visible.","2019-05-20 02:20:56","4684797"
"22478425","6796816","0","@Andrew Without --hard it leaves the changes in the working directory. In that case we can create a new branch and commmit those changes on the new branch. Would this approach remove the need of ensuring that others have not pulled your changes?","2013-04-04 08:18:19","161257"
"52598063","89243","0","@KevinWheeler You'll have to use `shell=True` for that to work.","2015-09-02 08:38:24","1399279"
"22499635","10976934","2","@Schwern But YAML does allow `#` comments, so your point is kind of muoot","2013-04-04 05:50:12","227299"
"22500866","10976934","1","@JuanMendes I don't understand why that makes my point about JSON/YAML compatibility moot.  What do you think my point was?","2013-04-04 06:28:59","14660"
"115526811","100146","0","What @BlackShift says. This could use a big, bold warning at the top that the entire answer is deprecated, as it relies on Python 2 which is itself deprecated.","2020-12-17 06:36:21","313768"
"99097268","5343267","0","Instead always resetting the origin/master you could do `git reset --hard @{u}`","2019-05-21 01:22:26","3543808"
"22509046","10976934","0","@Schwern I took your point to be it shouldn't have comments because it makes it not a subset of YAML. I'm saying that YAML does have comments, so it seems wrong to use that as a reason why you wouldn't have comments in JSON.","2013-04-04 11:22:22","227299"
"68660753","20388370","5","If you edit your answer to replace `.gitkeep` with any other non git-prefixed file name you get my upvote, I think this one is the best and most informative answer. Reason: I think "".git*"" should be reserved for git prescribed files, while this is just a mere placeholder. My first guess when I saw that is that for example a "".gitkeep"" file would be auto-ignored (that would be a nice feature) but that is not the case, right?","2016-11-21 09:34:01","7023554"
"68661553","35374073","5","There's no -f option for readlink on MacOS. Use `stat` instead. But still, it shows `.` if you are in 'this' dir.","2016-11-21 09:55:33","628633"
"22511589","10976934","4","@JuanMendes Not so much ""shouldn't"" as it simply is a benefit of the change (personally I find it a pain that I can't comment in JSON files). Keep in mind that JSON is also a subset of Javascript, and YAML and Javascript have mutually incompatible comment syntax. YAML uses `#` but Javascript uses `//` and `/* */`. JSON can't use `#` as a comment without becoming incompatible with Javascript. JSON can't be a subset of both YAML and Javascript and have comments.","2013-04-05 02:26:06","14660"
"83287501","179147","0","the [GitHub documentation](https://help.github.com/articles/changing-a-commit-message/#amending-older-or-multiple-commit-messages) is really helpful on updating the message of a previous commit with interactive rebase","2018-01-08 04:30:01","795398"
"115552806","952914","0","https://stackoverflow.com/questions/50259290/tensorflow-flatten-vs-numpy-flatten-function-effect-on-machine-learning-training   (this article explain the difference between an np.flatten() and a tf.flatten() use (static vs dynamic) ndarray.","2020-12-18 04:48:11","4001177"
"83292891","244777","1","https://www.oreilly.com/learning/adding-comments-in-json has 2 ways to do add a comment functionality to your JSON file","2018-01-08 07:32:15","2630882"
"52636574","25534469","1","I'm learning about LXC, correct me if I'm wrong, but it could be some sort of virtualenv? but obviously broader, not just circunscripted to python for saying","2015-09-03 06:35:12","2089267"
"115559950","16957078","0","Thank you. Is there a way to include a wild card (`*`) in the pattern, so if I wanted all files containing a word starting with `beginning`, I could put `grep -rnw '/path/to/somewhere/' -e 'beginning*'`, but this doesn't work.","2020-12-18 10:05:54","8796340"
"52638330","176264","4","@hippietrail, thanks for bi-directional links between the two, much prefer the accepted answer on [webmasters stack exchange](http://webmasters.stackexchange.com/questions/19101/what-is-the-difference-between-a-uri-and-a-url)","2015-09-03 07:25:56","573057"
"37150835","681238","0","There is no such method as toSource()","2014-06-06 06:04:01","1269946"
"68705380","1274057","102","An important question is: should the file remain in the repository or not? Eg if someone new clones the repo, should they get the file or not? If _YES_ then `git update-index --assume-unchanged <file>` is correct and the file will remain in the repository and changes will not be added with `git add`. If _NO_ (for example it was some cache file, generated file etc), then `git rm --cached <file>` will remove it from repository.","2016-11-22 10:45:06","2614041"
"115567293","1628334","1","I had new files in my branch. So fetching and reset didn't delete them automatically. Otherwise all other changes were overwritten by the remote. Thank you","2020-12-19 10:10:43","1568464"
"115570095","506004","27","I created this 5 years ago after seeing your answer https://imgflip.com/i/11ua9c","2020-12-19 01:24:55","2137483"
"52649525","16175525","7","It should be noted that if you're attempting to remove secret information before pushing to a shared repository, doing a revert won't help you, because the information will still be in the history in the previous commit.  If you want to ensure the change is never visible to others you need to use `git reset`","2015-09-04 04:52:01","85306"
"99133891","36040444","0","Note: checking out '5456cea9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b <new-branch-name>

HEAD is now at 5456cea... Need to delete Exclusions.xslt from Documentation folder. - Delete
What should i do after this","2019-05-22 02:02:25","5091077"
"99134572","38764000","0","How about updating the answer to Python 3?","2019-05-22 02:20:17","7851470"
"115585824","17642237","0","is a@b valid email ?","2020-12-20 10:17:24","3058254"
"52676791","23839198","0","`git ls-files --ignored --exclude-standard | xargs -d""\n"" git rm --cached`","2015-09-04 06:16:48","236871"
"115586311","14620228","0","git reset --hard HEAD^1 gives me this error ""fatal: ambiguous argument 'HEAD1': unknown revision or path not in the working tree.""","2020-12-20 10:55:17","474798"
"52683378","19655633","1","If you're really determined to add comments to your JSON, it would make much more sense to do something like this:
`{
   ""comment-001"":""This is where you do abc..."",
   ""comment-002"":""This is where you do xyz...""
}`

This keeps the name unique and lets you add whatever string value you like. It's still a kludge, because comments should not be part of your JSON. As another alternative, why not add comments before or after your JSON, but not within it?","2015-09-04 10:51:17","999082"
"7657774","3195229","1","Wouldn't this create a new instance for every iteration over the enumeration?","2011-06-28 03:04:18","81112"
"7681557","2389423","1","In my case, git log showed a merge commit and listed the two parent commits that were merged to result in the merge commit.  I used git log to determine which of the parent commits listed belonged to the branch I merged in to the current branch, and then reset to the other commit (since that had to be the current branch's HEAD prior to the merge).  I would be wary of doing using the `HEAD~#` notation, since you probably don't know how many commits were brought in with the merge.","2011-06-29 05:55:05","113719"
"37199423","179231","4","What's with all the unnecessary subshells? `([ ... ])` is less efficient than `[ ... ]`, and there's no advantage taken of the isolation offered in return for that performance hit here.","2014-06-09 03:37:19","14122"
"37199457","1815323","4","-1: The `function` keyword isn't available on POSIX shells, and is a needlessly incompatible bash/ksh/&c. extension. Also, if you're on a shell new enough to have that extension, you don't need the test ""x[...]"" hack.","2014-06-09 03:41:03","14122"
"37199472","201915","1","""Always""? Not at all. `which` being an external tool, you have no reason to believe it behaves identically to the parent shell.","2014-06-09 03:42:39","14122"
"83365814","39067220","7","It may sound opinionated; but what it essentially says is that it the Python syntax is likely to be understood by a person who never saw a ternary operator, while very few people will understand the more usual syntax unless they have been told first what it means.","2018-01-10 05:12:28","4334041"
"83366383","1985312","0","Maybe I missed that part, but I don't see any reference in the provided link to them removing the distinction between URL and URI, only acknowledging the confusion and wanting specs that are incorrectly referencing URL to be updated to reference URI instead.","2018-01-10 05:28:45","186541"
"99180135","14260056","1","I tried this on a commit that was 5 behind HEAD and moved to a new tree. I had to do `git reset --hard <commit-hash>` to return to the latest tree.","2019-05-23 09:20:56","9251158"
"83370896","40058417","0","So, if I deploy my docker image with 15 different boxes which have all different OS/version combinations, all my docker images will run same?","2018-01-10 07:52:50","929902"
"99184176","32299832","4","Was surprised to discover that Firefox still requires the vendor prefix in 2019. I disregardfully used only `user-select: none;`, thinking the standard would be adopted by now, but sadly it has not. Makes you wonder what the people on the standards committee could still be debating. ""No, you guys... I *really* think it should be `user-select: cant;` because it's like more descriptive, you know?"" ""We've been over this, Mike. We would have to omit the apostrophe, and that's bad form!"" ""Enough, everyone! We will deliberate on this matter again next month. Standards Committee meeting adjourned!""","2019-05-24 03:19:36","2454914"
"37204603","13308092","1","What tool you have used to draw this image?","2014-06-09 08:24:46","2705907"
"22590312","271616","8","A security hole? The JDK is full of code like this. If you don't want the user to see stacktraces, then just disable them. No one implied that the behaviour is not documented. MySQL is written in C where dereferencing null pointers is undefined behaviour, nothing like throwing an exception.","2013-04-08 12:39:35","298029"
"83374712","48170454","0","That's just a more complicated and a bit slower way of what ᴡʜᴀᴄᴋᴀᴍᴀᴅᴏᴏᴅʟᴇ3000 already posted before. I reinvented his proposal yesterday, so this approach seems quite popular these days ;)","2018-01-10 10:03:32","9059420"
"99194383","1671095","0","The problem with this method, is that if you have an important piece of code depending on the file not existing, putting it in the `except:` clause will make that an exception arising in this part of your code will raise a confusing message (second error raised during the processing of the first one.)","2019-05-24 10:43:34","9077457"
"99196901","215813","16","I do not understand what this answer means and why it was upvoted. You can use `typeof(string)` in reflection. Example one: `if (someMethodInfo.ReturnType == typeof(string)) { ... }` Example two: `var p = typeof(string).GetProperty(""FirstChar"", BindingFlags.NonPublic | BindingFlags.Instance);` Where is it that you must use `String`, not `string`? If you try things like `Type.GetType(""String"")` or `Type.GetType(""string"")`, neither will find the class because the namespace is missing. If for some *silly* reason you compare `.Name` of a type to `""string""` in a case-sensitive way, you are right.","2019-05-24 12:04:17","1336654"
"83385783","48170454","0","Not quite: 
`wierd_list = [[1, 2, 3], [4, 5, 6], [7], [8, 9], 10]`
>> `nice_list=[1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 0]`","2018-01-11 08:17:10","6644390"
"7706486","2386013","33","I find it strangely annoying that the `@NotNull` & `@Nullable` interfaces live in the package `com.sun.istack.internal`. (I guess I associate com.sun with warnings about using a proprietary API.)","2011-06-30 11:33:55","56285"
"83386255","48170454","0","my code as one liner would be :

`flat_list = [int(e.replace('[','').replace(']','')) for e in str(deep_list).split(',')]`","2018-01-11 08:32:18","6644390"
"83387778","42190352","0","Please tell why this should be the ""most secure setup"" in comparison to VMs.","2018-01-11 09:18:49","1904113"
"22606730","417142","12","May I ask _why_ did you need to know that? I.e. what's the use-case for having a long URL?","2013-04-08 12:47:46","207655"
"99202961","56168071","0","Yep, this works and is quite easy. Sourcetree GUI is a little confused about the changes made in the git shell, but after a fetch it's all right again.","2019-05-24 03:05:48","1508942"
"115670878","40523","5","@user36800: You're wrong. Did you work through the example with Fifi and look carefully through the results? Check that indeed `foo(aDog);` did **not** change `aDog` despite `foo` overwriting the value of `d`, showing that indeed all inputs to a function are passed by value.","2020-12-23 03:03:43","1889373"
"68794116","406408","19","In case you ever wondered how to do this in vim: `^\(\(hede\)\@!.\)*$`","2016-11-24 11:58:11","1583006"
"83396232","40057173","2","The C/C++ illustration is wrong: 3 times the same unit name (*file1*).","2018-01-11 12:59:53","2932052"
"83396488","46371154","3","Good to learn about *import lock*. Could you please explain *sign on to a methodology that [...]* part a little bit more?","2018-01-11 01:06:38","2932052"
"52763024","21531501","0","Just a note, 1 caveat with this method is the potential for stack overflows. Unless you're working with massive arrays, you shouldn't have an issue.","2015-09-08 05:57:20","2132305"
"52766346","10366981","9","@jasonkarns - I agree 100% that there _should_ be nothing special about the string/text node `NULL`, but to be pedantic, `<blah>null</blah>` and `<blah><![CDATA[null]]>` are not the same to an XML parser. They _should_ produce the same results, however the logic flow for handling them is different. It is this effect that we're exploiting as a workaround to the bug in the flex XML implementation. I advocate for this over other approaches as it preserves the readability of the text, and has no side effects for other parsers.","2015-09-08 07:39:52","203705"
"99207857","21160506","2","This is going to have terrible behavior if your array is really long and there are several instances of the element in it.  The indexOf method of array will start at the beginning every time, so your cost is going to be O(n^2).","2019-05-24 06:22:30","2711384"
"37242170","24135969","6","Does that sequence always help? Please explain what and how it does and how that code answers the question.","2014-06-10 08:32:10","541688"
"22632456","8876254","66","having multiple conditions, some of which are superfluous, is _less_ clear and explicit.","2013-04-09 05:45:27","674039"
"83400571","6232535","30","@Stephane You only need the `-u` once to initiate tracking. Afterward just use `git push`","2018-01-11 02:49:20","384724"
"7728308","60014","15","@TheVillageIdiot and @Hedgehog, are you using bash shell? The double bracket isn't universally supported. Here's a SO answer on that point: http://stackoverflow.com/questions/669452/is-preferable-over-in-bash-scripts/669486#669486","2011-07-02 02:54:03","726"
"115678548","19250386","0","You can call me purist - I have a somewhat similar version that doesn't involve subshells or forking anything: `BIN=${0/#[!\/]/""$PWD/${0:0:1}""}; DIR=${BIN%/*}`. First replace anything not starting by `/` (i.e. a relative path) with `$PWD/` (we also have to append the first character we matched in the substitution). Then get the directory. You can finally `cd $DIR` if you wish, or use it in relative paths.","2020-12-23 08:38:08","969196"
"83402323","43336206","1","""In Virtualization, the resources are allocated in the beginning of set up and hence the resources are not fully utilized when the virtual machine is idle during many of the times""

Hyper-V has a notion of Dynamic Memory where you can  specify Minimum, Maximum and Startup RAM.","2018-01-11 03:32:07","13541"
"52782658","30733500","175","An updated image with `git clone` and `git merge` would be very helpful!","2015-09-08 02:23:51","268091"
"83404760","48170454","1","You are indeed right +1, ᴡʜᴀᴄᴋᴀᴍᴀᴅᴏᴏᴅʟᴇ3000's proposal won't work with multiple digit numbers, I also didn't test this before although it should be obvious. You could simplify your code and write `[int(e.strip('[ ]')) for e in str(deep_list).split(',')]`. But I'd suggest to stick with Deleet's proposal for real use cases. It doesn't contain hacky type transformations, it's faster and more versatile because it naturally also handles lists with mixed types.","2018-01-11 04:31:09","9059420"
"22648740","4448825","0","+1, I found this page looking for a javascript version of phps ucfirst, which I suspect is how most people find it.","2013-04-09 01:58:12","494643"
"22650397","163659","0","Although it is probably the fault of the sysadmins at my university, I could not run `mergetool` because of `bcomp.exe` not existing.","2013-04-09 02:38:10","691859"
"52796258","20265752","0","Your cross-compatible solution doesn’t work when the script is symlinked.","2015-09-08 08:59:09","2217862"
"52798320","630475","3","Can someone elaborate on this sentence. ""With POST you can have 2 requests coming in at the same time making modifications to a URL, and they may update different parts of the object."" Please explain why this applies to POST and not to PUT?","2015-09-08 10:28:18","3470632"
"52798960","7866699","0","Here is one benefit that using POST to create a resource has over PUT. In this case, if you try to modify a resource that doesn't exist yet (using PUT), you will get an error. To generalize this advice beyond PUT vs POST, try to not to use an interface where the result/action depends on the current state, because the user may have an incorrect assumption about what the current state is (in the put example, he thinks the resource already exists). Use two separate interfaces and throw an error if the current state does not match the preconditions.","2015-09-08 11:07:51","3470632"
"52799012","7866699","0","PS I still don't understand what is meant by ""Better from a network perspective."" I can, however, think of at least one reason on my own as to why PUT would be better from a network perspective:  the results can be cached (perhaps by a proxy cache server).","2015-09-08 11:10:46","3470632"
"37259425","19655633","4","RFC says ""The names within an object SHOULD be unique"". Also see this person that is having an error parsing JSON like the above: https://stackoverflow.com/questions/4912386/resolve-jsonexception-duplicate-keys?lq=1","2014-06-10 03:58:29","300224"
"37259468","21409180","9","RFC says: ""The names within an object SHOULD be unique"". See this error reported at: https://stackoverflow.com/questions/4912386/resolve-jsonexception-duplicate-keys?lq=1","2014-06-10 03:59:14","300224"
"52811209","30942174","3","Great solution! Worked perfectly and feels more correct that removing all files then adding them back in.","2015-09-09 08:59:38","3604283"
"22669912","682343","15","This will actually work, but **only** on the first commit, where the file didn't exist before, or where the `git add` command added new files, **but not** changes to existing files.","2013-04-10 02:33:36","210945"
"52813477","2003515","17","in addition to @TrevorBoydSmith's `git branch -a` to view all branches, you can also use `git branch -r` to view remote branches only. see also `git remote show origin` - source: http://gitready.com/intermediate/2009/02/13/list-remote-branches.html","2015-09-09 09:53:18","1875965"
"115720110","4089452","0","git config --get remote.origin.url this works for me","2020-12-26 07:25:16","11368544"
"52816869","52719","146","This pollutes the stash stack. `git checkout -- .` does the job with one command only.","2015-09-09 11:17:44","239625"
"83443094","37027746","4","The variation between Internet Explorer and IIS makes sense when you consider that not all requests to a web server are done via a browser.","2018-01-12 04:39:36","584756"
"83458460","48170454","0","Thanks! This was of course supposed to be funny. I've seen Deleet's proposal in a python book before.","2018-01-13 08:02:22","6644390"
"115731775","40480","0","For those coming from `C++` and start to be confused when touching `Java`, [this might help as shortcut](https://stackoverflow.com/a/65460603/8932910).","2020-12-26 09:06:53","8932910"
"99261002","17782979","2","What about cache sizes, L1, L2, etc.? Having to go to main memory for a table lookup would be killer. Can you address that in your answer?","2019-05-27 01:07:05","63550"
"83464869","52704","0","git gui has a feature which will safely revert changes. .gitignore is honored by this program where as git-clean doesn't use it at all.","2018-01-13 03:24:21","2105784"
"83465577","48170454","0","Can you tell us which book? I contemplated a lot about this because it's so effective and beautiful. Will hit recursion limit inevitably in general but for cases like this with few recursions it seems perfect.","2018-01-13 04:04:15","9059420"
"99270489","509297","27","This suggestion works for positive stride, but does not for a negative stride. From the diagram, I expect `a[-4,-6,-1]` to be `yP` but it is `ty`.
What always work is to think in characters or slots and use indexing as a half-open interval -- right-open if positive stride, left-open if negative stride.","2019-05-27 08:05:24","2343869"
"37300870","2003505","1296","***Moderator note: If you intend to answer this question, do note that there are already 40 answers posted.  Will your new answer add any substantial value?***","2014-06-11 04:10:42","102937"
"7771874","2590013","181","A lot of stuff got put into the `text/*` section in the early days that would probably be put into the `application/*` section these days.","2011-07-05 08:47:12","209139"
"83483095","215731","0","How can I check 2 or more files?","2018-01-14 01:57:00","7741897"
"52854966","1671095","3","Please add better sources to support your statement.","2015-09-10 09:09:37","221342"
"83485409","2432799","7","For multiple branches, you can use `git push -u --all` to push all branches at once to new url (instead of `git push -u origin master`)","2018-01-14 04:11:32","644616"
"115752633","40523","0","@user21820: Yes, I did work through the examples and they both made sense to me.  I made two statements in my previous comment.  If you can specify which one you disagree with, I can try to better understand your last comment.  Thanks.","2020-12-28 02:29:10","3230708"
"115754366","40523","6","@user36800: Well, both statements are wrong. To pass an object by reference would mean that if the function modifies the variable then it modifies the object itself. That is not what happens in Java; objects cannot be passed by reference, but instead one can only pass references as inputs to a function, and when a function performs `d = new Dog(""Fifi"");` it overwrites the input variable `d`, which **stores** a reference but is not 'the object passed by reference'. Contrast with `&d` in the function signature in C, which would be pass-by-reference. [cont]","2020-12-28 05:49:27","1889373"
"115754392","40523","2","That was for your first statement. Your second statement is also wrong because *everything* is passed by value in Java. There is absolutely no difference between object references and primitive data types, except that the operations you are allowed to perform on them differ.","2020-12-28 05:51:28","1889373"
"115756951","2432764","0","Nice Doc is available here. https://docs.github.com/en/free-pro-team@latest/github/using-git/changing-a-remotes-url","2020-12-28 08:49:50","410439"
"83500849","48170454","2","Unfortunately no. But I saw this code recently here: [Python Practice Book](http://anandology.com/python-practice-book/functional-programming.html) 6.1.2","2018-01-15 08:18:01","6644390"
"115766319","1628088","1","Does this answer your question? [How do I force ""git pull"" to overwrite local files?](https://stackoverflow.com/questions/1125968/how-do-i-force-git-pull-to-overwrite-local-files)","2020-12-28 03:51:14","9213345"
"83502882","46680065","2","Although your answer is correct in itself, it doesn't really address the OP's original question. The `GetNames` method returns, indeed, a string array, but the OP requires an enumerator through the values.","2018-01-15 09:30:15","1996226"
"22724920","14586751","18","If you've dirtied your working tree since, `git reset --merge ORIG_HEAD` preserves those changes.","2013-04-11 11:59:23","556493"
"37314011","11828573","19","Unless you have remapped esc or have a weird mapping in your .vimrc then it definitely should. If on linux type xev and make sure escape is the keytype you get when you hit escape.","2014-06-11 11:49:47","1445334"
"37314184","72156","0","@PineappleUndertheSea: ``experimental`` is your local branch, ``origin/experimental`` is the remote branch.  You shouldn't be making changes directly in the remote branch since when you `git pull` or `git fetch`, the remote branch is expected to be able to update cleanly to reflect upstream changes.","2014-06-12 12:03:26","1586025"
"115775676","40523","0","Ah, I see.  Thanks for clarifying that.  I was just thinking in a gross manner, i.e., equating passing by reference as not creating a new object because pointers are used behinds the scenes, and the pointers are automatically dereferenced when the variable is used.  It would be so much clearer if pointers were explicitly used.  However, the maxim that all Java objects are handled by reference helps.","2020-12-28 11:32:41","3230708"
"115775993","682343","0","I just discovered that there is a git reset -p just like git add -p. This is awesome!","2020-12-28 11:56:21","14173388"
"115776202","11828270","0","You can search in :help like in every other window by typing /<some text> which searches for occurences of <some text>","2020-12-29 12:13:16","14173388"
"115776219","522576","0","niiice, something c users can understand","2020-12-29 12:15:46","14173388"
"115777388","62359248","0","For the fastest combined generator that is compliant w/node-clock-seq, monotonic in time, etc. This forms a good basis to seed a `uuid4` generator w/60-bits of epoch70 μ-seconds of monotonic time, 4-bit uuid-version, and 48-bit node-id and 13-bit clock-seq with 3-bit uuid-variant.
--<br>
Combining using `BigInt` to write `ntohl` and related conversion this works very fast with the [`lut` approach here](https://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid/21963136#comment-50951376).
--<br>
I can provide code if desired.","2020-12-29 02:08:20","7859952"
"37323683","105402","15","Then if you have duplicates/synonyms in your enum, and you want the other behavior, you can use Linq's `Distinct` extension (since .NET 3.5), so `foreach (var suit in ((Suit[])Enum.GetValues(typeof(Suit))).Distinct()) { }`.","2014-06-12 08:46:39","1336654"
"22732283","4682612","53","This is not helpful at all, doesn't pull any remote branches other than that is existing.","2013-04-11 03:02:56","1523910"
"99293075","48775964","0","@Dalibor you probably should provide more reasoning for your claim rather than just a link.","2019-05-28 02:06:28","1129332"
"83523686","36924148","0","+1 for this solution. Regarding your remark that ""git checkout . needs to be done in the root of the repo"", maybe you might mention we can just do `git reset --hard` instead? (which is actually equivalent to `git reset --hard HEAD` and should work whichever is the current directory...)","2018-01-15 08:19:13","9164010"
"83524035","36924148","2","Also regarding the first command `git clean -dfx`, here is a tip I use to be on the safe side before running it: just run `git clean -d -x -n` before, to display the list of files-to-be-removed, then confirm the operation by running `git clean -d -x -f` (I put the argument `-n`, resp. `-f` in the end to be able to quickly change it in a terminal)","2018-01-15 08:33:08","9164010"
"115783865","44231561","0","@S.S.Anne Your edit is still wrong. The `a--` after the while shouldn't be there.","2020-12-29 09:49:32","3314225"
"99295528","33223622","1","Re: solution 2:  People will know I'm not wearing matching socks because they will see them in my Birks :)","2019-05-28 03:15:21","12424"
"115787635","23714832","0","It's a nice trick, but there is a little caveat. If the element has inline content that's wider than 50% of the parent's width, then the extra 50% offset from the `left` will extrapolate the parent's width, breaking the content to the next lines to avoid overflow. But it's possible to keep the content inline by setting in the centered element the `white-space` attribute to `nowrap`. Try that in this [JSFiddle](https://jsfiddle.net/d9xLun6b/2/).","2020-12-29 12:47:07","1977836"
"99299129","14419228","0","I did Case 1 years ago. For some, time is money, but for me, time > money. I washed and sorted my socks for the final time and donated them all to goodwill. I then bought 60 pairs of socks and only opened 30 of them. The remaining pairs are in my closet sealed up for when replacements are needed. I never dip into those unless at least 10 socks are damaged or unusable. Sock sorting is now only a matter of ""my socks"" (easily recognizable) vs ""not my socks"" (which goes into a pile for not-me to sort)","2019-05-28 05:09:03","1544706"
"115789570","419174","1","When you run `python helloworld.py` it will run the whole script file (whether you specify `if __name__ == ""__main__""` or not ) . There is only a difference in execution when you are importing `helloworld.py` from a different script. In that case the `if __name__ == ""__main__""` codeblock does not execute at all.","2020-12-29 02:09:28","9047837"
"115791791","522576","1","""Old-fashioned"" doesn't actually mean ""wrong""","2020-12-29 03:36:15","35092"
"37336180","10976934","41","""I removed comments from JSON because I saw people were using them to hold parsing directive"". By that logic, he should also have removed the string type. Terrible decision.","2014-06-12 02:22:53","1132806"
"115795729","16047306","2","I was also confused as to why Docker images specify ""FROM Ubuntu"" if they aren't running an OS. I wrote down what I learned: https://blog.andrewray.me/towards-a-strong-mental-model-of-docker/","2020-12-29 06:17:29","743464"
"37337550","22537629","0","if you look at the spec you'd see that it's a superset of json. you can convert from/to json.","2014-06-12 02:53:11","52817"
"22754905","117111","1","@TobyAllen here is the updated [FAQ link](https://git.wiki.kernel.org/index.php/GitFaq#Can_I_add_empty_directories.3F) The top answer is also what is recommended by the FAQ with more precise instructions.","2013-04-12 07:22:22","395633"
"99312082","33223622","1","@BobProbst Yes but your fellow programmers will also be wearing unmatched socks with Birks and therefore will just be happy noticing they are not the only ones.","2019-05-29 05:56:38","392753"
"7812803","6117092","13","Make sure you also make input fields selectable:

`p, input {
-webkit-user-select: text;
-khtml-user-select: text;
-moz-user-select: text;
-o-user-select: text;
user-select: text;
}`","2011-07-07 10:39:56","163368"
"115804686","8809472","0","The actual time resolution may or may not be 17 ms (1/60 second), not 1 ms.","2020-12-30 03:28:42","63550"
"115804748","17070116","0","The redirected URL says *""Applies to: SharePoint Foundation 2010""*","2020-12-30 03:34:33","63550"
"115804775","10725965","2","Why is it better?","2020-12-30 03:37:25","63550"
"115806702","105034","1","Some 12 years later with `BigInt` and ES6 classes, other techniques that yield rates of 500,000 uuid/sec can be done. [See reference](https://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid/65500983#answer-65500983)","2020-12-30 06:34:38","7859952"
"99318920","14767865","0","How can a curiosity-based question be ""the wrong question""? Classic StackOverflow...","2019-05-29 09:41:28","265521"
"22764572","1026792","4","Mind that the `--cached` is a really important part here.","2013-04-12 12:21:46","234780"
"52908598","178450","2","Does not work on chrome though works flawlessly in firefox :( Had to do something like `jQuery(textarea).parent().css('display') != 'none'` instead of `jQuery(textarea).parent().is("":visible"")`","2015-09-11 02:05:26","2396539"
"52910224","17114749","0","@TamusJRoyce, Roy Fielding (the guy who created REST) would disagree with you: http://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven Also, while true that the ID will likely be provide by the client via the URL the client still does not know where in the URL to put the ID.","2015-09-11 02:44:07","965382"
"52910459","18243587","0","PUT ***can*** be used to create a resource and is appropriate for creating resources ***if*** the client is responsible for providing the URL structure. However, it is ***highly unlikely*** that in your solution it is appropriate for the client to provide the URL structure.","2015-09-11 02:49:56","965382"
"99322592","6581949","0","Why `type(...)` is not really OOP compared with `type.__new__(...)` ?","2019-05-29 11:31:58","7748163"
"99325528","509295","4","Note that contrary to usual Python slices (see above), in Pandas Dataframes both the start and the stop are included when present in the index. For further info see the [Pandas indexing documentation](https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#indexing-slicing-with-labels).","2019-05-29 12:54:33","6261650"
"99326447","56361573","0","use above css for center align div","2019-05-29 01:18:09","9704900"
"83556522","21409180","0","This might work in a specific implementation but it would be brittle, unless you have control over whatever ingests the json and nothing else is going to use the json data.","2018-01-16 04:44:14","619895"
"99332298","56361573","0","Hi! This answer came up in review as low quality because of its length and content. This happens because code only answers are generally discouraged on SO and should be accompanied by some text explanation of how the code is a solution to the question. Thanks!","2019-05-29 04:03:58","8468264"
"83561240","37614185","3","@RousseauAlexandre `git add .` only adds from the current directory on down, whereas `git add --all` applies to the repo. The latter appears like a safer option.","2018-01-16 07:09:16","161457"
"83563239","46680065","0","@SilviuPreda: Edited. It should have been GetValues instead of GetNames.","2018-01-16 08:17:27","4549031"
"68941867","7094191","0","if calling imm.toggleSoftInput(InputMethodManager.HIDE_IMPLICIT_ONLY, 0); then keyboard will show on screen :) Best implementation is: https://github.com/ravindu1024/android-keyboardlistener Shame on Android SDK","2016-11-29 10:15:53","843001"
"83564467","2590013","38","@Rohmer - You ""can"" open anything in a text editor, but a binary format like JPEG or a Windows .exe or a .zip will contain non-printable characters which can actually break many text editors or cause undesired behavior. Try running `cat file.jpg` for example. Whereas any xml or json file is 100% printable. So I think Stijn de Witt's point is a valid one, despite the fact that yes, it's too late to change now.","2018-01-16 08:59:19","659764"
"37373040","671132","1","Your examples show undefined media types; furthermore they use the ""+"" structured syntax convention (http://tools.ietf.org/html/rfc6839) with an unregistered value.","2014-06-13 12:56:14","50543"
"115829627","7074","0","System.String myString = ""Ha!"";

@Wilsu No? I just did.","2020-12-31 01:37:36","385747"
"99340835","48775964","0","I think that it is really known fact that it is not easy to make your own benchmark. For those who do not know that, there is link ;)","2019-05-29 10:04:46","1788304"
"115830094","61171280","0","works good for the personal feature branches, should not be used on the branches where multiple people work, but I'd say latter may be in some cases just bad organization.","2020-12-31 02:26:05","1540501"
"22790871","8439617","4","It's true that the question asks for JavaScript and only the first letter of the string, but the asker of the question isn't the only one here looking for an answer. It has obviously turned out to be a good answer for many people, resulting in upvotes. I certainly don't think it should be deleted.","2013-04-13 08:54:58","770606"
"22790914","8439617","6","It's now javascript: $('.capitalize').css('text-transform', 'capitalize')","2013-04-13 08:58:39","770606"
"22794645","1714649","1","If the Epoch changes, the definition of Unix Timestamp changes. That makes the above code backwards compatible, but broken :)","2013-04-13 01:22:11","603316"
"99342376","48775964","0","@Dalibor I am perhaps not the best, but I have a good understanding of Java benchmarks, so unless you can point out a specific problem, you are just misleading, and I will not continue the conversation with you under those conditions.","2019-05-29 11:56:47","1129332"
"115839659","80113","2","The diagram seems to indicate that the local variables on the stack only reference objects on the heap. Is it not possible for local variables to reference objects on the stack also? If I for instance do `int x = 5;` inside a function call in C, is that 5 not stored on the stack?","2020-12-31 01:22:12","2578065"
"115845756","64736930","0","This technically solves the issue, but note that this is not recommended because it will freeze the window until the request completes. It's better to learn how to deal with the asynchronous nature of JS than to use synchronous versions of IO-related functions.","2020-12-31 06:44:48","5051165"
"68962800","12184274","0","i've been using these commands for years. have a case now where none of them works. it just keeps saying ""changes not staged for commit"" and listing the same files. there are no errors when i do clean or checkout!","2016-11-29 07:07:20","349100"
"37381854","7286050","0","@ThomasMcLeod, Hades32: Is it within the realms of any possible regular language to be able to say ‘**not**’ and ‘**and**’ as well as the ‘**or**’ of an expression such as ‘`(hede|Hihi)`’? _(This maybe a question for CS.)_","2014-06-13 04:54:33","1284644"
"37382175","7286050","7","@JohnAllen: **ME!!!** …Well, not the actual regex but the academic reference, which also relates closely to computational complexity; PCREs fundamentally can not guarantee the same efficiency as POSIX regular expressions.","2014-06-13 05:04:37","1284644"
"7863799","178386","69","just be careful, there are some good performance related tips in this presentation: http://addyosmani.com/jqprovenperformance/","2011-07-11 05:05:57","70535"
"22808371","15995332","8","Good point; I'm surprised nobody mentioned this approach before.  However, that particular regex is prone to [catastrophic backtracking](http://www.regular-expressions.info/catastrophic.html) when applied to text that doesn't match.  Here's how I would do it: `/^[^h]*(?:h+(?!ede)[^h]*)*$/`","2013-04-14 05:26:42","20938"
"37387043","7286050","0","@JamesHaigh, not <string> is definitely regular but does and make sense? Ask a new question and notify me in a comment and I'll try to answer it.","2014-06-13 07:50:42","540815"
"99360839","54390552","0","For option 4, should the loop be 'i < arr.length' not 'i < arr.length-1'?","2019-05-30 02:31:47","1800050"
"68978664","9244805","1","This can be the easiest way to hose a repo unintentionally, just like what happened to @Lauri, but worse because you think you're protecting files from deletion. If you have one `.gitignore` rule that has a wildcard in it, kiss them goodbye. [Explanation.](http://blog.icefusion.co.uk/git-stash-can-delete-ignored-files-git-stash-u/)","2016-11-30 07:05:22","315024"
"99365628","43204559","0","Yes I only need to run the 2nd command. Like --> https://www.shellhacks.com/git-revert-file-to-previous-commit/","2019-05-30 05:07:47","2964890"
"7876568","1473742","1","@user102008: MDN doesn't include any reference to `Array.include` ([MDN Array Reference](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array) - I was looking to see what version of JS that was in.) Where did you see a reference to that method?","2011-07-12 10:06:38","59384"
"7882569","5091882","2","I think he is asking for the regex version of the `grep -v`","2011-07-12 03:27:15","109815"
"83597555","47285263","0","explain very well","2018-01-17 04:56:10","9163169"
"68994568","22417539","6","This is the safest method : no reset soft / hard (!!), or reflog used !","2016-11-30 02:08:54","685450"
"83610178","19602603","0","I was about to write the new Date() Object .You can console log(new Date()) and then skim through the related methods under the new Date() object/ function","2018-01-18 12:37:46","3442874"
"83610180","23261705","0","I was about to write the new Date() Object .You can console log(new Date()) and then skim through the related methods under the new Date() object/ function","2018-01-18 12:37:52","3442874"
"83610186","28983302","0","I was about to write the new Date() Object .You can console log(new Date()) and then skim through the related methods under the new Date() object/ function","2018-01-18 12:38:17","3442874"
"83610192","29600955","0","I was about to write the new Date() Object .You can console log(new Date()) and then skim through the related methods under the new Date() object/ function.  the new Date().getTime()  method will give you the time in the EPOCH format which can be interpreted if necessary","2018-01-18 12:38:32","3442874"
"115872636","178325","1","If you are not interested in virtual css element hiding, but physical visibility in ""viewport area"" for user then cosider to see https://stackoverflow.com/questions/487073/how-to-check-if-element-is-visible-after-scrolling and https://stackoverflow.com/questions/123999/how-can-i-tell-if-a-dom-element-is-visible-in-the-current-viewport","2021-01-02 01:16:52","1742529"
"22830845","3413739","6","This answers is maybe the one that should be accepted, as it provides the concrete answers: 2k for IE, 65k for Safari/Firefox, ""more"" for Opera.","2013-04-15 06:20:04","365237"
"37426371","630453","3","you know... I realise the spec refers to PUT as 'update', but I think everyone would be a lot less confused if we said it 'replaced', that is what it does after all.","2014-06-15 08:28:54","300797"
"37432895","3104376","4","JSON has too much punctuation compared to XML? Can you clarify what you mean there?

Here is an example JSON for loading fixtures in Django:

[{ ""model"": ""foo.bar"", ""pk"": 1, ""fields"": { ""name"": ""foo"", ""customer_number"": 12345 }}]

The same in XML comes to something like this: <?xml version=""1.0"" encoding=""utf-8""?><django-objects version=""1.0""><object pk=""1"" model=""foo.bar""><field type=""TextField"" name=""name"">foo</field><field type=""IntegerField"" name=""customer_number"">12345</field></object></django-objects>","2014-06-16 05:28:52","3380930"
"83618616","39492868","1","@sorin These 20 repo/branch limitation (rather, it is 30 now) comes from the GitHub default paging settings. There needs to be some adaptions to the code in order to handle this.","2018-01-18 08:19:20","371169"
"7897445","2798934","31","I do not think that this is correct. the above will perform a merge, not overwrite which was requested in the question: ""How to force git to overwrite them?"" I do not have the answer, I am currently looking for it.. at the moment I switch to the branch with with the code that I want to keep ""git checkout BranchWithCodeToKeep"", then do ""git branch -D BranchToOverwrite"" and then finally ""git checkout -b BranchToOverwrite"". you will now have the exact code from BranchWithCodeToKeep on the branch BranchToOverwrite without having to perform a merge.","2011-07-13 10:11:31","236805"
"83622920","417184","0","As of Jan 2018, IE 11 shrinks URLs, replaced by `window.location` to the 4095 characters.","2018-01-18 10:15:25","1105860"
"22844668","3356227","0","If you use clojure (and I'm sure you don't) there's a reasonably featured open-source JSON schema parser here: https://github.com/bigmlcom/closchema","2013-04-15 01:50:44","790979"
"115896045","10439581","0","I wish I could upvote you more than once - the last line was the only one that worked for me!!!!","2021-01-03 04:31:54","240795"
"22847835","15995332","0","...or you can just make all the quantifiers possessive.  ;)","2013-04-15 03:17:58","20938"
"22855205","1026069","18","[Underscore](http://underscorejs.org) has a plugin called [underscore.string](https://github.com/epeli/underscore.string) that includes this and a bunch of other great tools.","2013-04-15 07:16:14","64669"
"7916341","6376039","120","I found this answer the clearest. `git revert HEAD^` is not the previous, is the previous of the previous. I did : `git revert HEAD` and then push again and it worked :)","2011-07-14 08:32:53","149008"
"22863864","14220323","50","The Chat for this question is dead so I'm not sure where to propose outlined changes, but I propose: 1) Change the synchronous part to a simple discussion of why it's bad with no code example of how to do it. 2) Remove/merge the callback examples to only show the more flexible Deferred approach, which I think may also be a little easier to follow for those learning Javascript.","2013-04-16 02:45:22","176877"
"53018846","5189600","70","The difference between this `rebase -i` approach and `reset --soft` is, `rebase -i`allows me to retain the commit author, while `reset --soft` allows me to recommit.

Sometimes i need to squash commits of pull requests yet maintaining the author information. Sometimes i need to reset soft on my own commits.

Upvotes to both great answers anyways.","2015-09-15 09:31:59","795137"
"115932419","23961231","0","What happens if you run `git fetch --prune`, withOUT specifying the remote branch? Does it prune all remotes?","2021-01-05 12:08:29","4561887"
"115932802","23961231","0","It should be noted that running `git push origin --delete <branch>`, as far as I can tell, ALSO deletes the locally-stored remote-tracking branch named `origin/branch`. So, **to delete the remote branch AND locally-stored remote-tracking branch in one command, just use `git push origin --delete <branch>`.** Then, you just need to delete the local branch with `git branch -D branch`. That covers the deletion of all 3 branches with only 2 commands.","2021-01-05 12:40:47","4561887"
"99425626","55927403","0","This does the trick, why was it downvoted with no explanation at all?","2019-06-02 11:47:08","2516673"
"69064736","215768","1","It should be `eg revert --in REVISON -- FILENAME`. The `--in` is important. For the Windows users out there: Open git bash. Execute `echo %PATH`. The first path should be in your user directory ending with `bin`. Create that path. Store [eg](https://people.gnome.org/~newren/eg/download/latest/eg) there. Name it `eg`. Not `eg.txt`.","2016-12-02 07:13:17","873282"
"53029515","29884729","0","I could not set the new origin by editing .git/config. It said the git repository named in the URL wasn't a git repository. Once I removed and re-created origin, all was well. I had not looked up git remote set-url as a solution to my problem, though.","2015-09-15 01:55:48","448715"
"83665849","44700108","6","This method breaks some libraries, which require that the key must be unique. I'm working around that issue by numbering the comments.","2018-01-19 11:45:24","601990"
"83670226","7094191","0","Working, but actually makes the keyboard VISIBLE on almost all SAMSUNG devices :) I love Android.","2018-01-19 01:45:00","978461"
"69077024","16956810","0","@StéphaneLaurent I think you are complicating it too much. Just say `grep ""pattern"" path/*.txt`","2016-12-02 01:13:16","1983854"
"69077092","21494623","6","what is this adding to the existing answers?","2016-12-02 01:14:58","1983854"
"69077115","22972646","2","I don't see how this is better than using a mere `ls` or `find` (for the recursive)","2016-12-02 01:15:42","1983854"
"69077128","30038110","1","what is this adding to the existing answers?","2016-12-02 01:16:03","1983854"
"69077174","37499171","4","using `pwd` is not necessary at all, since it is the default. `grep -rnw ""pattern""` suffices.","2016-12-02 01:17:04","1983854"
"69077195","21349740","1","what is the point of using a loop over the results of find to then grep? This gets unnecessarily complicated.","2016-12-02 01:17:45","1983854"
"69077272","39902107","0","what is this adding to the existing answers?","2016-12-02 01:19:34","1983854"
"69077300","38987665","2","What is this adding to the existing answers? This was suggested more than three years ago already.","2016-12-02 01:20:15","1983854"
"115951193","11227902","22","@Mycotina, I'm no expert, but what I understand is: the processor needs multiple steps to execute a single instruction (fetching, decoding, etc) -- this is called ""instruction pipelining"" -- so, as an optimization, it will fetch multiple instructions at once and ""warm up"" the next instructions while executing the current one. If the wrong branch is chosen, the instructions being ""warmed up"" in the pipeline must be discarded, so that the instructions on the right branch can be put into the pipeline instead.","2021-01-05 03:51:22","899213"
"37474638","7905820","3","I agree in some cases this is a very good idea, but in others (such as distributing a project where you have an otherwise empty skeleton with folders such as models/ and views/ ) you would want the user to have these directories at hand rather than manually having to read read the docs, and it could be a bit much to expect them to run some sort of installation script after cloning the repo. I think this answer in combination with @john-mee's README answer should cover most if not all cases.","2014-06-17 08:28:24","413354"
"69079002","37499171","0","and in fact the `grep -rnw` and similar is what was answered like three years ago, I don't see how this answer is adding value.","2016-12-02 02:03:42","1983854"
"22882851","7924558","1","This is incorrect. `replaceAll(""123434"", ""1234"", ""12"")` should return `""1234""` but instead returns `""12""`.","2013-04-16 01:58:11","314971"
"53040691","52713","1","Here's a scenario where ""git checkout -- ."" worked well: I had transferred a repo from Cygwin to Linux via a FAT-formatted USB drive. After transferring the data to Linux, ""git status"" and ""git diff"" showed signs of many file permission changes. There were also some other files present (notes and stuff). I used ""git checkout -- ."" to undo the file permission changes. Now git diff is clean and git status only shows the few files that have been added. The ""clean"" step from the other answer would be useful if I wanted to get rid of the untracked files.","2015-09-15 06:53:59","606961"
"83681818","630475","2","You should really be using PATCH to update a entity, PUT to insert a entity , DELETE to delete/remove a entity and a POST to do other things, like submitting form data type requests.","2018-01-19 07:03:34","194813"
"69086443","39902107","0","Good Question - Let start with top answers to this question. I tried below commands on AIX server with more than 15k files in log dir.

grep -rnw '/path/to/somewhere/' -e ""pattern"" >>> got the error ""/usr/bin/grep: 0403-027 The parameter list is too long.""

grep -Ril ""text-to-find-here"" /   >>> got the error ""/usr/bin/grep: 0403-027 The parameter list is too long.""

ack 'text-to-find-here'   >>> got the error ""Segmentation fault(coredump)""","2016-12-02 05:07:32","6404949"
"69086457","39902107","0","find / -type f -name ""*"" -exec grep -il ""String_to_search"" {} \;  >>> It will produce the result with filename and file data.

find / -type f -exec grep -H 'text-to-find-here' {} \;   >>> It will produce the result with filename only.

for i in /*;do grep -Ril ""String_to_search"" $i;done 2> /dev/null >>> It will work like grep -Ril ""text-to-find-here"" / but support large number of file.","2016-12-02 05:07:56","6404949"
"22888511","7924558","2","it depends if you allow to replace ""recursively"" or not.","2013-04-16 04:16:02","938822"
"22890506","271553","3","I had a professor that preached against method call chaining. His theory was that you should be wary of call chains that were longer than 2 methods. I don't know if that's a hard rule, but it definitely removes most of the problems with NPE stack traces.","2013-04-16 05:12:10","2047962"
"115965128","16957078","0","Is there a way to show only filenames. I meet a problem, if one file contains this text many times, then it will display in result many times","2021-01-06 03:22:03","1323374"
"115968771","373848","0","I do not understand this, but thanks anyway, Chris Lloyd, this is very neat.","2021-01-06 08:05:50","7498513"
"115969944","6438222","2","A little bit cleaner solution would be `$(""#txtAge"").toggle($(""#isAgeSelected"").is(':checked'))`.","2021-01-06 09:02:40","1754123"
"115972871","54055025","1","One of the best tools I have ever used, and I'm still using it for all my projects!","2021-01-06 11:05:15","2522849"
"83689069","43204559","4","+1, though not sure of the intent of resetting HEAD. It may or may not be needed.  In my situation i only wanted to revert one particular file to the version in repository (which keeping remaining local changes intact. Just running the second step above was sufficient for me","2018-01-19 11:56:20","986760"
"22900394","6217372","10","@perfectionist agreed :)  Kind of wish there was a way to migrate this answer to another question-- (maybe there is?)","2013-04-16 11:04:18","486547"
"99460141","12184274","1","@Footniko, deleting untracked files may be part of the desired behavior, depending on what Readonly meant by ""changes"".","2019-06-03 06:39:31","3225396"
"53059856","11444416","0","there are languages where you can use lone braces to create block (and probably scope too), does it work or is planned for js too? especially that let(variableName = ""value"") {block} is deprecated","2015-09-16 09:00:22","4356678"
"99462251","51515986","0","didn't work for me. actually ended up sending local branch back a month or two. Thankfully this is all local so i can always destroy the branch and fetch it again. Just wanted to point that out in case others tried this.","2019-06-03 08:16:05","7664140"
"115990886","65404577","0","What is the result? The question was: *""How do I make the first letter of a string uppercase in JavaScript?""* This seems to be capitalise *every word*.","2021-01-06 10:43:10","63550"
"115990946","40760281","0","The question was: *""How do I make the first letter of a string uppercase in JavaScript?""* This seems to be capitalise *every sentence*.","2021-01-06 10:46:50","63550"
"115991518","30123193","0","There is currently no answer by a user with the name ""salim"" (user names can change at ***any time***). What answer does it refer to?","2021-01-06 11:23:16","63550"
"115991698","3516699","1","What is *""aclaration""*?","2021-01-06 11:34:07","63550"
"115991771","14889651","0","What are you referring to by ""coffee""? ""[CoffeeScript](https://en.wikipedia.org/wiki/CoffeeScript)""?","2021-01-06 11:38:42","63550"
"83707316","44700108","0","good comment, I found this question on SO ... this part seems not to be covered by the spec https://stackoverflow.com/questions/21832701/does-json-syntax-allow-duplicate-keys-in-an-object","2018-01-20 07:36:40","12016"
"69116640","34236947","2","still, this does not make any sense, you can filter with `find`.","2016-12-03 11:00:59","1983854"
"115993914","64103917","0","i specifically mentioned that besides javascript you can use css too...not everyone is probably looking for an interview question answer.","2021-01-07 02:35:16","4227801"
"22922419","178450","2","@MaxLeske - I'm pretty sure it's a GIVEN! (most of the time) that when you pull out the regexp knife that you'll take a perf. hit.  The extra checks will be nil compared to the overhead/processing of regexp.","2013-04-17 01:51:27","559457"
"99483646","24155226","0","There are simple use-cases where the equality statement would fail... Such as defining a type call String in the blah namespace and importing that namespace into the file in which the equality statement is running.","2019-06-04 01:36:55","3735683"
"83711907","4183018","86","Although your answer is absolutely correct, it should be said that this is BS. With so many end users coming across the need for json configuration, then comments are exceedingly helpful. Just because some tin-foil hats decided that JSON *is* and *must always be* machine readable, ignoring the fact that humans needs to read it to, is imho a travesty of small mindedness.","2018-01-21 12:29:27","125525"
"69126977","36213249","0","solution category == 'transform through preproc'","2016-12-04 12:59:50","42223"
"22929640","246128","0","@fileoffset: You probably have CDPATH set to something.  If that variable is set in your environment, the cd command will echo the new directory to stdout.  Any portable ksh or bash script that uses cd should either redirect its output, or should prefix the cd command with CDPATH=.","2013-04-17 04:58:04","32470"
"22929692","246128","1","Is BASH_SOURCE[0] always the same as $0?  If that is true, then why not use $0?  It's simpler, more portable and more idiomatic.  BASH_SOURCE is useful for processing as a list to find the call stack.  In this case, $0 is good enough.","2013-04-17 04:59:27","32470"
"83716099","4183018","23","@cmroanirgo: You're obviously not the first to complain about that limitation of JSON... that's why we have parsers that silently allow comments, and other formats such as YAML and JSON5. However this doesn't change the fact that JSON is what it is. Rather, I find it interesting that people started using JSON for purposes where it clearly wasn't sufficient in the first place, given the limitation in question. Don't blame the JSON format; blame ourselves for insisting on using it where it isn't a particularly good fit.","2018-01-21 07:48:27","240733"
"53086138","180085","2","@13ren You might already found answer, but this might help others (I did not saw reply to your comment).  http://stackoverflow.com/questions/2246208/change-first-commit-of-project-with-git","2015-09-16 08:07:10","2807537"
"83719402","16956844","0","@fedorqui Could we get an example of how to apply this to only specific files? For example, find all instances of filename.txt which contain 'x' text (recursive)? Thanks""","2018-01-21 11:46:35","1193138"
"99489473","56289046","0","Tried `git branch -l` and no remote branch was shown.","2019-06-04 04:36:48","1614973"
"22938814","15255856","4","I had success with this when running a script by itself or by using sudo, but not when calling source ./script.sh","2013-04-17 09:57:40","428628"
"116010980","5767357","2","function remove(item,array) {
 
var new_array = []

new_ array = array.filter((ar)=>  ar != item)

return new_array
}","2021-01-07 04:04:33","11216947"
"116012460","41454","0","The implementation of Collections.synchronizedMap includes a synchronized putIfAbsent, so you don't need to use containsKey/put yourself.","2021-01-07 04:55:07","6548501"
"83739932","16956844","1","@omega1 something like `find -name filename.txt -exec grep 'x' {} \;`","2018-01-22 07:36:55","1983854"
"53099071","31250734","1","So, in effect, my assumption of 512 chars is largely wrong ^_^ Thanks for the test. I will never care about the query param length anymore..","2015-09-17 07:19:16","1437261"
"116020570","64663592","0","@PeterMortensen it's working perfectly even before you edited it.","2021-01-07 10:30:08","7126863"
"69166331","406260","2","One of many non-hypothetical scenarios where a regex is the best available choice: I'm in an IDE (Android Studio) that shows log output, and the only filtering tools provided are: plain strings, and regex. Trying to do this with plain strings would be a complete fail.","2016-12-05 04:11:39","423105"
"116023390","11227902","7","@Mycotina It's easier to understand when you think of the instruction pipeline cache as tracks, the train (with cars) as the instructions, and the indicator of whether you go left or right by some dude at the END of the train; not the beginning. By the time you see him to know you've guessed right, not only is it too late to switch things, the pipeline ahead is already populated, but in the wrong direction. If you guessed wrong the predicted pipeline needs to be thrown out (derail the train; drag it back before the switch house, put it back on the tracks, and send it the other way).","2021-01-08 02:03:57","1322972"
"99509267","237104","1","@brad, when I first read your question, I could not get your idea, an object here is javascript object or a primitive value.
Suppose I have an array: `const arr = [1, 2, 3, { foo: 1}];`.
And `arr.includes(1) // true` but `arr.includes({ foo: 1 }) //false`","2019-06-05 10:36:55","10671200"
"53108922","24826612","7","Yet another option: you can use `Ctrl+O` to leave INSERT mode temporarily then enter `:q`. Trick with this combination is useful in normal vim as well to execute single command and return back to INSERT mode.","2015-09-17 12:08:29","814297"
"22966431","873856","2","I think there's a very minor bug in the line that sets bits bits 6-7 of the clock_seq_hi_and_reserved to 01.  Since s[19] is a character '0'..'f' and not an int 0x0..0xf, (s[19] & 0x3) | 0x8 will not be randomly distributed -- it will tend to produce more '9's and fewer 'b's.  This only makes a difference if you care about the random distribution for some reason.","2013-04-18 03:35:55","594366"
"53113753","23853061","0","This work, but it didn't bring the new branches to your repo","2015-09-17 02:08:22","1791289"
"53113904","28506621","3","@EnesBattal, I think because the dp isn't an acute physical size, it is a approximate value. Quoting from CapTech : ""dp - This is a density independent unit, however the physical size of a single “dp” is only approximately the same on every screen density. There are approximately 160 “dp” in an inch. A scaling factor, depending on the density bucket of the device, is applied to convert “dp” to the number of pixels at 160 dpi. The number of pixels a single “dp” translates to varies depending on the pixel on screen density and the density bucket the device falls into.""","2015-09-17 02:12:16","2368492"
"37561739","7359734","1","@HLGEM: ...I assume you are aware of the case where the result of an `UPDATE..FROM` is not guaranteed? (hint: many side of a one-to-many join where the result is arbitrary) Is that the kind of 'bug' you are alluding to?","2014-06-19 10:59:05","15354"
"37563197","114549","1","This works fine on Chrome but does NOT support mobile browsers like Safari.","2014-06-19 11:40:57","1299675"
"99517032","10113231","7","i just wanted freaking git to overwrite everything and shut up about it. after all im just using it between my work pc and some raspberry pi systems. Whishing for a force overwrite option, at least for project leader","2019-06-05 02:39:57","3187539"
"116039724","59901196","0","user+addition is a valid email and longdomain is not necessarily invalid..","2021-01-08 03:30:58","10626207"
"116043207","33060283","0","I think this is an answer to a rather different question - https://stackoverflow.com/q/1125968. I interpret [the question here](https://stackoverflow.com/q/4114095) to concern the **_remote_** repository.","2021-01-08 05:35:22","9213345"
"116043726","1125968","0","Manually delete all files and folders from the local repository. Then run `git checkout <branch> && git add -A . && git reset --hard origin/<branch> && git pull`. See https://stackoverflow.com/a/65239330.","2021-01-08 05:54:03","9213345"
"83769897","14415881","1","your assumption about matching pairs is soooo removed from reality. even with two `parallel.task(child).waitpid.all` the performance gain the accepted answer promises is outweighed by the exponential decline of the number of matching specimen in the pile over time.","2018-01-22 10:03:07","1132334"
"99529455","14419228","0","@SDC and All - if they are aging at different rates, you're missing a key important detail. _rotate them like stock_, that is, put the just-washed socks in the back (or left) of the drawer, pull from the front/right. Problem solved. This is an example of avoiding an improvement because of an apparent con, when the con is mitigatable (admittedly - mitigation of the cons of new tech is seldom this simple!) But maybe it's not too simple, since as of this writing _52_ people upvoted the comment! That means _52 people missed this obvious mitigation_. Brag: this is how I've done it for years :-)","2019-06-05 10:54:56","37769"
"83771978","46986753","3","Please explain the difference between `git reset <file>` and `git checkout <file>`.","2018-01-22 11:47:24","2020476"
"116047042","419185","0","How did you write this detailed response 15 minutes after it was asked?","2021-01-08 08:21:10","2980806"
"99532191","24957191","1","The point is a file with comments is not JSON and will fail to be parsed by many JSON libraries. Feel free to do whatever you want in your own program but a file with comments is not JSON. If you claim it is then people will try to parse it with their language/library of choice and it will fail. It's like asking if you can use square brackets instead of angle brackets in XML. You can do whatever you want but it will no longer be XML.","2019-06-06 03:35:13","128511"
"83780416","4682612","2","Please flag this answer, it does not attempt to answer the original question.","2018-01-23 07:42:05","2066215"
"99540409","51515986","0","@MattPengelly this method is largely undocumented and usually works if your branch is in sync with the remote branch before you did the merge.  Has it been months since your branch was in sync with the remote branch?","2019-06-06 09:51:10","804575"
"99540570","51515986","0","@MattPengelly it also depends on what branch the HEAD is pointed to. I'm using gitflow on one of my projects, and even though I'm on the develop branch, the remotes/origin/HEAD is pointed to origin/master so if I needed to undo a merge I would probably need to reset to remotes/origin/develop","2019-06-06 09:55:36","804575"
"22988454","16089689","9","Deprecated doesn't only mean ""isn't developed anymore"" but also ""you are discouraged from using this"". Deprecated features may break anytime, may be removed anytime, or may dangerous. You should never use this in important code. Deprecation is merely a better way than removing a feature immediately, because it gives programmers the time to adapt and replace their deprecated functions.","2013-04-19 08:07:01","1076143"
"22988607","16089689","4","Just to prove my point: ""Deprecated since version 2.6: The commands module has been removed in Python 3. Use the subprocess module instead.""","2013-04-19 08:14:32","1076143"
"116068266","432564","0","@FrederickOllinger - that behavior makes sense, because `git log` shows *commits*, and you haven't *committed* the change (the reversion). If you do `git commit` after that revert, then `git log` will show the change.","2021-01-09 09:40:48","199364"
"116070250","1125968","0","There is definitely an answer to this because I did it by accident. Now many weeks of work is gone :(","2021-01-10 12:17:29","2014878"
"53145819","671132","1","All of this is great philosophically, but how can I load and display the information for a specific user's grandmother's cat's age as soon as my user's browser has finished loading my scripts and styles (bonus points if you do it without making 500 sequential HTTP requests)","2015-09-18 10:13:44","1726343"
"37604577","1109022","0","[this](http://stackoverflow.com/questions/16184703/unable-to-hide-the-virtual-keyboard-of-searchview-iconfiedbydefaultfalse?answertab=votes#tab-top) worked for me","2014-06-20 12:45:04","2781649"
"37604743","237104","9","`~` is not what you want to use to convert to a boolean, for that you need `!`. But in this case you want to check equality with -1, s o the function might end`return [1,2,3].indexOf(3) === -1;`

`~` is a binary not, it will invert each bit of the value individually.","2014-06-20 12:49:16","859027"
"83787427","67712","2","""does download all the remote branches, but it only makes a local branch of master"".  I need help understanding this.  It seems git clone does NOT clone any branches except master, as when you do ""git branch -a"" it shows that the ""develop"" branch is only at ""remotes/origin/develop"". This must be  saying that you dont have this branch anywhere locally, it only exists currently on the origin right?","2018-01-23 10:47:40","1072187"
"116083078","163659","0","""This will set vimdiff as the default merge tool."" Git is ignoring my tool choice and just uses the default one that asks for ""Use (c)reated or (d)eleted file, or (a)bort?""","2021-01-10 05:25:06","7144201"
"116083760","60014","0","@AdamKatz: `-L` is deprecated? In what system? Neither `help test` in Bash nor the GNU coreutils man page or info page mentions this.","2021-01-10 05:59:10","1938956"
"116090032","60014","0","@SorenBjornstad – deprecated isn't the right word, but the man page for `dash` says ""This operator is retained for compatibility with previous versions of this program.  Do not rely on its existence; use `-h` instead.""","2021-01-11 12:48:05","519360"
"83789852","19095988","5","This is a **dangerous** command as it also wipes out **-f** switch applied to early files. For example we want to explicitly save a single DLL file then we generally do is to use **-f** switch to add that file in .git tracking explicitly. However **running the `git rm -r --cached .` command will also remove earlier forced files.**. Therefore its better to use `git rm -r --cached <filename>` rather than adding dot.","2018-01-23 11:47:46","1436594"
"116097829","20690490","0","what if content of array are objects and nested objects","2021-01-11 09:51:47","13943020"
"116103460","60876846","0","Also both `a` and `b` get evaluated here every time, unlike in `a if cond else b`","2021-01-11 01:22:44","5696586"
"69221865","31825535","0","The regexp `()|h(ed?)?|([^h]|h([^e]|e([^d]|d([^e]|e.)))).*` didn't work for me using `egrep`. It matches `hede`. I also tried anchoring it to the beginning and end, and it still didn't work.","2016-12-06 11:18:38","2428487"
"99557988","44078785","1","I do something like this, but with leading characters and some dashes (e.g `[slug, date, random].join(""_"")` to create `usr_1dcn27itd_hj6onj6phr`.  It makes it so the id also doubles as a ""created at"" field","2019-06-06 07:23:44","4808079"
"99563339","51017848","1","Nice idea, however too bad in both cases the file command returns 0 exit code always. Also when the file/directory can not be found :(.","2019-06-07 01:03:48","518879"
"23034519","271616","9","`throw new IllegalArgumentException(""object==null"")`","2013-04-20 11:35:01","53897"
"99566808","19095988","0","Is there any way I can achieve to ignore my file by not removing remotely?","2019-06-07 06:14:46","3035317"
"37635032","927378","25","`git commit -a -m """"` or `git commit -am """"` naturally! :]","2014-06-21 04:31:59","1469208"
"99584883","56289046","0","use `git pull --all` or `git fetch --all`","2019-06-07 04:17:21","6003521"
"83833699","1482133","0","@T.L `readlink` is part of the coreutils package which contains the base GNU utilities. No idea why it wouldn't be available on a GNU-based system. I think we can safely assume OP is using GNU, since the question is about GNU Bash?","2018-01-24 12:09:10","191761"
"69252502","37561155","0","Just a note, if the selector returns an empty set of items, this method will return true, so check length first if you looking for invisible items :
`var items = jQuery('.selector'); if (items.length == 0 || !items.isVisible()) {       alert('item is not visible'); }`","2016-12-07 04:36:20","858282"
"69253197","406230","0","Related: [Regex: Matching by exclusion, without look-ahead - is it possible?](http://stackoverflow.com/q/466053/4279)","2016-12-07 04:53:08","4279"
"99594078","56289046","0","Yes, and after that, `git branch -l`  still shows only *local* branches. It seems to be working exactly as `git branch` without `-l`, so what is the reason for `-l`?","2019-06-08 01:13:10","1614973"
"99594093","56289046","0","Also your answer does not answer the question - `master` is not a remote branch.","2019-06-08 01:15:16","1614973"
"83846220","19621946","0","This is still an O(n^2) algorithm since you have to iterate over each bucket whenever you pull out a new sock. But, considering the fact that even the socks bought within the same batch have minor differences which render them effectively pair-unique (or even single-unique), there's no better way anyway","2018-01-24 05:04:24","2520359"
"83848452","19621946","0","Agree, but my algorithm is assuming that human is doing the pairing. Therefore, there will be a kind-of cache in your mind when you are searching for the matching bucket, so you don't really need to iterate over the buckets anyway. Not sure what kind of data structure is built for this caching mechanism in my head during the pairing.","2018-01-24 06:06:50","912102"
"37650793","932982","2","While good advice - There is no need to ignore the file itself - either create the file and force add it (`echo ""*"" > .gitignore; git add -f .gitignore;`) or add the file and edit it (`touch .gitignore; git add .gitignore; echo ""*"" > .gitignore). This removes the somewhat pointless ""but don't ignore the .gitignore"" rule.","2014-06-22 01:17:35","761202"
"99610153","5189600","1","`git reset --soft $(git merge-base HEAD master) && git commit --reuse-message=HEAD@{1}`","2019-06-09 03:33:14","187780"
"116151433","7077","0","It's worth noting that `string` is not an alias for `String` but is an alias for `global::System.String`. When you use the alias, it is guaranteed to resolve to the system string type and not some other class called `String`.","2021-01-13 12:16:31","2791540"
"116152575","65107068","0","This is not ""the best way to remove a specific item from an array"".  First off, .filter() removes ALL occurrences of `removeNumber`, not a specific entry.  So in your example, if there were other elements of `5`, they would also get removed, which is not what is wanted.  Secondly, and closely tied to the first point, it's evaluating EVERY element in the array, so it's very inefficient if we know the index already.  .filter() is evaluating every single element in the array with that condition.","2021-01-13 01:55:35","7903952"
"99624044","21171527","0","one of the best answers on here, sadly it is quite low on the list","2019-06-10 01:10:36","3903990"
"116154896","6472397","1","And Prince Charming can add to her adventures, can kill all the dragons to save her from dangers like below:

`function princeCharming {    adventures.push('Honeymoon Trip', 'Skydiving', 'Visiting Somalia');    const pickADragonToKill = dragons.pop(); }`","2021-01-13 05:15:45","1592107"
"23088379","115983","47","@AdamMarshall I think tiwo was saying that the hack is not useful, since it is ignored by checkout. Tmp dirs do sound like a useful feature for a VCS.","2013-04-22 09:33:14","81658"
"69278176","31825535","3","@PedroGimeno When you anchored, you made sure to put this regex in parens first?  Otherwise the precedences between anchors and `|` won't play nicely.  `'^(()|h(ed?)?|([^h]|h([^e]|e([^d]|d([^e]|e.)))).*)$'`.","2016-12-08 09:03:41","1353549"
"83865760","48437064","1","Please add some explanations as well.","2018-01-25 07:04:17","5349542"
"83866348","48437400","0","<div class=""DivCenter""></div>","2018-01-25 07:29:28","7635131"
"83866511","48437400","0","Thank you for this code snippet, which might provide some limited, immediate help. A [proper explanation would greatly improve its long-term value](//meta.stackexchange.com/q/114762/350567) by showing *why* this is a good solution to the problem, and would make it more useful to future readers with other, similar questions. Please [edit] your answer to add some explanation, including the assumptions you've made.","2018-01-25 07:35:19","5958455"
"116164859","1628584","0","after cherry-pick, one can use the interactive rebase and change `pick` to `drop` if you want to remove the commits from the original branch. especially useful if your commits are jumbled up and you only want to move some specific commits. You will have to force push though.","2021-01-13 12:10:44","7048915"
"69290153","37049724","0","NOTE: New files not added in index are not stashed. You have too add them or manually delete them.","2016-12-08 02:08:46","2218992"
"116167106","40523","0","Java is pass by value, BUT there is WORKAROUND of achieving otherwise. Using an array holding the reference of the object. Even though array is passed as value, so if you modify array it won't reflect. But array holds a reference to the Integer object. TRY THIS:- { Integer[] i = new Integer[] {new Integer(0)}; System.out.println(i[0]); i[0] = i[0]+1; System.out.println(i[0]); modify(i); System.out.println(i[0]); } public static void modify(Integer[] i) { i[0] = i[0]+1; }","2021-01-13 01:27:39","7597142"
"8141656","952952","322","I found the syntax hard to understand until I realized you can think of it exactly like nested for loops.  for sublist in l: for item in sublist: yield item","2011-07-27 04:43:18","195125"
"37696199","477578","0","Would not a ""secret question"" be beneficial when used in conjunction with typical password reset functionality?  A typical password reset process ensures only the possessor of the email account can reset their password.  But if the user has had their email account compromised, then the addition of a security question could foil an attempt to reset their password and gain access to a site.","2014-06-23 10:16:39","2045006"
"53261627","6258114","4","And if you don't want to add everything, you can first do `git add file.ext` then just `git commit --amend`","2015-09-22 05:56:35","985026"
"116173554","419185","1","@ChadP This post evolved over time in response to the discussion here in the comments. In 2019, StackOverflow actually cleared out all the comments. You can see the full history of this post by clicking on the ""edited <timestamp>"" link just above this comment section. StackOverflow is pretty cool.  Unfortunately, I don't think there's a way to get the old deleted comments back.","2021-01-13 04:53:53","25050"
"53263244","30606474","21","The accepted answer does NOT explain this point in its example. The accepted answer only demonstrated it in a `for` loop initializer, dramatically narrowing the scope of application of the limitations of `let`.
Upvoted.","2015-09-22 06:55:21","11398"
"23118138","16089689","0","It's not dangerous! The Python devs are careful only to break features between major releases (ie. between 2.x and 3.x). I've been using the commands module since 2004's Python 2.4. It works the same today in Python 2.7.","2013-04-23 04:09:04","284795"
"23118703","16089689","6","With dangerous, I didn't mean that it may be removed anytime (that's a different problem), neither did I say that it is dangerous to use this specific module. However it may become dangerous if a security vulnerability is discovered but the module isn't further developed or maintained. (I don't want to say that this module is or isn't vulnerable to security issues, just talking about deprecated stuff in general)","2013-04-23 04:23:36","1076143"
"83904436","19506355","0","https://stackoverflow.com/a/14074925/470749 was helpful to me because I was getting `Permission denied (publickey). fatal: Could not read from remote repository.` when trying to fetch from Facebook's Github account upstream.","2018-01-26 04:28:55","470749"
"23127696","12706960","3","-1 All type names are pascal case by convention.  But C# keywords are all lowercase.","2013-04-23 09:14:37","36388"
"69329517","41059156","0","only add text-align center in your perent div (outer) so their children class take that css autometicaly","2016-12-09 01:25:35","6374688"
"37725579","178450","1","@carl I don't see anything in the jQuery documentation about this being deprecated. I have also tested it with the latest jQuery and it does still work. Here: http://jsfiddle.net/F6atJ/","2014-06-24 03:51:18","649497"
"69334496","406243","16","Or just `grep -v ""hede\|hihi""` :)","2016-12-09 03:29:17","1013183"
"69335067","31825535","0","@akim That seemed to be the problem, thanks and sorry (see my answer for a full substring match). And forgot to say, the graph doesn't have [^d] anywhere. I suspect that's a mistake.","2016-12-09 03:45:41","2428487"
"99675699","3407920","0","@Script47 Your edit changed an [acceptable idiom](https://idioms.thefreedictionary.com/Oh+Me+Oh+My) and nothing else. If I were reviewing it, I'd reject your edit.","2019-06-11 03:23:03","241211"
"99678283","3407920","0","@Michael I wasn't aware, it looked like a spelling mistake.","2019-06-11 04:39:08","2263631"
"53281477","19095988","16","With this you may end up adding *other* useless files that are not currently in `.gitignore`. Which may be difficult to find out if depending on how noise your `git status` is after this command. A command that *only removes* newly ignored files would be better. That's why I prefer [thSoft's answer](http://stackoverflow.com/a/23839198/236871)","2015-09-22 02:27:06","236871"
"83932694","36035604","2","[Wolf](https://stackoverflow.com/users/2932052/wolf), guessing you know this by now, but for posterity... It is the format for ssh. https://help.github.com/articles/configuring-a-remote-for-a-fork/","2018-01-26 09:02:45","2767346"
"53283359","28441119","72","This seems like a better answer than the accepted one, because it dynamically resets to the current upstream branch rather than always a static one such as `origin/master`","2015-09-22 03:10:08","291106"
"116201922","122704","3","I used a library called really fast deep clone:
https://github.com/davidmarkclements/rfdc

Worked really well for me.","2021-01-14 04:02:03","4398147"
"37740709","20241145","28","`git update-index --assume-unchanged <path> …` will cause git to ignore changes in the specified path(s), regardless of `.gitignore`. If you pull from a remote and that remote has changes to this path, git will fail the merge with a conflict and you will need to merge manually.

`git rm --cached <path> …` will cause git to stop tracking that path. If you do not add the path to `.gitignore` you will see the path in future `git status`.

The first option has less noise in the git commit history and allows changes to the ""ignored"" file to be distributed in the future.","2014-06-25 02:02:40","3380930"
"23148663","14419228","128","The problem with having 60 pairs of identical socks ""because it makes pairing easier"" is that it gives people the impression you work with computers.","2013-04-24 12:17:16","1430420"
"53289831","6591218","60","The long name of the `-m` option is `--move`, e.g., `git branch --move master` renames the current branch to be called ""master"".","2015-09-22 05:56:25","284855"
"23151258","12706960","0","@PDaddy yes, and `string` is indeed a C# keyword. The question being asked here is whether to prefer the keyword or the type name. My answer says that, although you can obviously pick the keyword, one argument in favour of using the type name is that they keyword `string`, which is an alias for the `String`, is ultimately a reference type.The keyword `int`, in contrast, is an alias for `Int32` which is a value type.","2013-04-24 01:24:26","374420"
"8174526","487271","3","@Filip Ekberg I think you're thinking of a direct-address table where each index maps to a key directly hence is O(1), however I believe Jon is talking about an unsorted array of key/val pairs which you have to search through linearly.","2011-07-29 09:41:13","3394"
"23156563","12706960","4","The casing conventions don't differ between reference types and value types, as evidenced by the `Int32` type you yourself mentioned.  It doesn't make sense to eschew the keyword in favor of the class name to abide by some imagined restriction that reference types follow different naming conventions than value types.","2013-04-24 03:34:06","36388"
"23162598","13379576","22","This is not SQl Server syntax and it will not work in SQL server","2013-04-24 06:32:10","9034"
"23162861","12706960","0","@PDaddy yes you are correct. I was carrying over Java conventions here, where primitives are camelCase.","2013-04-24 06:40:21","374420"
"83957844","20388370","1","Thanks @Cranio for your excellent post, upvote. You can improve it by adding an option to just use .keep","2018-01-28 01:50:50","935330"
"69373283","31825535","0","@PedroGimeno Thanks for pointing this out.  When I first answered I read incorrectly and thought that `hehe` was to reject.  I fixed the text, but forgot to fix the snapshot.","2016-12-11 07:02:30","1353549"
"83963476","15782391","0","yeah I love it. It's css selector level 3 according to [Mozilla docs](https://developer.mozilla.org/id/docs/Web/CSS/::selection)","2018-01-28 10:37:47","6738162"
"23174817","9244805","1","I had other untracked files--besides the one the merge/pull wanted to overwrite, so this solution worked best. `git stash apply` brought back all my untracked files with the exception (rightly) of the ones that the merge had already created: ""already exists, no checkout."" Worked perfectly.","2013-04-25 04:55:09","507169"
"99720250","40857703","0","the above code doesnt seem to work for if one of the nested lists is having a list of strings.
[1, 2, [3, 4], [4], [], 9, 9.5, 'ssssss', ['str', 'sss', 'ss'], [3, 4, 5]]
output:- [1, 2, 3, 4, 4, 9, 9.5, 'ssssss', 3, 4, 5]","2019-06-12 09:35:28","696173"
"83974631","6984591","3","BrowserID link is dead","2018-01-28 08:10:33","2595450"
"99721409","40857703","0","@sunnyX It seems to work when I try your input, even with a deeply nested list of strings, e.g. `list(flatten([[""a"", ""b"", [""c"",  ""d"", [""e"", ""f"", [""g""]]]]]))` -> `['a', 'b', 'c', 'd', 'e', 'f', 'g']`.  What version of Python are you using?","2019-06-12 10:52:36","4531270"
"23179960","2219560","8","@DaveEveritt you most likely pushed your commit upstream before trying to fix it.","2013-04-25 08:21:20","53897"
"83976300","46210590","0","""Working copy""? Is this a Git concept? Isn't it an SVN concept?","2018-01-28 09:36:56","63550"
"23180642","2219560","1","@ThorbjørnRavnAndersen - thanks, that was 2 years ago, these days I've got my git workflow sorted!","2013-04-25 08:41:27","123033"
"116242935","2765461","0","Edited answer to just have the one working link (https://github.com/DanielVartanov/willgit)","2021-01-16 02:49:33","565877"
"69390919","932982","0","Although adding the .gitignore does guarantee that the directory remains empty, as soon as you have a file to commit you can just delete the .gitignore.  It's simple and easy enough.","2016-12-12 01:30:37","3676649"
"23193111","15587937","1","This is the most efficient for the latest version. One will always need to tweak it for older versions. Especially before v3.","2013-04-25 02:34:11","197359"
"23194192","2064441","10","An Optional class will be available in Java 8","2013-04-25 02:59:13","315677"
"23195349","2064441","1","...and it doesn't (yet) have map nor flatMap: http://download.java.net/jdk8/docs/api/java/util/Optional.html","2013-04-25 03:28:05","90874"
"37790689","20434146","0","+1 for the link! Actually I think it is a good thing that comments are not supported because when sending data between a client and server, comments are definitively useless and pump lots of bandwidth for nothing. It's like someone who would ask to have comments in an MP3 structure or a JPEG data block...","2014-06-26 08:45:04","212378"
"99742047","40857703","0","@pylang Python 3.6.2","2019-06-13 01:53:52","696173"
"53342110","32750752","15","While this works, it's not really better than assigning to a global variable.","2015-09-23 10:53:07","218196"
"23206308","1970277","30","@H2CO3 This isn't true in general. There are places where white space must be used to separate tokens, e.g. in `#define foo()` versus `#define foo ()`.","2013-04-25 09:16:44","648658"
"99756777","29524405","0","What do you mean by *""The currently voted answer""*? Do you mean *""The currently highest voted answer""*?","2019-06-13 11:14:49","63550"
"99757029","28441119","0","@Jonz spot on, the ```@{upstream}``` is very handy and can be used in aliases: ```alias resetthisbranch=""git reset --hard @{upstream}""```","2019-06-13 11:36:30","792238"
"23214713","14364249","15","This answer covers pretty much every special case as far as I can tell.  I plan on wrapping this in a ""if not os.path.isdir()"" though since I expect the directory to exist almost every time and I can avoid the exception that way.","2013-04-26 05:52:17","557406"
"99761695","53684037","0","This is the method that worked for me. Simple and fast.","2019-06-14 06:13:24","1624862"
"37822767","20434146","0","Thanks for the +1!  You have to remember that JSON is used for much more than server/client communication.  Also, depending upon your data size, and packet size, sending comments may not increase your bandwidth at all, and it could be useful for your client to have access to the extra context, and you could always have the server strip the comments if you didn't want to send them over the wire.","2014-06-27 03:13:55","973402"
"53367925","5201642","46","@2rs2ts git push -f sound dangerous. Take care to only squash local commits. Never touch pushed commits!","2015-09-24 02:49:08","1909531"
"37826776","14419556","0","@Pointy: This technically is not hashing or radix sort but bucket sort (which just basically means a generalization of radix sort.) http://en.wikipedia.org/wiki/Bucket_sort","2014-06-27 06:49:54","177931"
"84016260","7286050","0","See my answer for how to do it for submatches too. As for inverting a RE, the inverse always exists without needing extra operators. Grail has a tool to find it, the one I used in my answer.","2018-01-29 09:59:54","2428487"
"53374302","11524251","158","$('#mystring_id').text(string).css('text-transform','capitalize');","2015-09-24 05:34:23","2052543"
"53380635","32212535","3","That's not core JS as the OP requested, is it?","2015-09-24 09:01:50","981694"
"53415777","31298778","47","@AcidShout `$a - $b` works for numbers, but not strings, objects, or arrays.","2015-09-25 06:29:36","17287"
"116275745","48842851","0","Do you consider generators / async generators to be an async API solution alone ? Or you would use generators to wrap another asynchronous API like promise/deffered ? I agree it is another strong addition to the async universe but still haven't found the right usage of generators that would make me adopt them.","2021-01-17 06:52:49","10033612"
"23253791","15818776","1","Upvoted due to clear intent to help the OP. I disagree with coding style but that is no reason to downvote. Also, this example is not really self contained since ""  File ""C:\Users\****\Desktop\datastore.py"", line 4
    print ""File exists.""
                       ^
SyntaxError: invalid syntax
""","2013-04-27 01:21:56","2012715"
"116276024","50178868","0","I am struggling to accept ""callbacks are kind of like promises"". it's like saying ""flour is kind of like bread"" but it is not. you use flour, water and other incredients, mix them and eventually after a process, bread is the results.","2021-01-17 07:08:00","10033612"
"116276181","487258","0","This post explains complexity using concrete example: https://mohalgorithmsorbit.blogspot.com/2021/01/understanding-complexity.html","2021-01-17 07:16:51","3344832"
"116276741","57865925","0","what do you mean by ""It is the classic observer pattern"". callback is not the classic observer pattern. maybe promise is a variation of the classic observer pattern, or a variation of PubSub, etc . . but by no means callback itself. at least the way I see it. Do you claim all kinds of async patterns are implementation of the classic observer pattern ? (event RXJS Observable isn't. even though rxjs.subject is)","2021-01-17 07:50:39","10033612"
"84050970","5824565","2","Note that `check_output` requires a list rather than a string. If you don't rely on quoted spaces to make your call valid, the simplest, most readable way to do this is `subprocess.check_output(""ls -l /dev/null"".split())`.","2018-01-30 06:18:54","117471"
"84054174","48529012","1","[charAt](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charAt) accepts an optional numeric index as an argument, not a pattern. Using RegEx here  seems unnecessarily expensive. Also the correct version of this has already been posted [here](https://stackoverflow.com/a/33704783/1336653).","2018-01-30 07:52:07","1336653"
"116286300","477578","0","Why isn't CSRF protection being explained here?","2021-01-18 08:09:37","2642351"
"84058494","48529012","1","@noahnu  there was typo and there are many way to solve the same thing","2018-01-30 10:21:56","1583644"
"84058625","48529012","0","reason it worked is because the charAt argument was 'sanitized'. It went from `/.{1}/` -> `NaN` -> `0`. What I meant by ""correct"", was the version you just edited your answer to. If you follow the link I provided, another user already posted your approach in 2015, meaning your answer doesn't add anything.","2018-01-30 10:27:21","1336653"
"116299388","50178868","1","This is true - I think I was try to say something that doesnt quite read what I was meaning. A promise in JS evidently represents something different to a callback, however when programming any kind asynchronous functionality you are going to be executing a callback. A promise represents the value but the callback is what we need to do something with that value, at some point in the future, when it returns.","2021-01-18 03:58:32","4866533"
"116299409","50178868","1","A promise is mostly useless (but not always) without a callback to do something with the resolved value","2021-01-18 03:59:29","4866533"
"8266509","477578","0","Great answer, thanks.  Can you explain why the 'Improved' Best Practices for persistent login is flawed?  At first blush it does seem like it addresses the DOS scenario for invalidating sessions with Miller's approach, what am I missing?","2011-08-04 05:02:23","170976"
"69446893","22343224","11","This tool is a great helper to test https://semver.npmjs.com/","2016-12-13 12:57:23","1851138"
"116312730","57865925","0","I mean it in the way that ""result is not ready, and let me know when it is ready (or has changed)"" So for the question ""How do I return the response from an asynchronous call?"", it is ""using a mechanism to get notified when there is result"".  I guess you can say it is different because observer pattern can be invoked many times but this ""callback"" or ""promise"" is only one time?  I focus on the ""notify me in the future when it is ready"", instead of ""how many times it can get called"".","2021-01-19 04:43:06","325418"
"23278877","246128","5","@ChrisQuenelle: [`${BASH_SOURCE[0]}` differs  from `$0` when using `source`](http://www.cyberciti.biz/faq/unix-linux-script-sourced-by-bash-can-it-determine-its-own-location/).","2013-04-28 08:14:11","3625"
"99787891","29524405","0","@PeterMortensen: sorry, I answered this in 2015 and guess I was referring to the accepted answer but I can't remember. Feel free to change/correct.","2019-06-14 10:43:31","2051746"
"116314590","57865925","0","well I argue only about your naming, the choice of words. that callback is 'the classic observer pattern' which is a very specific design pattern that you can say Promise is a variation of. but callback (although it's a tool for notifying) is not the classic observer pattern. in promise we can push subscribers that will get notified when the promise settles, but callback is more like an atomic unit and not a pattern, IMHO.","2021-01-19 07:04:16","10033612"
"116314691","57865925","1","ok it is about the naming... what I wanted to put through was, it is the classic ""notify me when ready"" kind of pattern","2021-01-19 07:08:59","325418"
"116319126","20093702","0","@GrijeshChauhan In short, this implements the so-called “**short-circuit evaluation**”. Generally, `P ? x : y` or `x if P else y` can be written as `(lambda:y, lambda:x)[P]()` — but I doubt it has better performance and thus its necessity.","2021-01-19 10:11:35","10766083"
"69470046","11551718","2","I cannot even paste this in current Chrome.","2016-12-14 12:37:57","1325575"
"84084257","47178103","2","did you actually try this? Put anything in `a` and it still says empty","2018-01-31 02:28:02","128511"
"116343534","1815323","0","An explanation would be in order.","2021-01-20 03:37:18","63550"
"99806189","16956844","1","very useful much more util","2019-06-16 04:22:16","1661186"
"116343609","7449270","0","This is [Perl](https://en.wikipedia.org/wiki/Perl)-like! A coincidence?","2021-01-20 03:44:56","63550"
"116344571","55352142","0","What is ""Windows PHP""? ""[PHP For Windows](https://windows.php.net/)""? Or [WAMP](https://en.wikipedia.org/wiki/LAMP_(software_bundle)#Variants)? Or something else?","2021-01-20 05:00:58","63550"
"69478964","37499171","0","The selected answer does not show the default pattern, and 5 peoples seemed to have found it useful","2016-12-14 08:27:11","316408"
"69479580","37499171","0","What do you mean with ""default pattern""? The accepted answer contains `grep -rnw '/path/to/somewhere/' -e ""pattern""` which is what you have here. 5 votes after 2.3M visits does not mean that much.","2016-12-14 08:45:01","1983854"
"116350889","40480","0","I found this quite helpful: 
https://www.baeldung.com/java-pass-by-value-or-pass-by-reference","2021-01-20 09:52:48","9873819"
"84102620","48529012","0","@noahnu i recently got in to posting solution or alternate solution to a problem recently, earlier i used to ask mostly. Much respect from fellow programmer .","2018-01-31 11:24:01","1583644"
"69491609","37499171","0","I agree :-) what I was missing in the original answer is the use case that you don't have to give a path at all or to search the current directory recursively which is not reflected in the accepted answer. Thus it was a good learning experience about grep to dig a bit deeper.","2016-12-14 02:05:21","316408"
"99822583","1274057","0","Possible duplicate of [How to stop tracking and ignore changes to a file in Git?](https://stackoverflow.com/questions/936249/how-to-stop-tracking-and-ignore-changes-to-a-file-in-git)","2019-06-17 05:15:15","1848654"
"69492901","37499171","0","OK, I see. It is not trivial to see that `grep ""pattern""`  needs something to check (a dir, a file...) while `grep -R ""pattern""` works standalone. Then probably an addition to the answer would benefit more people (last posts are rarely noticed). But I am glad you learned from it :) I have the 2nd most upvoted answer and I see there are many, many variants of doing this.","2016-12-14 02:39:27","1983854"
"69494113","37499171","0","So with `pwd` I was trying to find an easy hack to not type in the full path, but I am sure `.` would suffice as well, as current directory, but leaving it out altogether is of course the leanest.","2016-12-14 03:07:13","316408"
"8308657","179231","0","Just to note my use case: I saved the script as `~/getpath`; and then made a bash alias: `echo ""alias getpath='""'GP=""getpath"" ; cp ~/$GP ./$GP ; source ./$GP ; rm ./$GP'""'"" >> ~/.bashrc` ... and now I can do, in either shell or script: `getpath ; echo $SCRIPT_PATH` . Thanks for the script - cheers!","2011-08-06 01:43:50","277826"
"8308686","179231","0","Ups, shame I missed my edit time window - actually, my alias comment above doesn't work in a script, not even with `shopt -s expand_aliases` (see [Aliases](http://tldp.org/LDP/abs/html/aliases.html))","2011-08-06 01:50:36","277826"
"99829665","1041798","0","Agree that ""Hashtable is considered legacy code"". You should use ConcurentHashMap instead if you need concurrency.","2019-06-17 09:54:13","1028135"
"84111988","39383786","0","If i get the question of the OP correct the indexed files should be kept. Only unstage changes should be removed.
So is should be `git stash -k` in my opinion.","2018-02-01 08:19:21","8578684"
"99840031","417184","0","I'm noticing that on Chrome, `mailto:` links longer than 2048 characters fail. On Firefox I seem to be able to go up to just over 32K.","2019-06-17 03:13:11","11659762"
"53469882","27664932","61","also `git clean -fdx`","2015-09-28 06:32:53","1665592"
"53470619","4183018","32","@alkuzad: When it comes to formal grammars, there must be something that explicitly says that they *are* allowed, not the other way around. For instance, take your programming language of choice: Just because some desired (but missing) feature isn't explicitly disallowed, doesn't mean that your compiler will magically recognize it.","2015-09-28 07:01:23","240733"
"8330126","477578","1","Don't forget to look at your crypto algorithm.  You wouldn't want to be hit by a side channel attack such as timing.","2011-08-08 12:07:09","79842"
"53479268","18632808","0","Why did you set all your files to be world read/write? Not good practice.","2015-09-28 11:31:54","80662"
"8330546","477578","14","""After sending the authentication tokens, the system needs a way to remember that you have been authenticated - this fact should only ever be stored serverside in the session data. A cookie can be used to reference the session data.""

Not quite. You can (and should, for stateless servers!) use a cryptographically signed cookie. That's impossible to forge, doesn't tie up server resources, and doesn't need sticky sessions or other shenanigans.","2011-08-08 12:32:05","22227"
"8331717","477578","1","Are there any good articles discussing either (1) theory behind and/or (2) implementation of challenge-response mechanisms?","2011-08-08 01:36:39","168775"
"53483959","18632808","0","@Ghoti my bad, 664 is correct? you're also welcome to edit the answer.","2015-09-28 01:29:21","144020"
"8336877","477578","5","For persistent login. How is the Username+token better than just a random session-id that the server has mapped to the username and loginstatus? I have never even heard of the first method before.","2011-08-08 06:06:07","863754"
"8338060","549","2","Key Stretching for decreasing dictionary attacks if your passwords are comprimised - http://en.wikipedia.org/wiki/Key_strengthening","2011-08-08 07:13:13","252253"
"8339383","549","29","The super-useful `HttpOnly` cookie flag, which prevents JavaScript-based cookie theft (a subset of XSS attacks), should be mentioned somewhere too.","2011-08-08 08:41:41","211327"
"8339854","477578","3","This is the longest and most interesting answer I have ever seen on Stack Overflow. But it really is more suitable for a blog post!","2011-08-08 09:09:00","416623"
"8339961","477578","0","How is a second cookie for persistent login better than one cookie/session with a longer expiration time?","2011-08-08 09:15:30","84745"
"8340369","549","5","We should probably have a best-practices tag or something similar for excellent questions and answers like this one.","2011-08-08 09:41:40","202648"
"99862572","237104","1","__If items in your array are objects__ then look at [this](https://stackoverflow.com/a/24827594/465053) answer which uses `some` function.","2019-06-18 09:51:22","465053"
"8341337","477578","0","While Tyler Atkin's password strength library looks excellent, it is licensed under the GPL which is kind of weird for a JavaScript library. Providing a link to an alternative implementation that can be used without restriction in a commercial web app would be good.","2011-08-08 11:03:59","428876"
"8341356","477578","12","""a desktop PC can search the FULL KEYSPACE up to 7 characters in less than 90 days""  A machine with a recent GPU can search the full 7 char keyspace in less than 1 day.  A top of the line GPU can manage 1 billion hashes per second.  http://www.golubev.com/hashgpu.htm  This leads to some conclusions about password storage which aren't directly addressed.","2011-08-08 11:06:51","82769"
"8342622","477578","4","I totally agree with you on security questions. They are very bad. I just wish I could explain this to my bank.","2011-08-09 01:34:28","36157"
"53489212","1671095","11","The cited Avoiding Race Conditions (apple dev support) link does not support your answer.  It concerns only using temporary files that contain sensitive information on poorly designed operating systems that don't properly sandbox temporary files / directories via restricted permissions.  Using `try...except` doesn't help resolve *that* problem anyway.","2015-09-28 03:38:00","786437"
"84140052","44601723","0","What happens with `alireza@test.uk` or `phil.h\@\@cked+liked~it@haacked.com`?","2018-02-01 09:03:23","2225787"
"84140229","43245721","0","`me@localhost` fails.","2018-02-01 09:08:42","2225787"
"116383658","55352142","0","With help of [another post](https://stackoverflow.com/a/27776822/8740349) removed the need for PHP (and now checks if is running under Windows).","2021-01-21 10:13:11","8740349"
"116383678","1815323","0","@PeterMortensen why should I? I pasted a solution that worked for me for years and I got spat upon on things that are completely irrelevant. They don't like the function they can take it away. They don't like the hack they can remove it.","2021-01-21 10:14:07","78374"
"99883098","4183018","6","@stakx, I disagree. That's like saying ""Cars didn't start out with seatbelts so we shouldn't have added them. If you want a seatbelt, you're using the car wrong"". If adding comments to JSON would make it more useful (which it certainly would), we should just add them. Instead of accepting that JSON just ""is what it is"", let's make it what it should be.","2019-06-18 08:29:07","1334007"
"8349377","477578","2","@aero: By including the username in the persistent login cookie token, you avoid a scenario where an attacker has 10 million chances to guess a correct token (on a site with 10 million users). Of course, if the token string is long enough, it shouldn't be a big issue, but I would still recommend it.","2011-08-09 11:31:30","57068"
"8349542","477578","0","@Sidnicious: Session cookies are transient by definition, ie. they automatically expire when the user closes the browser window.","2011-08-09 11:39:47","57068"
"8349754","477578","0","@Colin Bowern: Are you aware of any successful timing attacks on remote web sites? From the literature I've read on successful timing attacks, they require sub-millisecond variance, which makes them impractical for remote attacking web sites (where common response times are in the 20-50 millisecond range)","2011-08-09 11:48:58","57068"
"8349960","477578","0","@fjager: sure - I added a simple note to the post explaining why it doesn't add significant security to the system.","2011-08-09 11:59:08","57068"
"8352467","555","0","BCrypt Nuget package : http://nuget.org/List/Packages/BCrypt","2011-08-09 02:10:33","66973"
"8355020","246128","0","This also does not work if the shell is invoked with an explicit `bash` command, as you would need to do if you wanted to invoke with a shell option, as in `sh -x myscript.sh`","2011-08-09 04:07:27","18157"
"8355749","271616","96","What's the point in throwing IllegalArgumentException? I think NullPointerException would be clearer, and that would also be thrown if you don't do the null-check yourself. I'd either use assert or nothing at all.","2011-08-09 04:47:13","341291"
"99887726","5201642","4","For those curious about `HEAD..HEAD@{1}`, `r1..r2` specifies a range of commits that are reachable from `r2` excluding those that are reachable from `r1`, and `<refname>@{<n>}` specifies the n-th prior value of that ref.  So here, `HEAD..HEAD@{1}` means all the commits between the current `HEAD` and where `HEAD` was right before the reset.","2019-06-19 01:57:05","1698736"
"69538122","34583071","0","Be **extra** careful when reverting merge commits. You may lose your commits. Read about what Linus says about that: https://www.kernel.org/pub/software/scm/git/docs/howto/revert-a-faulty-merge.html","2016-12-15 04:25:41","4632019"
"69538260","38629666","9","The very useful description about differences `--soft` VS `--hard` https://www.atlassian.com/git/tutorials/resetting-checking-out-and-reverting/","2016-12-15 04:29:21","4632019"
"69542322","348234","2","`-p` most definitely is awesome, and it's used in a lot of git commands (not just reset and add).  But to answer @WeDoTDD.com and @Johnny, `git reset` by itself just clears whether Git ""knows about"" the changes; it doesn't clear the changes themselves.  To do that you need to do `git checkout someFile.txt` (for individual files) or `git reset --hard` (to wipe everything clean).  There's no going back from either of these commands though, so be very careful when using them.","2016-12-15 06:33:19","5921"
"23351364","1628334","29","Just after fetching, I believe you can do `git reset FETCH_HEAD --hard` instead, as well, that's the same meaning.","2013-04-30 09:21:01","941001"
"8359697","477578","0","@Jens Why? If the purpose of the cookie is to store information about the login session, why wouldn't it last as long as the login is going to last? It seems like have separate session/remember-me cookies just adds complexity.","2011-08-09 08:17:08","84745"
"69543643","826782","1","@cram2208 I agree except the other question linked is the duplicate. This question is older and has more/better answers.","2016-12-15 07:14:23","3011082"
"8361155","549","6","I vote on closing because I believe this question in its current state does not fit SO format. One long answer that everyone's editing seems plain wrong. Instead, I would reformat it into [small useful chunks like they did with this question](http://programmers.stackexchange.com/questions/46716/what-should-a-developer-know-before-building-a-public-web-site) (most upvoted question on Programmers).","2011-08-09 09:41:34","458193"
"37895159","24460862","8","+1 but you should have used relevant alias names like `targett1` and `sourcet1` rather than (or as well as) comments.","2014-06-30 02:05:36","256431"
"53514863","13012436","27","What does that have to do with Ruby on Rails?","2015-09-29 09:11:49","1041515"
"8362608","59839","85","One thing to keep in mind: `[ ! -d ""$DIRECTORY"" ]` will be true either if `$DIRECTORY` doesn't exist, or if *does* exist but isn't a directory.  Consider something like `if [ ! -d ""$DIRECTORY"" ] ; then mkdir ""$DIRECTORY"" ; fi`; this will fail if `""$DIRECTORY""` is a file.  (Of course you should check whether `mkdir` succeeded anyway; there are a number of reasons it can fail.)","2011-08-09 11:46:01","827263"
"69554778","7094191","0","`I don't know why this solution is not work any more` - because it's ***Android***, everything will be able to change, maybe partly of bad design... We write carelessly, then we strike out all and rewrite everything.","2016-12-16 04:22:07","1679602"
"69561540","16957078","1","I prefer getting only filenames without the result, so i use `grep -rnwl`","2016-12-16 09:13:48","2037229"
"23369232","5189600","308","This, I think, answers this question a bit better http://stackoverflow.com/a/5201642/295797","2013-05-01 02:22:43","295797"
"69573307","16956844","0","Is it possible to display also the line number in the file where the string appears?","2016-12-16 02:43:33","4185297"
"69573364","16956844","1","@W.M. yes, just use `-n`: `grep -n ""pattern"" file`.","2016-12-16 02:44:55","1983854"
"37923493","22537629","27","Upvoted. It's obviously a good variation un-open conservative people would just love to hate. I hope your implementation gets known further - and perhaps even gets more popular than the original ;) I hope someone gets to implement it with Ruby as well. @adelphus The language being well-defined is your own perspective or opinion. Being a conservative ""developer"" if you are one doesn't prove that you are better and you could be even worse keeping yourself locked up in limited spaces. Don't go judging people as terrible developers easily.","2014-06-30 07:20:30","445221"
"116423413","1021384","0","Thank you so much! Finally an answer that ALWAYS works! This may be combined with `git clean` to also remove untracked files.","2021-01-22 03:02:49","424381"
"116423525","52719","0","`git stash save && git stash drop` is unusable as a general scripting solution, since it will not work (or do nasty things) if there's nothing to stash (and may drop a stash you may have wanted to keep). `git checkout-index -afq && git clean -fdqx` is the real deal!","2021-01-22 03:06:22","424381"
"99932214","55663687","0","@codepleb, can you elaborate on why you prefer filter over splice and why you think filter is more readable?","2019-06-20 09:47:31","1901646"
"99932894","55663687","0","Albeit not recommended for lengthy arrays.","2019-06-20 10:07:26","925307"
"99936146","31392914","1","It isn't @DanDascalescu. I suppose you could argue that `substr`/`substring` is a bit more semantic as opposed to `slice`, but that's just a matter of preference. I did however include examples with the strings provided in the question, which is a nice touch not present in the '09 example. I honestly think it boils down to 15 year old me wanting karma on StackOverflow ;)","2019-06-20 11:50:50","3697630"
"8391980","117111","68","I contest this view. **Structure** is content, and everything you **name** contributes to content.","2011-08-11 12:08:10","127465"
"8393363","477578","3","@Sidnicious: You are not talking about a session cookie then. Session cookies by definition have no expires directive. If you add an expires directive to a session cookie, it becomes a persistent cookie. It sounds like you want to make your ""session"" cookie persistent and eliminate the true session-limited cookie. I guess that's possible, but you lose all the useful things you can do with session cookies, i.e. keeping transient lightweight state objects in memory (you don't want to keep all session data alive for months, trust me).","2011-08-11 01:14:35","57068"
"99941968","53684037","1","`git rev-parse --abbrev-ref --symbolic-full-name '@{u}'` shows `fatal: no upstream configured for branch 'master'`.  Should be `origin/master`.","2019-06-20 02:30:31","445221"
"23396241","12788094","16","what happens if someone clicks again after writing something.. the original text they wrote will be gone!","2013-05-02 10:04:13","1335165"
"69589609","14220323","0","@MadaraUchiha, I strongly disagree with your recent edit (the large TL;DR: Use Promises). This question is a dup target for a *large* number of general async-issue questions (how to return a variable). Putting that code/info at the start is confusing to the people who we are telling this is a duplicate of their problem. The code you provided only shows how to use the Promise that is auto-returned by jQuery's `$.ajax()` when you don't provide a callback. You have changed a general purpose answer into one which is now only specific to `$.ajax()`, or functions which auto-return a Promise.(cont)","2016-12-17 02:38:13","3773011"
"69589610","14220323","0","@MadaraUchiha:(cont) This is now seen by newbies as too specific and not applicable to their question (which could be for any async function, not just `$.ajax()`). `$.ajax()` is just used as an example of the more general issue. Note that I am only here at this question/answer now because what I describe as the response newbies is what has happened when I suggested this as a dup target on a question. If you were not a moderator, I would just revert the edit while we discuss it, but I don't want to, potentially, get into a rollback contest with a moderator.","2016-12-17 02:38:18","3773011"
"37940458","2025282","24","[This nifty converter demonstrates it best](http://pixplicity.com/dp-px-converter/), in my opinion. It's also extremely useful for exporting sprites from Photoshop or designing your layout for a physical dimension.","2014-07-01 09:28:04","154306"
"116440805","65855609","0","Why does this work? Consider adding some explanation to your answer to make it standout above the other solutions.","2021-01-23 09:31:12","8458712"
"53558824","31886761","0","This is my preferred option, but why do you add all changes first? So far as I'm aware this just modifies the directory listing in Git files, while using git reset --hard, this will be lost anyway while the directories will still be removed.","2015-09-30 10:00:51","1813394"
"53560616","487267","0","for logN we consider for loop running from 0 to N/2 the what about O(log log N)? I mean how does program look like? pardon me for pure math skills","2015-09-30 10:52:49","3734640"
"99956529","115992","0","This should be the accepted answer. You simply can not store an empty directory in git.","2019-06-21 01:32:01","328275"
"37955003","59895","0","@l0b0 I used your solution on RHEL 6.5x64, but my $DIR variable ends up with a newline after it anyway.  Any idea why that might be?","2014-07-01 04:17:46","514479"
"116454279","38549","0","My preceding comment is about [a confused repudiated Jeff Atwood blog post](http://blog.codinghorror.com/a-visual-explanation-of-sql-joins/).","2021-01-23 11:15:42","3404097"
"53578202","2798934","0","Will this mess the remote?","2015-09-30 06:33:51","1767754"
"69616026","549","1","There is a suggestion to move the question to SO Documentation http://meta.stackoverflow.com/questions/332092/should-we-move-so-guides-to-documentation","2016-12-18 01:10:16","52277"
"116467788","63907839","2","Useful! Doesn't work on https urls though. This one is universal, works for both `git@...` and `https://...`: `git config --get remote.origin.url | sed -E 's/:([^\/])/\/\1/g' | sed -e 's/ssh\/\/\///g' | sed -e 's/git@/https:\/\//g'`","2021-01-24 04:31:10","2579733"
"53588865","32212535","13","@some-non-descript-user You are right. But a lot of users like me come here looking for a general answer not just for the OP only.","2015-10-01 03:38:30","1738342"
"53591850","12184274","0","This is actually the correct answer. stash and checkout only applies for staged changes.  git clean will do","2015-10-01 06:21:17","2379736"
"53594747","32288118","6","One-line check in bash: `[ -f ""${file}"" ] && echo ""file found"" || echo ""file not found""` (which is the same as `if [ ... ]; then ...; else ...; fi`).","2015-10-01 07:48:29","4419816"
"84225766","38898933","18","Would be great if you added lines of code with each image to illustrate the concepts.","2018-02-05 12:32:58","4936905"
"99988454","20292655","0","The other ES6 answer is simpler: `const capitalize = ([first,...rest]) => first.toUpperCase() + rest.join('').toLowerCase();`.","2019-06-22 05:50:17","1269037"
"116485859","11779320","0","How the fontsize is represened? in dp or sp? I have an app the text shows bigger in some modal. So it comes to the next line or fully occupying the spaces. How does this fontsize will be set to show as good in android","2021-01-25 10:55:53","8936551"
"116485870","20292655","1","@dudewad in css, capitalizing of first letter of a word is call 'capitalize', and if you want to capitalize all characters u use 'uppercase', hence it's not really bad choice.","2021-01-25 10:56:27","2822041"
"99998808","46216766","2","This. Why don't more people use this? It's way faster than rebasing and squashing individual commits.","2019-06-22 07:51:08","4385342"
"99998835","51049029","0","@Axalix Did you remove all your lines? That's how you lose your commits.","2019-06-22 07:53:09","4385342"
"53615602","31886761","0","I dont on mac or linux, github windows powershell sometimes leaves the files there after reset. 

I think its because git reset sets all files in the repo to its original state. If theyre not added, theyre not touched. The desktop client then will pickup the ""hey this file is in here and needs to be committed""","2015-10-01 05:04:49","1563884"
"84233120","11593797","5","Better answer, as this also works if you have a branch and a tag that's called the same.","2018-02-05 08:25:16","25338"
"37996561","59895","0","@l0b0 I've posted a question:  http://stackoverflow.com/questions/24537068/how-does-bash-script-command-substitution-work","2014-07-02 05:08:27","514479"
"8451120","271616","23","It's unlikely that every other value than null is acceptable. You could have IllegalArgumentException, OutOfRageException etc etc. Sometimes this makes sense. Other times you end up creating a lot of exception classes that doesn't add any value, then you just use IllegalArgumentException. It doesn't makes sense to have one exception for null-input, and another one for everything else.","2011-08-15 12:26:59","28683"
"37996955","19250386","2","You probably should add slash to that: `""$( cd ""$( echo ""${BASH_SOURCE[0]%/*}/"" )""; pwd )""`. You'd have problems with root directory if you don't. Also why do you even have to use echo?","2014-07-02 05:21:42","445221"
"38001264","38578","2","""Assuming you're joining on columns with no duplicates, which is a very common case:"" - Does much change when this is not the case?","2014-07-02 07:30:37","1771044"
"53622754","452820","10","This is the most ingenious idea I've seen.
It should be added to every sensible language of the C syntax.
I'd rather ""pin question marks"" everywhere than scroll through screenful of lines or dodge ""guard clauses"" all day.","2015-10-01 08:57:20","5394981"
"53624574","2691891","2","Thank you, this is very helpful.  To further your analogy, `POST` may be used to ""assign"" (as opposed to `x++`), but it's more like `obj.setX(5)` -- the `setX` method *should* result in x being 5, but may have side effects.","2015-10-01 10:21:12","143295"
"53626597","26744616","0","You are right, counting N-number of specific commits is very error prone.  It has screwed me up several times and wasted hours trying to undo the rebase.","2015-10-02 12:37:33","6998684"
"38004724","927386","19","The answer is not correct if, say by accident, `git commit -a` was issued when the `-a` should have been left out.  In which case, it's better no leave out the `--soft` (which will result in `--mixed` which is the default) and then you can restage the changes you meant to commit.","2014-07-02 09:19:30","1028259"
"116501148","37268543","1","This feels like the best answer when you know that you want to squash a certain amount of commits or at least see the commits you can squash by entering some arbitrary number. Generally, I use this .","2021-01-25 08:07:00","2214188"
"116502528","37268543","0","@Staghouse yeah, it gives you a lot of control and it’s super flexible. You might want to squash a commit which fixes a type in a variable name but also reword a commit message at the same time","2021-01-25 09:05:08","848668"
"116506241","179231","0","Is the `if` block necessary? The `while` condition is the same, and `while` will skip if the condition is false the first time.","2021-01-26 12:44:09","1144854"
"38011379","2633580","1","Better `SCRIPT_DIR=''; pushd ""$(dirname ""$(readlink -f ""$BASH_SOURCE"")"")"" > /dev/null && { SCRIPT_DIR=$PWD; popd > /dev/null; }`","2014-07-03 04:15:43","445221"
"116525996","509295","1","Somewhat interestingly the third step or stride argument was a later addition slice[start:stop:stride] http://docs.python.org/2.3/whatsnew/section-slices.html","2021-01-26 04:37:43","623159"
"53641794","31886761","0","Sense made. I don't use Windows so haven't seen that issue (haven't used Windows for the last few months at least, don't remember much before that - it's one huge regrettable blur). Might be worth noting the rationale in your main answer :)","2015-10-02 12:18:11","1813394"
"69665771","7074","17","For someone coming from Algol and Fortran, this discussion shows there is something wrong with `string`. It is needed to abbreviate `System.String`, but, as an alias, it seems quite like, but not exactly the same thing. After several years of C#, though, I'd say, it is safe to simply use `string` and `string.Format()` and not to worry about `System.String`.","2016-12-20 12:24:25","1845672"
"69675960","41237712","2","Please add some explanation what technologies you're using and how it's working. A reference link would be fine.","2016-12-20 08:53:07","1078886"
"116536187","27458534","0","This is absolutely amazing!! Thanks :)))","2021-01-26 11:45:08","4038800"
"8477422","246128","3","For one last upgrade, try this:  DIR=""$( cd -P ""$( dirname ""$0"" )"" && pwd )""  ---  that will give you the absolute dereferenced path, ie, resolves all symlinks.","2011-08-16 06:03:08","407731"
"38037272","671508","0","I've been reading about restful and trying to practice restful principals in embedded systems whenever needed for years. This answer is the best so far I've seen. It's concise, precise, right to the point. Awesome!","2014-07-03 04:23:26","362754"
"8482695","72156","2","how is `$ git checkout -b experimental origin/experimental` different from `$ git branch --track experimental origin/experimental`? I realize checkout will also switch to the branch.","2011-08-17 12:00:41","1140524"
"116542823","336868","1","Thanks Greg and @Ben_Aston for explaining the difference. But could one of you also give some light on the 'pros' and 'cons' as the user asks?","2021-01-27 08:05:05","2339326"
"23495213","2819117","3","In JavaScript, this is completely wrong and wrongly incomplete. `0 != null`. -1","2013-05-06 03:07:17","707111"
"23497651","15114868","0","Using ""git merge origin/master"" as the last line (like you say in your note) instead of ""git pull"" will be faster as you've already pulled down any changes from the git repo.","2013-05-06 06:20:47","423384"
"23497663","13242127","0","Using ""git merge origin/master"" as the last line (like you say in your note) instead of ""git pull"" will be faster as you've already pulled down any changes from the git repo.","2013-05-06 06:21:24","423384"
"8485465","3925191","2","What's wrong with this method, I think @tltester just want to give a default value if the it's null, which make sense.","2011-08-17 05:42:06","241824"
"53661014","59895","1","Guys, you should check out my simple script here: https://github.com/lingtalfi/printScriptDir/blob/master/printScriptDir.sh, it handles symlinks, relative paths, absolute paths, tested on linux and macOsX.","2015-10-02 10:07:11","405042"
"100032908","105421","1","I took your version with a small following changes from my side:
`Enum.GetValues(typeof(Suits)).OfType<Suits>().ToArray()`. In that case I can iterate array of `Suits` enum items, not strings.","2019-06-24 12:57:58","2674033"
"38049784","6232535","4","I still needed to 'git branch --set-upstream-to origin/remote' in order for 'git status' to correctly report my branch status with respect to the remote branch.","2014-07-04 01:17:58","1035279"
"100039752","50113060","0","It can be a solution but it does not do exactly what was asked because it loses the last 3 commits.","2019-06-24 04:17:55","4374441"
"23506047","7770473","3","Your suggestion would change this to Matthews answer. While his answer is fine, I think mine is more readable and better maintainable. The extra line would only be bad if it would cost execution time.","2013-05-06 11:50:17","509648"
"38057214","20263348","0","For fun I wrote this method of piling socks up into a little python program https://gist.github.com/justinfay/53b574cf0a492f6795ef","2014-07-04 08:05:03","515465"
"116564329","1026069","0","For those using angular, there is a  titlecase pipe: https://angular.io/api/common/TitleCasePipe","2021-01-27 08:54:54","9329985"
"8499571","2866221","45","HEY!  I just spent a few hours debugging IE 8 issues only to find that it was jQuery.isEmptyObject that was causing the problem.  It returns true if the object is empty.","2011-08-17 07:03:18","496172"
"38068075","15588434","2","Where does your constant 4 comes from?","2014-07-04 01:34:45","64633"
"38070759","17782979","2","Zain is correct. The “if” is just hidden in the lookup table. The code is faster because the lookup table is hidden OUTSIDE the 100000 iterations. There is nothign to gain from using a lookup table for this problem.","2014-07-04 02:56:03","116186"
"84290979","47038057","1","Creating an extension function on `Activity` seems like a decent approach `fun Activity.closeKeyboard() {
  (getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodManager).apply {
    hideSoftInputFromWindow(window.decorView.windowToken, 0)
  }
}`","2018-02-06 03:48:25","5125812"
"23517981","348303","23","The message will be different depending on whether the `add`ed file was already being tracked (the `add` only saved a new version to the cache -  here it will show your message). Elsewhere, if the file was not previously staged, it will display `use ""git rm --cached <file>..."" to unstage`","2013-05-06 06:25:26","277304"
"23519282","348234","119","Of course, this is not a true undo, because if the wrong `git add` overwrote a previous staged uncommited version, we can't recover it. I tried to clarify this in my answer below.","2013-05-06 07:10:43","277304"
"116584391","2003515","0","If the repository is deleted and you need to delete the local branch tracking the remote branch, use `git branch -d -r <remote>/<branch>`","2021-01-28 02:00:09","9173778"
"116584406","10999165","0","If the repository is deleted and you need to delete the local branch tracking the remote branch, use `git branch -d -r <remote>/<branch>`","2021-01-28 02:00:34","9173778"
"84298974","1984274","0","@johnsimer Don't think so, as you could have a copy of one file on the same computer, which would result into the same hash and therefore it's not unique.","2018-02-06 07:34:30","3439786"
"84301481","163659","0","This is amazing, thanks so much. I had no idea I even had this installed. For me, `meld` opened by default, which is identical to the PyCharm confilct manager I used to use.","2018-02-06 08:51:50","5162426"
"116591898","17217204","0","and afterwards `git push origin HEAD:<oldname>`","2021-01-28 05:57:59","7127824"
"100094674","630453","0","Note that if you want to make a web application work even if JavaScript is disabled, you should use POST: https://stackoverflow.com/questions/630453/put-vs-post-in-rest/56768993#56768993","2019-06-26 09:30:43","1176454"
"8523942","246128","0","It also does not work if you call the scripts via symbolic link; it returns the directory where the symlink is. But this may even be desirable.","2011-08-18 10:00:00","395744"
"69736392","14260056","0","Using commit id is useful in situations where you want to fix more than one commit. You dont need any other commands, this is short and clear.","2016-12-21 04:43:12","309489"
"38105150","15588434","2","@Rod iterator init, iterator comparison, iterator read, key comparison.. I think `C` would be better","2014-07-06 11:04:55","2128327"
"38109546","1984603","0","It seems, not only CI but also at least [PHP's `$_SERVER['REQUEST_URI']`](http://php.net/manual/de/reserved.variables.server.php) distinguishes like this.","2014-07-06 03:51:58","1050382"
"100109513","55663687","1","@MHOOS Slice has a lot of options and they are confusing IMHO. You can, if you want, pass a start and end variable and while the start index is included, the end index is not, etc. It's harder to read code playing with slice. If you don't use that too often, you often end up checking the docs during reviews to check if something is correct.
Docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice","2019-06-26 04:12:23","2311557"
"38117224","2247715","0","I got this to work with SearchView too. See below for my answer. Thanks mckoss!","2014-07-06 11:43:58","2418793"
"38117253","15396882","0","SearchView does not have a `clearFocus()` in the Android API pages, so this did not work for me, but another solution did (see my answer below).","2014-07-06 11:46:34","2418793"
"116618860","13545692","0","even better - hard to remember, hard to guess: Password managers   ... linking to article from 2005 where that likely meant an excel spreadsheet :)","2021-01-29 04:18:39","343347"
"69772334","41038255","2","`{ what_if: ""I happen to have /* slashes and asterisks */ in my data?"" }`","2016-12-22 02:24:14","351149"
"69772704","6232535","2","Somewhat annoyingly, I found that `git push -u origin branchname` wasn't working, but that `git push -u --set-upstream origin branchname` did. This is with the PoshGit scripts provided with Github for Windows.","2016-12-22 02:32:22","5738"
"69773890","41038255","3","What I mean is, is most languages you don't have to worry about comment sequences inside strings. Even in a JSON implementation that supported comments, I would expect parsing my example to result in an object with the key `""what_if""` and the value `""I happen to have /* slashes and asterisks */ in my data?""`, not `""I happen to have  in my data""`.","2016-12-22 03:01:59","351149"
"69776101","41038255","0","Using regex you can avoid data conversion to. What I understand, this should not be the case. JSON is used as a data not the language. So avoid garbage data or comments in data. :-D
Most of the language, you write code that compiles in some other format. Here in JS, it is dynamically bind. There is no such type of compilation happens. V8 do some optimization, but that is also in push and failure method.","2016-12-22 03:56:04","1594359"
"8555995","3737139","44","I know this isn't strictly PHP, but what about including a link to http://www.phpdoc.org/ for phpDocumentor comment syntax, which is commonly used and it's also impossible to search for `/**`?","2011-08-21 02:25:37","811240"
"116644746","51011507","0","Nailed it, was totally confused still with the above answers, but now it's crystal clear!","2021-01-30 09:09:56","14783663"
"116645861","348170","0","```git rm --cached <file>``` **unstages and untracks** (marked for removal on next commit) a given file, while ```git reset HEAD <file>``` just **unstages** the file","2021-01-30 10:26:44","15020017"
"23566238","3407920","1","Thanks so much. I need to confirm that: --theirs == server, remote. --ours == local","2013-05-08 03:51:58","1081668"
"8571644","271616","7","Yes, I agree to fail-fast-principle, but in the example given above, the value is not passed on, but is the object on which a method shall be called. So it fails equallys fast, and adding a null check just to throw an exception that would be thrown anyway at the same time and place doesn't seem to make debugging any easier.","2011-08-22 11:20:14","341291"
"8572255","136138","89","They also create a cleaner namespace, and makes it easier to understand the function have something to do with the class.","2011-08-22 11:58:43","189817"
"69820096","14889969","7","@MooingDuck : The diagram in Surt's [answer below](http://stackoverflow.com/a/33070112/4509583) I think explains why TTFFTTFF is in fact the ""pathological case"" in Saqlain's example.","2016-12-23 10:32:07","4509583"
"23592183","2691891","12","Let's say we have entities which may have two properties - `name` and `date`.  If we have an entity with an existing `name` and `date`, but then make requests to it specifying only a `name`, the proper behavior of **PUT** would be to obliterate the `date` of the entity, whereas **POST** may update only the properties specified, leaving the unspecified properties as they were before the request was made.

Does that sound correct/reasonable, or is it an improper use of **PUT** (I saw references to **PATCH**, which it seems would be more appropriate, but doesn't exist yet)?","2013-05-08 06:28:14","291106"
"38152064","14415881","4","The other problem that everyone else seemed to overlook is the problem of finding a sock's exact match (not just same color and size). I always keep socks with their respective partners so that they wear the same, so if I don't find the exact sock I have always worn with the other sock, they will feel different (unacceptable to my OCD programmer mind) even though they originated from the **exact same package**.","2014-07-07 08:25:15","2446567"
"116713948","14193950","0","just curious, why do you need to check the length? Does IE fail in that case or something?","2021-02-02 03:29:01","128511"
"116714151","14193950","1","Also the checking for `number` fails to perform like `includes`. Example: es6 includes returns false for `""abc"".includes(""ab"", ""1"")` this polyfill will return true","2021-02-02 03:34:57","128511"
"100153340","215731","1","this literally does nothing","2019-06-27 11:05:30","1253085"
"116718839","16016476","0","'a@a' returns valid: https://jsfiddle.net/pmiranda/guoyh4dv/","2021-02-02 06:18:54","3541320"
"116720832","49815992","0","your code just remove first `5` if you wanna remove all `5` you have to use regex in your replace function","2021-02-02 07:41:11","7114547"
"116720878","49815992","1","and what do you want to do if we have `55` or sth similar in the array and we want to keep that element?","2021-02-02 07:43:08","7114547"
"116720992","59948384","0","if you wanna remove just one element using splice you have to create 2 array one from first element to previous element and one from next element to end. and concat or merge that arrays with spread .","2021-02-02 07:47:13","7114547"
"116721109","40523","23","@dbrewster i'm sorry but ... ""Fifi"" is not among us anymore","2021-02-02 07:51:59","7214292"
"116721206","23427665","0","put your code in code snippet so other users could see the result","2021-02-02 07:55:57","7114547"
"116724964","46888156","2","This is the only solution that worked for me +1.","2021-02-02 10:56:35","6365112"
"100162615","246128","0","I always change the formatting of this line into: `DIR=""$(cd ""$(dirname ""${BASH_SOURCE[0]}"")"" >/dev/null 2>&1 && pwd)""`","2019-06-28 09:20:26","761200"
"69861919","5480292","9","If tag name collides with a branch name you may end up with deleting your branch. Ha-ha. See the second answer - it's more ecological","2016-12-26 09:56:52","1079225"
"69866610","17114749","0","@beez and Homer6: Joshcodes is correct. Nothing about REST requires the ID to be in the URL, and a URL with a structure like /collection/:id does not imply that the website is RESTful. In fact, sites with non-HTML representations almost always aren't.","2016-12-26 01:22:46","760706"
"69866938","5431108","0","@thecoshman: no, you can't have multiple URLs pointing to one resource. Every unique URI is a unique resource, and every resource has one and only one URI.","2016-12-26 01:38:45","760706"
"100184385","26782560","1","out of all answers — this is the most appropriate for all git newbies ^^^ (use a free program SourceTree and apply ""Rebase children of"" on a commit before the one you want to edit)","2019-06-29 05:53:47","3943954"
"100184850","48415961","0","How do you use the results if oncolse,log is called? Doesn't everything just go to the console at that point?","2019-06-29 06:47:52","1418533"
"100187332","53077310","0","It helped me with html-page on iPad! Thank you!","2019-06-29 10:56:17","1331420"
"116753156","34439104","0","In my case, before doing that, I had to 1) `git add -A`, 2) `git commit -m` 3) and finally `git pull rebase`.  Thank you.","2021-02-03 08:10:51","1883256"
"69889069","16957078","3","Does it search in hidden files/directories within the directory ?","2016-12-27 10:38:25","1523263"
"116776002","42622789","0","A LinkedHashMap has a doubly-linked list of entries, not of buckets. Buckets are accessible via array indices and need not be linked.","2021-02-04 03:15:17","1029162"
"116798155","9835461","0","Not sure how `(?!abc)abcde` makes any sense at all.","2021-02-05 10:18:20","12695027"
"116799641","57301144","1","I don't understand how the ""inner"" positive lookahead is useful.","2021-02-05 11:15:35","12695027"
"53798955","671132","2","This new answer is outright **wrong**, ridden with buzzwords and does not actually indicate how you program RESTfully. When someone asks you what cooking is, you don't answer with ""thermodynamics is an underlying principle of physics!"". Turning the original answer into this community wiki was a mistake.","2015-10-07 08:16:18","3714134"
"100203161","509295","17","What really annoys me is that python says that when you don't set the start and the end, they default to 0 and the length of sequence. So, in theory, when you use ""abcdef""[::-1] it should be transformed to ""abcdef""[0:6:-1], but these two expressions does not get the same output. I feel that something is missing in python documentation since the creation of the language.","2019-06-30 02:00:10","4267880"
"100203434","509295","16","And I know that ""abcdef""[::-1] is transformed to ""abcdef""[6:-7:-1], so, the best way to explain would be: let _len_ be the length of the sequence. **If step is positive**, the defaults for start and end are 0 and _len_. **Else if step is negative**, the defaults for start and end are _len_ and -_len_ - 1.","2019-06-30 02:22:35","4267880"
"100204541","45994347","0","I think you have a typo `uggested` but that's just a ""`uggestion` lol","2019-06-30 03:44:14","3625433"
"100204557","46409906","0","surely this should be used with great caution","2019-06-30 03:45:06","3625433"
"100204588","46868431","2","the stash is a good idea, however you might wanna use `git stash save and type some comment as to what this stash was for`","2019-06-30 03:46:52","3625433"
"8618239","1274447","128","Very important adding. If file that is ignored would be modified (but in spite of this should be not committed), after modifying and executing `git add .` it would be added to index. And next commit would commit it to repository. To avoid this execute right after all that mataal said one more command: `git update-index --assume-unchanged <path&filename>`","2011-08-24 04:39:33","459485"
"53804572","14423956","0","Is it only me who finds this got all the humour votes..or at best, the pseudocode ones..?","2015-10-07 10:39:30","1506363"
"84390689","3950863","1","[Difference between REST and POX](https://stackoverflow.com/questions/21554111/difference-between-rest-and-pox)","2018-02-08 10:41:37","86967"
"84391746","7244456","0","@Radon is ""forking"" a GitHub concept, introduced by the site rather than Git itself?","2018-02-08 11:34:30","5043056"
"84395070","7244456","0","@Sinjai Yes. Separate copies of a Git repository have no relationship to one another, except one that exists in your mind or in external services such as GitHub (or that you implicitly create by creating remotes).","2018-02-09 03:11:29","3538165"
"84395262","7244456","1","@RadonRosborough Surely the thought of creating derivations of open source projects was considered by someone before sites like GitHub, no? Though I suppose Git doesn't have anything to do with open source.","2018-02-09 03:24:59","5043056"
"38188620","477578","0","I saw one Captcha that was done in Canvas HTML 5 which was moving three balls around so that they were in the smallest to largest (circles rather than balls) and it was actually really nice. I have not come across that page in a while.","2014-07-08 06:03:15","2487995"
"116900323","2003505","0","I wanted to add a note that one cannot delete a branch on which one is currently working upon. I have made this rookie mistake so thought if this could help. :)","2021-02-09 02:28:20","3254749"
"116945628","61754517","1","This is usually what you want, not isfile, since the question ""does a file exist"" is usually really asking whether a path exists, not whether it's a file.  Please stop downvoting useful information.","2021-02-11 12:31:34","136829"
"53808069","4089430","218","With git 2.7 (Q4 2015), `git remote get-url origin` will be possible. See [my answer below](http://stackoverflow.com/a/32991784/6309)","2015-10-07 12:08:41","6309"
"116978266","23853061","0","Why hasn't Github improved this stupid UI after so long? It requires at least 3 clicks to compare, and reload the page for a few seconds! waste time!","2021-02-12 03:08:00","9817778"
"116984668","57880896","1","Thank you! That's a life-changer. I was previously doing `git commit -m ""wip"" && git reset --hard && git reset --soft HEAD~1 && git reset`.","2021-02-12 09:57:31","5927039"
"116987799","58974402","0","I don't see how this would work - the demo allows me to freely select anything.","2021-02-12 11:59:17","5507624"
"117012322","2590281","1","I think this should be the answer because it's the most clear for me.","2021-02-13 01:26:40","1123955"
"117012544","179147","0","will interactive rebase change the commit date of all the commits? @EfForEffort","2021-02-13 01:43:39","7048915"
"117022070","26853961","0","This answer is very... bloated. A significant amount is unnecessary, and just creates a wall of text stopping readers from seeing the other answers. The entire ""Critiques of Other Answers"" section should really be comments on the other answers...","2021-02-14 12:05:44","9067615"
"117046810","61171280","1","if the goal is to add this new commit to master as part of an ongoing pr, you could use `git reset --soft $(git merge-base feature master)` and then `git commit`.","2021-02-15 08:42:28","1983554"
"117055843","5344074","4","Note that there are 2 mistakes in your bench: first, it compares some shallow cloning (lodash `_.clone` and `Object.assign`) to some deep cloning (`JSON.parse(JSON.stringify())`). Secondly, it says ""deep clone"" for lodash but it does a shallow clone instead.","2021-02-15 02:22:02","8993709"
"117067596","138233","1","`#void` would add an entry to the browser history nonetheless. Another way would be to use the URL of a resource that returns HTTP status 204 (and still use `preventDefault` - the 204 is just a fallback).","2021-02-15 10:35:29","1871033"
"117091955","53748892","1","No this will not work for a lot of the active emails of the world and will accept emails that are not possible, do not use!","2021-02-16 06:26:30","479137"
"117092042","59901196","0","Exactly, no regex will ever be able to fully verify the format of an email and even if it would, it cannot know domain specific rules, just check for an @ and be done with it or send a verification email. Anything else is just asking for trouble.","2021-02-16 06:30:27","479137"
"117092198","17642237","3","Its better than most, yes you could have more than one @ with this, but that could also be a valid email like ""@""@mydomain.jskd or elldffs(this is @ comment)@mydomain.kjfdij. Both are syntactically valid emails","2021-02-16 06:37:11","479137"
"117092320","60042450","0","This will fail for emails ending in a comment containing a @, for example 
"" elldffs@mydomain.kjfdij (this is @ comment)"" which is a valid email","2021-02-16 06:42:02","479137"
"8630977","3104376","172","The only problem I have with JSON.minify() is that it is really really slow. So I made my own implementation that does the same thing: https://gist.github.com/1170297 . On some large test files your implementation takes 74 seconds and mine 0.06 seconds.","2011-08-25 09:16:57","101130"
"53820265","92395","20","If using Python 3.5+, use `subprocess.run()`. https://docs.python.org/3.5/library/subprocess.html#subprocess.run","2015-10-07 04:37:18","1398841"
"53820478","426277","5","$(selector).checked does not work.  There is no 'checked' method in jQuery.","2015-10-07 04:42:39","968218"
"100242053","1473742","1","how to check key and value with includes?","2019-07-02 04:51:08","6761261"
"100254746","952997","0","for python 3 add
`from functools import reduce`","2019-07-02 12:24:14","7128154"
"100258443","50224999","0","I think you should be careful in stating that PATCH should be used without providing some clarifying statements. PATCH is great for updating resources, but it's not meant for creating resources. The HTTP specs specifically call out that it is only for updating resources. You can make anything work as you've stated, but the verbs lose their meaning when you arbitrarily give them non-standard functionality.","2019-07-02 02:01:11","3827514"
"100262671","4183018","2","@d512: If you feel strongly about what the JSON format *should be* (vs. what it *is* today), perhaps take this up with the IETF to have the JSON format specification [RFC 8259](https://tools.ietf.org/html/rfc8259) changed.","2019-07-02 04:00:30","240733"
"100272365","50224999","0","@Jitsusama Read my last but one sentence.... and maybe google for this ""It’s like trying to hack a programming paradigm out of the TCP packet header control bits! If URG is high then my calendar appointment is very important.  If ACK is low, then I’m denying your friend request."".","2019-07-03 12:03:08","581205"
"100272583","56163573","6","Just be careful, Since if you use force then there is no way to retrieve the previous commits since you removed it","2019-07-03 12:28:11","8348245"
"84426977","32299832","0","""Flat"" as opposed to what?","2018-02-09 08:55:53","4698242"
"38201523","630475","0","@JörgWMittag If a PUT is idempotent, what happens if the PUT is creating a new resource and the server is the one generating the object id?  That would imply every PUT call would create a different object id.  Does that mean that a PUT should not/cannot be used in that case, and a POST is required instead?","2014-07-09 04:37:07","827480"
"38201611","19670755","0","Would a 409 Conflict response be the appropriate code for something like trying to create a new account with a username that already exists?  I've been using 409 for versioning conflicts specifically, but after reading your answer, I wonder if it shouldn't be used for any ""duplicate"" requests.","2014-07-09 04:43:34","827480"
"100303044","10916838","1","pushState or Notification hack does not work for some object types like Function","2019-07-03 08:06:56","3221274"
"100312309","55297455","6","This is a more complete response because without the `git clean -d -f` we'll still had some things of the old branch in local directory. Thanks man.","2019-07-04 07:03:38","7024760"
"69934210","20531076","2","thecoshman -- you are abusing semantics here -- a replace can be an update if it is the same resource with a few differences.  A replace is only valid for put if replace is used to change the same resource.  Replacing with a new and different resource is invalid (remove old and add new?), especially if the 'new' resource doesn't have a natural ID.  POST, OTOH, is something that can create, update, replace, and delete -- using post depends on whether or not there is a message to interpret, such as 'apply the discount', which may or may not change the resource depending on logic.","2016-12-28 04:54:04","1331672"
"69934286","20531076","0","As for your second comment -- how about you 'get' the resource, modify the fields you need to, and then put it back?  Or how about if the resource comes from a different source but uses a natural ID (the external ID) -- put would naturally update the resource at the URL when the original data changed.","2016-12-28 04:56:26","1331672"
"38214958","18739996","8","You cannot use padding within the div, but if you want to give the illusion use a border of the same color.","2014-07-09 11:45:32","1179593"
"69939347","9180445","3","@konpsych I believe the order is important. You want to do the oldest commits first.","2016-12-28 08:00:38","473792"
"38223210","24639060","0","Why is the each needed here?","2014-07-09 02:58:28","18107"
"38224913","3104376","0","@ManicDee You're right about the punctuation in XML; I was trying to be brief and wound up being inaccurate in that respect. Revised statement: JSON has too much punctuation compared to YAML, and is a poor file-oriented syntax compared to either YAML or XML. (For the record, I'd pick JSON for streams, YAML for files, and XML for nothing every time, unless there's a specific external need for XML.)","2014-07-09 03:38:42","109011"
"38225937","22537629","13","Sorry about that, @konsolebox. Perhaps you might reconsider your ""well-defined JSON is your opinion"" view after reading http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf It is a real standard and devs implementing their own ""special"" versions leads to fragmentation, confusion and a lot of wasted time. Look at the mess web developers are left with when writing code just because each browser implements slightly different versions of standards. The JSON language may not be perfect, but fragmentation is worse. And yes, that's just a opinion and you're free to disagree.","2014-07-09 04:02:47","1132806"
"53865776","13437928","1","git push --prune origin didn't do anything for me on gitlab: git clone git://repo.git; git branch -d -r origin/some-branches; git push --prune origin; yields: Everything up-to-date; git fetch; brings locally deleted branches back; git push --mirror; now they are really gone!","2015-10-08 04:46:25","1846474"
"53867591","14220323","19","@Jessi: I think you misunderstood that part of the answer. You cannot use `$.getJSON` if you want the Ajax request to be synchronous. However, you should not event want the request to be synchronous, so that doesn't apply. You should be using callbacks or promises  to handle the response, as it is explained earlier in the answer.","2015-10-08 05:44:18","218196"
"38240619","21890252","3","This is pretty sweet. Personally I'd like a version that uses the commit message from the first of the squashed-together commits. Would be good for things like whitespace tweaks.","2014-07-10 01:40:14","878969"
"100324975","56753700","0","As far as I know, `string` vs. `String` is a matter of coding style.","2019-07-04 01:28:41","11652382"
"100324992","56753700","0","And `string` tends to win.","2019-07-04 01:29:08","11652382"
"84451793","7244456","1","@Sinjai Yes, of course. That's why Git has explicit support for either applying patches from other people's changes, or for merging commits directly from other people's repositories (and it makes this last step extremely easy due to the support for a saved list of remotes). The thing that Git does not do is host a centralized webservice for hosting repositories in a standardized relational structure. It should be obvious, I think, why this latter thing is out of the scope of Git. And it's also why GitHub exists. And GitLab. And Bitbucket. Etc.","2018-02-10 10:54:02","3538165"
"23688295","5423934","23","This answer is good to handle `visibility` literally, but the question was `How you would test if an element has been hidden or shown using jQuery?`. Using jQuery means: the `display` property.","2013-05-11 10:37:45","1313143"
"84455261","7244456","1","@RadonRosborough Sure, it just seems like there should be explicit support *for* those web services. It's not like Git would have to limit its support to just GitHub or BitBucket. It's a common use case that's more convoluted to apply than it needs to be. Though I suppose that's Git in a nutshell.","2018-02-11 04:00:33","5043056"
"84455644","7244456","8","@Sinjai There _is_ explicit support for these webservices. It's called the remote system. You specify the URL, and then push/pull. Speaking quite literally, I don't think it could possibly get any simpler without hardcoding support for some particular service. If Git were to have some kind of implicit understanding of the relationship between different repositories without you providing that information, it would require a centralized database. There's just no rational way to integrate this functionality into a distributed revision control system.","2018-02-11 04:42:31","3538165"
"69963771","477578","0","Good piece. However, password strength is almost totally irrelevant - uniqueness between sites is all that matters. Either the database has been captured in which case the actual user data is lost. Or the attacker is attempting a brute force web attack - which you can easily mitigate. Unless a user's password is extremely weak (eg monkey123) - so long as a password is unique across sites super strong passwords are largely pointless and will contribute to users forgetting them. If you specifically tell users to use a unique password and they don't, that's their responsibility.","2016-12-29 01:46:09","2254951"
"8697908","1714649","5","@Skone technically nothing is screwed up. `Date.UTC(1970,0,1)` will *always* evaluate to 0, no matter what time zone the user is in. still, I'd say this is a bad answer because of it.","2011-08-29 05:17:56","18511"
"38260134","176274","1","@AndrewJanke @Jon Skeet Here is a SO answer to the ""should"" on `[`,`]`: http://stackoverflow.com/a/1547922/318174","2014-07-10 12:58:44","318174"
"38261232","19670755","0","@EricB. Yes, in the situation you describe ""due to a conflict with the current state of the resource"" the operation fails. Additionally, it is reasonable to expect that the user can resolve the conflict and the message body only needs to inform the user that the username already exists.","2014-07-10 01:25:23","965382"
"100342036","79923","1","Not clear in answers: For a language runtime (e.g. .NET), there is one stack per thread, to manage method calls/local variables, and only one heap set for all processes of the runtime. Heap is supervised by the garbage collector. Runtime stacks/heap space is part of the contiguous virtual memory allocated by the OS to the processes (itself fed by physical RAM chunks in no specific order) upon request of the processes. Confusion around ""stacks"" is due to the existence of many ""stack"" kinds in a computer, not related to language runtime stacks. A ""stack"" is just a LIFO storage structure.","2019-07-05 07:20:55","774575"
"117143495","917126","0","best answer so far","2021-02-18 12:00:54","7765316"
"100342824","45361888","0","""*A lot of answers are correct as concepts, but we must note that a stack is needed by the hardware (i.e. microprocessor) to allow calling subroutines (CALL in assembly language..)*"". You're confusing the CPU stack (if there was one in modern CPU) and the language runtime stacks (one per thread). When programmers talk about a stack, this is the thread execution stack of the runtime, e.g. a NET thread stack), we are not talking about the CPU stack.","2019-07-05 07:48:17","774575"
"8717260","3104376","65","it'd be great if you could submit the suggested alternative algorithm to the github repo for JSON.minify(), so that it can be ported to all the supported langs:

https://github.com/getify/json.minify","2011-08-30 05:20:41","228852"
"53901607","244858","1","@JuanMendes Probably far too late to be of help, but for multi-line comments, make the value of the comment element an array of strings: `[ ""line 1"", <CRLF> ""line 2"", <CRLF> ""line 3"" ]`.","2015-10-09 02:11:01","2096401"
"117151664","21144988","0","But now you have 2 styles in one line? :)","2021-02-18 04:25:56","4491768"
"117154652","419189","0","So, `if __name__ == ""__main__"":` basically checks if you are running your python script itself, and not importing it or something?","2021-02-18 06:20:53","12969388"
"23722173","9158888","7","realpath is not a standard utility.","2013-05-13 12:06:13","263268"
"38274707","19714883","1","I don't like `CollectionUtils.isEmpty` and `StringUtils.isEmpty` as they also do a null check, which is not implied by the method name.","2014-07-10 07:27:23","24396"
"70022321","34839890","4","Yip they are hoisted, but behave as if not hoisted because of the (drum roll) Temporal Dead Zone - a very dramatic name for an identifier not being accessible until it's declared:-)","2016-12-31 03:42:05","271012"
"38280436","1473742","1","I think someone mentioned that you can get around 0 being evaluated as false by using the === operator, if only in passing.","2014-07-10 11:15:15","1817255"
"23735753","7104747","37","Agreed, great comment.  Which is why I hate git pull.  When would it ever make sense to let a revision tool make code edits for you?  And isn't that what merging two files is doing?  What if those two edits are physically separated in the file, but LOGICALLY at odds?","2013-05-13 06:44:23","580744"
"70035518","671508","0","""maintaining the state in the object and representing the state in the representation"" - its not clear what is ""object"" ? where does it live ? server? client?","2017-01-01 01:07:33","1198559"
"117176312","20978574","0","```ls``` returning non-zero DOES NOT mean that the directory exists.
The code should be:
```ls $DIR

RETURN_CODE=$?

if [ ""$RETURN_CODE"" != ""0"" ]; then

    echo ""Cannot access directory $DIR (does not exist or no permission or something else altogether)!""

    exit $RETURN_CODE;

fi

echo ""Directory $DIR already exists...""```","2021-02-19 01:25:42","6459998"
"100365052","42902131","1","git throws `error: src refspec <new branch> does not match any.` when I try this.","2019-07-06 12:24:11","6862601"
"100367083","53203953","0","Using `/^[a-z]/i` will be better than using `.` as the prior one will not try to replace any character other than alphabets","2019-07-06 05:56:38","9624435"
"100367649","122102","0","The react community has introduced [immutability-helper](https://github.com/kolodny/immutability-helper)","2019-07-06 07:07:40","3744479"
"23785570","7354651","5","shouldn't the statement also contain these two in the where clause?
     (other_table.col1 is null and table.col1 is not null) or
     (other_table.col2 is null and table.col2 is not null)","2013-05-15 04:03:29","277498"
"84515461","11828573","1","Sometimes, `Esc` is not enough. You may need to type `Esc` multiple times to be sure. (E.g. After pressing `^V` or `^O` in Insert mode.) (Of course, [Heikki](https://stackoverflow.com/a/31028197/712526) covered this in depth.)","2018-02-12 11:23:47","712526"
"84515651","44201563","13","What you've labeled *command* mode is actually *normal* mode. What you've labeled *ex* mode is actually *command* mode. **Ex** mode is a different beast altogether!","2018-02-12 11:35:42","712526"
"84517401","671118","0","This question does not meet the guidelines of StackOverflow. It could be answered with a simple search: https://en.wikipedia.org/wiki/Representational_state_transfer","2018-02-13 01:35:18","877703"
"23801934","1109022","15","i feel stupid. I am unable to hide the keyboard on ICS. Tried all methods here and combinations of them.  No way. The method to show it works, but I cant hide it no matter what windw token, hide flags, manifest settings or candles to any saints. On keyboard show I always see this: 
    I/LatinIME(  396): InputType.TYPE_NULL is specified
    W/LatinIME(  396): Unexpected input class: inputType=0x00000000 imeOptions=0x00000000","2013-05-15 01:28:22","1108397"
"23802259","1764679","2","Sure, but then you have the followup question of how one should unadd one of *two* (or more) files added.  The ""git reset"" manual does mention that ""git reset <paths>"" is the opposite of ""git add <paths>"", however.","2013-05-15 01:36:21","1306959"
"23802532","15851463","1","elaborate workaround, but i think it's just too much , to recreate thousands of objects just to hide the Keyboard. I dont know who designed the IMM for android, but it smells like a Windows APi. In my opinion, a good IME should have two methods: hide and show :-)","2013-05-15 01:43:12","1108397"
"23806798","16487716","0","See the commet by ChristofferHammarström in the answer by HarryLime.","2013-05-15 03:23:32","821436"
"84525589","44201563","0","@jpaugh do you have a reference for this?","2018-02-13 08:44:29","1697709"
"100377224","509297","0","But there's no way to collapse to an empty set starting from the end (like `x[:0]` does when starting from the beginning), so you have to special-case small arrays.  :/","2019-07-06 08:07:48","125507"
"53952716","27490301","2","not true: Caret Ranges ^1.2.3 ^0.2.5 ^0.0.4. Allows changes that do not modify the left-most non-zero digit in the [major, minor, patch] tuple. In other words, this allows patch and minor updates for versions 1.0.0 and above, patch updates for versions 0.X >=0.1.0, and no updates for versions 0.0.X. https://docs.npmjs.com/misc/semver#caret-ranges-1-2-3-0-2-5-0-0-4","2015-10-11 04:07:13","588759"
"53952733","22365742","14","not true: Caret Ranges ^1.2.3 ^0.2.5 ^0.0.4. Allows changes that do not modify the left-most non-zero digit in the [major, minor, patch] tuple. In other words, this allows patch and minor updates for versions 1.0.0 and above, patch updates for versions 0.X >=0.1.0, and no updates for versions 0.0.X. https://docs.npmjs.com/misc/semver#caret-ranges-1-2-3-0-2-5-0-0-4","2015-10-11 04:08:59","588759"
"53952921","31733623","2","What about ^0.2.5? from https://docs.npmjs.com/misc/semver#caret-ranges-1-2-3-0-2-5-0-0-4: Caret Ranges ^1.2.3 ^0.2.5 ^0.0.4. Allows changes that do not modify the left-most non-zero digit in the [major, minor, patch] tuple. In other words, this allows patch and minor updates for versions 1.0.0 and above, patch updates for versions 0.X >=0.1.0, and no updates for versions 0.0.X.","2015-10-11 04:18:11","588759"
"53952945","22345808","8","@prasanthv is right: from https://docs.npmjs.com/misc/semver#caret-ranges-1-2-3-0-2-5-0-0-4: Caret Ranges ^1.2.3 ^0.2.5 ^0.0.4. Allows changes that do not modify the left-most non-zero digit in the [major, minor, patch] tuple. In other words, this allows patch and minor updates for versions 1.0.0 and above, patch updates for versions 0.X >=0.1.0, and no updates for versions 0.0.X.","2015-10-11 04:19:27","588759"
"23821569","176279","1","URLs are not a true subset of URI. You can make vaid URL's with characters `[` and `]` but not a URI.","2013-05-16 12:43:14","318174"
"23821628","176274","20","**Not** ""*all URLs are URIs*"". It depends on the interpretation of the RFC. For example in Java the URI parser does not like `[` or `]` and that's because the spec says ""should not"" and not ""shall not"".","2013-05-16 12:47:40","318174"
"117194177","63596099","0","what is import for ```Type```?","2021-02-20 06:33:54","8716408"
"117194454","63596099","0","@MichaelAbyzov This would be 'https://developer.android.com/reference/android/view/WindowInsets.Type', see more about the hide() method at  'https://developer.android.com/reference/kotlin/android/view/WindowInsetsController#hide(kotlin.Int)'","2021-02-20 07:03:56","550966"
"8811076","477578","0","@Jens Roland: About the rememberMe, in the cookie, I should save the same token  that is stored in the DB? If not, I should save in the cookie the value that originated the Token?","2011-09-05 04:23:43","710693"
"8811240","3269988","0","We can use BigO notation to measure the worst case and average case as well. http://en.wikipedia.org/wiki/Big_O_notation","2011-09-05 04:36:05","184528"
"8811295","487292","0","I upvoted, but the last sentence doesn't contribute much I feel. We don't often talk about ""bits"" when discussing or measuring Big(O).","2011-09-05 04:41:08","184528"
"70102284","337006","0","I use this all the time in my bash scripts that automate stuff and often invoke other scripts in the same dir. I'd never use `source` on these and `cd $(dirname $0)` is easy to remember.","2017-01-03 04:28:27","1245190"
"70104194","5871742","1","Does anyone know a way to do this in Windows from the command line? I've seen some solutions here in Ruby and Python, but I'd like a barebones solution if it can be managed.","2017-01-03 05:18:15","4124574"
"84540152","44201563","2","@Gergely Well, I finally found the vim documentation: `:help vim-modes`.","2018-02-13 02:58:37","712526"
"84540223","44201563","1","About *Ex* mode: ""Like Command-line mode, but after entering a command, you remain in Ex mode."" The only way to get out of ex mode (that I know) is to use `:vi` to go back to normal mode. Regular command mode ""releases"" you to normal mode as soon as you enter one command.","2018-02-13 03:00:12","712526"
"84540307","44201563","0","(FWIW, I learned about ex mode the hard way: I entered it accidentally (several times), and was trapped until I used `^C` or learned about it. I never forgot the lesson! ;-)","2018-02-13 03:01:37","712526"
"84540435","44201563","2","@Gergely I just figured out the confusion! From the docs, normal mode is also called *command mode*! So, command mode != command-line mode. Wow!","2018-02-13 03:04:31","712526"
"84540595","44148097","4","What you're calling ""ex mode"" is actually called [*command-line mode*](http://vimdoc.sourceforge.net/htmldoc/intro.html#vim-modes-intro). It allows you to enter ex commands, but with some [important differences](http://vimdoc.sourceforge.net/htmldoc/intro.html#Ex-mode).","2018-02-13 03:07:47","712526"
"70106948","477578","0","@niico password strength is not irrelevant if an attacker wishes to target a specific user (on some systems it may suffice for an attacker to gain access to any random account, but in many cases, such as on social sites, attackers want to crack specific user accounts). The difficulty of cracking a single user password depends on the number of permitted login attempts, but also largely on the password strength. If people are allowed to use low-entropy passwords, they will choose 'password', 'secret', 'qwerty', and 'letmein' (and their dog's name). You don't need many attempts to guess those.","2017-01-03 06:43:21","57068"
"23844161","7924558","9","replaceAll(""abc"", ""a"", ""ab"") never terminates","2013-05-16 02:44:43","1002973"
"8817462","245213","7","Metadata belongs in metadata constructs (e.g. HTML <meta> tags), not comments. Abusing comments for metadata is just a hack used where no true metadata construct exists.","2011-09-06 04:55:58","109011"
"8821143","477578","1","@Jonathan: The token is just a random generated value. Save the user ID and token in the cookie, then save a hash of the token in the DB. that way, you can validate the login cookie by re-hashing the token and checking the user record for a match","2011-09-06 09:50:32","57068"
"23848512","7354651","4","Depends on if you want to replace nulls in the destination with nulls from the source.  Frequently, I don't.  But if you do, Martin's construction of the where clause is the best thing to use.","2013-05-16 04:35:50","116645"
"53973834","22345808","28","@jgillich in semver when you use `0.2.x`, `2` isn't a `major version`. That's why https://docs.npmjs.com used the specific words: `the left-most non-zero digit`. Also what about this case: ^0.0.4 means 0.0.4","2015-10-12 10:14:36","588759"
"38383584","6117092","2","For this you may add cursor:default and cursor:text respectively : )","2014-07-14 05:14:41","159189"
"23858544","10976934","9","As liz lemon would say… ""deal breaker, ladies""!  jesus… so to test something with a line ""omitted"", aka ""commented"" (in the normal universe)..  you have to DELETE the line?  no thanks!  gimme some good ole' rackety-brackety XML, any day!","2013-05-16 10:16:42","547214"
"70115151","5036460","3","@FelixGagnon-Grenier I added `Date.now()` because it is now the preferred way, and lots of people don't like `+new Date`. I like that daveb's answer now includes `+new Date`, and explains it, but it didn't used to either.","2017-01-04 12:15:00","47604"
"23861885","11773587","2","There was no reference to an input field or the requirement of an event to handle this. Aside from that, `field.value` could be shortened with a variable for readability.","2013-05-17 02:29:26","802855"
"23861962","826782","8","Related: http://stackoverflow.com/questions/16600479/how-do-you-override-moz-user-select-none-on-a-child-element = how to allow only some of the child elements to be selected","2013-05-17 02:36:13","325727"
"117228460","950146","0","You can also use something like Gulp (https://gulpjs.com/) to preprocess them with the output being a single file that's called.  For example: a) concatenate several JavaScript files together into one, b) use Babel to make it backwards compatible, c) minify/uglify to remove comments, whitespace, etc. Then, you've not only organized those files but also optimized them as well by initiating a pipeline with the potential of doing the same for other file formats (such as css and images.)","2021-02-22 01:48:22","4298604"
"84559166","21409180","0","@toolbear JSON does not ""blow up"". The parser does. It is a doubtful solution. But not worse than adding ""_comment"". Maybe better than nothing.","2018-02-14 02:30:14","370786"
"117229868","36172057","0","Need double quotes around `$DIRECTORY` in the `mkdir` part as well.  Otherwise, word splitting may result in undesirable results. For example: `dir=""a b""; mkdir $dir` will result in two directories `a` and `b` being created, rather than a single `a b` directory.","2021-02-22 03:55:39","6862601"
"84560879","7923161","1","You forgot the part about deleting the local branch which can be done by: `git branch -d <local_branch>` or  `git branch -D <local_branch>` for force deleting","2018-02-14 04:23:55","3556388"
"117232211","2389423","0","generally ""git reset --hard"" works alone if you want to go back to the last commit","2021-02-22 06:53:54","8847285"
"23884522","7536475","35","For reference, `#self` doesn't appear to be special.  Any fragment identifier that doesn't match the name or id of any element in the document (and isn't blank or ""top"") should have the same effect.","2013-05-17 04:16:13","319403"
"23884647","2866221","0","note that this works fine for the question asked, {}, but that jQuery.isEmptyObject([]) === true, presumably because an empty list is iterable.","2013-05-17 04:20:56","344155"
"23885687","8439617","1","The question specifies JavaScript. Anybody looking for a CSS based solution may not find this answer because they won't be searching for it. As it is, this is a useful bit of information that users might stumble across if they happen to be looking for a JavaScript solution. Regardless, this will capitalise all words, not the first letter of the string. Ryan has a good answer to a different question. He should delete this answer, create the right question, and then answer it there, if he wants to benefit the community. The points loss wouldn't be very conducive to doing this, I'll admit. :-)","2013-05-17 04:56:52","169334"
"8861305","2386013","21","code portability goes null with jetbrains.I would think twice(square) before tying down to ide level.Like Jacek S said they are part of JSR any way which I thought was JSR303 by the way.","2011-09-08 09:39:52","851578"
"70150401","10375211","16","@scravy Object is the class Object. Object has a static method named 'keys' which accepts an object as an argument. This method returns an array of strings where the strings are property names. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys","2017-01-04 08:05:52","2612640"
"117237215","221297","3","In case you wonder about the logic of `plus` sign is: `+` is used as `toInt()` where it will neglect all the characters and return only numbers","2021-02-22 10:26:28","10570437"
"117237475","5036460","1","In case you wonder about the logic of `plus` sign is: `+` is used as `toInt()` where it will neglect all the characters and return only numbers","2021-02-22 10:35:22","10570437"
"23890444","14092288","9","Just for the sake of completeness, this is probably not how you'd implement that in Matlab. I bet it'd be much faster if done after vectorizing the problem.","2013-05-17 07:53:00","274579"
"70155028","38793323","3","`if (x) return true; else return false;` is really just `return x`. Your last four lines can become `return os.path.isfile(file_path)`. While we're at it, the whole function can be simplified as `return file_path and os.path.isfile(file_path)`.","2017-01-04 10:50:16","912144"
"84585212","48680864","4","so internally they are the same. meaning, they point to the same thing, and can be used interchangeably.

their difference lies in that String is the name of the actual struct as defined, whereas string is an alias which points to that same struct. it (string) being an alias makes it a keyword, which is why VS shows them as difference colors. if you right click to view definition for string, you will be staring at the struct String.","2018-02-14 04:13:14","6368401"
"23895018","14092288","2","Matlab does automatic parallelization / vectorization in many situations but the issue here is to check the effect of branch prediction. Matlab is not immune in anyway!","2013-05-17 11:50:24","1020149"
"70187119","38793323","0","You have to be careful with `return x` in the case of `if (x)`.  Python will consider an empty string False in which case we would be returning an empty string instead of a bool.  The purpose of this function is to always return bool.","2017-01-05 05:08:43","2532408"
"70187191","38793323","1","True. In this case however, `x` is `os.path.isfile(..)` so it's already bool.","2017-01-05 05:10:24","912144"
"70187302","38793323","0","`os.path.isfile(None)` raises an exception which is why I added the if check.  I could probably just wrap it in a try/except instead but I felt it was more explicit this way.","2017-01-05 05:13:10","2532408"
"23909082","12788094","3","@LuckySoni you _could_ do this, but I personally prefer the first one. 

`<input type=""text"" value=""placeholder text"" onfocus=""if(!this.haswriting){this.style.color='#000'; this.value='';}"" onblur=""if(!this.value){this.style.color='#f00'; this.value='placeholder text'; this.haswriting=false;}else{this.haswriting=true};"" style=""color: #f00;""/>`","2013-05-18 06:25:19","1729061"
"70192294","11828573","1","`:x!` does as it mentioned but add confirmation as well. I always use this instead of `:wq!`","2017-01-05 07:29:49","1209628"
"84593102","30437750","0","Alternatively, you can use `-M` instead of `-m` to do this kind of ""casing fix"" rename in a single step.","2018-02-14 08:09:07","12484"
"38468138","11974631","0","I think what Cobby is trying to say that some idiots are trying to accomplish every simple JavaScript task using stupid libraries while the very same solution in vanilla is as simple as `String.prototype.capitalize = function () {
   return this.substring(0,1).toUpperCase() + this.substring(1).toLowerrCase()
}`","2014-07-16 05:17:02","1480554"
"84593135","18982837","0","The `-M` flag is also useful to force a rename if you are just correcting the case of the branch name, e.g. changing `myBranch` to `MyBranch`. (With `-m`, git returns `fatal: A branch named 'MyBranch' already exists.`)","2018-02-14 08:10:16","12484"
"23938267","273227","15","As commenters to other answers here have noted, the `exists_ok` parameter to `os.makedirs()` can be used to cover how prior existence of the path is handled, since Python 3.2.","2013-05-20 06:50:40","1481384"
"84602553","42190352","0","@MKesper: When you migrate from legacy environment to container environment, you have various ways to build security paradigm, one that is based on proactive rather than reactive approach to preventing intrusions. It allows you to secure your application and runtime at more granular and nuanced level. They also empower to identify and resolve potential security threats before they disrupt your workflows. And, it's possible to to combine static analysis with ML in order to automate runtime defense and enforce policies across your environment. Hence, the line ""most secure setup"".","2018-02-15 04:21:31","4671027"
"23945779","15851463","0","Its all true, but my workaround does have one advantage - it always works!  There is no other solution I could find that would always toggle the keyboard, regardless of of what fields in the UI have the focus, what the user has done to toggle and keyboard and what version of android they are running :-\","2013-05-20 11:35:55","1599946"
"84614509","1274057","11","@Martin @Qwerty Everyon should stop to advise for `--assume-unchanged` which is for performance to prevent git to check status of big tracked files but prefer `--skip-worktree` which is for modified tracked files that the user don't want to commit anymore. See http://stackoverflow.com/questions/13630849/git-difference-between-assume-unchanged-and-skip-worktree/13631525#13631525","2018-02-15 11:16:15","717372"
"38547674","9158888","4","On Linux, realpath is a standard utility (part of the GNU coreutils package), but it is not a bash built-in (i.e., a function provided by bash itself). If you're running Linux, this method will probably work, although I'd substitute the `$0` for `${BASH_SOURCE[0]}` so that this method will work anywhere, including in a function.","2014-07-18 03:53:46","196964"
"23952597","15851463","0","Man, I'm totally desperate to hide the keyboard. Tried thousands of things and noooone works. But your workaround is too much for me, I'd have to recreate like 10 fragments, initialize services, delete a lot of WeakReferences .... you know? the GC would just throw away like 25mb :S ... Still looking for a reliable way to do it :(","2013-05-20 02:57:45","1108397"
"38596390","23824606","1","The ""top"" answer doesn't answer the question. It just gives a general introduction to `git commit --amend`. The question was very specific, therefore longer != better. The decisive mentioning of the `-o` flag would probably be buried in the rest of the information. I'm also not comfortable editing an answer which has so many votes already.","2014-07-20 08:51:26","2727750"
"38596402","23824606","2","That being said you're free to edit the top answer, since there is a real danger that people are using that as the ""correct"" answer. It can easily happen to amend your commit with staged stuff -- it happened to me, and it's really annoying when you happen to push that. But still, quantity is no guarantee for correctness. Neither in number of answers nor in number of votes.","2014-07-20 08:51:54","2727750"
"38637352","23824606","2","To be fair: even though the `--only` option with `--amend` is available since git 1.3.0 it didn't work correctly till it was fixed in 1.7.11.3 ([ea2d4ed35902ce15959965ab86d80527731a177c](https://github.com/git/git/commit/ea2d4ed35902ce15959965ab86d80527731a177c)). So the right answer back in 2008 would probably have been something like: `git stash; git commit --amend; git stash pop`.","2014-07-21 11:00:48","2727750"
"38645015","21278288","3","I only bother to add ```git reset``` in the solution just to give an idea to split one commit message into multiple commit messages. Because, I have faced that problem when, I was starting to use ```git```. Sometimes, this can be really helpfull. :)","2014-07-22 06:29:00","2553311"
"84633217","231855","59","""These iterables are handy... but you store all the values in memory and this is not always what you want"", is either wrong or confusing. An iterable returns an iterator upon calling the iter() on the iterable, and an iterator doesn't always have to store its values in memory, depending on the implementation of the __iter__ method, it can also generate values in the sequence on demand.","2018-02-15 07:21:11","557022"
"38715467","11896966","0","I probably wouldn't have thrown an NPE, when I'm argument checking for nulls I usually throw an IllegalArgumentException, and it's not a bad thing to do at the very top, if you assume this.child = child will ""catch"" it, you aren't being explicit in your code, a refactor could make it really tough to catch where the null originated.  Code bloat is much better than magic, any day.","2014-07-23 05:55:07","12943"
"100437819","179147","1","Should be a shame to Git to have a 15k votes for a simple command that should be implemented in the core. I don't want to care how hard is supposed to be implemented, it should be simple from user side, but not so crazy like I see in this post. Compare to SVN, I can do it with one command/click.","2019-07-09 09:27:08","3744390"
"38725602","5397515","23","Or you could use lodash is empty (http://lodash.com/docs#isEmpty), but how is that any different from using a jQuery solution - you still need to install an additional library. I think a vanilla javascript solution is the intent.","2014-07-23 11:38:52","1404726"
"38749717","11552180","7","git wouldn't remove the file, if it were dirty at the time of deletion. And if it's not dirty, retrieving the file would be as easy as `git checkout <oldref> -- <filename>` - but then it would be checked out and ignored.","2014-07-24 02:05:41","2413043"
"38751252","4089452","7","Although not relevant to the purpose of the original question, please note that if attempting to get the ""Push URL"" and multiple URLs are entered for the remote specified, you'll either need to use `git remote show origin` (optionally with the -n flag provided by @Casey), or with `git remote -v` as suggested by @Montaro and @rodel.","2014-07-24 02:39:40","1385230"
"8911858","2064441","0","@Luca Molteni: You're absolutely right, I already commented on the post to request expanding it. :)","2011-09-11 08:59:11","90874"
"38774687","9197466","0","In general a useragent would not able to safely retry the POST operation since the POST operation gives no that guarantee that two operations would have the same effect as one. The term ""ID"" has nothing to do with HTTP. The URI identifies the resource.","2014-07-25 05:48:18","126225"
"23964548","7216269","7","`git clone --mirror` is very good for backing up your git repositories ^_^","2013-05-20 09:19:43","645491"
"38785058","826814","2","And what if you for example double click a button which instead of redirecting you to another page opens a div? then the text for the button will be selected due to the double-click!","2014-07-25 11:32:26","1979982"
"38827512","9197466","0","A useragent can ""safely"" retry a POST operation as many times as it wants. It will just receive a duplicate ID error (assuming the **resource** has an ID) or a duplicate data error (assuming that's an issue and the **resource** does not have IDs).","2014-07-27 02:10:02","965382"
"54033236","426277","0","@BrendanByrd There's a checked property on the DOM object though (without the jQuery wrapping)","2015-10-13 05:55:27","48500"
"23987567","13270340","14","You should clarify that the above `git push` operation deletes the local branch *and* the remote branch.","2013-05-21 01:51:46","7675"
"70248533","37702905","3","won't work in windows since filesystem isn't case sensitive. And very uneffective because it scans the whole directory.","2017-01-07 12:24:21","6451573"
"117271968","630471","0","Nice and short +1. For extra details one can read further :)","2021-02-23 01:06:26","2190322"
"117272954","470376","0","@MarkRansom, no argument that both are ugly (and no longer necessary) workarounds.  However the answer does have a garden-path issue that my variation avoids.  Put a tuple index in front of most anyone and I guarantee they will *not* immediately think, ""oh, that variable must be representing a true/false value.""  They'll start by assuming it's an ordinal number and only after puzzling over the context will they realize its actual purpose.  *That's* the ambiguity I'm talking about.","2021-02-23 01:40:25","1905392"
"54040329","22343224","22","All the nitty gritty details of how tilde and caret work and differences: https://github.com/npm/node-semver#tilde-ranges-123-12-1","2015-10-13 09:31:47","29703"
"54041654","30131247","0","This answer doesn't focus on the OP's situation, and leaves out important context.","2015-10-13 10:26:07","2308190"
"100462619","20030933","0","Depends upon the engine. gnu join, joinkeys, DB2, MySQL.
Performance traps abound, such as loose typing or an explicit cast.","2019-07-10 02:03:49","1734032"
"84676172","34666232","2","This is a nice alternative if you're not sure which commit version you want and need to ""peek"" around without overwriting your working directory.","2018-02-16 10:25:00","1081043"
"24011526","4090938","47","This is the correct answer. It is way faster and it even works, if the remote url is not available anymore (`git remote show origin` just shows ""conq: repository does not exist."").","2013-05-22 06:58:10","900033"
"54050898","15775364","0","This is perfectly simple as you've done it, but fyi git also lets you make custom commands. Put `git push origin --delete $1` in a file on your path called `git-shoot` and `git shoot branchname` will work too.","2015-10-14 07:09:31","18706"
"100469274","46226871","5","you can also just reinstall your operating system if you want to be certain!","2019-07-10 08:07:34","1741010"
"100469454","6581949","0","`Subclasses of a class will be instances of its metaclass if you specified a metaclass-class, but not with a metaclass-function.`  Why is this the case?","2019-07-10 08:14:08","6448384"
"100472749","1473742","1","maybe use IndexOf ^^","2019-07-10 09:47:51","10419040"
"84698350","44078785","0","No. UUID/GUID's is a 122 bit (+ six reserved bits) number. it might guarantee uniqueness through a global counter service, but often it relays on time, MAC address and randomness. 
UUID's are not random!
The UID I suggest here is not fully compressed. You could compress it, to a 122 bit integer, add the 6 predefined bits and extra random bits (remove a few timer bits) and you end up with a perfectly formed UUID/GUID, that you would then have to convert to hex. 
To me that doesn't really add anything other than compliance to the length of the ID.","2018-02-18 12:05:21","3546836"
"84698858","44078785","10","Relaying on MAC addresses for uniqueness on virtual machines is a bad idea!","2018-02-18 12:48:45","3546836"
"84725573","24398794","0","Note that it is also the solution for ElasticSearch Lucene based regex.","2018-02-19 07:30:27","3832970"
"8945548","117111","23","An empty file isn't source code or content either. It's just a name. Yet Git will happily track empty files. I don't think it was an intentional design decision to make Git refuse to track empty directories. I think tracking empty directories is a feature that simply isn't needed 99% of the time, so they didn't bother to do the extra work required to make it work properly. Git can do it if someone wants the feature badly enough to implement it. I doubt the Git maintainers would be opposed to such a patch if it were done correctly.","2011-09-13 03:32:45","95706"
"84744238","45113099","0","Interesting method, you can use Unicode characters for splitting (e.g. `'\uD842'`) instead. For making it clearer and shorter for others, I'd just add a few more strings to the array elements (including `'4'`) and take out the first snippet/example (people may have downvoted because they didn't even read the 2nd part).","2018-02-19 04:25:21","6225838"
"84756671","630475","0","Would be nice if we could add the difference with PATCH. Right now I'm in a situation where I define the resource's ID beforehand (not the server), I'm therefore using PUT to create it, and then POST to update it, but I could also use PATCH instead of POST and that would make more sense, semantically speaking.","2018-02-20 12:49:25","2391795"
"84768499","10701801","0","Bots normally just curl forms. Hiding the field via javascript could be an option. You could also clear any of the browser's auto-complete data this way.","2018-02-20 09:46:22","2115697"
"8951764","72156","1","@Vaibhav, ""I realize checkout will also switch to the branch"": therein lies the difference :)","2011-09-13 09:08:27","193494"
"100482470","4183018","1","@d512 to stick with your example: JSON is a bike, and other formats that allow comments are cars. You could add a seatbelt to a bike (or comments to JSON), but that's not the intended use. Besides, you can just add a `_comment` field as specified in the accepted answer.","2019-07-10 02:38:10","5884126"
"8959511","162056","7","content is there, conflict occurs because there 2 version of content. Therefore ""git add"" does not sound correct. And it does not work (git add, git commit) if you want commit only that one file after conflict was resolved (""fatal: cannot do a partial commit during a merge."")","2011-09-14 09:19:10","205943"
"100489592","4183018","2","@PixelMaster then it's time to upgrade JSON to car status. Nobody would except having to declare a string variable called `_comment` in their code so let's not resort to those types of hacks in JSON.","2019-07-10 06:33:57","1334007"
"70267561","24351531","0","If you have a .htaccess file that's under version control, then you already have the directory containing it under version control. Thus, the problem is already solved - the .gitignore file becomes irrelevant.","2017-01-08 09:11:52","216292"
"100491544","4183018","1","@d512 you don't craft a car out of a bike, though - you get an entirely different vehicle, a new car (^= data format), instead. Simultaneously, the existence of cars doesn't render bikes obsolete.","2019-07-10 07:51:59","5884126"
"24044410","5305908","22","@Jez: I disagree.  The point is that git is designed to control (and index) source-code.  Importantly, the id of a commit is a hash of the contents.  That is to say, it must have contents.  You don't need a README in *every* part of the tree, only leaf nodes.  If you have places you intend to put code, but no code, and you won't even take the time to echo ""place for models"" >> README, then what you have is an idea not a commit. It is not of interest to git.

Saying ""I want the running app to have XYZ empty directories"" is a *runtime* problem, not a source problem.  Handle it w/ your installer.","2013-05-23 12:36:55","1586025"
"117301957","350723","0","Trying to get back InputStream, not working https://stackoverflow.com/q/66349701/3425489","2021-02-24 12:06:33","3425489"
"24061489","487278","2","I guess he should answer Omega and Theta , so that all the comments above would be answered as well , would also recommend to change the question to differnce between bigOh and omega and theta.","2013-05-23 12:32:56","1503130"
"24067791","179147","9","@hughes Don't force push to repositories that other people are using without warning them first!! Otherwise it results in a bizarre conflict when they try to fetch again. If that person doesn't know what he/she is doing, they might resolve the conflict incorrectly and then push *that*, which would screw up the repository even further.","2013-05-23 03:05:45","122763"
"117303301","65401892","3","Thanks a lot ! Its as simple as that !","2021-02-24 12:58:30","777103"
"84866898","2003515","0","You can use source tree tool as well if you don't want to remember git commands.","2018-02-22 02:42:37","1101733"
"84908819","40034426","1","[This one](https://stackoverflow.com/a/29650705/1030960) worked better for me.  Here the 2 steps gave me the following errors: `error: dst ref refs/heads/<old-name> receives from more than one src.; error: failed to push some refs to 'git@uri:foo/bar.git'`","2018-02-23 03:26:47","1030960"
"84908896","40034426","1","You got the problem when running the command `git push origin :old-name new-name` right?","2018-02-23 03:28:51","3375906"
"54088010","16957078","2","Don't forget to to tell Linux to not show you the stuff you don't need by adding ""2> /dev/null"" to the end of the command. This is is the only to not get a whole lot of Permission Denied warnings that only muddy the results you are looking for.","2015-10-15 01:36:40","193359"
"84920786","16218718","0","I really never understood why people are so happy with this boilerplate code https://dzone.com/articles/java-8-elvis-operator","2018-02-23 10:10:20","448078"
"84923038","348303","0","Great! The `git reset HEAD <file>` one is the only one that will work in case you want to unstage a file delete","2018-02-24 12:25:25","233428"
"84944406","19670755","0","@Joshcodes How is the client to determine the ID? Generating a UUID? What about apps that just use the auto-incrementing table ID; something I see a lot. Is this just bad practice?","2018-02-25 01:41:56","1028688"
"84967033","671118","7","@OLIVER.KOO nice observation. It's just that I asked it at a time when it was kind of a new thing. It was getting thrown around a lot but not many people knew what it was about. At least I didn't, and it seems that me asking this has helped them because they also wanted to know.","2018-02-26 03:18:30","35364"
"85003014","35585468","0","@GitaarLAB : According to the [Mozilla Developer Network](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let) : ""In ECMAScript 2015, let bindings are not subject to Variable Hoisting, which means that let declarations do not move to the top of the current execution context."" - Anyway, I made a few improvements to my answer that should clarify the difference in hoisting behavior between `let` and `var`!","2018-02-26 11:37:27","1946501"
"38884470","24351531","2","He wants to keep a empty directory and not a file.","2014-07-29 02:55:51","1401968"
"85038777","52713","0","Based on information elsewhere and personal experiment, git checkout -- . only considers overwriting files if a corresponding file already exists in the index. @MichaelIles It appears to me that the files causing you trouble must have had checked-in versions elsewhere.","2018-02-27 07:54:30","5022006"
"85073938","22345808","3","Caret ups to latest Minor, not Major. It's `Major`, `Minor`, `Patch`, `Hotfix`.","2018-02-28 04:47:35","4106263"
"85076080","7070976","3","`git reset --hard` annihilates uncommitted changes.  Please replace `--hard` with `--soft`.","2018-02-28 05:44:56","80772"
"85076936","9180445","0","Right @JasonR.Coombs I have edited the example. Thanks","2018-02-28 06:14:23","299897"
"85101250","72156","0","About ""But there are other branches hiding in your repository!"" This is not exactly true. The remote branches are NOT in your repository, but only in the remote repository. Remove origin to verify.","2018-03-01 11:18:22","4428150"
"85101393","45257871","6","There is a difference between ""you have it"" and ""you see it"". git branch -all will NOT list the remote branches any more when you remove the remote repository.","2018-03-01 11:23:34","4428150"
"85105507","8415829","0","why this answer doesn't have all the votes? 
answered back in the 2011  and still correct.","2018-03-01 01:20:54","1624912"
"85116887","35585468","1","Your answer improved a lot (I thoroughly checked). Note that same link you referenced in your comment also says: ""The (let) variable is in a ""temporal dead zone"" from the *start of the block* until the initialization is processed."" That means that the 'identifier' (the text-string 'reserved' to point to 'something') *is already* reserved in the relevant scope, otherwise it would become part of the root/host/window scope. To me personally, 'hoisting' means nothing more than reserving/linking declared 'identifiers' to their relevant scope; excluding their initialization/assignment/modifyability!","2018-03-01 06:16:42","588079"
"85116907","35585468","0","And..+1. That Kyle Simpson article you linked is an *excellent* read, thank you for that! It is also clear about the ""temporal dead zone"" aka ""TDZ"". One interesting thing I'd like to add: I've read on MDN that `let` and `const` were *recommended to only use when you actually need their additional functionality*, because enforcing/checking these extra features (like write-only const) result in 'more work' (and additional scope-nodes in the scope-tree) for the (current)engine(s) to enforce/check/verify/setup.","2018-03-01 06:17:20","588079"
"85122800","1288121","0","Perfect sample :) given that how ""unique"" are some answers compared to the accepted answer","2018-03-01 09:26:27","6252425"
"85140201","630475","1","@BrianR.Bondy you Wrote: _POST: Used to modify and update a resource
POST /questions/<existing_question> HTTP/1.1_. But in this case you make POST method idempotent. This is in contrast with HTTP specification! [RFC 7231](https://tools.ietf.org/html/rfc7231#section-4.3.3)","2018-03-02 10:50:40","585669"
"85146926","12184274","1","Downvoted as it might remove your files. Not reliable solution.","2018-03-02 02:13:39","1284113"
"85192946","24155226","3","The only tiny difference is that if you use the String class, you need to import the System namespace on top of your file, whereas you don’t have to do this when using the string keyword.","2018-03-04 09:29:34","993599"
"100522178","53461165","0","Excellent example with multiple negation.","2019-07-11 04:50:52","2604170"
"100523762","8888015","1","@JonB: ""isn't it easier just to rm -rf /folder and do git clone again...?"" A (not even overly) big repo + low bandwidth brought me here. I'd love to just clone again, but it was painful enough the first time, so I'm one of those looking for a quicker solution.","2019-07-11 05:46:59","1479945"
"38896731","12231177","2","You need `$flawed_commit^..HEAD`, not `$flawed_commit..HEAD`. as stated by the man page: «_The command will only rewrite the positive refs mentioned in the command line (e.g. if you pass a..b, only b will be rewritten)._»","2014-07-29 11:18:49","3697633"
"117321178","1145525","16","NodeJS supports `replaceAll` in 15.x versions.","2021-02-25 01:38:18","1255873"
"70291967","27664932","19","be careful using the clean command. it can delete ignored files from other branches.","2017-01-09 08:23:01","3226194"
"100529694","163659","1","`E93: More than one match for RE` I guess I'll just install Beyond Compare 3 first and then try again.","2019-07-11 10:14:20","550471"
"9010652","2866221","0","@MFD3000: Could you explain in detail what you did? Did you feed jQuery.isEmptyObject() with a string? In that case have a look at http://bugs.jquery.com/ticket/7413 and http://api.jquery.com/jQuery.isEmptyObject/.","2011-09-16 08:13:12","255849"
"24115565","5343267","1","Yes it is the best answer if you read the last sentence of his question: `I don't want my branch to be ahead by any number of commits. How do I get back to that point?`, it seems like he wants to get back to what origin/master points to.","2013-05-24 08:55:20","369792"
"24115618","2389423","0","`git branch -a -v` will show you all local and remote branches and their SHAs, so use the SHA for remote/master if you want to match that","2013-05-24 08:57:28","369792"
"85239067","19670755","0","@Zuko, In my opinion, auto-incrementing table IDs have no place in a distributed environment. UUID's are superior in every way except storage space. Ints for IDs are a holdover from when DB storage was a larger concern that it is today.","2018-03-05 06:14:56","965382"
"100560456","246128","1","Is it possible to wrap this in a function, or does it have to be copy/pasted all over the place?","2019-07-12 09:27:23","3141234"
"100560795","5201642","0","If you want to target a commit specifically you can do so by providing the hash, but it wasn't as simple as replacing the index with the hash. I got this by using Source Tree: git -c diff.mnemonicprefix=false -c core.quotepath=false --no-optional-locks reset -q --soft <Your SHA here>
git commit   The hash that should be provided though should be the commit just before your target.","2019-07-12 09:53:33","603807"
"100561402","19095988","1","@Berik you could add an alias https://git-scm.com/book/en/v2/Git-Basics-Git-Aliases","2019-07-12 10:48:56","8366188"
"117324847","11551718","0","2021.02: The image url in this answer **does work** in Chrome 88 on Mac","2021-02-25 06:42:01","64904"
"85250317","2798934","0","`git reset --hard HEAD` doesn't really reset all in some cases","2018-03-06 02:19:35","1118709"
"100573238","56945952","2","Rather than giving bookish definitions, would have been better if you had added some examples. The first line of your answer seems to have been copied from the Wikipedia entry of Metaclasses.","2019-07-13 05:41:52","608170"
"100587397","50930429","0","The reasoning is *not* foolish, and you just proved it. Implementing comments as tags preserves *interoperability*. This is *exactly* why Crockford wanted comments to be parsed as tags. Now *everything* is just a tag and parsed *the same way*.","2019-07-14 04:30:57","1048170"
"38903476","24957191","0","It is hard to understand why someone would have problem with stating a fact.","2014-07-29 02:17:30","770446"
"100592076","2334741","1","You can't do `SET Table_A.col1 = SUM(Table_B.col1)` or any other aggregate. Jamal's answer allows you to put the aggregate in the `SELECT` https://stackoverflow.com/a/8963158/695671","2019-07-14 10:31:03","695671"
"100592158","8963158","3","If you need to set the first table with aggregates from the second, you can put the aggregates in the select subquery, as you cannot do `SET Table_A.col1 = SUM(Table_B.col1)` (or any other aggregate function). So better than Robin Day's answer for this purpose.","2019-07-14 10:38:49","695671"
"100596443","56945952","1","@verisimilitude I am also learning can you help me improving this answer by providing some practical examples from your experience ??","2019-07-15 06:02:13","1609259"
"24173715","477578","0","@Jesse: I would agree with you if the 'improved' system actually did that, but if an attacker deletes the cookie, the site has no clue that an attack has taken place - only that a new chain has been added to the collection of valid chains. If and only if the user monitors his own number of valid chains stored in the database, never clears his own cookies, and keeps track of 100% of the devices he uses to authenticate on the site, will he be able to deduce that an attack MAY have taken place. The scenario where the system automatically detects the intrusion does not apply to cookie deletion.","2013-05-27 04:44:45","57068"
"24174736","16218718","12","Google's guava has an optional implimention for Java 6+.","2013-05-27 05:30:26","728283"
"85314626","16218718","5","Why people have tendency to do this `if(optional.isPresent()){ optional.get(); }` instead of `optional.ifPresent(o -> { ...})`","2018-03-07 03:06:39","5332993"
"100615370","16259217","0","@Prerit You could cast to `dict` to avoid that, i.e.: `dict(ChainMap({}, y, x))`","2019-07-15 04:30:35","4518341"
"85343139","2251026","0","`stdout=subprocess.PIPE` will make your code hang up if you have long output from a child. For more details see https://thraxil.org/users/anders/posts/2008/03/13/Subprocess-Hanging-PIPE-is-your-enemy/","2018-03-08 08:56:54","2470337"
"24206235","10556826","16","origin/master is a local branch that is a COPY of master on origin. When you fetch, you update local:/origin/master. Once you really grok that everything in git is a branch, this makes a lot of sense and is a very powerful way to maintain different changesets, make quick local branches, merge and rebase, and generally get a lot of value out of the cheap branching model.","2013-05-28 04:00:14","15088"
"24206838","1274081","2","This worked great if you want to ignore a bunch of files that weren't previously ignored. Though like you said, there is probably a better way for this.","2013-05-28 04:19:12","1523238"
"85354485","30479554","6","``for(let i = 1; i < 6; i++)`` I personally find this notation misleading: `i++` suggests that `i` is increased by `1`. Instead, a new variable named `i` is passed to the next iteration and initialized the the value of `i` in the previous iteration increased by `1`. I think they should have chosen another notation.","2018-03-08 01:52:42","6166963"
"24236839","487279","4","This answer is the most ""plain"" one here. Previous ones actually assume readers know enough to understand them but writers are not aware of it. They think theirs are simple and plain, which are absolutely not. Writing a lot text with pretty format and making fancy artificial examples that are hard to non-CS people is not plain and simple, it is just attractive to stackoverflowers who are mostly CS people to up vote. Explaining CS term in plain English needs nothing about code and math at all. +1 for this answer though it is still not good enough.","2013-05-29 12:36:01","1261870"
"100641905","19095988","0","This answer got the job done for me and didn't require anything but a page refresh on the Github repo to reflect changes on my local machine after pushing.","2019-07-16 01:16:00","4573162"
"24250561","16815775","4","I've also heard the term Linearithmic - `O(n log n)` which would be considered good.","2013-05-29 06:45:06","9732"
"24251178","487278","5","@Isaac It doesn't really matter: `200! Nanoseconds ~= 1.8×10^348 × universe age` https://www.wolframalpha.com/input/?i=200%21+nanoseconds","2013-05-29 07:06:14","118960"
"85401139","44700108","8","I tend to use it like this nowadays: 
{
""//foo"": ""foo comment"",
""foo"": ""foo value"",
""//bar"": ""bar comment"",
""bar"": ""bar value""
}

You can use an array for multiple comments: 
{
""//foo"": [ ""foo comment 1"", ""foo comment 2"" ], ""foo"": ''foo value""
}","2018-03-09 04:29:56","601990"
"24257563","7244456","59","A quick note that rather than having to rebase your own master branch to ensure you are starting with clean state, you should probably work on a separate branch and make a pull request from that. This keeps your master clean for any future merges and it stops you from having to rewrite history with `-f` which messes up everyone that could have cloned your version.","2013-05-29 11:09:52","1432740"
"24263336","12656422","0","@William ...and people tend to die of old age, species go extinct, planets turn barren etc.","2013-05-30 05:52:12","1021943"
"100646762","56168071","0","Yes, they are as in the question. The first couple of diagrams are intended to be equivalent to those in the question, just redrawn the way I would like for the purpose of illustration in the answer. Basically rename the master branch as newbranch and create a new master branch where you want it.","2019-07-16 03:22:47","3070485"
"24267491","12788094","9","Even your second version doesn't provide the same functionality. If the user submits the ``<form>`` with this input the placeholder text will be sent to the server. I seen so many sites do this wrong.","2013-05-30 08:35:21","324389"
"24270661","271526","0","You can create class that will check for null values or null object.
That will help you improving reuse-ability..
http://stackoverflow.com/a/16833309/1490962","2013-05-30 10:15:30","1490962"
"85450692","406243","3","If you have many patterns that you want to filter out, put them in a file and use `grep -vf pattern_file file`","2018-03-11 06:35:45","6862601"
"85452846","5189600","1","I feel like you really mean `<before-this-commit>`, but you describe such an argument as a commit in the past.","2018-03-11 08:17:42","1180714"
"85470876","46986753","1","reset doesn't change the file, just put it away from the stage (=index, where it was put by git add)","2018-03-12 11:18:32","980414"
"38912825","18792061","1","@minitech well thanks! Actually I didn't know that such a construction could be returned. TIL something new.","2014-07-29 06:25:18","702353"
"54118238","6866485","1","link about `index` added in context, plus comment about backing up your entire project as a precaution @Kidburla.","2015-10-15 05:10:06","1509695"
"100673498","630475","0","I think that the answer regarding POST is not correct.
POST /questions/<existing_question>
should never be used.
Use
POST /questions
to create a new question without knowledge of the question id.
Use
PUT /questions/<questionId>
to create (in case the client manages the question ids, else use POST) or replace (completely) a question knowing the question id.
Use PATCH for partial modification.","2019-07-17 11:48:59","579750"
"100681607","25861938","5","`""Approximately equivalent to version""` and `""Compatible with version""` are such frustratingly non-specific ways to describe ~ and ^ behavior.  Thank you @jgillich for providing an actual answer!","2019-07-17 03:21:31","237091"
"85496312","8876254","14","It is also redundant. If the file doesn't exist, `os.access()` will return false.","2018-03-13 12:01:19","207421"
"54122799","32166837","3","Save some keystrokes ;) `stringVal.replace(/^./, stringVal[0].toUpperCase());`","2015-10-15 07:30:27","740532"
"9033735","1669524","215","I don't understand what's the catch for using staticmethod. we can just use a simple outside-of-class function.","2011-09-19 03:08:01","888051"
"70303620","5431108","0","@NicholasShanks not really. Consider a resource that represents a school student, you could access `/student/123` but you might also get to that same student via `/class/abc/student/123`, That is perfectly valid. There is the concept of the canonical URI though, which in this case we could say the former is. The U is for Uniform, not Unique.","2017-01-09 01:41:13","300797"
"24351646","1876958","3","Also helpful if you don't have any previous commits. In absence of previous commit, `git reset HEAD <file>` would say `fatal: Failed to resolve 'HEAD' as a valid ref.`","2013-06-02 03:46:13","1290185"
"24352374","4090938","5","This is not quite the right answer because of the config option `url.<base>.insteadOf`. See my answer - git has a command for this purpose.","2013-06-02 05:17:08","759418"
"24352805","4090938","2","@arcresu Cool, +1 to you! In my defense, that command wasn't added until March 2011, and it wasn't documented until September 2012.","2013-06-02 06:03:07","119963"
"85532882","8418403","2","@szablica, every thing is confusing to someone ¯\\_(ツ)_/¯","2018-03-13 07:52:09","2180523"
"9038195","1669524","435","@Alcott: You might want to move a function into a class because it logically belongs with the class. In the Python source code (e.g. multiprocessing,turtle,dist-packages), it is used to ""hide"" single-underscore ""private"" functions from the module namespace. Its use, though, is highly concentrated in just a few modules -- perhaps an indication that it is mainly a stylistic thing. Though I could not find any example of this, `@staticmethod` might help organize your code by being overridable by subclasses. Without it you'd have variants of the function floating around in the module namespace.","2011-09-19 10:34:44","190597"
"85542543","394809","1","It is mentioned here https://docs.python.org/3/faq/programming.html#is-there-an-equivalent-of-c-s-ternary-operator, but not mentioned in Python Standard Library","2018-03-14 04:20:11","845915"
"100716499","67716","1","Can you explain to me what's the difference between `git checkout -b master origin/master` and `git checkout --track origin/master` please ?","2019-07-18 03:08:13","9868445"
"100716532","1186645","0","So you mean the second form is only easier to remember and there's no other difference?","2019-07-18 03:09:26","9868445"
"100720447","57098552","2","Could you add details about what the above code does? That would be really useful, and would increase the quality of your answer.","2019-07-18 05:14:28","97358"
"100722544","57100359","0","Please put some text showing what you did and why you did it","2019-07-18 06:33:43","8890692"
"70307924","5431108","0","@thecoshman What you would then have is two identical resources that just happen to change every time the other one does. A link from one to the other with a `canonical` relation would definitely help though. Even if you supplied a Content-Location header with one, pointing to the path of the other, that would not unify the underlying resources represented by each URL. Consider that a representation is not a resource, and two identical representations do not make the same resource (e.g. downloads/v1.0.0/ and downloads/latest-version/)","2017-01-09 03:34:09","760706"
"85555916","46986753","0","checkout change the codes in file and move to the last updated state.
reset doesn't change the codes it just reset the header.

As example, reset use for added or committed files resetting before push and checkout use for back to the last updated/committed stage before git add.","2018-03-14 11:38:53","5973971"
"24414855","487278","2","@Aryabhatta What do you mean log(n) is O(n)? log(n) is clearly O(log(n)), no? (see http://en.wikipedia.org/wiki/Big_oh_notation)","2013-06-04 09:59:25","393010"
"54133042","348234","1","git reset said it undid the changes but when I proceeded to do another git status, they still showed modified","2015-10-16 03:39:48","93468"
"24417909","15669052","2","Is there a good way to fix commit messages already pushed to a public repository? So far I have come to the conclusion that, once pushed, my commit message typos and thinkos have to live forever.","2013-06-04 11:32:34","743358"
"85577753","61212","4","If the files are not yet being tracked, couldn't you just remove them without git? `rm files-to-be-deleted`","2018-03-14 08:48:23","4084574"
"100745917","32524385","1","@MobileMon no : POST when you create a new resource and you don't know the final endpoint to get it. PUT for other cases.","2019-07-19 01:33:28","1729211"
"24437185","5305908","0","@JoeAtzberger What about web applications?  Should I give the web/application server permission to create the directories whenever they're missing?  That's a strong security problem and a small performance issue to keep checking.  Should I create a web app that needs special code run (e.g. create cache folder) in addition to a git clone?  Now I need to add a readme, an install script and time to deal with everyone who doesn't bother to look at anything, expecting it to just work.  There are even times when a directory tree with no files is something that gets used in a build/install process.","2013-06-04 09:04:00","861178"
"24437330","5305908","10","@JoeAtzberger It's a missing feature, not an intentional limitation.  From the Git FAQ: Currently the design of the Git index (staging area) only permits files to be listed, and **nobody competent enough to make the change to allow empty directories has cared enough about this situation to remedy it.**","2013-06-04 09:08:26","861178"
"24437582","117111","4","It's a missing feature (and low priority), not an intentional limitation. From the Git FAQ: Currently the design of the Git index (staging area) only permits files to be listed, and **nobody competent enough to make the change to allow empty directories has cared enough about this situation to remedy it.**","2013-06-04 09:17:27","861178"
"85594629","14663381","0","@broofa - What would you suggest to make it strong **and** RFC-compliant? And why is _cryptoGuid not RFC-compliant?","2018-03-15 09:57:43","1016343"
"24472116","7104747","0","I'm not sure if I understand this correctly. Let me know if I'm right:

Lets say I have two branches, master and test. test is a branch that I'm working on to experiment something. If I do git fetch, it updates master with the target branch. If I do git pull, it tries to update test with the target branch. Is this right? If not, I think I don't understand what 'local repository' means - I assumed it means my local master.","2013-06-05 07:15:45","470229"
"24476266","13532998","0","This certainly is much more flexible than many of the other approaches. If one is uncomfortable with the prototype one might consider something like 	var positionIf = function (predicate,sequence) {return sequence.map(predicate).indexOf(true);};","2013-06-05 09:28:05","65201"
"70310838","5431108","0","@NicholasShanks I think [this](http://stackoverflow.com/a/1929934/300797) answer provides a good explanation that I agree with but also considers your point of view. I'd also say that it is probably a more relevant place for this discussion.","2017-01-09 04:48:40","300797"
"24487291","16956844","0","How long on average (obviously depends greatly on the system) do you think this would take to scan the full system? 

Do you think using a regular expression with grep would make it go faster?","2013-06-06 08:12:23","954986"
"24487355","16956844","108","Based on my experience, the `-i` makes it slow down a lot, so don't use it if not necessary. Test it in a certain dir and then generalise. It should be completed within few minutes. I think a regular expression would make it slower. But my comments are based on suppositions, I suggest you to test it with `time` in front of the line.","2013-06-06 08:14:37","1983854"
"24487374","16956844","5","Yes, `/*` stands for that. Anyway I just tested it and noticed that just `/` works.","2013-06-06 08:15:21","1983854"
"24487546","16956844","1","Okay, thanks. 

It seems like this is capturing a lot of files that I can't even open up in a text editor. Is it perhaps interpreting all formats at text, and so randomly finding results in binary ""noise"" in an executable file for instance?","2013-06-06 08:20:33","954986"
"24487752","16957078","2","How can I make it so it ignores binary files though?","2013-06-06 08:27:20","954986"
"24487774","16956844","0","You can add this: `2>/dev/null | grep -v ""Binary file""`","2013-06-06 08:28:03","1983854"
"24487823","16957078","87","use --exclude. like ""grep -rnw --exclude=*.o 'directory' -e ""pattern""","2013-06-06 08:29:44","2231815"
"85643214","41603849","4","That is a very interesting article (in fact, I have just read all of it), but how does it answer the question?","2018-03-16 12:47:19","63550"
"85650402","41603849","3","@PeterMortensen I am a bit flummoxed by your question. For example here is one relevant line from that piece:

`When the input is unsorted, all the rest of the loop takes substantial time. But with sorted input, the processor is somehow able to spend not just less time in the body of the loop, meaning the buckets at offsets 0x18 and 0x1C, but vanishingly little time on the mechanism of looping.`

Author is trying to discuss profiling in the context of code posted here and in the process trying to explain why the sorted case is so much more faster.","2018-03-16 03:37:16","601567"
"85653969","14663381","0","@Matt _cryptoGuid() sets all 128 bits randomly, meaning it doesn't set the version and variant fields as described in the RFC.  See my alternate implementation of uuidv4() that uses crypto.getRandomValues() in my top-voted answer, above, for a strong+compliant implementation.","2018-03-16 05:13:23","109538"
"100792549","397740","0","@gorefest ```checkNotNull``` returns the value, so you can assign your fields in constructor with it. E.g. ```this.foo = checkNotNull(foo)```, also more readable (it shows you want to enforce non nulls, not some random method call), also what if the param has no methods to call, or methods require many arguments. Lastly ```checkNotNull``` supports custom error message.","2019-07-22 02:15:06","6122976"
"24508505","477578","1","@Jesse: You are correct, but the improvement seems highly speculative to me, since essentially every attack vector which would allow a third party access to the cookie would also enable them to delete it. Hoping that they won't is nothing more than security through obscurity. Even if there is added protection against the weakest attackers, I would still argue that giving the site owners / legitimate users a false sense of security by advertising an 'intrusion detection' mechanism which doesn't actually protect them, is downright irresponsible and should be discouraged.","2013-06-06 06:03:12","57068"
"24509341","9494042","0","This works for me, I dont have any textboxes or anything that really has focus.","2013-06-06 06:30:21","1381216"
"85672860","45322869","0","The second link seems to be (effectively) broken.","2018-03-17 11:57:18","63550"
"24522185","11444416","215","So is the purpose of let statements only to free up memory when not needed in a certain block?","2013-06-07 05:18:58","778234"
"100810267","7070976","3","Agreed, `git reset --hard` is a perfectly legitimate command, but it is misleading given the question. You use `--hard` if you committed changes you want to throw away, not if you made a typo in the commit message!","2019-07-22 01:52:20","1938956"
"85689526","44612374","0","Crashes on circular references.","2018-03-18 05:19:50","663447"
"24540135","11444416","249","@NoBugs, Yes, and it is encouraged that variables are existent only where they are needed.","2013-06-07 03:02:29","1418853"
"85704287","34998848","3","Is this still relevant?","2018-03-18 07:43:54","1915893"
"85704379","44935441","6","There's nothing inherently asynchronous about callbacks or JavaScript.","2018-03-18 07:48:53","1915893"
"85711145","21232996","4","@akronymn @ Federico - I've edited it to spell out what I see the dangers are - is that better?","2018-03-19 03:40:43","894487"
"85730075","1628563","14","Were the comments here purged? I ask because during my bimonthly visit to this question, I always scroll by that comment.","2018-03-19 02:02:40","1121645"
"85734283","43237732","2","You actually don't want to use the plus sign (+) as a concatenation method in ES6. You'll want to use template literals: https://eslint.org/docs/rules/prefer-template","2018-03-19 03:37:27","1415748"
"85745146","6984591","0","The project seems to have been mothballed.... see https://en.wikipedia.org/wiki/Mozilla_Persona","2018-03-19 08:44:42","56708"
"85745604","394887","6","@OrangeTux [Here's the disassembled code](https://tio.run/##bcoxCoAwEETRPqeY0kCwsPQ2kmR1QZOwWQtPH4OClQO/GV65dMtpao2PkkURuBoTIoEG76AOZGeDPol6SoKCCR5xrxH0yvVfeiwpdJ/lgVzH3kDWFOGk37Ha1m4). Using the method ThomasH suggested would be even slower.","2018-03-19 08:59:54","2415524"
"100850664","56399216","0","This should be the correct solution. Note that earlier input parameters have precedence and dictionaries are taken by reference, i.e. the ChainMap will get updated if the map gets updated.","2019-07-23 04:31:04","5616591"
"85751313","927358","250","You know what git needs? `git undo`, that's it. Then the reputation git has for handling mistakes made by us mere mortals disappears. Implement by pushing the current state on a git stack before executing any `git` command. It would affect performance, so it would be best to add a config flag as to whether to enable it.","2018-03-20 01:45:28","1476792"
"85752817","927386","1","Also if you have too-large files that don't belong and cant complete your initial commits. you can delete .git, remove your too large files. git init and commit -m 'initial commit' and then push -u origin master","2018-03-20 03:27:16","1076527"
"24606191","17024867","7","This does not answer the question.","2013-06-10 01:20:10","584192"
"85759039","34998848","2","You can make use of `async-await` if you're using some of the newest versions of node. If someone is stuck with older versions they can use this method.","2018-03-20 08:18:27","3664835"
"85760496","1628334","7","It did not remove files I have added.","2018-03-20 09:01:02","1169741"
"85780523","46901563","0","In my case it looks like it searches everywhere even if I do specify the directory","2018-03-20 04:30:36","1883256"
"85785785","48548332","2","According to https://docs.python.org/2/library/subprocess.html#frequently-used-arguments, ""shell=True"" may raise a security concern.","2018-03-20 06:54:34","5458157"
"24658104","2219560","12","@Kyralessa not true. In bash you can easily compose multiline commit messages by just not closing the quote until you're done (hitting return at the end of each line within the quotes).","2013-06-11 09:11:57","623735"
"24659044","952914","9","Some other answers are better but the reason yours fails is that the 'extend' method always returns None. For a list with length 2, it will work but return None. For a longer list, it will consume the first 2 args, which returns None. It then continues with None.extend(<third arg>), which causes this erro","2013-06-11 09:48:27","1235982"
"100889072","4183018","1","@PixelMaster So move the entire industry to a new data format that supports comments rather than just adding them to JSON? We don't need to a whole giant overhaul of the format. It's not analogous to turning a bike into a car. We just need to one, common place, common sense feature.","2019-07-24 06:58:13","1334007"
"85817782","417184","1","IE11: max-length for anchor: 5120 bytes, max-length for address-bar: 2047, max-length for copying to address-bar: 2083","2018-03-21 01:56:43","155077"
"24704698","5361169","8","@crizCraig unless they are added in `.gitignore`","2013-06-13 06:58:23","1309352"
"24712190","4682612","2","Git Pull --all is correct. This allowed me to pull in remote branches that existed on github but not in the local repo, I could then move the this branch as normal","2013-06-13 11:08:46","2083622"
"38938199","25011664","3","Well, my scenario was that I was converting a branch to a tag and it made sense for the tag to have the same name as the branch. By converting I mean merging branch B to A and tagging the last commit in branch B with tag B so that after deleting branch B it can still be easily restored by simply checking out tag B.","2014-07-30 11:59:10","745250"
"38943254","6989665","7","More like something like bcrypt which is designed to hash slowly.","2014-07-30 02:03:21","133704"
"24730588","271576","2","But then you have to assume `equals` (could be any method) will handle null correctly. Really all this is doing is passing the responsibility to someone else (or another method).","2013-06-13 08:01:58","1296660"
"24735455","271616","2","@myplacedk I think it does make sense to have a different exception for null values passed in that from improper values passed in. The two are usually results of different types of programming errors. Null values usually arise from some required computation not happening, while other problems usually arise from required computations being incorrect.","2013-06-13 11:16:47","330057"
"38957538","11974631","2","Coffeescript is a preprocessor language, not a library... A library for this would be silly","2014-07-30 08:18:31","720785"
"100958155","1274447","1","I'm still using this answer as it's proven safer, more conservative than others, with which I've experienced undesirable effects. The full flow is  `git rm --cached <file or folder>`,  `git add .`, `git commit`, `git push`.","2019-07-26 09:05:54","1493426"
"100958827","42522149","4","Just a friendly reminder that you cannot do this on Python `list` but only on `array` in Numpy","2019-07-26 09:46:53","5927858"
"117380367","38549","0","My 1st comment's link is external, but i.stack.imgur.com has permanent copies of its illustrations of **output (not input)** for [inner](http://i.stack.imgur.com/Zkk3I.jpg), [left](http://i.stack.imgur.com/Z584b.jpg) & [full](http://i.stack.imgur.com/c1QF3.jpg) joins (in green).","2021-02-27 04:37:21","3404097"
"9084535","1714649","0","@Kip Good point.  We're both getting at the same thing though, the additional arithmetic here is unnecessary.","2011-09-21 04:00:29","158039"
"38962177","11974631","4","Let the record state: `CoffeeScript is a little language that compiles into JavaScript.` Furthermore, `The golden rule of CoffeeScript is: ""It's just JavaScript.""` I think if someone truly understands those two sentences, you'll understand why I included this answer.  Hopefully that cleared things up for everyone.  Source: http://coffeescript.org/","2014-07-30 11:28:53","298758"
"100964774","1274057","1","`git update-index --assume-unchanged <file>` has a serious problem I just ran into: running `git stash` after making local changes to this ""ignored"" file, all local changes will be lost (i.e. `git stash pop` will not bring them back)","2019-07-27 09:14:16","2017490"
"70357582","8860548","3","1) easier to remember more general way 2) no worries to press Enter before entering file name","2017-01-10 07:03:07","1133649"
"38971938","24351531","2","And i have mentioned that it will keep the .htaccess, too. Example: if a software has a directory for log-files (like oxid eshop) that should not be accesible via web, there is a .htaccess in the directory. If you put the above mentioned .gitignore in the folder, the .htaccess will not be comitted and the folder will be accessible via web.","2014-07-31 08:17:33","2139671"
"117397309","35446009","2","I converted all the `while` loops to `for` loops in an edit to this post, to avoid polluting the namespace with a variable that isn't used outside the loop. It's a neat trick that works in most Java reader/writer loops.","2021-02-28 02:10:08","3950982"
"117399237","40480","0","It's the difference between foo.bar(sth) and foo = sth. In the 1st one, the object is being changed using the variable that is pointing to it, and the variable itself that is pointing to the object has not been changed. In the 2nd one however, the variable itself that used to point to the object has changed and is now pointing to another object. If you have a C++ background: A pointer is a variable that holds a memory address, while a reference has the same memory address as the item it references. __In Java indeed, a pointer is passed by value, but Javaistas happen to call it a *reference*__!","2021-02-28 06:28:36","9868445"
"70367190","34555013","1","Stack would easily overflow, probably because of the circular reference.","2017-01-11 01:16:05","7234604"
"9104760","487292","5","You should add an example for O(n log n).","2011-09-22 03:50:33","233014"
"85917381","8888015","0","@GershomMaes `git clean -dfx` after hard reset, as mentioned above by [IceGlow](https://stackoverflow.com/questions/1125968/how-do-i-force-git-pull-to-overwrite-local-files#comment56828965_8888015)?","2018-03-23 07:40:57","4451732"
"24771663","1644241","6","I think this is a little bit misleading... We don't have a literally ""goes to"" operator, since we need another `++>` to do the incremental work.","2013-06-15 02:49:10","1147061"
"54211750","5334825","4","Hello! I can't compose **does not _end_ with ""hede""** regex. Can you help with it?","2015-10-18 09:33:02","2523860"
"9112892","275869","20","This is a particular example, probably the most used, of a general good practice: if you know it, always do `<object that you know that is not null>.equals(<object that might be null>);`. It works for other methods other than `equals` if you know the contract and those methods can handle `null` parameters.","2011-09-23 01:20:38","707372"
"100992202","927386","1","I accidentally committed an entire folder. so I then ran 'git reset HEAD core/' which gave me this list 'Unstaged changes after reset:' (showing all my core folder/subfolder files). Then when I ran 'git status' all my ""core""content was under the list heading ""Changes not staged for commit:"" which sounds good. I then added 'core' to my .gitignore. and ran 'git status' again, but the files kept appearing in the ""not staged for commit"" list. I'd rather git does not even see them but I can't figure out how to do that?","2019-07-28 11:45:32","2639928"
"100992738","14889651","0","Dear lordy there's a million answers to this question! Your solution looks even nicer in es6. `'Answer'.replace(/^./, v => v.toLowerCase())`","2019-07-29 12:40:58","4502020"
"9115601","487292","0","That's not so clear, essentially it behaves a little worse than O(n). So if n doubles, the runtime is multiplied by a factor somewhat larger than 2.","2011-09-23 06:44:50","49246"
"100995393","47141245","5","Almost as good as the Intel marketing animations, and they were obsessed not just with branch prediction but out of order execution, both strategies being ""speculative"". Reading ahead in memory and storage (sequential pre-fetch to buffer) is also speculative. It all adds up.","2019-07-29 05:14:16","1734032"
"117423101","15457453","0","The 'cast' api requires System.Linq. I was just short of cast.","2021-03-01 10:19:16","1085405"
"54225975","13575102","0","I have the `error: key does not contain a section: unset`. The [Dave's answer](http://stackoverflow.com/a/7216269/938111) works better.","2015-10-19 09:24:01","938111"
"54230495","22345808","0","Hat matching is broken because it wont update `^0.1.2` to `0.2.0`. The rule is: always version your package skipping the `0.x.x` version range and you'll get consistent behaviour","2015-10-19 11:29:39","970769"
"117434111","29989450","0","see [answer about performance below](https://stackoverflow.com/a/46461041), different results","2021-03-01 05:19:18","1760643"
"9133640","952997","8","`extend` is better used as `newlist = []`, `extend = newlist.extend`, `for sublist in l: extend(l)` as it avoids the (rather large) overhead of the `lambda`, the attribute lookup on `x`, and the `or`.","2011-09-24 10:12:35","500584"
"101018617","34848289","1","There is an error in `$a ?? $c`, it says is the same as `$a ? $a : $c`, but ternary operator checks if value is true, on the other hand, null coalescing checks for null values, so, if $a is 0, you will get 0 (because 0 is not null), for example if you have: `$a=0; $c=5;` then `$a?$a:$c` returns 5, and `$a??$c` returns 0.","2019-07-29 06:41:42","2966583"
"24804210","176274","5","@AdamGent: RFC 3986 1.1.3: ""A URI can be further classified as a locator, a name, or both."" So, if URL is a special kind of URI, that means that every URL is a URI. Doesn't it?","2013-06-16 11:32:09","1861929"
"24804542","176274","0","It depends on your semantics of ""special"". URLs are not a syntactical subset of URI just like C is not truly a syntacticaly a subset of C++ (IIRC ... That might have changed).","2013-06-17 12:06:34","318174"
"101022349","54781933","0","Is there any difference between Context.INPUT_METHOD_SERVICE and Activity.INPUT_METHOD_SERVICE? Both seem to work","2019-07-29 09:28:11","2127950"
"101022575","54781933","0","Also, you code sample will throw IllegalStateException","2019-07-29 09:39:49","2127950"
"101022924","1274081","0","This worked after I had them added, and then after the fact added them to .gitignore","2019-07-29 10:00:21","574952"
"101040328","54781933","0","@portfoliobuilder where you think that it will throw the Exception?","2019-07-30 11:59:37","3515873"
"54262099","30929199","0","Great answer! I think this is the one of the only methods to keep setters and getter intact. This solved my problem. Thanks! (see: http://stackoverflow.com/questions/33207028/javascript-setter-and-getter-of-object-lost-after-angular-copy)","2015-10-20 05:54:47","196507"
"101050178","54781933","0","Lets say the user does standard implementation of hiding keyboard when app goes into background (onPause) and displaying it while in the foreground (onResume). Now lets also presume two screens. An illegalStateException can occur if keyboard is already hidden and transition occurs from Activity A to Activity B (or Fragment A to Fragment B, or Activity A to Fragment B, ect). You have no checks for if keyboard is visible already.","2019-07-30 04:31:15","2127950"
"54273432","161813","3","Also see http://www.git-tower.com/learn/git/ebook/command-line/tools-services/diff-merge-tools","2015-10-20 11:19:55","632951"
"54273884","682343","0","When intially populating a git repository, ""git reset"" from the top answer  doesn't  work: failed to resolve HEAD.
We added a single file too many to the initial commit. 
As suggested by this answer, in that case ""git rm --cached <file>"" works for me. Maybe ""git rm --cached ."" does more than is intended for some people, but (as suggested by git status), git rm --cached <file> works....","2015-10-20 11:31:15","1088816"
"70439826","23853061","1","Say changes in my fork have primarily consisted of edits to documentation, which can be performed through web without cloning. Wouldn't performing ""Stick to the command line instead - it's easy."" require cloning the repository over my (possibly metered) Internet connection?","2017-01-12 05:16:47","2738262"
"85988157","44201563","2","@NickVolynkin the command to reload from disk is `:e` (or more likely `:e!` since it will warn you about unsaved changes without the `!`)","2018-03-26 01:15:40","391851"
"101061374","11551718","0","@Nino Škopac It's working in Chrome Version 76.0.3809.87 (Official Build) (64-bit). Pasting it into the location bar displays a cartoon of the Google home page.","2019-07-31 03:51:00","315083"
"54289207","30257156","0","Thnx for trying to help the OP :). You shouldn't add answers that are exactly the same as answers already provided. I'm guessing the collision is a mistake but this could have been completely copied and pasted from the accepted answer.","2015-10-20 05:49:43","1970820"
"39003774","10916838","48","This is just so wrong! That API is not meant to be used this way.","2014-07-31 11:34:51","717221"
"85998533","406408","0","Lookbacks/lookarounds are only supported in `pcre` https://superuser.com/a/596499/658319. Perhaps a disclaimer should be added.","2018-03-26 05:32:09","4752883"
"85999617","406408","1","@alpha_989 true, but I don't think a disclaimer is needed. This is SO, not Math Overflow or CS-SE, and nearly all popular programming languages with regex-support are PCRE (is close to it).","2018-03-26 06:04:27","50476"
"85999985","1628334","0","In case you lost a commit because of the reset, you can use `git reflog` to find it and `git cherry-pick $hash` to restore it to the branch.","2018-03-26 06:16:19","1054633"
"101075405","27169861","2","Note that the `json` is not a valid JSON anymore when it includes these propriety comments.","2019-07-31 12:12:30","470917"
"117448511","40499","0","https://www.geeksforgeeks.org/g-fact-31-java-is-strictly-pass-by-value/","2021-03-02 07:28:46","2485825"
"24862478","7156145","3","`while (size-->0)` I hope [this](http://stackoverflow.com/questions/1642028/what-is-the-name-of-this-operator) wouldn't ask again.","2013-06-18 02:41:28","2304737"
"39007507","14423956","1","spreading out the socks takes a lot of space and the question says only logarithmic space","2014-08-01 04:24:04","1764528"
"70483461","7244456","2","@Steckdoserich couldn't agree more.  It is extremely sad that people here think that force pushing a publicly visible branch after a rebase is remotely correct or acceptable.   It renders your fork almost useless to anyone following along....","2017-01-13 07:12:12","1410669"
"86031114","549","0","While fun reading, the topic is indeed too broad. Security is a cat-and-mouse game. Hackers find new holes all the time that new security will plug, and vice versa. Not yet mentioned in the answers: behavioural checking. E.g. Google will prompt for your password every once in a while, especially if you do unexpected things. So do contact-less bank cards if you pay in a store or town where you have not been seen before.","2018-03-27 12:46:52","1845672"
"70489872","41644871","1","How is this different to the many other answers that seem to do the same?","2017-01-13 11:31:08","356292"
"70490630","36463546","1","Considering that many folks have autosetuprebase always set, your warnings are quite wecome. Thanks John Mellor. @sykora and Kyralessa, I think its worth putting a note on the accepted answer about when it is dangerous (always if autosetuprebase is set in your .gitconfig, which many folks do!). There's at least one comment up above from Rock Lee who followed the accepted answer and appears to have been burned.","2017-01-14 12:25:46","387837"
"39016176","11620938","0","It converts primitives into wrapper objects, not a good solution in most cases.","2014-08-01 09:58:31","531954"
"70495078","1274081","0","This is the easiest way to get rid of wrongly committed folders.","2017-01-14 08:01:29","72668"
"24889843","14260056","46","Amending _always_ creates a new commit with a new commit ID. The commit ID is the SHA hash of the contents of the commit, including the commit message and authored/committed timestamps. This is a feature of Git that, barring hash collisions, ensures that two commits with the same ID are exactly the same commit, with exactly the same content, history and so on.","2013-06-19 09:30:11","833844"
"54337330","30733500","21","Yes, please add `git merge` - it should clearly show that `merge` called separately is NOT the same as calling `pull` because `pull` is merging from remote only and ignores your local commits in your local branch which is tracking the remote branch being pulled from.","2015-10-21 07:57:33","217823"
"117457096","2003515","0","Is it necessary to push changes after deleting a remote branch?","2021-03-02 01:06:12","8465465"
"24912728","179147","3","@guillegr123, no, the proper terminology is, or at least used to be, the ""tip"" of the branch.","2013-06-19 07:55:54","14113"
"24914362","952914","36","There's an in-depth discussion of this here: http://rightfootin.blogspot.com/2006/09/more-on-python-flatten.html, discussing several methods of flattening arbitrarily nested lists of lists. An interesting read!","2009-06-04 08:41:13","21886"
"24917322","5305908","8","@jbo5112 Yes, the ""special code"" you refer to is the ""installer"" I mentioned.  Your webapp installation already has to handle creating a database, local config, pulling dependencies or 100 other operations, but a couple empty directories are beyond it?  Try gradle, passenger, chef, a primitive Makefile, etc.  There is no security difference between creating directories and the other  (potentially far more complicated/dangerous) work of installing an app.  And if you really have no deps, config, DB, etc., and no installer, then just use the README. No case requires you to do both.","2013-06-19 10:46:08","1586025"
"24917499","5305908","0","Your FAQ citation says it is the design.  It describes the current state of the code (w/o the feature).  It also says of all the many git contributors, none of them care enough to change it.  I would say that also characterizes their ""intent"" more than any feature wishlist.  You may contemplate the people who wrote the best version control in the world, the one we freely enjoy: are they *crazy*? *mean*? *incompetent*? or do they maybe just understand this differently?","2013-06-19 10:57:37","1586025"
"39029279","38578","0","A join doesn't give you the union or intersection of anything.  It gives you a closure in a lattice.","2014-08-01 04:09:15","738762"
"39029341","7734259","1","Yes I understand that. I only wanted to implicitly suggest that your indicate that on your answer like ""You can use `git-gui`...."" :)","2014-08-01 04:11:05","1242842"
"54364677","30479554","9","IE 11 supports `let`, but it alerts ""6"" for all the buttons. Do you have any source saying how `let` is supposed to behave?","2015-10-22 01:29:07","6160"
"54364823","30479554","10","Looks like your answer is the correct behavior: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let","2015-10-22 01:32:39","6160"
"101138714","67716","2","@aderchox Nowadays, I think none.","2019-08-02 10:05:31","1277510"
"54366904","22345808","14","@FagnerBrack: The specific example you provided is correct, but generally your way of thinking is wrong. An example: let's say you have package `A` in 3 versions: `0.0.1`, `0.0.2` and `0.0.3`. There is a bug in `0.0.1` so you want to have at least `0.0.2` in your package `B`. If you write `0.0.x` you'll get `0.0.3`, which is OK. But if some other package `C` requires both `B` and `A` and additionally has constrain `""A"": ""<0.0.2""` you'll get `0.0.1` without showing any conflict issue, which is not what you want. Using tilde `~0.0.2` should help you avoid this issue.","2015-10-22 02:22:43","1697320"
"54370458","22654961","5","@Godsmith My guess is people prefer three simple commands to two slightly more obscure commands.  Also, top voted answers get more upvotes by nature of being displayed first.","2015-10-22 03:43:45","1301965"
"101143792","1144783","13","When replacing all occurrences of `aba` in `ababa` with `ca`, which result do you expect? `caba`? `abca`? `cca`?","2019-08-02 12:58:23","17945"
"54371973","23796058","1","This does not squash previous commits!","2015-10-22 04:26:13","6998684"
"54378232","22345808","1","@MaciejSz I'm sorry but I didn't understand. Are you saying that the behavior for `0.0.x` is different than the behavior of `~0.0.0` or that the behavior of `0.x.0` is different than the behavior of `^0.0.0`? Or are you arguing that the `0.x.0`/`^0.0.0` pattern is better than `0.0.x`/`~0.0.0` in the context you provided?","2015-10-22 07:30:21","1400037"
"54384030","11444416","2","**Note:** As @EricB said, you can use `let a = 1; { let a = 2; console.log(a === 2) } console.log(a === 1)` in the place of `let a = 1; let (a = 2) { console.log(a === 2) } console.log(a === 1)`. It does exactly the same.","2015-10-22 10:32:20","3210837"
"54384177","25355080","3","Actually, you don't need `let value = i;`. The `for` statement creates a lexical block.","2015-10-22 10:38:54","3210837"
"54384675","671258","1","So a service stops being restful if someone codes a client which hardcodes a URL in it?  That seems to be a rather silly way to look at it.","2015-10-22 11:05:05","347348"
"101157094","1473742","3","this answer has so many upvotes but the question asks about objects in arrays, which this does not work with.","2019-08-02 09:30:29","2966499"
"24945480","5305908","1","@JoeAtzberger The way it appears to me is that it is a missing feature that isn't important enough for the maintainers to fix, because it would require a lot of redesign.  Remember, git was built and deployed by Linus Torvalds in 2 weeks because he was frustrated with existing versioning.  If it were a feature they intend to leave out, then the FAQ would probably say it's intentionally not allowed or ""Permanently the design of the Git index,"" instead of having discussions on the mailing list about how to implement the feature that is not ""Currently the design.""","2013-06-20 05:07:14","861178"
"24946171","5305908","0","My web-app case is that multiple short-term developers are pulling/cloning the code and hitting the same database (not ideal, but I have reasons). It has no installer; no managing of deps, config, etc.; no README. It has to stabilize and produce more installs first. Occasionally the code is pushed into production.  On a separate project, I have server code that creates a lengthy directory structure (no files) with some complicated permissions for new customer accounts. This would be much easier to maintain by managing a template copy instead of code. Chef is overkill, and nothing else helps.","2013-06-20 05:30:56","861178"
"24953845","16919498","2","How did you determined that saving a selector in variable is really faster?","2013-06-20 09:32:30","1455661"
"24962666","16919498","4","Hi @Ilia Rostovtsev  http://jsperf.com/caching-jquery-selectors
There you can run the test. Anyways it's nice to have it cached so it can be accessed faster","2013-06-21 06:56:50","1559329"
"39062233","24618928","7","Your regexp would remove things like `/*hey*/` even from inside strings.","2014-08-03 06:09:04","320726"
"39064577","2389407","4","You commenters, @Inger and @Konstantin, why? You came here after my answer was created, and it is more correct. Just going up the HEAD one step is often wrong, and you'd have to actually count how far up you need to go. Git already sets `ORIG_HEAD` for you, why not use it?","2014-08-03 09:55:34","179978"
"86127822","5201642","4","I think better than those saying to force push is to just make a new feature branch.  So something like ```git checkout -b feature-name-squashed```, follow these directions, then push the new squashed version of the branch.  If you do this, you will have access to the full commit logs of the feature (on feature-name) if you ever need them.","2018-03-29 03:34:06","6753312"
"70582468","59839","12","Instead of testing for both the directory (`-d`) and the symlink (`-L`), it's easier just to append a slash to the variable, like `if [ -d ""${THING:+$THING/}"" ]`. A directory won't mind the extra slash. A file will evaluate to false. Empty will remain empty, so false. And a symlink will be resolved to its destination. Of course, it depends on your goal. If you want to *go* there, this is fine. If you want to *delete it*, then the code in this answer is better.","2017-01-17 09:21:36","1072112"
"70591113","2798934","2","Good answer, but please add more detail, I mean some people may don't know anything about the reset and lose their files...","2017-01-17 12:54:17","3176270"
"86144480","40878","4","Hashtable is obsolete and we are using HashMap for non thread safe environment.

If you need thread safety then you can use Collections.synchronizedMap()  or use ConcurrentHashMap which is more efficient that hashtable.","2018-03-30 03:45:20","1187233"
"86144921","39789894","2","The tilde matches the most recent patch version (the last number).
The caret matches the most most recent minor version (the middle number).","2018-03-30 04:25:24","2073920"
"86148547","48435485","3","How is it more performant? At the very least you have to construct the set, which is _O(n)_ (you have to iterate over the array). Just doing linear search (like `indexOf` does) is also _O(n)_, but only in the worst case. The average case complexity is more like _n/2_, since if the array includes the element, you'll likely stop somewhere in the middle. Therefore, this method is, on average, slower than `Array#includes` and `Array#indexOf`.","2018-03-30 07:43:13","1523774"
"25000765","3407920","61","In my case, I confirm that --theirs = remote repository, --ours = my own local repository. It is the opposite of @mmell comments.","2013-06-22 12:59:08","764788"
"101216754","237176","0","This answer needs to be downvoted or deleted as it is the worst solution to this date (at the time it was good enough).","2019-08-05 07:50:39","2429812"
"101217519","56145630","0","You can get the value by using `map` combined with `get` or any of the other methods for getting the value in the Optional, instead of `ifPresent`.","2019-08-05 08:24:16","1503554"
"39113485","22654961","1","The local push is grin-inducing, but on reflection, how is it different to `git branch -f` here?","2014-08-05 12:15:40","1290731"
"117479456","65025339","1","long on personal opinion, short on facts, supporting evidence and explanation. Does not add to or improve on older answers.","2021-03-03 08:02:31","26972"
"39119967","7216269","3","For reference, https://git.wiki.kernel.org/index.php/Git_FAQ#How_do_I_clone_a_repository_with_all_remotely_tracked_branches.3F","2014-08-05 07:16:46","127971"
"70631379","28750315","0","This actually doesn't explain anything in regards to potential by ref/by val property of Java.","2017-01-18 11:38:31","3380611"
"101242709","23648583","0","Way to go, I had a corrupt .pck file in the branch and the rest of options didn't work, thanks!!","2019-08-06 03:10:59","6122208"
"117483200","65025339","0","@Spike0xff Exactly which statements require evidence? I can insert them into the post, but I am not sure. For example, anybody knowing how docker works, and what is paravirtualization, had imho difficulty to deny that docker is a paravirtualization engine. Today I would add to, that docker is good in configurability and devops things (for example, you can have a Dockerfile or compose.yml in your git tree).","2021-03-03 10:22:48","1783163"
"117483375","65025339","0","@Spike0xff Btw, sometimes also I go trough an answer list and vote down nearly everything. I do this if I feel a bad-answer bongo. And now you did the same! I think I am right, so I can live with your down, but I am open for communication/edit suggestions.","2021-03-03 10:29:16","1783163"
"86193498","522578","93","As Aaron points out below, use start=1 if you want to get 1-5 instead of 0-4.","2018-03-31 10:16:51","230615"
"54479471","32893650","2","I've given you a +1, but your actual methods, when optimise+ is on, are identically `return ""Hello World!"";`. To actually ensure the types are ""considered"" you can use `return (string)(object)typeof(string).Name;` and `return (System.String)(System.Object)typeof(System.String).Name;`, which happens to confirm `System.Object` is identical to `object` too :-)","2015-10-26 09:03:43","256431"
"70639154","136225","0","Also if you were to replace an `a` with a `span`, you'll need to remember to make it focusable via keyboard.","2017-01-18 02:42:33","3320365"
"70639294","229157","0","Better to add a `js` class to the body, and Let CSS handle the CSS. `body.js a{cursor: pointer;}`","2017-01-18 02:45:30","3320365"
"39130413","394887","8","@volcano Do you have source for me?","2014-08-05 12:30:33","1073222"
"54486689","22345808","7","@FagnerBrack: I'm saying that when using tilde you can define minimum version number (at the least significant version number). With the `0.0.x` notation you don't have that option because **any** least significant version number will be valid.","2015-10-26 12:22:08","1697320"
"39143149","24618928","0","Good catch! So just change some stuff on regex.","2014-08-05 06:10:24","1822704"
"54496804","22345808","1","@MaciejSz Now I understand, specifying a minimum version instead of the latest ""x"" is indeed a valid use case. Very good point. Although I would recommend using neither the ""x"" or ""~"" notation to ensure consistency between multiple developers.","2015-10-26 04:26:06","1400037"
"86213826","44201563","0","I dunno about O.G. `vi` (the visual mode for ex), but in vim, the modes are `normal`, `insert`, `Ex`, `command`, and `visual`. Normal is the default mode where pressing `:q` will exit vim. Ex mode emulates ex and is accessed via `Q`. Command mode is accessed via `:` from normal and visual mode, and visual/visual-line/visual-block mode is a neat mode lets you highlight text and perform special operations (Try Ctrl-v and go down until you have the right-most column selected for a whole block, then press `A` to go into insert mode and type. The text will be appended on every line you selected)","2018-04-01 10:38:18","1175714"
"54498158","25534469","2","I like this answer the best. It simple and goes straight to point. Now that one has a basic understand of WHAT LXC and Virtualizers can do, the details from other reading will make sense.","2015-10-26 04:58:51","178550"
"54499347","932982","2","Typically, the point of a directory is to contain files. If you want to add an empty directory to a repository, it will probably eventually contain files, at least in one of the repositories or releases out there. But you probably don't want those files to be part of the repository, otherwise it would likely already contain one or more of those files or you could just wait until you add them. So for the primary case where you actually want an ""empty"" directory in the repository, this solution is perfect.","2015-10-26 05:27:10","172274"
"54504575","487278","1","@Moberg Big Theta isn't exactly average, either. While Big O defines the upper bound, Big Theta defines both the upper and the lower bounds. A function f(n) is BigTheta(g(n)) if f(n) can be bounded *on both sides (upper and lower)* by constant multiples of g(n)","2015-10-26 07:55:30","2434726"
"54511646","2251026","9","The following is incorrect: ""[o]n windows (win xp), the parent process will not finish until the longtask.py has finished its work"". The parent will exit normally, but the console window (conhost.exe instance) only closes when the last attached process exits, and the child may have inherited the parent's console. Setting `DETACHED_PROCESS` in `creationflags` avoids this by preventing the child from inheriting or creating a console. If you instead want a new console, use `CREATE_NEW_CONSOLE` (0x00000010).","2015-10-27 12:27:30","205580"
"117493367","11227902","4","I hope this question is simple, but I'm confused. The prediction is that made during runtime or already when compiling?","2021-03-03 04:21:19","10220019"
"25087358","245213","0","That's exactly the reason why it was dropped: comments used as metadata would break interoperability. You should just store your meta-data as JSON too.","2013-06-25 02:50:28","1121352"
"86250602","36924148","5","Quick note that this is unreversable, and if you have files in `.gitignore` you will lose them. So consider backing up your project before this.","2018-04-03 03:47:00","4028977"
"54536808","901712","20","why not `$('#isAgeSelected').checked`","2015-10-27 02:52:34","1985648"
"54543759","2251026","3","I didn't mean that executing as a detached process is incorrect. That said, you may need to set the standard handles to files, pipes, or `os.devnull` because some console programs exit with an error otherwise. Create a new console when you want the child process to interact with the user concurrently with the parent process. It would be confusing to try to do both in a single window.","2015-10-27 05:37:15","205580"
"101318171","8888015","0","worked for me when source branch contained updates like file renames from ""general"" to ""General"". On Windows it doesn't matter what the case is, so this approach unblocked me.","2019-08-08 07:20:58","550471"
"39200567","1628584","17","If you want to push master branch then (or original branch your rolled back) use `git push --force origin master`. In case you don't type force git will reject push and will ask you to pull rolled back commits form remote.","2014-08-07 07:30:06","2484806"
"86267443","6581949","0","If a metaclass is an object, does that object not also have a metaclass?","2018-04-03 12:40:38","180275"
"70725310","34998848","3","@recurf - It's not my project. You could try using their issue tracker.","2017-01-20 03:22:44","3664835"
"86287274","41777052","7","I see 7 lines in this answer","2018-04-03 10:07:20","5610569"
"39224298","24957191","1","I would assume someone took exception because the above is no longer JSON, or is invalid JSON. Perhaps adding a short disclaimer would appease.","2014-08-07 06:12:46","23987"
"39224752","22537629","27","I admire your gumption, but you're kinda re-inventing YAML. If you want lot's of flexibility and human readability, use YAML (don't actually: http://stackoverflow.com/questions/450399/which-java-yaml-library-should-i-use/1863814#comment6582202_1863814) or stick with curmudgeony, yet unambiguous JSON.","2014-08-07 06:25:56","23987"
"39225723","24545329","0","Might as well minify that JSON while you're at it. See @kyle-simpson's answer about JSON.minify.","2014-08-07 06:54:29","23987"
"39225830","24618928","1","Regular expressions for structured languages are notoriously hard to get right. Check out @kyle-simpson's answer about JSON.minify as an alternative to ad hoc regexps.","2014-08-07 06:57:20","23987"
"39225908","21409180","8","Doing this is an invitation for creating JSON that blows up on you at some random point in the future.","2014-08-07 07:00:07","23987"
"39226143","20434146","0","What @kyle-simpson said. Also, he's too modest to direct readers to his own answer about using JSON.minify as an alternative to ad hoc regexps. Do that, not this.","2014-08-07 07:06:53","23987"
"39226257","6440396","5","YAML interop is a lie: http://stackoverflow.com/questions/450399/which-java-yaml-library-should-i-use/1863814#comment6582202_1863814 . If your instinct is to use JSON for configuration files, follow it.","2014-08-07 07:10:08","23987"
"39226391","17300561","5","Crockford later went on to write: ""Suppose you are using JSON to keep configuration files, which you would like to annotate. Go ahead and insert all the comments you like. Then pipe it through JSMin before handing it to your JSON parser."" See @kyle-simpson's answer about JSON.minify for more info.","2014-08-07 07:14:21","23987"
"39226598","13812297","0","No need to fragment JSON. JSON with comments is no longer JSON. But it's perfectly acceptable to annotate your JSON with comments, so long as you make sure to strip them out before parsing or transmitting it. It should never be the receiver's responsibility to do this.","2014-08-07 07:19:52","23987"
"39226746","10976934","1","Crockford later went on to write: ""Suppose you are using JSON to keep configuration files, which you would like to annotate. Go ahead and insert all the comments you like. Then pipe it through JSMin before handing it to your JSON parser."" See @kyle-simpson's answer about JSON.minify for more info.","2014-08-07 07:24:14","23987"
"39226831","4183018","83","If you'd like to annotate your JSON with comments (thus making it invalid JSON), then minify it before parsing or transmitting. Crockford himself acknowledged this in 2012 in the context of configuration files.","2014-08-07 07:26:35","23987"
"39227004","4729509","4","No. Not this. JSON doesn't have comments. If you choose to annotate your JSON with comments, minify it before parsing or transmitting. This shouldn't be the receiver's responsibility.","2014-08-07 07:31:33","23987"
"39227064","2611372","1","What @kyle-simpson said. Also, he's too modest to direct readers to his own answer about using JSON.minify as an alternative to ad hoc regexps. Do that, not this.","2014-08-07 07:32:52","23987"
"39229826","9845966","0","@CodyGuldner Right, Cody. I provided a relevant quote from the link to give more context.","2014-08-07 09:05:08","396216"
"39233015","4729509","2","I didn't say that JSON has comments. Neither did I mean to imply that it's appropriate to include them in your JSON, especially in a production system. I said that the *Dojo toolkit* permits you to add them, which is (or at least, was) factually true. There are very helpful use-cases out there for doing so in your testing phase.","2014-08-07 11:37:25","83852"
"54584031","11828573","3","The first statement (""Hit the Esc key; that goes into command mode."") is based on a common misunderstanding of Vi(m). The Esc (if needed) is the final part of the *current* command, and when you finish it this way you can type the next command.","2015-10-28 04:23:50","3324271"
"39233700","89238","14","popen [is deprecated](https://docs.python.org/2/library/os.html#os.popen) in favor of [subprocess](https://docs.python.org/2/library/subprocess.html).","2014-08-08 12:22:35","699159"
"117505012","34283281","0","the question was about recursive copies. Object.assign, as well as the given custom assign, do not copy recursively","2021-03-04 01:52:01","2656328"
"25145015","11551718","57","... or just paste it in your address bar.","2013-06-27 01:49:33","289317"
"54598418","246128","185","@tvlooy IMO your answer isn't exactly OK as-is either, because it fails when there is a space in the path. In contrast to a newline character, this isn't unlikely or even uncommon. `dirname ""$(readlink -f ""$0"")""` doesn't add complexity and is fair measure more robust for the minimal amount of trouble.","2015-10-28 11:38:56","335880"
"70751627","7589612","0","what if I have changes on one file from branch1 and deletion of that file in branch2. How can I solve that merge conflict? Is there any way using git where I can merge them by keeping the changes of one branch?","2017-01-21 02:48:16","5175709"
"70755002","215304","4","@MyDaftQuestions I concur. If anything it would make sense to *consistently use the .net types* because they are language ignorant and the type is obvious, independent of any language (do I know all of F#'s or VB's idiosyncrasies?).","2017-01-21 05:39:59","3150802"
"86316733","179147","1","For anyone else having trouble editing things using `rebase -i`, to change from `pick` to something else type `i` then hit enter to go into edit mode, then change `pick` to what ever else, then hit `Esc` and enter `:wq` to save and quit out of the editor. Finally, it will bring you to change the commit message, where you will again enter `i`, change comment, hit `Esc`, then type `:wq`","2018-04-04 02:45:37","3850012"
"86317122","16456126","0","Perhaps a better alternative would be to use a ternary operator to assert that `Date.now` actually exists (and is a function), before attempting to invoke it: `currentTime = typeof Date.now === ""function"" ? Date.now() : +new Date()`.","2018-04-04 02:54:39","3704301"
"86319563","244777","1","here is a nice trick
https://gist.github.com/MoOx/5271067","2018-04-04 03:48:26","2866298"
"54613925","246128","0","This solution doesn't work in a script called when running an application by clicking on an icon under Ubuntu, the script is mentioned in the Exec attribute. The same script works flawlessly in the terminal. I'm currently investigating. I don't want to set the Path attribute in the desktop file as it wouldn't be distro-agnostic.","2015-10-29 10:39:54","458157"
"86329824","10113231","1","@MarcelStör you don't need both but they also don't do the same thing. `git commit -a` only has that affect on files that are already tracked; `git add *` will add files that are not tracked. So if you do `git commit -a` it won't catch new files, then you might need to do a `git add` afterward, but it you do `git add *` you won't need `-a` on the commit.","2018-04-04 08:47:14","3905079"
"9209422","406230","94","Probably a couple years late, but what's wrong with: `([^h]*(h([^e]|$)|he([^d]|$)|hed([^e]|$)))*`? The idea is simple. Keep matching until you see the start of the unwanted string, then only match in the N-1 cases where the string is unfinished (where N is the length of the string). These N-1 cases are ""h followed by non-e"", ""he followed by non-d"", and ""hed followed by non-e"". If you managed to pass these N-1 cases, you successfully *didn't* match the unwanted string so you can start looking for `[^h]*` again","2011-09-29 03:44:32","436976"
"39266196","4729509","1","It's bad voodoo to serve up commented, and thus invalid JSON, which `dojo.xhrGet()` implicitly encourages by accepting.","2014-08-08 08:21:31","23987"
"39269492","15315403","1","If the stream contains UTF-8 character that spans across several lines, this algorithm can cut the character in two breaking the string.","2014-08-08 10:47:45","281508"
"117536501","38898933","0","Ha ha really good job, @JohannesFahrenkrug! It will be very helpful to coaches who are trying to teach async to beginners.","2021-03-05 02:41:30","14272274"
"101384463","30942174","0","tried, but didn't work for me: `sed: 1: ""s/.*/"": unterminated substitute in regular expression` in a filter-branch command on a repo with spaces.  (Seemed to work outside the filter-branch though).  I used `git ls-files -z --ignored --exclude-standard | xargs -0 git rm -r --cached` from [@JonBrave's](https://stackoverflow.com/users/489865/jonbrave) [answer](https://stackoverflow.com/a/34511442/423125) instead.","2019-08-12 02:50:46","423125"
"39275314","180085","0","Reword doesn't work for me on Windows (even in a MinGW console from SourceTree). Git always tries to open a file ""$@"". Very unfortunate that Git wasn't built with cross-platform in mind.","2014-08-09 07:47:43","245706"
"25181441","15762612","17","@Oli you can safely drop `type=""text/javascript""` and just do `<script>...</script>` at least according to HTML5.","2013-06-27 09:41:03","560745"
"86353749","2590013","7","@XP84 You can open any binary with a text editor in HEX form. And all the different characters (the 16 of them) are 100% printable. So, by that logic... *are all binaries text?* **Json is not text.** Json is *(warning: informal loose definition ahead)* a text representation of an object (or array of objects)","2018-04-05 11:55:44","4209853"
"117550353","44512","0","Handy solution when the default behaviour of the shorter and simpler solutions (replacement of values of common keys by the second dictionary) is not wished. For Python 3, iteritems() is not available anymore in dicts, and one can simply use items() instead.","2021-03-05 02:22:41","11394968"
"54637141","25534469","2","@Phil It did after I read the detailed answers above it first.","2015-10-29 08:27:14","28045"
"70792960","1109022","0","With devices increasing screen size and resolution, virtual keyboard hiding is becoming less important.","2017-01-23 09:15:13","998795"
"54643931","1876958","7","No, this *adds* a *deletion* of everything in your current directory. Very different to just unstaging changes.","2015-10-30 01:33:56","1709587"
"86361934","34451847","0","Note that this solution is the most inefficient based on my [benchmark results](https://stackoverflow.com/a/48775964/1129332)","2018-04-05 02:57:02","1129332"
"54645620","21726959","0","`javax` is, by definition, *not* ""core Java"".","2015-10-30 04:02:25","2100584"
"86365465","41555708","1","@mschuett is right,  the question is ""how to resolve conflicts in git"",   not ""how to resolve conflicts in github"". There is a difference and there is already far too many people that think git and github are the same thing, so anything that propagate that feeling is wrong.","2018-04-05 04:21:56","6368697"
"70803118","13459923","1","Regexp is overkill for this, prefer the simpler :
str.charAt(0).toUpperCase() + str.slice(1)","2017-01-23 01:36:38","976686"
"117564231","12184274","0","One of my favorite answers on SO that I come back to. As with what some commenters mentioned above, everything has a time and place. My best use case for this is that I have just pushed a working version to the remote and now I started working on something which should not see the light of day and I just want to get back to the previous version and do not mind all the changes being (files/directories) being deleted.","2021-03-06 03:35:29","1619193"
"101419632","4089452","0","I removed the phrase ""referential integrity"" as it is misleading in the context of git. Searching the git docs for the phrase reveals no hits https://git-scm.com/search/results?search=referential%20integrity  The first command works when you are offline and the second works only if you are online.","2019-08-13 08:19:17","411902"
"117584781","51741812","0","Method #2 is vulnerable to prototype pollution, similar to what happened to lodash's `defaultsDeep`. It should not copy if `(i === '__proto__')`, and it should not copy if `(i === 'constuctor' && typeof obj[i] === 'function')`.","2021-03-07 08:46:26","1577058"
"117584815","53151804","0","This is vulnerable to global Object pollution. It should not copy `prop` if `(prop === 'constuctor' && typeof src[prop] === 'function')` or if `(prop === '__proto__')`","2021-03-07 08:49:43","1577058"
"25222435","13394598","3","This answer doesn't address the OP's question, as they're purely interested in fixing a commit they've only just done.  I regularly use `git commit --amend` to fix up comments or add files I forgot to `git add`, but only *ever* before I've `git push`ed.  I also use `git filter-branch` when I want to totally mess with the version history, but the OP doesn't want this, so this answer needs a big health warning - don't try this at home, peeps!!","2013-06-29 03:17:38","232452"
"25222520","15669052","2","In a word, NOPE!  There is no GOOD way to retract something you have pushed.  All retractions are BAD to a greater or lesser degree.  You need to adopt the discipline of working in a branch in your own private repository, doing multiple commits as you add a bit, test a bit, tweak a bit.  Then merge your entire branch into a single commit, write a new commit message describing the overall change, PROOFREAD it, and push.","2013-06-29 03:29:44","232452"
"117595391","2860927","3","I know it looks way cool, but I fear it's deceptive. The reason you're writing C++ instead of Machine Language is b/c you want to convey your intent to the next guy reading your code. This construct violates the principle of least surprise. It is a mental ""trip hazard.""","2021-03-07 07:43:19","1839838"
"54680979","7542639","1","This answer was reasonable at the time it was posted, but is now obsolete; `git reset somefile` and `git reset` both work prior to making the first commit, now. This has been the case since several Git releases back.","2015-10-30 11:38:32","1709587"
"54681031","1026792","1","-1; no, this doesn't un-stage the file, it stages a deletion of the file (without actually deleting it from your work tree).","2015-10-30 11:42:05","1709587"
"54681067","21171527","8","+1. An extraordinary number of highly-upvoted answers and comments on this page are just flat-out wrong about the behaviour of `git rm --cached somefile`. I hope this answer makes its way up the page to a prominent position where it can protect newbies from being misled by all the false claims.","2015-10-30 11:44:32","1709587"
"54681193","33281737","0","*""I'm surprised that no one mention interactive mode""* - they did: http://stackoverflow.com/a/10209776/1709587","2015-10-30 11:52:13","1709587"
"70827106","23853061","22","wouldnt it be better, with a simply update or sync button!","2017-01-24 03:32:45","6085193"
"101439414","80113","0","@SinaMadani hahaha same here.","2019-08-13 07:18:03","1794803"
"54690348","10999165","8","If your local branch is not merge with master and ran `'git branch -d your_branch` then you will error like `error: The branch 'your_branch' is not fully merged.
If you are sure you want to delete it, run 'git branch -D your_branch'.`","2015-10-31 12:59:14","3764801"
"117601335","66332305","7","Alternatively `window.URL.createObjectURL(new Blob([])).split('/').pop()` will do the same without having to rely on external factors like URL length.","2021-03-08 03:57:17","3315133"
"54692146","9180445","3","I was not able to use the cherry-pick range, got ""error: could not apply c682e4b..."" on one of the commits, but when used cherry-pick on each commit one at a time, it worked fine (I had to do git cherry-pick --abort after the error). Commenting because I thought those would be equivalent. This is on git version 2.3.8 (Apple Git-58)","2015-10-31 02:33:32","250311"
"117605680","419185","0","For those who are wondering about an infinite loop, see [this](https://stackoverflow.com/q/3558842/6361923)","2021-03-08 08:50:07","6361923"
"117608702","122704","1","If you experience problems like in first comment, https://github.com/davidmarkclements/rfdc also will make ""shallow copy"", you'll need to enable option `proto: true`,","2021-03-08 10:48:33","8537739"
"86409656","19095988","0","No! This makes a mess.  Use Konstantin's answer below.","2018-04-06 05:39:53","861826"
"54698482","7542639","0","@MarkAmery, you may be right (it'd be cool if you posted a source for your assertion), but there's still value in starting your repo with a clean commit or two.","2015-10-31 08:01:14","5486"
"86418889","48981290","0","All these have already been converted either in the answers or the comments. I would vote this up if you gave unique code examples for each one though.","2018-04-07 12:24:58","5601591"
"25263554","17109182","0","http://stackoverflow.com/questions/1386275/why-is-java-vector-class-considered-obsolete-or-deprecated","2013-07-01 07:45:34","939063"
"25263670","2432799","36","If you have a different shell user then maybe you want to specify your git user in the beginning of the new url e.g.: `myself@git://new.url.here`","2013-07-01 07:49:29","473390"
"101468843","25663173","0","so one line to do both: ``git push --delete origin TAGNAME && git tag -d TAGNAME``","2019-08-14 05:49:02","1887370"
"86427821","20394520","3","... `or z`. Otherwise it returns `None`.","2018-04-07 12:20:52","260122"
"70872132","41555708","0","this is not asking about github thus I down voted what I view to be a very poor answer.","2017-01-25 05:06:51","2049333"
"117648210","419185","0","@V.ben Indeed. If you're curious, the way Python enforces single-loading of modules is to memoize the module objects in `sys.modules`. Near the start of importing, it checks if the module is registered there; if so, it stops. If not, it creates a blank module object and injects it into `sys.modules`, immediately. After that, it starts executing the module's code as discussed in this post.","2021-03-09 04:33:00","25050"
"117653972","12184274","0","This answer was a key part of my answer to [Why git can't do hard/soft resets by path? / How to do git `--hard`/`--soft` resets by path](https://stackoverflow.com/a/66539777/4561887).","2021-03-09 08:21:18","4561887"
"101503266","50113060","0","OP did not specific the commit messages had to be preserved. No code is lost.","2019-08-16 12:54:40","3399043"
"70900040","1482133","0","In OSX, you can use `realpath` or `grealpath`, which will give you the resolved path from the root of the file system. Example:
   `cd /usr/bin; realpath ls`
    `/usr/bin/ls`","2017-01-25 05:41:12","1464556"
"70900254","38978877","2","Thanks.  I left out the `-x` and just used `git clean -ffd` to avoid erasing files in the .gitignore.","2017-01-25 05:46:47","110186"
"86469415","1984225","0","@netjeff This quote from the [URI clarification contempory section](https://www.w3.org/TR/uri-clarification/#contemporary): *""An http URI is a URL""*, probably covers about 99% of what people use","2018-04-09 07:44:12","327074"
"25329164","6620071","32","An excellent mathematical answer, but the OP asked for a plain English answer. This level of mathematical description isn't required to understand the answer, though for people particularly mathematically minded it may be a lot simpler to understand than ""plain English"". However the OP asked for the latter.","2013-07-02 10:19:52","58063"
"117675227","11227902","7","@C.Binair Primarily it's runtime, i.e. processor predicts branches while executing the code. The processor also remembers previous results and use that to predict next jump. However, compiler can provide some initial hints for branch prediction while compiling - search for ""likely"" and ""unlikely"" attributes. So you could say the answer is kinda both, but runtime is when it actually happens.","2021-03-10 02:47:44","8132066"
"101531660","55291427","3","I had also to do one addtional thing: `git push --set-upstream origin new_branchname` which is mentioned in @Nomade answer","2019-08-17 03:33:12","4365678"
"70930676","41874554","1","YES - there is no JOIN on purpose and NO - this can't be applied on table variables.","2017-01-26 01:30:28","5243515"
"39305528","15702135","3","The difference is `git reset HEAD <file>` is temporary - the command will be applied to the next commit only, but `git rm --cached <file>` will unstage untill it gets added again with `git add <file>`. Also, `git rm --cached <file>` means if you push that branch to the remote, anyone pulling the branch will get the file ACTUALLY deleted from their folder.","2014-08-10 07:54:43","1958998"
"117706491","477578","1","@TempO'rary this answer was originally written in 2009, and CSRF wasn't as widespread or as well understood at the time; CORS didn't arrive in browsers until ~2013 (and CSRF was added to the OP's question in 2016); truth is I didn't include it because it felt a bit exotic. But you're right, it should have been added since then.","2021-03-11 03:02:57","57068"
"117708975","56897588","0","After this, how can I fix the wrong commit to exclude wrong files?","2021-03-11 04:23:35","10364693"
"117709158","59620663","0","Yes, in the case we need to just fix the commit, we shoud not use ``--hard`, but leave it with the default ``--soft` so we can remove and add stuff before the ``git push -f`","2021-03-11 04:29:35","10364693"
"117709203","63730650","0","What if we wanted to revert a single file?","2021-03-11 04:31:16","10364693"
"117709225","61171280","0","@FXQuantTrader when you `git rebase -i` you have to force-push too, don't you? Unless you're not using `--force-with-lease` I don't think there's any harm in that solution.","2021-03-11 04:32:11","2882757"
"117709390","64954810","0","What's the difference between using ``git rm file` and ``git checkout file`?","2021-03-11 04:37:26","10364693"
"117709431","65533975","0","Notice the ``--hard option` will discard all changes not allowing us to discard only some files","2021-03-11 04:38:56","10364693"
"86513462","630453","0","Real world scenario in elastic documentation: https://www.elastic.co/guide/en/elasticsearch/reference/current/_modifying_your_data.html. Have a look at difference between all PUT requests and last POST request example.","2018-04-10 09:02:12","5294016"
"117714623","12184274","0","Update: `git clean -df` and `git checkout-index -fa` is much better. I think `git checkout-index -fa` produces a more-desirable result than `git checkout -- .`. I've added these commands, with thorough explanations, to my answer here: [Using git, how do you reset the working tree (local file system state) to the state of the index (“staged” files)?](https://stackoverflow.com/a/66589020/4561887).","2021-03-11 07:57:43","4561887"
"117717952","61754517","0","Why are you replacing spaces in the filename? You could now be checking whether a different file exists than the one being asked about. Why are you calling str() on it? If it's not already a string defining the file there's probably something very wrong with how the function is being called.","2021-03-11 10:21:12","4074984"
"117719145","27114400","4","The example for 11. is unclear, it's not clear what the difference in strict mode is.","2021-03-11 11:36:29","257182"
"117724543","4754797","0","This script breaks the subbranch names. If I have multiple branchs starting with `feature/blabla1` , `feature/blabla2` it only gets the `blabla1` and `blabla2` so you can not see the parent name.","2021-03-12 06:55:51","5182362"
"25380579","1628584","8","yes you did, most likely people accidentally committed to the wrong branch, they want to HARD remove those commits after putting them on another branch, the other branch will most likely eventually be merged in to the accidentally committed one, after review & testing","2013-07-04 09:23:36","414062"
"117728227","522578","2","@MikeHordecki This is just a ## Brilliant Answer! Thanks for this!  Question is 12+years old and this answer is working flawlessly.","2021-03-12 09:39:53","14346786"
"70953500","14586751","0","The `git reset --hard ORIG_HEAD` command worked perfectly for me – it may have been helped by the fact that I didn't make any other changes to the repository after the local `git merge` I was trying to undo. The command simply reset the state of the repository back to how it was before the merge. Thanks for the great tip!","2017-01-27 01:00:03","1914455"
"25385669","671134","3","@HankGay I think the reason it's not more esoteric is that most web service developers see REST as a wonderful simplification over alternatives like SOAP.  They don't necessarily stick to getting all the REST technicalities correct - and that probably drives the REST fanatics mad - but in most cases they probably don't need to worry about things like making sure their results are ""hypermedia-enabled"".","2013-07-04 11:56:12","717274"
"117730103","63587267","0","`Uncaught TypeError: str.replaceAll is not a function"",`","2021-03-12 10:53:46","5892720"
"117732228","44231561","0","*Both ways, we do the same thing and achieve the same goals.* Not really: both loops iterate 5 times, but the final value of `a` after the loop completes is `-1` in the first case and `0` in the second.","2021-03-12 12:20:33","4593267"
"117732557","506004","1","If you display a page *only* to make a redirect, `location.replace()` will probably be more appropriate (exclude the page with a redirect from history). But why don't you do the redirect on the server side in the first place?","2021-03-12 12:35:23","52499"
"86528077","4682612","7","It's not the first time when an answer that is simply **wrong** because it doesn't answer the question gets hundreds of upvotes from people who either didn't understood questions and/or answer, or landed by google for searching something other as the original OPs problem and such 'answer' have accidentally answered their problem. Unfortunately there's no valid flag for answer that do not answer the question, the only way is downvoting, which obviously doesn't work in some cases, so such noise is about to stay forever :(","2018-04-10 02:43:08","5479362"
"117737067","49388237","0","I was trying to do other solutions, but for w/e reason they weren't working. This one did.","2021-03-12 03:11:05","2307240"
"117740456","1985476","6","`while (x --> 0)` is **not** the same as `while (x--)` if `x` has a signed type, the first loop does not execute at all if `x` has a negative value but the second iterates many times until it hits undefined behavior when `x` reaches `INT_MIN`.","2021-03-12 05:14:21","4593267"
"117740645","46692810","0","Only solution that worked for me! Had to deep clone an object that contained other objects with function properties. Perfect.","2021-03-12 05:22:09","11283223"
"117750234","63587267","0","only the modern browser support it, if you are not using modern browsers then use `regex`","2021-03-13 03:28:17","8798220"
"70974693","16957078","1","Your Answer doesn't work for large number of files, tested in AIX for more than 15k files didn't work. 
Error - 

""/usr/bin/grep: 0403-027 The parameter list is too long.""","2017-01-27 02:30:08","6404949"
"70978697","16487716","0","There is nothing in the question that would remotely suggest to which charset to convert to or that the solution should be immune to any charset.","2017-01-27 04:06:06","2370932"
"117758460","73021","0","Minor clarification question on the above example, so when creating new Dog at BBB at address 72, does this imply upon return the created Dog at 72 and it’s value is lost and reverts back to 42?","2021-03-13 02:40:27","214665"
"117759754","61754517","0","Thanks for your feedback I have updated my answer.","2021-03-13 03:54:41","6487422"
"101601139","4682612","1","If you want to pull all local branches, grab [hub](https://github.com/github/hub), then run `hub sync`","2019-08-20 09:12:39","1998086"
"25419160","7328339","6","To add further confusion: I'm just debugging a similar case on Samsung Galaxy Beam (Android 2.3) with default browser, and the `iframe` seems to fire `load` event for `application/javascript`, `application/x-javascript`, `text/javascript`, `text/plain`, but **NOT** firing it for `application/json` nor `text/html`. As of today, Android <=2.3 is About 50% of the Android market share.","2013-07-05 12:41:45","245966"
"70991701","100091","8","Isn't the use of meta classes adding new properties and methods to a **class** and not an instance? As far as i understood it the meta class alters the class itself and as a result the instances can be constructed differently by the altered class. Could be a bit misleading to people who try to get the nature of a meta class. Having useful methods on instances can be achieved by normal inherence. The reference to Django code as an example is good, though.","2017-01-27 11:24:42","5005177"
"101605908","50113060","1","I don't event think the stashing is necessary. I just did it without and worked well.","2019-08-20 11:40:07","7091922"
"9414953","2389361","3","If you need to preserve the history, in other words there is a change that anyone has ever pulled from you or you have pushed it somewhere use the solution in Yuri Ushakov answer down below!","2011-10-12 08:06:43","317273"
"101614671","55581410","7","Don't forget `text/plain`","2019-08-20 03:44:20","712526"
"71004804","15755041","0","git fetch, delete remote and then clean up locals, worked beautifully!","2017-01-28 04:02:43","4503431"
"101620490","53461165","0","One difference from top answer is that this does not match anything, and that matches the whole line if without ""hede""","2019-08-20 07:33:04","3645375"
"117788760","66264083","2","You deserve an award. Nice answer. This worked for me and I think is pretty normal. I went and did a git pull after on my local repo and updated.  Your instructions are good. To someone new, you will have to play with the dropdown lists on the compare screen first to get the arrow to go the correct direction. This gives you the http://github.com/myside...theirside correct link in the address bar.","2021-03-15 04:24:03","714557"
"9427455","2389423","30","@JohnBachir is right. In the `git log` output, you want to look at the two parent commits. One is the latest commit in your branch, one is the latest commit in the branch you merged into. You want to `git reset --hard` to the parent commit on the branch you merged into.","2011-10-12 08:21:20","63041"
"25439821","273227","8","`os.mkdirs()` can create unintended folders if a path separator is accidentally left out, the current folder is not as expected, a path element contains the path separator. If you use `os.mkdir()` these bugs will raise an exception, alerting you to their existence.","2013-07-06 06:41:48","420867"
"101627173","927386","3","I've googled & hit this page about 50 times, and I always chuckle at the first line of code `git commit -m ""Something terribly misguided""`","2019-08-21 04:25:55","5163194"
"117793443","29335281","0","This answer is a bit misguided, or, at least, not very precise… “objects”? Do you mean “types”? `==` _does_ care if the types are the same; it delegates to strict equality comparison if they are. Two objects are compared by reference, but that’s the case for both operators. _“if conversion is not possible”_ — I guess… but coercion is usually possible, and that’s not sufficient to cause one or the other result of the comparison, e.g. `""undefined"" != undefined`, even though coercion would be possible.","2021-03-15 09:20:17","4642212"
"117793540","16253116","0","_“`== null` is an efficient way to check for ‘is `null` or `undefined`’”_ … [or `document.all`](https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec).","2021-03-15 09:24:07","4642212"
"101631371","7734259","0","Thanks. Didn't want to risk it so had to use GUI.","2019-08-21 07:48:59","5911938"
"25449894","12231177","4","@DavidHogue This is only true when using the filter-branch method. The commit IDs following a modified commit do not change if you use the interactive rebase.","2013-07-06 07:08:37","710388"
"101635589","44201563","0","Isn't there a longer name for *""EX""*? *""Extended""*?","2019-08-21 09:58:41","63550"
"117806922","73021","1","@ebresie https://javarevisited.blogspot.com/2015/09/difference-between-primitive-and-reference-variable-java.html#:~:text=There%20are%20two%20types%20of,Thread%2C%20File%2C%20and%20others.","2021-03-15 05:08:27","7651583"
"117814076","6938341","0","`readLine()` removes the line feed character so the resulting string will contain no line breaks unless you add a line separator between each line you add to the builder.","2021-03-15 10:11:02","2506021"
"101650204","57340254","0","Careful... `const o = {}; o.a = o; deepClone(o);` -> recursion error.","2019-08-21 05:23:48","1243041"
"117823633","14488421","0","@Vic what, how is your answer different?","2021-03-16 09:10:23","5320740"
"101659554","4089430","2","`git remote get-url origin --push` works fine, apparently not depreciated and provides nice brief info (`git remote show origin` can be _very_ verbose) q.v. `git help remote`.","2019-08-22 02:30:24","134044"
"117828197","27571343","0","Thanks a lot :) saved my day.","2021-03-16 11:54:13","2018894"
"101662233","26853961","0","If `dict1` and `dict2` have some keys in common, `{**dict1, **dict2}` raises `TypeError: type object got multiple values for keyword argument common_key_name`. I guess I'll stay with `{dict1, **dict2}` and string keys.","2019-08-22 06:04:42","7818309"
"9452601","477578","0","@Mike: Good points. If a user tries to log in (ie. posts login credentials to the server) they will not be checked and an error is returned. A server-synchronized countdown clock should be displayed next to the login form to inform the user of the throttling. The form itself or the submit button should be disabled until the countdown is done.","2011-10-14 07:55:30","57068"
"9452660","477578","0","@Mike: Account-based 'locking' should IMO only happen if the user breaks your site's TOS while logged in, if account fees are unpaid, or if the user is investigated by the authorities. Until the user has logged in correctly, you (generally) can't be sure that the failed login attempts aren't a malicious third party trying to lockout the real user.","2011-10-14 08:00:09","57068"
"9452726","477578","0","@Mike: IP-based 'locking' however, can be advisable in case of obvious DoS attacks. That doesn't have anything to do with login form security in itself though, and is usually handled directly on the network traffic, so that request flooding from a single IP automatically triggers an IP block for a number of hours.","2011-10-14 08:04:57","57068"
"25486528","5036460","10","@Billy As I recall it, I computed the timestamp in the two suggested solutions 1M times each, and calculated the average runtime. I ran it in Firefox and Chrome, with getTime being faster in both browsers. That said, even if it were (marginally) slower I'd choose `new Date().getTime()`. Luckily for me, the faster solution is already the legible solution!","2013-07-08 12:44:19","145499"
"9461747","2219560","9","I did git commit --amend -m ""New message"", but pushing to Github generated the ""Merge the remote changes before pushing again"". After pull, commit --amend, and push again, the new message doesn't appear. Instead I have ""Merge branch 'master' of github.com:[myrepo]""","2011-10-14 04:58:32","123033"
"117840231","73021","0","@ebresie Mostly yes (I'll clarify the ""mostly"" in a moment). The only pointer to the new dog at 74 (I assume you meant 74 rather than 72) is the parameter to the foo function. When foo returns, all of its parameters are popped off the stack, so nothing is left pointing to 72 and it can be garbage collected.
I say ""mostly"" as there is no ""revert"" happening; the pointer myDog in the caller was pointing to 42 all along and never changed, no matter what happened in the function, hence, no ""revert"".","2021-03-16 06:42:13","12541"
"101674051","26853961","0","@Richard_wth - that error message is unrelated. Check out this answer: https://stackoverflow.com/questions/18950054/class-method-generates-typeerror-got-multiple-values-for-keyword-argument","2019-08-22 12:30:33","541136"
"25494014","5190323","94","@Mark Amery: There are various reasons that I said that this is more elegant.  For example, it doesn't involve unnecessarily spawning an editor and then searching and replacing for a string in the ""to-do"" file.  Using `git merge --squash` is also easier to use in a script.  Essentially, the reasoning was that you don't need the ""interactivity"" of `git rebase -i` at all for this.","2013-07-08 03:59:34","223092"
"9469085","477578","0","@Jens, thanks for the clarifications. I was just thinking that I have accounts with two different banks. One of them locks your account for 2 hours with 3 failed logins. The other locks your account indefinitely after 5'ish failed logins and forces you to call their tech support to reenable it. Neither (as far as I could tell) lock your IP address.","2011-10-15 06:16:43","811240"
"25496231","4908569","3","Or if possible, stop using an Array entirely, and instead use an Object as a dictionary, as MattMcKnight and ninjagecko have suggested.","2013-07-08 05:08:20","99777"
"101682583","419174","3","Why does a file `helloworld.py` with just ```print(""hello world"")``` in it can run with command ```python helloworld.py``` even when there is no ```if __name__ == ""__main__""```?","2019-08-22 04:39:32","3587282"
"86630490","20960146","2","git rebase -i <hash of one commit before the wrong commit> works for me. thanks.","2018-04-13 12:57:11","979673"
"117851074","22345808","0","https://bytearcher.com/articles/semver-explained-why-theres-a-caret-in-my-package-json/
https://bytearcher.com/goodies/semantic-versioning-cheatsheet/","2021-03-17 06:23:05","2023493"
"117864333","66570490","0","I think you should specify the proper syntax to provide a complete answer.","2021-03-17 02:54:35","461444"
"25508898","115983","32","Why not have the procedure that creates the tmp files also create the tmp directory?","2013-07-09 03:11:19","2158473"
"71098875","21232996","6","This really isn't the right answer and isn't a good tool to be recommending without a real explanation of what it does and what the implications are. Please consider taking this answer down.","2017-01-31 02:30:01","1216755"
"25518699","115992","2","Though the more I think of it, the more it feels like ""SHA hash of the empty string"", if it exists, actually _would_ be a well-defined identifier for an empty tree, unless it would be impossible to tell whether that object is a tree or a blob.","2013-07-09 09:47:51","833844"
"101706019","51462109","0","this may collide with other code, libraries, i would rather implement a remove function for that specific array","2019-08-23 12:23:56","1931756"
"117889912","522576","1","@CharlieMartin THIS was a GENIUS Answer!   Thanks SO MUCH for posting this;  It helped **A LOT** !  [+10/10]","2021-03-18 11:35:19","14346786"
"101712535","57613696","1","This doesn't work.  `fatal: refusing to merge unrelated histories`","2019-08-23 03:49:29","1563833"
"25531655","59916","7","@T.J. Crowder > But surely there's a better way to expand that path?
Yes, you can use $(readlink -f ""$0"") to get full path in canonical form with all symlinks resolved. Solves tons of problems.","2013-07-09 03:33:39","196559"
"117903642","33567227","0","This is superb! Everything will be done by just couple of mouse clicks and I could merge 200 commits of old repo before archiving! Thanks. Really useful to make branch tree clean and easily review code changes at once.","2021-03-18 07:39:11","13020939"
"86669044","46371154","1","@Wolf: Sure. I've added a few sentences about the multiple entry points methodology.","2018-04-14 12:26:20","5896591"
"25541633","14889651","2","There is a better way of doing this without modifying the String prototype.","2013-07-09 08:42:35","1015595"
"9509939","5361169","1","You can give git clean a path argument to be more specific and avoid deleting untracked files that aren't conflicting.","2011-10-18 10:08:13","187581"
"25543971","14889651","2","@davidkennedy85 Sure! But this is the simple way, not the *best* way... ;-)","2013-07-09 10:01:32","1250044"
"9516513","7770473","3","but it's three statements rather than one expression","2011-10-18 03:44:51","106979"
"71130926","31096712","0","will this work if the values in enum are not sequential?","2017-02-01 09:50:41","4401282"
"101735573","50937561","1","Too bad it doesn't work right when the value is an array.
But, shouldn't be too difficult to modify to get it to work for that case.","2019-08-24 10:30:55","164276"
"117918855","52719","0","This worked best for me since I can get my changes back if needed.","2021-03-19 11:01:40","2251364"
"117920934","477819","0","Which are now called [Media Types](https://www.iana.org/assignments/media-types/media-types.xhtml) by the IANA.","2021-03-19 12:28:24","452614"
"9536277","246128","34","You can fuse this approach with the answer by user25866 to arrive at a solution that works with `source <script>` and `bash <script>`: `DIR=""$(cd -P ""$(dirname ""${BASH_SOURCE[0]}"")"" && pwd)""`.","2011-10-19 03:54:43","95706"
"9536302","179231","1","You can fuse this approach with the answer by ddopson to arrive at a solution that is a simple one-liner: `DIR=""$(cd -P ""$(dirname ""${BASH_SOURCE[0]}"")"" && pwd)""`.","2011-10-19 03:55:55","95706"
"9542432","6440396","5","For config files, I'd suggest YAML, not JSON. It's (almost) a more powerful superset of JSON, but supports more readable constructs as well, including comments.","2011-10-19 09:35:37","109011"
"39325663","5190323","2","I'm always very reluctant when it comes to hard resets - I'd use a temporal tag instead of `HEAD@{1}` just to be on the safe side e.g. when your workflow is interrupted for an hour by a power outage etc.","2014-08-11 12:18:55","321973"
"117955904","66570490","4","If there are JSON parsers out there that parse non-standard JSON, it doesn't mean that adding comments are allowed in JSON.","2021-03-21 02:56:12","80911"
"117955910","56626450","0","This is pretty funny.","2021-03-21 02:57:36","80911"
"39327077","244858","12","What about if I wanted a separate comment on the `Accronym` and `Abbrev` properties? I've used this pattern before but stopped since it doesn't allow me to do that. It is a hack. Maybe if I prepend a property name with `__comment__` instead. That is ""__comment__Abbrev"", still a hack, but would let me comment on all prpoerties","2014-08-11 12:58:25","227299"
"71175122","37499171","0","Actually I just now am running into issues where, if the path is not given, there is no output. Thus `pwd` is needed @fedorqui","2017-02-02 10:09:30","316408"
"71175325","37499171","0","`cd /tmp; mkdir mytest; cd mytest; mkdir a{1..3}; seq 10 > a1/a1; seq 10 > a1/a2; seq 10 > a2/a1` once you have all of this, do write `grep -rnw 5`. This works fine to me on GNU grep 2.16.","2017-02-02 10:13:21","1983854"
"71176386","37499171","0","This is not working on grep 2.5.1 which I am currently working with  ...","2017-02-02 10:38:11","316408"
"101789219","16957078","0","does not search half words","2019-08-27 08:50:21","1084501"
"101789313","22417576","0","better grep than accepted version, because accepted do not search half words","2019-08-27 08:53:11","1084501"
"101795068","246128","0","I just found out that the above does not work when the script is straight out executed rather than sourced: https://stackoverflow.com/questions/27880087/weird-behaviour-of-bash-source","2019-08-27 11:49:28","950189"
"101795267","16957078","1","@waza123 - Haha, yeah, to explicitly made it full word `w` is used. If you want half words (partial) just avoid `w`.","2019-08-27 11:55:58","2231815"
"9567128","5717707","6","I'd rather use `find . -type d -empty -print0 | xargs --null bash -c 'for a; do { echo ""*""; echo ""!.gitignore""; } >>""$a/.gitignore""; done' --`","2011-10-21 06:35:05","490291"
"86749076","13159111","0","@AycanYaşıt Actually, the representation here with one byte length isn't even correct, as even the smallest integer is still 64 bit (8 byte) in memory on a modern 64bit platform.","2018-04-16 09:53:21","43959"
"101804107","48360733","2","Hold on, 5 upvoters, how does it work? I forgot it myself and this looks counterintuitive, now that one and half years has past.","2019-08-27 04:13:31","4510033"
"86754042","49869151","1","A link to a solution is welcome, but please ensure your answer is useful without it: [add context around the link](//meta.stackexchange.com/a/8259) so your fellow users will have some idea what it is and why it’s there, then quote the most relevant part of the page you're linking to in case the target page is unavailable. [Answers that are little more than a link may be deleted.](//stackoverflow.com/help/deleted-answers)","2018-04-17 03:26:29","965146"
"101806105","16957078","0","`grep -r text-to-find` also works good for current directory on Linux (most simple version).","2019-08-27 05:33:24","2844122"
"101807463","80113","1","Nice answer. But you should have say that also stack is faster because it may be keep in processor register instead of memory.","2019-08-27 06:29:36","7224387"
"25618220","1984225","4","`URNs are different from URLs in this rigid uniqueness constraint` Does this mean that URLs don't uniquely identify a location?","2013-07-11 07:30:36","433570"
"25620513","14767865","0","A lifetime (assuming 75 years) supply of socks (assuming you exhaust 4 pairs/month, that makes 3600 pairs) would take up (assuming a new pair of socks takes up 20 cubic inches) a total of 1 1/2 cubic yards.  That is an enormous amount of space.  Assuming they deliver it to you in a box that is roughly a cube, that crate will be about 3 feet 4 inches on a side.","2013-07-11 08:42:21","1324631"
"25620706","14415881","13","Add an extra pointer to the sock class that will point to the sock's pair.","2013-07-11 08:49:21","1324631"
"86772378","1628584","6","`git push --force -u origin` for both master and the new branch should be part of the answer","2018-04-17 12:40:43","663929"
"86773549","5201642","3","Having to `git push -f` is always a requirement after rewriting history.  It CAN be bad to rewrite history, certainly if you are doing it to a shared repository.  But that's a separate subject not related to this answer (which is great).","2018-04-17 01:07:55","717274"
"86783334","2386013","0","This should now be the primary answer, I believe the accepted answer was accepted before these annotations were available.  I wonder if there is a way to get it promoted to the top at least...","2018-04-17 04:59:43","12943"
"86783421","2386013","0","@mwfearnley I believe the comment on the second answer was incorrect, Nullable is more of a warning to the developer and I don't think the compiler proves that it can be null (Since an overridden method could return null).  What it DOES mean is that it can't be passed to a NotNull without being protected by a null check.","2018-04-17 05:02:22","12943"
"86783490","2386013","0","By the way, the implementations of the checkers are not all consistent!  Eclipse's checker is a good deal better than IntelliJ's (although I've been using IntelliJ's, it's definitely better than nothing).  Eclipses has much better handling of un-annotated variables. https://stackoverflow.com/questions/48349393/can-i-make-intellij-nonnull-nullable-annotations-act-like-eclipse?noredirect=1","2018-04-17 05:04:21","12943"
"71219864","35152521","1","This is both wrong and unclear. Join is *not* an intersection unless the tables have the same columns. Outer joins don't have rows from A or B unless they have the same columns, in which case there are not nulls added. You are trying to say something, but you are not saying it. You are not explaining correctly or clearly.","2017-02-03 11:15:30","3404097"
"9600464","630453","62","It may be helpful to use the definitions in HTTPbis - Roy put a fair amount of work into clarifying them. See: http://tools.ietf.org/html/draft-ietf-httpbis-p2-semantics-16#section-7.5","2011-10-23 09:03:06","152646"
"71226417","215731","0","Can we pass space-separated file-list right after the commit id?","2017-02-03 02:15:01","1465553"
"71230401","41874554","1","I think if you use [_id] on your #SOURCE not [ID] the same as #DESTINATION's, they might let you do JOIN. ""on #DESTINATION.ID=#SOURCE._id. Or even use table variable like @tbl, ""on PermTable.ID=@memorytbl._id"". Have you tried? I am using a phone to reply this, no computer to try.","2017-02-03 03:53:31","4170504"
"71235450","21403753","26","I also use this to abort a git commit, or visudo, or crontab, …","2017-02-03 06:13:21","19750"
"101851909","100146","1","`The metaclass is determined by looking at the baseclasses of the class-to-be (metaclasses are inherited), at the __metaclass__ attribute of the class-to-be (if any) or the __metaclass__ global variable.`; Is this ordering correct? Or will python first look at `__metaclass__` in the class-to-be and then it's baseclasses and then the global `__metaclass__`?","2019-08-29 06:56:29","1365918"
"86816413","46205746","0","`cd -` can simplify this a lot... Or `cd ""$OLDPWD""` (Or use a subshell that your script's dir doesn't change, but then you can't set variables)","2018-04-18 01:07:16","1837991"
"71240725","348170","2","This is a great resource straight from Github: [How to undo \(almost\) anything with Git](https://github.com/blog/2019-how-to-undo-almost-anything-with-git)","2017-02-03 09:13:30","1783588"
"71240730","2389361","4","This is a great resource straight from Github: [How to undo \(almost\) anything with Git](https://github.com/blog/2019-how-to-undo-almost-anything-with-git)","2017-02-03 09:13:42","1783588"
"71240742","2389423","2","This is a great resource straight from Github: [How to undo \(almost\) anything with Git](https://github.com/blog/2019-how-to-undo-almost-anything-with-git)","2017-02-03 09:14:07","1783588"
"71240795","5343267","0","This is a great resource straight from Github: [How to undo \(almost\) anything with Git](https://github.com/blog/2019-how-to-undo-almost-anything-with-git)","2017-02-03 09:16:12","1783588"
"71240801","6217372","0","This is a great resource straight from Github: [How to undo \(almost\) anything with Git](https://github.com/blog/2019-how-to-undo-almost-anything-with-git)","2017-02-03 09:16:26","1783588"
"118016404","5767357","0","Return statement is misleading. Array is already modified. It can confuse that origin array will be untouched.","2021-03-23 12:08:53","3826175"
"86817060","67458","0","Another advantage of quoting variables: performance - Bash does not need to attempt word splitting on the contents of the quoted string. (Mostly it is negligable)","2018-04-18 01:22:00","1837991"
"25657276","7140229","0","Michael Feathers has written an short and interesthing text about approaches like the one you mentioned:

http://manuelp.newsblur.com/site/424/","2013-07-12 08:59:39","1661531"
"118017309","522563","1","@JoanVenge this is a great question I've had MANY TIMES. And the comment above is saying it's zero-indexed-based (so, we humans count 1 to 3 as 1,2,3, but computers count as 0,1,2 (so, a size of 3 e.g is  [0,1,2] (0 counts as 1)) And, this questions answers below are also, Brilliant. Thanks for this!","2021-03-23 12:42:55","14346786"
"9622328","1628584","239","Also note: Don't do this with uncommitted changes in your working copy! This just bit me! :(","2011-10-25 03:59:38","751"
"118021331","14488421","1","@samthet the answer has been edited so they're the same now","2021-03-23 02:51:19","826290"
"118031100","7244321","0","Search ""Ilyich"" for solution (at bottom of page)","2021-03-23 08:27:39","5248982"
"118034241","50342967","0","mkdir will also not create the full path (without a param), but the opposite would be even more dangerous, as you are not even able to revert (rm -f) the changes as you don't know which directories it created","2021-03-23 11:19:58","623288"
"25675841","392748","6","Now, how do these compare when there is an actual type coersion for `==` operator? Remember, that's when there's a performance boost.","2013-07-13 09:13:44","876409"
"25680888","14767865","2","@AJMansfield valid concern. However, I disagree with a few of your numbers. I'd take a timespan of just 40 years (25...65) (time between not living at parents/dorm/etc and retiring, see above). Also, I think one pair takes more like 0,5x4x6 inches in original packaging. These numbers bring your space estime down quite a bit!","2013-07-14 06:40:27","1717300"
"101883889","477819","11","@EugenMihailescu The title of that page is ""Incomplete list of MIME types""","2019-08-30 06:30:53","5905951"
"25689937","815237","1","That does not match the RFC.","2013-07-14 06:35:34","471272"
"25693639","682343","1","I certainly feel if this is a totally new repository, removing the `.git` directory and initialising again is the best way. For cases in a well-used repo where you just accidentally added a single file, `git rm --cached <file>` seems best although I get a scary `delete mode 100644 file` after my commit.","2013-07-14 10:28:14","1014237"
"118054610","58197087","0","I agree with @StefanFabian, this is a terrible idea. What if my string is something like "","", that will replace all commas in the string version of the array. This is a terrible idea, and you should not do this.","2021-03-24 03:38:59","4697655"
"71283186","41874554","2","What does this have to do with updating from a SELECT?","2017-02-05 06:10:07","73226"
"71283390","41874554","2","This is the same idea but another method - you don't have to put ""select"" at all to achieve JOIN and WHERE in update statement - which is SELECT type of query without even writing SELECT","2017-02-05 06:19:13","5243515"
"71283532","630785","0","@Joshcodes It is not always the case that it is the server's job to create client ids.  I have increasingly seen designs that let clients generate some sort of UUID as the resource id. This design lends itself in particular to increase scale.","2017-02-05 06:26:16","496501"
"9673342","4754797","21","This is really close to being a perfect solution.. The only thing that would make it better is if this functionality were built-in as an option in git.","2011-10-27 05:15:12","780998"
"101914173","426314","0","IMO the `click` event is unreliable in Firefox and Edge.","2019-08-31 11:21:41","5173926"
"9680836","7770473","16","Yes! The mentioned one-expression-solutions are either slow or evil. Good code is readable and maintainable. So the problem is the question not the answer. We should ask for the best solution of a problem not for a one-line-solution.","2011-10-28 03:36:17","509648"
"71294730","5334825","0","To match lines that **does not *end* with ""hede""**, one way is to use `^.*(?!hede).{4}`. The number in braces should match the length of non-matching text you want (e.g. ""hede"" is length 4).","2017-02-06 06:09:08","1743811"
"118075345","359509","1","Soft typing is a *feature*. Obviously Crockford is pointing out some of the ""artifacts"" of the design decision, but soft typing is still a feature. If used correctly, it's ***absolutely fine*** to use. Don't throw the baby away with the bathwater.","2021-03-25 09:29:41","1000608"
"71297054","5256662","0","`String.prototype.capitalize = String.prototype.capitalize || function() {
    var first = this.substring(0,1);
    return first.toUpperCase() + this.substring(1);
};","2017-02-06 07:47:27","3401379"
"118076615","10893560","0","Interestingly, `a.length===4` is actually *slower* in Firefox than `a.length==4`. It is, by all means, a micro-optimization anyway, but this is contrary to what people claim.","2021-03-25 10:17:11","1000608"
"25722656","7094191","8","Where should i place this code? I've tried to paste  getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN); in onCreate() but the keyboard is never hidden","2013-07-15 06:20:10","2236096"
"101931102","35288","4","No, `--` is _not_ a builtin special word in bash. But it is a common convention supported by many commandline parsers and used by many CLIs, including git.","2019-09-01 02:20:16","833844"
"101936956","21160506","0","@Zag: It has a name: [Shlemiel the Painter's Algorithm](http://www.joelonsoftware.com/articles/fog0000000319.html)","2019-09-01 10:11:06","63550"
"101936980","21531501","0","But why a return in the middle? It is effectively a goto statement.","2019-09-01 10:14:16","63550"
"71311249","25476365","5","This is a shallow-clone. `const o1 = { a: { deep: 123 } }; const o2 = Object.assign({}, o1); o2.a.deep = 456;` now `o1.a.deep === 456` too.","2017-02-06 02:21:38","2258817"
"71311339","31817825","1","Mutating prototypes is generally considered bad practice, with the only exception being for shims.","2017-02-06 02:23:40","2258817"
"71314219","237176","1","In nodejs (v7.4.0) on my windows 7 64 bit machine, looking up for a 1 in an array with 10M zeros; the ""while"" loop takes about 240+ ms, ""for"" loop (also counting down) takes about 220 ms and ""indexOf"" method takes about 20 ms. If I fill up that array with some incrementing numbers (0 to 10M-1) and look for -1, while loop becomes faster about 4 times, for loop becomes faster about 8 times and indexOf takes about 25-50% more time. Color me surprised.","2017-02-06 03:32:21","1901562"
"118088821","72156","0","You may want to add that a clone pulls all of the history. The main reason I looked up this answer is because I wasn't sure it did. This answer may be a good link: https://stackoverflow.com/a/4658547/1366594","2021-03-25 04:50:58","1366594"
"71320714","630785","0","@JustinOhms I agree with your point about client generated IDs (side note: all systems designed by me since circa 2008 require the client to create the ID as a UUID/Guid). That does not mean the client should specify the URL.","2017-02-06 06:24:26","965382"
"71323499","630785","0","@Joshcodes It's matter of separating concerns.  Where the URL is generated is actually of little consequence.  Yes the server is responsible for delivering content from the correct URL but that does not limit a server from responding to a request on an incorrect URL.  The correct response from the server in this case is a 308. A proper client will then retry the PUT on the correct URL. Another example is a distributed system where not all nodes know of all resource provided by clients. Here a PUT to create would be perfectly valid because for that server node the resource does not exist.","2017-02-06 07:48:37","496501"
"86901172","49774890","0","Your code doesn't work if words share the same letters.
Example : var test = ""Groups_4_Questions_0__Options_0_Wording"".replaceAll([4, 0, 0], [100, 200, 300])","2018-04-20 01:19:00","5477126"
"86902580","49774890","0","Not meant for it. Only for unique replaceable values.","2018-04-20 01:52:22","6315245"
"86902611","49774890","1","this is useless then in most case","2018-04-20 01:53:03","5477126"
"71325355","630785","0","@JustinOhms I agree completely it's about separating concerns. I also agree there are edge cases for using PUT (one encountered recently by me involved a data import than needed the ability to re-run). The approach you have outlined above works because the server ""instruct(s) clients on how to construct appropriate URIs"", (Roy Fielding's words). However, it is not obvious to me why that is better than just using POST as intended.","2017-02-06 08:48:39","965382"
"71325412","1628584","0","I tested the procedure with the new branch way. But this doesn't move the commit. as someone pointed out push --force is necessary and will require to re-attach the HEAD to the commit tail. wouldn't it? (sorry if I missed something from the huge amount of comments :) )","2017-02-06 08:50:27","1219368"
"71326679","630785","0","@Joshcodes The reason to use a PUT like this in a multi node setup is that that for the client to switch from PUT to POST the client would require knowledge about the state of the data on that node. It seems odd because we are often think of the server as being a single authority however in a distributed system with eventual consistency the client may actually have more information than any given server node at any point in time.  In this case the client knows the resource exists, the node does not. (maybe a sync is needed) Plus POST would not be appropriate because the resource does exist.","2017-02-06 09:28:20","496501"
"71331694","630785","2","Yes, if the resource already exists, use PUT. However, in nearly all cases, the resources should be created with POST and the client should not provide the URL. Roy Fielding agrees with this statement FWIW: http://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven","2017-02-07 01:26:05","965382"
"118105684","64341833","1","""The big advantage of os.system(...) was its simplicity. subprocess is better"" - how subprocess is better? I am happily using os.system, not sure how switching to subprocess and remembering extra `shell=True` benefits me. What kind of thing is better in subprocess?","2021-03-26 09:14:05","4130619"
"86919300","48049791","5","Such approach is still a thing in 2018? Wow :-)","2018-04-21 01:01:40","4316374"
"101983072","45558981","0","For JSON text:
    application/json

   Content-Type: application/json","2019-09-03 02:40:13","2199445"
"25779169","7104747","138","@elexhobby short put, `git fetch` only updates your `.git/` directory (AKA: local repository) and nothing outside `.git/` (AKA: working tree).  It does not change your local branches, and it does not touch `master` either.  It touches `remotes/origin/master` though (see `git branch -avv`).  If you have more remotes, try `git remote update`.  This is a `git fetch` for all remotes in one command.","2013-07-17 06:48:09","490291"
"71352721","671132","1","This is a good and well-written answer, but I feel something is lacking. Your example operations are very CRUS'ish, and one aspect of HATEOAS is that a resource can expose their domain-relevant operations, not just CRUD. In the excellent post by Fowler you are referring to, he uses a the action of booking a time with your doctor, where the resource is an available time slot, and the actions to perform is to book the time slot. By just exposing CRUD operations in your hypermedia, you quickly end up with your API exposing an anemic domain model.","2017-02-07 01:38:51","158483"
"118125881","56591541","0","I read all the relevant documents and found that there was no description of this syntax. I doubted my ability and felt relieved after seeing this answer. Maybe there was none.","2021-03-26 11:22:10","11901563"
"9752988","115992","1","Well if one want to move files into a new directory, they can't do it through `git mv` as git will complain that new directory is not under version control","2011-11-02 02:58:25","474597"
"118126723","64736930","2","Using `async:false` is a terrible practice and should **never ever** be used. It was deprecated by browser vendors years before this answer was written. They even give you warnings in dev tools console not to use it when it is encountered","2021-03-27 12:38:35","1175966"
"101992209","237176","0","@DamirZekić i don't think contains is method in JS , includes is the right syntax here","2019-09-03 08:58:02","4832508"
"118129652","5767325","2","Opposite of push is pop","2021-03-27 05:14:43","14441642"
"102000927","2691891","0","Helpful mnemonic:   Idem**PUT**ent","2019-09-04 07:38:46","3263659"
"118133731","64341833","1","You're right in that `os.system(...)` is a reasonable choice for executing commands in terms of simple ""blind"" execution. However, the use cases are rather limited - as soon as you want to capture the output, you have to use a whole other library and then you start having both - subprocess and os for similar use cases in your code. I prefer to keep the code clean and use only one of them.

Second, and I would have put that section at the top but the TL;DR has to answer the question **exactly**, you should **not** use `shell=True`, but instead what I've written in the `Preferred Way` section.","2021-03-27 11:30:25","6685358"
"118133786","64341833","1","The problem with `os.system(...)` and `shell=True` is that you're spawning a new shell process, just to execute your command. This means, you have to do manual escaping which is not as simple as you might think - especially when targeting both POSIX and Windows. For user-supplied input, this is a no-go (just imagine the user entered something with `""` quotes - you'd have to escape them as well). Also, the shell process itself could load code you don't need - not only does it delay the program, but it could also lead to unexpected side effects, ending with a wrong return code.","2021-03-27 11:34:02","6685358"
"118133803","64341833","2","Summing up, `os.system(...)` is valid to use, indeed. But as soon as you're writing more than a quick python helper script, I'd recommend you to go for subprocess.run without `shell=True`. For more information about the drawbacks of os.system, I'd like to propose you a read through this SO answer: https://stackoverflow.com/a/44731082/6685358","2021-03-27 11:35:42","6685358"
"118137048","64341833","0","thanks! I wanted to edit ""better"" to include that link, but I got error about full edit queue.","2021-03-27 03:01:33","4130619"
"102004635","39789894","0","""freezes"" is the best explanation.","2019-09-04 09:36:27","1970470"
"118141973","12429953","1","I hope the Herbert Schildt book that I've learned Java from had taught this","2021-03-27 07:51:55","6212983"
"86961239","11444416","3","I would like to correct that

let me = 'go' is not truly under global scope like
var me = 'go'

if you try this.me with let, you will get undefined.
If you try this.me with var, you will get me's value, in this case 'go'.","2018-04-23 02:29:09","1502956"
"118153773","64907232","0","Is JSON5 ""very"" standard? Or still being adopted? I mean... May I expect that any framework in 2021 will understand Json5? Or most probably not?","2021-03-28 01:53:20","1315009"
"25816517","5036460","11","Agreed with @FabrícioMatté.  Unary operator behavior may not be rudimentary, but if you haven't brushed up on it, don't expect to be able to function effectively in a lot of teams.","2013-07-18 01:58:54","641553"
"118161475","64907232","0","If you create your own standard, you are the only in the world using it. Something like JSON5 is probably better.","2021-03-28 09:09:47","1439305"
"71398587","1274447","0","@CharlesBailey unfortunly, is not working in my case. Changed a lot of files. In some times I figured out that problem is in file endings (autocrlf), but after I disable it I still have 4k+ files which are assumed to be changed but actually are the same. I think there is problem with encoding, but it's the hypothesis only.","2017-02-08 01:55:15","2559709"
"102037558","28441119","0","why do we need add `@{u}` what difference it will make?","2019-09-05 09:55:08","3543808"
"25832430","134853","1","Any use of `#` or `void(0)` is bad practice and shouldn't be encouraged.","2013-07-18 12:06:22","692942"
"39357040","681238","5","Even when it does work, `toSource()` is a horrible way to do this (as is `JSON.encode()`). It needs to build a string representing your entire object to just check if it's empty. There's the overhead of converting things to strings, but moreover it will need to convert a million things if your object has a million properties, while actually just looking at one will let you know that it is not empty.","2014-08-12 08:42:07","145287"
"9802580","1783426","148","If it's a new remote branch you may need to `git fetch` before doing this so that git is aware of `origin/test`","2011-11-04 02:38:53","118910"
"25842051","12389954","0","Do you mean the note beginning, ""You never do your own development on branches that appear on the right hand side of a <refspec> colon""? And, adjusted, for what reason?","2013-07-18 03:48:39","1136063"
"118186610","64907232","0","Not meant to create my standard... just wondering if it's time to consider JSON5 or better stick to ""old JSON"" and wait a few months yet before devoting time to exploration.","2021-03-29 07:00:39","1315009"
"86993144","348303","2","My git version 2.14.3 says `git reset HEAD` to unstage.","2018-04-23 07:16:53","8365799"
"118191909","65460603","0","In both languages, ""pass by value"" means passing the value of the object if it's an object. In no case does it mean passing the address of the value. There is no difference in terminology. There is no case where we call something pass by value and changing the value in the function called changes the value in the caller. If you call a function like this `foo(bar)` in java, the value of `bar` never changes -- if `bar` is a reference to an object, its value is the identity of the object it references and no matter what the function does, it still references the same object in the caller.","2021-03-29 11:37:35","721269"
"71424373","2389423","1","please menation ORIG_HEAD method first, it is more likely what people want","2017-02-09 04:49:38","1223975"
"9822166","7354651","7","This assumes none of the columns are nullable though.","2011-11-06 12:03:32","73226"
"102066462","16047306","6","This article compares Docker-on-Windows with Docker-on-Linux, giving some helpful insights: https://collabnix.com/a-comparative-study-of-docker-engine-on-windows-server-vs-linux-platform/","2019-09-06 07:57:18","482828"
"25864836","932982","22","@pedromanoel I write the documentation you would put in the `README` inside the `.gitignore` file (as comments).","2013-07-19 08:20:21","592540"
"102070810","44781228","11","The image is distracting and very large and adds nothing to the answer. I hope this does not become a trend on SO.","2019-09-06 10:31:50","202504"
"102072685","1335851","20","The answers here are old but they are wrong. The main reasoning for strict mode was not to prevent programming errors - it was to make JavaScript lexically scoped so it could be statically analysable :]","2019-09-06 11:40:57","1348195"
"118221290","61171280","1","@FXQuantTrader: If everybody force-pushes, the opposite the case. Almost always there is need to push with `--force`. Doing this aligns you well with the rest of the team and different remote locations as you know what is going on. Also you know which part of the history has stabilized already. No need to hide that.","2021-03-30 11:05:39","367456"
"118222920","406408","0","@BartKiers Thanks for your answer. It is really helpful to me. I am looking for a regular expression solution to find a Java method not containing some string in the codebase, your solution helps me. Replacing the dot `.` with `[\s\S]`, i.e., `^((?!hede)[\s\S])*$`, helps me find a multiple-lines string not containing the `hede` substring.","2021-03-31 01:47:27","6493106"
"118229765","11227809","4","Btw. on Apple M1 the code runs in 17 sec unsorted, and in 7 sec sorted, so the branch prediction penalty isn't that bad on risc architecture.","2021-03-31 09:07:05","80869"
"9867702","136138","18","@BenJames:  A staticmethod should have something to do with the class its defined in, it just doesn't need either class nor instance data to do its job. (see http://stackoverflow.com/questions/7855237)","2011-11-08 07:50:04","208880"
"102108518","27540786","4","best answer so far, alternative syntax - that's what I've been looking for, thanks!","2019-09-08 08:21:38","1536906"
"25915795","59916","1","NOTE ${BASH_SOURCE[0]} is different from $0 when you include one bash file into another using . or source.","2013-07-21 05:55:46","118824"
"118247312","2798934","0","can you explain what your code is doing please? (its only 2 lines)","2021-03-31 07:56:15","1601580"
"102113536","394814","0","For the expression: 'x and y' and 'x or y' and their return values I recommend checking https://docs.python.org/3/reference/expressions.html#boolean-operations and also the other post: https://stackoverflow.com/questions/3181901/python-boolean-expression-and-or/3181946#3181946","2019-09-08 03:02:18","995301"
"118258054","41773215","0","Very clever analogy!","2021-04-01 08:26:24","5739"
"71485408","10999165","3","I would like to add that -d gives a warning if it isn't merged in with the current HEAD.
If you need clarity I recommend this command `git branch -a --merged origin/master`
It will list any branches, both local and remote; that have been merged into master. [Additional information here](http://stackoverflow.com/questions/226976/how-can-i-know-in-git-if-a-branch-has-been-already-merged-into-master)","2017-02-10 01:10:57","2730665"
"118260680","1628584","0","Incase you are doing this in an existing branch as I did: To be able to rebase head~3 or in IDE(e.g IntelliJ) ""rebase to here"" It's important NOT to take a pull from remote repo. If you do that, there would be commits from others into your own. I wonder what could be done in that case? Individual commit deletes?

Also, I assume OP did not push his changes. If that were done a reset would delete the commits that were already pulled by others, and break their code, wouldn't it? Any good resource to know what could be done if items had been already pushed?","2021-04-01 10:12:51","2181576"
"102127247","14423956","0","I take this approach:

1. Take sock from basket; 
2. Check already taken socks if there's matching one; 
3. If not put them in area of not matched socks; 
4. Take another one and repeat; 

It's very similar but instead of spreading all first I do it lineary so at some point I reach maximum of not matched sockes no longer than N/2 in worst case.","2019-09-09 08:25:41","930413"
"39379887","487278","0","*Now the logarithm in question could be ln (base e), log10, log2 or some other base. It doesn't matter it's still O(log n) just like O(2n2) and O(100n2) are still both O(n2).* **No.** This is entirely wrong. Having a constant in front of the logarithm would give it the form of `log(n^2)` or `log(n^3)`. The logarithm in question here is *exactly* log base 2. Changing from log base 2 to log base 3 is the equivalent of going from n^2 to n^3. This needs to be changed.","2014-08-12 07:00:24","2602718"
"118277810","8809472","0","Would [Crypto.getRandomValues](https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues) fix the main problems with Math.random??","2021-04-01 10:07:56","2066736"
"9926446","41454","3","So is there any difference between synchronized(myMap) {...} and ConcurrentHashMap in terms of thread safe?","2011-11-11 04:48:26","350874"
"9929809","7354651","4","You're right, I was typing the example by hand.  I've added a third and fourth clause to the where statement to deal with that.","2011-11-11 08:27:23","116645"
"25960883","12389954","0","@MarkDBlackwell, not sure what I meant back then.. to be honest.","2013-07-22 06:55:35","312480"
"9932913","7791100","38","this is good, but the problem with this is that it must be inside a `form` tag and submitted by a `submit` input, which not everyone has the luxury of doing. Also, you can't really style the error message.","2011-11-12 12:08:32","7173"
"39390256","397740","2","Java 1.7 added the `java.util.Objects.requireNonNull` method (amongst others) that does exactly this. It's such a common idiom that I'm amazed it took this long!","2014-08-13 04:09:41","153339"
"87092770","46692810","0","its funny but when I run your tests it actually shoed me that method 1 is the slowest one","2018-04-26 08:30:54","1527544"
"54784047","33493854","0","Why would you want to use something like this? The email address standards specification suggests that email addresses may begin with digits, and may contain multiple period characters in both the domain and lcoal part. This answer seems to be something you've created for some entirely custom scenario, where you effectively discriminate against people for having email addresses which you don't like! To extend slightly, email addresses could also contain IP addresses, so this is potentially even more restrictive than described.","2015-11-03 01:24:41","1813394"
"9935296","6117092","12","Be very wary about turning off browser UI expectations on ALL code except for one item.  What about list items <li /> text, for example?","2011-11-12 07:13:45","641553"
"118285977","419163","4","Just for the record - what is ""__main__"": https://docs.python.org/3/reference/toplevel_components.html#complete-python-programs  and what is ""__name__"": https://docs.python.org/3/reference/import.html?highlight=__name__#__name__","2021-04-02 09:17:24","1154447"
"39394988","271526","1","Isn't there are Design Pattern that speaks about making a null-object? So when instantiating a new object, you always use this null object (same super class, same [but empty] methods) and later on you set the object to the full object when you need it. You might want to check out a similar question: https://stackoverflow.com/questions/9162371/what-are-good-light-weight-design-patterns-for-avoid-nulls-in-java?rq=1 and this info about the Null Object Pattern: https://en.wikipedia.org/wiki/Null_Object_pattern","2014-08-13 07:37:12","1183884"
"25973822","61212","33","Note: if you only want to remove *some* untracked files, but *not all of them*, `git clean` has now an **interactive** mode! See [my answer to this other question](http://stackoverflow.com/a/17802455/6309): git 1.8.4+","2013-07-23 06:00:10","6309"
"71527023","671132","0","@Pete That's a very good point. Once I started thinking about it, it occured to me that that's often the exact point where things go awry. As long as it's simple data being exposed, the design tends to be somewhat reasonable, but once there are complex actions involved most API's seems regress to SOAPY thinking. I'll give it some more thinking and make some revisions at some point. This is community wiki since long ago though, so everyone should feel free to make improvements.","2017-02-11 10:51:20","73772"
"118296339","39365250","0","An explanation would be in order.","2021-04-02 05:18:31","63550"
"118296561","44996682","0","An explanation would be in order. E.g., what ES6 features does it use that previous answers don't? Please respond by [editing your answer](https://stackoverflow.com/posts/44996682/edit), not here in comments (***without*** ""Edit:"", ""Update:"", or similar - the answer should appear as if it was written today).","2021-04-02 05:28:47","63550"
"118297445","63313690","0","An explanation would be in order.","2021-04-02 06:12:25","63550"
"118297876","66332305","1","What is ""Blob""/""Blobs""?","2021-04-02 06:33:45","63550"
"102170688","509377","0","@liyuan The type implementing `__getitem__` is; your example is equivalent to `apple[slice(4, -4, -1)]`.","2019-09-10 02:26:28","1126841"
"39406607","7286050","4","Sorry -this answer just doesn't work, it will match hhehe and even match hehe partially (the second half)","2014-08-13 12:57:05","3070062"
"9957008","5311857","3","Absolutely. Applications that just throw the error and crash are of higher quality because there is no doubt when they are not working. Applications that swallow the errors at best degrade gracefully but usually don't work in ways that are difficult to notice and don't get fixed. And when the problem is noticed they are much harder to debug.","2011-11-14 05:06:57","957595"
"39421229","7251912","1","@toolbear: your linked comment suggests you don't know how to use YAML well. I've never had YAML bite me, ever. So yes, use YAML, even if you were already leaning towards JSON.","2014-08-13 07:25:09","109011"
"118314181","338053","0","var abc = function(){};
console.log(abc.name); // ""abc"" // from 2021","2021-04-03 04:27:28","163977"
"102185255","52713","5","@ABMagil: there is now a new command: `git restore` and it is the one now given by `git status`. See my [2019 update](https://stackoverflow.com/a/57880896/9210961)","2019-09-11 01:38:11","9210961"
"9968204","3104376","3","Perl's JSON supports # comments.","2011-11-14 05:36:11","200304"
"39433231","23615823","4","-1. Just because something is available doesn't mean it should be used. When you switch the logging provider, you're going to have to replace this. Also, it looks like it is internal and shouldn't really be used outside of log4j.","2014-08-14 05:51:51","305973"
"87142318","49747717","0","Why would it be different than on, e.g., Linux? Which particular implementation/package of git do you use? And/or which environment (e.g. MinGW)?","2018-04-27 12:57:58","63550"
"102198232","11444416","1","I think ""immediate"" would be better term than nearest in ""nearest function block"".","2019-09-11 11:36:03","7134134"
"87147903","348234","1","Another way to __recover changes that were staged but not committed and then overwritten__ by e.g. another `git add` is via `git fsck --unreachable` that will list all unreachable obj, which you can then inspect by `git show SHA-1_ID` or `git fsck --lost-found` that will >Write dangling objects into `.git/lost-found/commit/` or `.git/lost-found/other/`, depending on type.
See also `git fsck --help`","2018-04-27 03:27:59","1097752"
"87147944","6049090","6","Another way to __recover changes that were staged but not committed and then overwritten__ by e.g. another `git add` is via `git fsck --unreachable` that will list all unreachable obj, which you can then inspect by `git show SHA-1_ID` or `git fsck --lost-found` that will >Write dangling objects into `.git/lost-found/commit/` or `.git/lost-found/other/`, depending on type.
See also `git fsck --help`","2018-04-27 03:29:46","1097752"
"87158291","33567227","3","Although it's not commented by any others, this even works for commits which are not at the HEAD. For instance, my need was to squash some WIP commits I did with a more sane description before pushing. Worked beautifully. Of course, I still hope I can learn how to do it by commands.","2018-04-27 10:03:49","603240"
"118347194","487278","0","""public key cryptography is a prime example."" love what you did there ;)","2021-04-05 12:03:28","1585841"
"87165752","2025282","0","Latest Description- https://stackoverflow.com/a/45244453/1380032","2018-04-28 08:59:45","1380032"
"102222869","6117092","0","*THE* bomb. That is to say. THE END.

````ul>* {
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: -moz-none;
    -o-user-select: none;
    user-select: none;
}```` [selects everything in an unordered list, and makes it un-selectable, rather than trashing the whole view tree.] Thanks for the lesson. My button list is looking great, and responding correctly to screen tapping and pressing, rather than launching an IME (android clipboard widgets).","2019-09-12 06:54:33","3370790"
"39452864","246128","2","According to [ss64's docs](http://ss64.com/bash/pwd.html), `pwd` takes a `-P` argument. The description states that the `-P` argument ensures the path contains no symbolic links. Could this argument be used to follow symbolic links instead of the loop?","2014-08-14 03:13:30","1394393"
"102226624","20241145","1","I tried but it seems when i try to pull it is not working and giving error like `Your local changes to the following files would be overwritten by merge`","2019-09-12 09:03:57","3560140"
"102226654","1274057","1","I tried but it seems when i try to pull it is not working and giving error like '`Your local changes to the following files would be overwritten by merge`","2019-09-12 09:05:00","3560140"
"102228841","2003505","0","You may be interested in this script which simplifies the difference between deleting a local branch AND a remote one: https://www.tlbx.app/blog/delete-any-git-branch-the-easy-way","2019-09-12 10:11:40","11814519"
"39459860","10916838","275","As the guy who implemented pushState in Firefox, I feel an odd mix of pride and revulsion at this hack.  Well done, guys.","2014-08-14 06:37:25","61394"
"118360396","509297","1","@aguadopd
You are absolutely right.
The solution is to have the indices shifted to the right, centered just below the characters, and notice that the stop is always excluded. See another response just below.","2021-04-05 09:32:00","395981"
"71597496","16259217","3","But one should be cautious while using ChainMap there's a catch that if you have duplicate keys the values from first mapping get used and when you call a `del` on say a ChainMap c will delete the first mapping of that key.","2017-02-14 05:14:37","2436741"
"26040119","17828251","34","`sum= 3137536` - clever. That's kinda obviously not the point of the question. The question is clearly about explaining surprising performance characteristics. I'm inclined to say that the addition of doing `std::partition` instead of `std::sort` is valuable. Though the actual question extends to more than just the synthetic benchmark given.","2013-07-24 04:31:30","85371"
"102238066","55297455","3","This is what ACTUALLY makes it to be just like the remote. The clean is important.","2019-09-12 02:39:39","1094268"
"102238270","16956810","0","This solution is to find a pattern (regex matching), not a specific text, which might contain symbols that need escaping.","2019-09-12 02:45:21","5874981"
"87185436","49747717","0","I am not sure, only sure that works in windows. In linux what is the separator to concatenate two commands in a single line? (not the pipe, somply concatenate without passing the outoput)","2018-04-29 08:53:00","571410"
"87189909","1181809","2","here's is a simple example http://www.jquerypot.com/how-to-check-an-element-is-visible-or-not-with-jquery/","2018-04-29 01:28:08","5547046"
"102247312","52704","18","@Paulo: starting in July 2019, `git status` gives the suggestion: `git restore`. `git restore` is a new command exactly for this purpose. See [my 2019 update](https://stackoverflow.com/a/57880896/9210961).","2019-09-12 08:39:49","9210961"
"26048383","17828251","18","@DeadMG: this is indeed not the standard dichotomic search for a given key, but a search for the partitioning index; it requires a single compare per iteration. But don't rely on this code, I have not checked it. If you are interested in a guaranteed correct implementation, let me know.","2013-07-24 08:37:31","1196549"
"39485897","901712","0","It's important to note everyone, that there is a colon between the opening single quote and the word ""checked."" It represents a pseudoclass selector of the checkbox. I just made the mistake of not copying and pasting the code and missed the colon. Frustrating.","2014-08-15 03:16:34","1933545"
"118389469","22654961","0","git push --force is necessary to replicate at the repo","2021-04-06 08:43:10","727266"
"118394485","40775470","0","This is very clear explanation about declaration in JS ... And suddenly realized where is my problem in one of the `for` loops :-|","2021-04-07 03:04:50","1196983"
"71639291","1274447","0","Just in case you wanted to remove only a few cached files but you removed all of them because ""git rm --cached -r ."" and you immediately deeply regret it, this will help - ""git reset HEAD .""","2017-02-15 03:22:33","726771"
"118400088","22654961","0","`+` in front of refspec works as `--force` for that refspec.","2021-04-07 08:36:54","390363"
"102282066","417142","0","@o0'. Parameters. Especially user-defined ones.","2019-09-14 05:13:28","1489243"
"87226797","40857703","0","You can check `if hasattr(x, '__iter__')` instead of importing/checking against `Iterable` and that will exclude strings as well.","2018-04-30 04:46:07","1797103"
"87227875","46751150","3","Your short answer might be VERY wrong. HTTP PUT is free to be repeated by HTTP proxies. And so, if PUT is actually doing SQL INSERT it might fail second time, which means it would return different result and so it would not be IDEMPOTENT (which is the difference between PUT and POST)","2018-04-30 05:27:03","569051"
"71644530","16259217","9","@Prerit What else would you expect it to do?  That's the normal way chained namespaces work.  Consider how $PATH works in bash.  Deleting an executable on the path doesn't preclude another executable with the same name further upstream.","2017-02-15 07:24:40","424499"
"118415020","13106558","0","An explanation would be in order. E.g., what is the idea/gist?","2021-04-07 05:18:13","63550"
"118415297","26305089","0","An explanation would be in order.","2021-04-07 05:29:33","63550"
"118415430","36913076","0","What is `#end` for?","2021-04-07 05:34:49","63550"
"118415842","58297652","0","An explanation would be in order. E.g, what is the idea and how is it different from the previous 50 answers 11 years later?","2021-04-07 05:49:54","63550"
"118420457","16957078","1","I would add `i` option for case insensitive search","2021-04-07 09:07:28","547050"
"71663990","16259217","3","@Raymond Hettinger I agree, just added a caution. Most people may not know about it. :D","2017-02-15 03:15:26","2436741"
"39526585","16016476","0","IDN addresses are not validated (info@üpöü.com)","2014-08-17 05:38:38","2360439"
"71667426","21057032","3","@hiroshi Thanks! after trying every darn solution from a dozen different people this is the one that finally worked...whew ! Even a git stash did nada. The save - u took care of untracked. reset hard /clean force/etc none of these did anything for me.","2017-02-15 04:26:12","4071413"
"39531546","7251912","6","@marnen-laibow-koser: yup, it must have been incompetence to use the available YAML libraries for Java and Perl and expect the YAML produced by each to be consumed by the other without error. That YAML interop was an issue, but JSON interop wasn't, is entirely explained by my lack of knowledge.","2014-08-17 11:32:00","23987"
"39531551","8888015","0","I just use ""git fetch"" to get the upstream branch and then reset when I need to fix a bunch of files. You can get the upstream branch with ""git branch -vv""","2014-08-17 11:32:15","2497650"
"10069447","40894","0","This actually makes sense. ConcurrentHashMaps gives you freedom of synchronization and debugging is lot more easier.","2011-11-19 02:55:20","467413"
"26096880","59839","2","should I use `[ ]` or `[[ ]]`?","2013-07-26 03:45:47","1099531"
"10077592","237176","25","""Proven"" is a strong word. JS engines constantly improve, and execution time measured 3 years ago is terribly outdated.","2011-11-20 08:09:37","37020"
"10078520","237176","0","@orip excellent point. But even so, for the slowest browser out there it's still valid. For the modern browsers the difference is either negligible or irrelevant (since they already support indexOf). I've updated the answer, thanks.","2011-11-20 10:40:01","401510"
"10079427","237176","2","@Damir - I agree. Perhaps change the sample to use indexOf if available, just so people copy-pasting this code blindly will get the best performance they can.","2011-11-20 12:45:20","37020"
"39555550","52713","132","This seems to be the git canonical way.  i.e. exactly what git tells you to do if you type `git status`","2014-08-18 04:01:58","2483138"
"118444167","5767357","0","`Array.pull()` is what humankind needs the most.","2021-04-08 04:03:28","13230118"
"87268080","19876416","2","@Mene It's a truly sad state that Auxiliary's comment has more votes than yours...even if their comment is from 2014 and yours is 2017 that their comment has 6 when it should have exactly 0 and yours only had one (now two) isn't something I'd like to believe.","2018-05-01 11:01:52","9205647"
"87268124","19876416","0","@Mene That being said *`-iname`* is case-insensitive which means it would also find .TXT files, for example, as well as TxT and TXt and so on.","2018-05-01 11:04:37","9205647"
"87268214","30038110","0","Call it my crusade but the word is 'directory'. This isn't Windows (which used to use 'directory' anyway - pre 9x). Please stop saying 'folder'. As for your last command you don't even need the '/' just FYI.","2018-05-01 11:12:12","9205647"
"87268368","28186178","0","`-name '*.*'` isn't what you say; it wouldn't pick up on a file called 'file' because the pattern doesn't equate to that (no .ext); `*` would however (well . files aside). But there's another thing: if you want all files why bother specifying a file name in the first place? No other comment - except that it's nice to know that there still are people who don't use the MS terminology 'folder' (which really after saying it enough I wouldn't add but I wanted to point out the slightly incorrect statement you made with file names - as well as the redundancy/uselessness in the case of 'all').","2018-05-01 11:25:18","9205647"
"87268545","33918835","0","*'find is the standard tool for searching files containing specific text on Unix-like platforms'* seems rather ambiguous to me. Even besides recursive `grep` `find` doesn't directly search the inside of files for text. And maybe those additional tools are useful to some but old timers and those whoa are well accustomed to e.g. *`grep`* wouldn't give them any time at all (well I certainly won't). Not saying they're useless though.","2018-05-01 11:36:48","9205647"
"87268566","46901563","0","@Pathros Probably to do with recursion enabled and what directory you specify. Put another way recursion does change things in that way.","2018-05-01 11:38:17","9205647"
"71681244","39067220","15","This [blogger found python's ternary operator to be unnecessarily different than most other languages](https://archive.is/yqwSh).","2017-02-15 11:08:50","471376"
"39564053","7251912","2","@toolbear Sounds like the fault of poorly written libraries; don't blame the format for that. And yeah, your claim of quoting ambiguities suggests lack of knowledge, though I'd be interested in looking at a particular case if you have one. However, the lack of knowledge might be on the part of the parser implementer, not necessarily you.","2014-08-18 08:38:11","109011"
"39569454","176264","0","I've always understood a `URL` to be what a user would use to navigate to a location (whether manually typed or copied/pasted) whereas a `URI` is the server-side interpretation of the original `URL`. But apparently, there's a lot more to it, as described in the numerous answers.","2014-08-19 01:41:05","988445"
"39570655","6866485","3","[Reset demystified](http://git-scm.com/blog/2011/07/11/reset.html) by Scott Chacon (GitHub CIO, _Pro Git_ author) explains and illustrates the `git reset` command and how to move the HEAD (`--soft`), update the index (`--mixed`, _default_) and update the working directory (`--hard`), from the bottom up.

I've always used Kyralessa's answer as a cheat sheet, but Scott's blog post finally made it click and stick!","2014-08-19 03:13:04","2012372"
"39571109","8888015","2","@mcv To keep your local commits you want `git reset --hard HEAD` which you could then follow by `git merge origin/master`.","2014-08-19 03:47:08","99777"
"118449866","1891377","0","Trying: var a = {b: 1, c: 3, d: { a: 10, g: 20, h: { today: new Date() }}};  Not working for me. But `Object.assign({}, a)` did.","2021-04-08 07:58:00","1877349"
"118450529","8809472","0","Note:  Zak had made an update to add the following.  `const { performance } = require('perf_hooks');` to define the `performance` variable.  Thus for node.js strict implementations this may be needed.  However, this has been removed from the answer because it broke the snippet and will not work with JavaScript used in most other environments, e.g. in browsers.","2021-04-08 08:23:03","508537"
"87271487","33727452","0","Thanks @zangw - the inherited immutability of static function is the key difference it seems","2018-05-02 03:38:58","1570408"
"10099667","2389423","7","@JohnBachir: As long as the ""merge"" isn't really a fast forward, it will result in a new commit that is at the top of the log, and this commit has two parents (or more than 2 if you do an octopus merge). If you remove this one merge commit, then all of the older commits that came in from the merge will disappear, too. To be safe, though, after a reset git will tell you where the new head is: ""HEAD is now at 88a04de <commit message>"". I always look at that to make sure that I ended up where I expected to be. My project uses a standard branch naming scheme to keep things memorable.","2011-11-21 04:36:59","122763"
"26131956","1984225","37","Roger's answer provides good pragmatic advice.  For the official answer I go to the W3C who published ""[URIs, URLs, and URNs: Clarifications and Recommendations](http://www.w3.org/TR/uri-clarification/)"" in 2001.  In a nutshell, W3C says the contemporary view is that everything is a URI.  URL is an informal concept, not a formal concept.  And the confusion dates back to a ""classical view"" which tried to rigidly distinguish between categories of URI (of which URL was one category).","2013-07-26 11:23:24","41191"
"26139774","12946734","0","I agree, this approach prevents problems related to nulls, rather than fixing them by speckling code null checks everywhere.","2013-07-27 10:48:42","1244676"
"26141049","2611372","3","Despite I think, it is not a good idea to extend JSON (without calling it a different exchange format): make sure to ignore ""comments"" within strings.
    {
        ""foo"": ""/* This is not a comment.*/""
    }","2013-07-27 12:09:20","865334"
"71707374","20358548","1","You might be interested in `cytoolz.merge_with` (https://toolz.readthedocs.io/en/latest/api.html#toolz.dicttoolz.merge_with)","2017-02-16 01:44:30","1878788"
"118470263","16957078","0","I keep googling ""find in files"" knowing that I'll end up on this answer on stackoverflow... Every time I need it :-)","2021-04-09 02:26:24","2454746"
"71711009","31478567","0","I suspect performance will not be very good though; creating a set out of each dict then only iterating through the keys means another lookup for the value each time (though relatively fast, still increases the order of the function for scaling)","2017-02-16 02:57:42","818065"
"10120222","682343","0","in recent versions of git (v1.7.1.1 tested )  `git rm -r --cached .` works fine","2011-11-22 03:23:45","69125"
"118481892","17789187","1","One liner: `((InputMethodManager)getContext().getSystemService(Activity.INPUT_METHOD_SERVICE)).hideSoftInputFromWindow(getView().getWindowToken(), 0);`","2021-04-09 11:26:56","1540350"
"10124639","40878","107","If you want to make a HashMap thread-safe, use `Collections.synchronizedMap()`.","2011-11-22 06:48:38","974531"
"71721134","2669690","41","probably a follow-up question: Why does google prepend `)]}'` now instead of `while(1);`? Would the answers be the same?","2017-02-16 06:51:29","2548287"
"10126096","7847199","8","If you're constantly going to negate the return value, wouldn't it be better to simply write a function `isNotNull`?  Doesn't that more clearly indicate your intent?","2011-11-22 08:07:27","69471"
"10126240","7847199","0","@TMN: your are right, ideally I'd like to have both a `isNull` and `isNotNull` method.","2011-11-22 08:14:14","571271"
"10127574","237176","0","extending the Array like this will cause one more issue. if you use for(x in myArray)  it will cycle through the prototype methods too, so you need to check if each x is a property now.  I'm looking right now to see if there is a way to remedy this without having to redo all my for(in).","2011-11-22 09:28:32","299152"
"102364398","1669457","1","""It’s definition is immutable via inheritance."" doesn't make any sense in Python, you can override a static method just fine.","2019-09-17 03:20:18","3601660"
"102365381","419185","6","One of the modules that may import your code is `multiprocessing`, in particular making this test necessary on Windows.","2019-09-17 03:51:31","379311"
"118494335","38898933","0","But with callback functions, I feel like the person on the left in the last frame is being forced *not* to give the other person their phone number. Instead they have to tell the other person, ""Here's everything I want to do with the information from the dude on the phone. Do all that stuff and never tell me."" What am I missing?","2021-04-10 04:52:10","6073987"
"54800590","32484278","1","Since I was just squashing ~100 commits (for syncing svn branches via git-svn), this is far faster than interactively rebasing!","2015-11-03 08:34:17","527489"
"54800625","32484278","1","Reading down, I see @Chris's comment, which is what I used to do (rebase --soft...) - too bad that stackoverflow is no longer putting the answer with hundreds of upvotes at the top...","2015-11-03 08:35:24","527489"
"54801178","32484278","1","agree with you @sage, lets hope they might do it sometime in the future","2015-11-03 08:51:40","5297642"
"102372972","417184","0","Still valid as of September 2019. Just hit the IE/Edge limit on a particularly spicy Splunk query URL.","2019-09-17 08:54:40","958689"
"118500142","57676529","1","I suppose it's a dead thread kind of thing, but this is the correct ""modern"" answer.","2021-04-11 12:13:38","401179"
"102374373","46664125","8","It's an old post, but more pythonic way to achieve constructor accepting either one or two arguments would be using `def __init__(self, first_name, last_name="""")` instead of classmethod `get_person`. Also result will be exactly the same in this case.","2019-09-17 10:08:41","3989236"
"26183397","15587937","2","@Mazen: use `fragment.getActivity().getSystemService();`","2013-07-29 10:56:31","848761"
"102379315","52291636","1","OP asked about removing a particular (one) element from an array. This function does not terminate when one element is found but keeps comparing every single element in the array until the end is reached.","2019-09-18 05:18:23","4125622"
"26185793","17782979","42","Right, you can also just use the bit directly and multiply (`data[c]>>7` - which is discussed somewhere here as well); I intentionally left this solution out, but of course you are correct. Just a small note: The rule of thumb for lookup tables is that if it fits in 4KB (because of caching), it'll work - preferably make the table as small as possible. For managed languages I'd push that to 64KB, for low-level languages like C++ and C, I'd probably reconsider (that's just my experience). Since `typeof(int) = 4`, I'd try to stick to max 10 bits.","2013-07-29 12:05:24","1031591"
"87341405","5189600","3","Here is a practical example: https://feeding.cloud.geek.nz/posts/combining-multiple-commits-into-one/","2018-05-03 06:34:12","6141959"
"87341492","630475","0","@Sirius - I thought the same thing, but technically POST can be used to append to an existing resource as stated in [Section 4.3.3 of RFC 7231](https://tools.ietf.org/html/rfc7231#section-4.3.3) - 4th bullet point. I would consider appending as an update but it could be interpreted differently","2018-05-03 06:36:55","3723459"
"118513208","2432799","0","This another answer worked for me for the existing https repos.  https://superuser.com/a/1082680","2021-04-11 05:38:44","4380588"
"71751179","19442557","8","this worked for me too, where accepted answers and other high voted didn't.
My git version is 2.5.0","2017-02-17 12:46:30","3207147"
"39633589","41454","0","Having been in the middle of a JVM development crew for a number of years I can state that Hashtable's internal synchronization is at least useful for properly pointing the finger at the customer's code when he writes dodgy concurrent code.  We received several complaints of failures inside HashMap (and hence ""obviously"" a JDK/JVM bug), when the cause was concurrent modification.","2014-08-20 03:34:31","581994"
"87347821","29648972","3","Effectively we can wonder if a concept is operational since we fail to simple give  it a stable and understandable definition for all","2018-05-03 11:03:30","9638302"
"87347917","11227809","98","For the record, your data need not be sorted, only [partitioned](https://en.cppreference.com/w/cpp/algorithm/partition) which is a much faster operation.","2018-05-03 11:12:29","1300177"
"39636298","24957191","5","I completely agree with you, and yet there are 883 upvotes so far for the non-answer that just states the obvious. Ideological purity valued above helpful information, that's SO for you.","2014-08-20 04:48:36","870815"
"71760552","348234","1","but 'git reset file' removes other files that had been staged for commit too. not good.","2017-02-17 04:29:45","509882"
"87353913","1109022","0","Need to play with InputMethodManager with the INPUT_METHOD_SERVICE to handle soft keyboard like https://readyandroid.wordpress.com/show-hide-android-soft-keyboard/","2018-05-04 06:09:38","6815931"
"118524685","31604044","0","This is not a good idea when you have a lot of separate files; the more files you create, the more requests will to be sent from the client, which makes the loading longer and also might affect the page SEO.","2021-04-12 08:00:12","6155559"
"26206652","17782979","30","I think indexing with the 0/1 value will probably be faster than an integer multiply, but I guess if performance is really critical you should profile it.  I agree that small lookup tables are essential to avoid cache pressure, but clearly if you have a bigger cache you can get away with a bigger lookup table, so 4KB is more a rule of thumb than a hard rule.  I think you meant `sizeof(int) == 4`?  That would be true for 32-bit.  My two-year-old cell phone has a 32KB L1 cache, so even a 4K lookup table might work, especially if the lookup values were a byte instead of an int.","2013-07-29 10:02:13","166949"
"26208988","17869905","6","But this would cause the page to reload, and since we're always using javascript to modify the page, this is unacceptable.","2013-07-30 12:16:33","448089"
"102401020","37614185","0","Awesome... I already ran the solution for my commit from https://stackoverflow.com/questions/927358/how-do-i-undo-the-most-recent-local-commits-in-git and this was all I needed.","2019-09-18 04:38:54","1153121"
"26216028","271576","4","@Supericy Basically yes, but `equals` (or whatever method) has to check for `null` anyway. Or state explicitly that it does not.","2013-07-30 07:26:30","881272"
"87369561","5480292","0","The background helped me a lot to understand when i got an error: `error: dst refspec ""my-tag"" matches more than one.
error: failed to push some refs` that I could execute `git push origin :refs/tags/my-tag` to specifically delete only the tag, and not the branch.","2018-05-04 01:36:14","413538"
"10192049","3737139","9","Can I suggest square bracket and curly bracket ?","2011-11-26 10:38:08","466826"
"26222984","17869905","0","@HenryHu I figured out that the reason it did not reload was because of AngularJS. See my updated answer.","2013-07-30 10:46:59","490315"
"118541727","25011664","0","[More](https://stackoverflow.com/a/7303710/1705829) on the `:` and why it `deletes`","2021-04-12 06:50:27","1705829"
"118541770","25011664","0","I get still the same error `error: failed to push some refs to 'https://github.com/tik9/tik9.github.io'` when `git push origin :refs/heads/main`. Probably `github` is the culprit.","2021-04-12 06:52:34","1705829"
"87374929","44154594","12","This is actually incorrect as React is one-way data binding","2018-05-04 03:57:05","4866533"
"71784118","671118","1","Also, refer this link for some more information
https://news.ycombinator.com/item?id=3538585","2017-02-18 12:38:56","3951861"
"71784135","671132","0","Also, refer this link for some more information
https://news.ycombinator.com/item?id=3538585","2017-02-18 12:39:33","3951861"
"71784141","671508","0","Also, refer this link for some more information
https://news.ycombinator.com/item?id=3538585","2017-02-18 12:39:49","3951861"
"118544135","38898933","1","@FingLixon It's not a perfect comic by any stretch :-D. The 2nd image should illustrate what happens when you try to read a value too early (before a callback has occurred). The 3rd image illustrates setting up a callback method: The guy on the left basically IS the callback handler: He will be called with the information once it's available and can then do with it whatever he wants. I now think it was a bad idea to have TWO phone calls in this comic: The call to the shop and the call to the guy on the left. I should have simplified that, sorry about that.","2021-04-12 08:44:15","171933"
"118544458","38898933","0","[shrug] Thanks. I just need a lot more practice to truly grasp callback functions.","2021-04-12 09:03:22","6073987"
"26231183","1126089","0","avoid sudden cardiac arrest: use `git clean -n` first","2013-07-30 02:19:40","263900"
"87381551","46210590","0","@PeterMortensen yes working copy, its a git concept though","2018-05-04 07:46:45","2165423"
"102429213","41020368","1","That should be the approved answer.

May I suggest a slightly simplified version:
```git show -p <sha> path/to/file.ext|git apply -R```","2019-09-19 01:49:10","3020980"
"102430482","100146","1","Which version of python does this code example assume and does it matter?","2019-09-19 02:22:13","5056"
"102431757","50113060","2","You can easily get your commit messages back, too, if you happen have them in your CLI (command line) history. I happened to have both the `git add` and `git commit` commands that I used so all I had to do was hit up arrow and enter a few times and boom! Everything was back, but on the right branch now.","2019-09-19 02:57:32","2863830"
"71801010","10563611","1","What we need is $ git pull * <remote>/* - where ""*"" is a wildcard, so it pulls all branches, including those not yet on the local system.  How to do this?  Are we really supposed to checkout/pull every branch just to get the code pulled to our local system?","2017-02-19 05:27:35","2326613"
"71801015","67748","2","And we do this for dozens of branches?","2017-02-19 05:28:33","2326613"
"10210605","630475","84","@Jörg W Mittag: Not necessary. The second time could return 409 Conflict or something if the request has been modified in meantime (by some other user or the first request itself, which got through).","2011-11-27 11:28:22","252025"
"71802664","20783081","5","Suraj, because the question was, how to ""clone all remote branches"" - not how to manually update one at a time.  It appears there is no answer to the actual question - just ways to do a whole lot of typing if you have a lot of branches.","2017-02-19 07:38:59","2326613"
"10212062","630475","2","I think there is no difference in definition. 409 Conflict could be a result even for the first request the client made. In any case it should investigate the problem.","2011-11-28 02:21:32","252025"
"39678862","23853061","20","This worked great one time.  The second time this process did not work the same way:  the ""Switching the base"" link did not show up. And when I hit ""Click to create a pull request"" it created a PR on the SOURCE repo.  NOT what I wanted..","2014-08-21 06:14:03","1056563"
"54818278","31733623","14","@rofrol any version before 1.0.0 is considered unstable and these rules don't apply","2015-11-04 09:35:33","5032692"
"118571157","30479554","1","@KirbyL.Wallace and others confused about the same result for both examples: I believe the difference is in what happens when you click each number, not in what gets outputted. Both examples should show 1,2,3,4,5 on the screen, but in the console, they should result in different values appearing when each one is clicked, compared to the other.","2021-04-13 06:47:27","2756409"
"118571246","38510931","0","This doesn't answer the question; it could benefit from an explanation as to what each block of code is doing.","2021-04-13 06:50:50","2756409"
"118571269","54725672","0","Code should be written out in SO posts, not shared via a screenshot.","2021-04-13 06:51:37","2756409"
"10226673","273227","31","Remember that os.path.exists() isn't free. If the normal case is that the directory will be there, then the case where it isn't should be handled as an exception. In other words, try to open and write to your file, catch the OSError exception and, based on errno, do your makedir() and re-try or re-raise. This creates duplication of code unless you wrap the writing in a local method.","2011-11-28 07:10:39","538507"
"71818233","5189600","3","is there a way to squash using git rebase without using interactive mode?","2017-02-19 09:11:59","1223975"
"102450842","426258","0","`$("".myCheckBox"").prop(""checked"", true)`","2019-09-20 07:56:50","4902660"
"87414165","927386","2","**zsh** users should [turn off globbing](http://bewatermyfriend.org/p/2016/002/) with `noglob git` to get rid of this constant annoyance with caret `^` character.","2018-05-06 10:40:42","2948889"
"118576059","61171280","0","I would argue that pushing with `force` should be actually _encouraged_ with very well communicated impacts of this approach –– Force-pushing goes hand in hand with rebase and synchronization of work so it is better, in my humble opinion, that more people know about the effects of this action, rather than being an exoteric command that people are scared to use.","2021-04-13 11:16:51","2044035"
"102454924","57526143","0","""*B. They are Different in Famework and in Non-C# Contexts*"": While this may be true, the answer doesn't tell what are the differences, it only lists the contexts where they can appear. Technically it doesn't answer the question, and unfortunately doesn't help more than the selected answer.","2019-09-20 10:11:03","774575"
"102455607","48322758","1","In the end someone able to state an actual difference... you may also add the need for a `using System;` directive prior to use `String` type instead of the C# keyword `string`. This should be the selected answer, or at least a highly voted one.","2019-09-20 10:32:24","774575"
"118580813","8888015","0","After doing this I've got a ""fatal: Couldn't find remote ref master"" when I do git pull origin master","2021-04-14 06:22:03","2132157"
"71827074","35644413","7","@AmosM.Carpenter One thing I love about this answer is pointing out the suppress argument, which can help filter out noise that doesn't matter to getting the results we actually want. Grep prints errors like, ""Function not implemented"", ""Invalid Argument"", ""Resource unavailable"", etc. etc on certain ""files"".","2017-02-20 05:58:27","353094"
"118583417","67087842","1","The CPU's instruction and data caches are separate from branch prediction.  (The BPU itself can be considered a cache of branch directions, but if that's what you mean you should be more specific.) All the code will stay hot in the L1i cache regardless of branch mispredict; it's the pipeline itself that's the problem.  The CPU (or the code) isn't ""search""ing for anything, so I'm not sure what point you're trying to make when you talk about ""search time"".","2021-04-14 08:15:48","224132"
"118583498","67087842","0","Without branch prediction, the processor would have to wait until the conditional jump instruction has passed the execute stage before the next instruction can enter the fetch stage in the pipeline. The branch predictor attempts to avoid this waste of time by trying to guess whether the conditional jump is most likely to be taken or not taken. The branch that is guessed to be the most likely is then fetched and speculatively executed. If it is later detected that the guess was wrong, then the speculatively executed, incurring a delay.","2021-04-14 08:19:14","7469973"
"118583654","67087842","1","Yes, that's correct.  If you replaced your current answer with that comment, I'd change my downvote!  But that's not how your answer explains it.  Instead your answer says ""next time the cache memory will be used for searching"" which doesn't even make sense, and certainly isn't an accurate description of the relevant part of CPU internals.","2021-04-14 08:25:01","224132"
"118583891","67087842","1","Also, an unsorted array only ""comes with branching cost"" if your asm has branches in the first place.  A branchless count (like [Why is processing an unsorted array the same speed as processing a sorted array with modern x86-64 clang?](https://stackoverflow.com/q/66521344)) doesn't care about patterns in the data.","2021-04-14 08:33:56","224132"
"54818932","33493854","0","True !!!!!!But different people can have different requirement and That is why we write validations....isn't it?????????","2015-11-04 09:53:36","5453808"
"54820076","31733623","3","So your explanation isn't complete","2015-11-04 10:22:55","588759"
"71839229","35644413","0","@leetNightshade: I'm assuming you're addressing your comment to me because I asked for an explanation on the sparse original post. Please see Fabio's great [revision](http://stackoverflow.com/posts/35644413/revisions) for my previous comments to make sense.","2017-02-20 11:59:14","983430"
"102471861","2003515","0","This answer shows how to delete a branch on a specific remote. For consistency, the prune step should also be limited to that specific remote. Drop the `--all` option and specify the remote: `git fetch --prune <remote_name>`.","2019-09-20 08:45:53","1157557"
"102472865","29884729","1","+1 for providing a complete answer with the `git push -u` command. Maybe obvious to others, wasn't for me.","2019-09-20 09:51:23","1093019"
"118600581","6591218","1","You will not lose changes (unstaged/modified files) when doing this locally. Say for example you are working on a new branch... then before you commit your changes, you realize what you actually did doesn't match the name of the branch. You can safely rename it before committing the changes. This way when it's merged, the names make sense later on. -- Just wanted to add that since it wasn't mentioned in case anyone else wonders what will happen :)","2021-04-14 06:47:32","2703135"
"87445021","348170","0","I always make this work by running `git reset <file_name>`. For more info be sure to take a look at [this article](https://kolosek.com/git-commands-tutorial-part2/).","2018-05-07 12:23:47","1660318"
"118605070","58385294","0","This seems to be missing the point of the question, and is answering whether sorting itself is faster with already-sorted arrays.  This is less surprising because as this answer points out, there's less work to be done (with most sort algorithms other than merge-sort), on top of the branch-prediction effect.  The actual question factors out this effect and is only timing a conditional increment.","2021-04-14 10:29:55","224132"
"71852767","34690541","0","What should you use if not this?","2017-02-20 05:36:29","815680"
"54825333","28617347","0","You can improve the regex, or maybe use Awk instead of `grep`, to improve the filter to avoid false positives.","2015-11-04 12:37:08","874188"
"118606940","509297","1","Addendum to my comment: see my answer with diagrams below: https://stackoverflow.com/a/56332104/2343869","2021-04-15 01:04:50","2343869"
"118607108","338053","1","Apparently, the JS runtime became smarter. Yet wrap it up and:
var abc = (() => function(){})(); console.log(abc.name); // nothing","2021-04-15 01:17:40","26394"
"118610603","16218718","0","I know this post is old, but above example is a wrong use of Java 8's features imho. Do not combine imperative code with optionals like that. When having a fruit list + a name to search for, use the Streaming API: `fruits.stream().filter(f -> name.equals(f.getName()).findFirst().map(Fruit::getName).orElse(""empty-name"");`.","2021-04-15 06:09:22","2049986"
"118610990","11227809","5","@RomanYavorskyi: It depends on the compiler.  If they make branchless asm for this specific test (e.g. as part of vectorizing with SIMD like in [Why is processing an unsorted array the same speed as processing a sorted array with modern x86-64 clang?](https://stackoverflow.com/q/66521344), or just with scalar `cmov` ([gcc optimization flag -O3 makes code slower than -O2](https://stackoverflow.com/q/28875325)), then sorted or not doesn't matter.  But unpredictable branches are still a very real thing when it's not as simple as counting, so it would be insane to delete this question.","2021-04-15 06:31:27","224132"
"118611283","11227809","3","@screwnut: To be fair, though, it still wouldn't be worth partitioning first, because partitioning requires conditional copying or swapping based on the same `array[i] > 128` compare.  (Unless you're going to be counting multiple times, and you want to partition the bulk of an array so it's still fast, only mispredicting in an unpartitioned part after some appends or modifications).  If you can get the compiler to do it, ideally just vectorize with SIMD, or at least use branchless scalar if the data is unpredictable.  (See previous comment for links.)","2021-04-15 06:46:53","224132"
"118612940","59895","0","@l0b0 why isn't this an answer?","2021-04-15 07:58:02","10000823"
"118614237","59895","0","@Rainb I had no idea my comments were popular :) I've posted it as an answer. Editors, if you see this, should I delete the original comments?","2021-04-15 08:48:40","96588"
"26299973","179147","13","Just a little detail. If you do `git commit --amend` while there are staged changes (added with `git add`) they will become part of the amended commit. This is useful to add changes or deletes you forgot to stage (usually I forgot the -A option in the `git add` command when I'm deleting files)","2013-08-01 08:11:42","1791179"
"118614750","1274447","0","thank you. i kept doing git rm and it would remove the whole file!","2021-04-15 09:06:52","4482816"
"118614943","5767357","7","I'm a bit late to the party, but here's my two cents: @a2br: `Array.unshift()` is basically what `pull()` would be if it existed! @Bob: Personally, I think it's good that nothing similar to `Array.remove()` exists. We don't want JavaScript to end up like PHP, now do we? xD","2021-04-15 09:12:57","11715868"
"102488770","17619692","0","This article explains the relationship between HTTP and REST https://www.freecodecamp.org/news/how-the-web-works-part-iii-http-rest-e61bc50fa0a/","2019-09-21 09:32:22","463478"
"10271588","8330107","16","Re-read question: I want to capitalize the first character of a string, **but not change the case of any of the other letters.**","2011-11-30 07:13:07","190829"
"118619833","5767357","0","@OOPSStudio Oh yeah, you're right! I didn't pick a correct name, I forgot `push`'s destructive behavior. I hate destructive methods when removing stuff.","2021-04-15 12:22:26","13230118"
"87469033","2611372","0","One liner JS-compatible regex: `myJson.replace(/(""\/\/.*""|""\/\*(?:.|\n)*?"")|(\/\/.*|\/\*(?:.|\n)*?\*\/)/g, ""$1"")`  https://regexr.com/3p39p","2018-05-08 04:34:11","3246449"
"87469068","41038255","0","@DSimon I agree... this seems to work for many cases: `json.replace(/(""\/\/.*""|""\/\*(?:.|\n)*?"")|(\/\/.*|\/\*(?:.|\n)*?\*\/)/g, ""$1"")`  https://regexr.com/3p39p","2018-05-08 04:36:18","3246449"
"39751512","52713","34","Doesn't work if there are untracked files. Git says `error: The following untracked working tree files would be overwritten by checkout: ...`.","2014-08-24 01:26:26","910062"
"118642696","46692810","0","Why do you set `obj['isActiveClone'] = null` and then delete it?
And why don't you call `obj.hasOwnProperty(key)`?","2021-04-16 07:50:58","480478"
"87493374","1743591","1","This is not necessary.  Looking at the compiled code in ILSpy, the compiler definitely already does this.  Why is this answer upvoted at all, much less 35 times?","2018-05-08 04:14:22","24267"
"102531621","23275699","0","SHOULD is not MUST.
See the explicitly included RFC 2119:
MUST: This word, or the terms ""REQUIRED"" or ""SHALL"", mean that the definition is an absolute requirement of the specification.
...
SHOULD: This word, or the adjective ""RECOMMENDED"", mean that there may exist valid reasons in particular circumstances to ignore a particular item, but the full implications must be understood and carefully weighed before choosing a different course.","2019-09-23 06:04:44","7600876"
"39769724","10701801","0","@NicoBurns, that is a good point, but I think emptying the field by js can help.","2014-08-25 08:43:17","932473"
"71910934","20292655","5","I think this is a poor solution for 2 reasons:
Modifying the prototype of a primitive is a bad idea. If the spec changes and they decide to pick 'capitalize' as a new proto property name, you're breaking core language functionality.
Also, The method name chosen is poor. At first glance, I would think this will capitalize the entire string. Using a more descriptive name such as PHP's ucFirst or something similar might be a better idea.","2017-02-22 01:08:08","2387316"
"39775000","7251912","4","@marnen-laibow-koser, a format that accomplishes the same thing with a simpler spec is better. A pragmatic format with perfect implementations is better than an ideal format with imperfect implementations. Not all the blame for faulty libs lies on the implementors' shoulders; the YAML spec is long, dense, and obtuse. Its Wikipedia entry cites two examples of ambiguities; if one must put an emitter between a human and the format to protect them from ambiguities, the format loses its human friendly claim. JSON claims less and mostly succeeds where YAML claims more and falls short.","2014-08-25 11:45:36","23987"
"39775368","7251912","3","@marnen-laibow-koser, I've refuted your implication of my own incompetence, backed up my claims with specifics, and elaborated slightly on my preferences/biases that inform my YAML critique. Further comments by myself probably have diminishing returns. I'm confident of future readers' ability to make an informed choice. Aside from skirting close to an ad hominem attack, thank you for the discourse. The last word is yours should you desire it.","2014-08-25 11:56:29","23987"
"102537846","38903464","0","This [uses `Math.random` under the hood](https://github.com/dustinpoissant/GUIDJS/blob/62c1dd3af36ea7e23194ac89386ca51ac2d4b541/src/GUID.js#L5). Therefore broken and likely to suffer collisions in browsers with bad `Math.random` implementations. Prefer [uuid](https://www.npmjs.com/package/uuid) since it uses the `crypto` API where available.","2019-09-23 11:06:56","1709587"
"26341722","10361980","33","XXNULLXX could be a name too. You don't know. Maybe people in Indonesia do not have surname and use a variant of XXX as their surname when required.","2013-08-02 08:42:45","236107"
"26344356","14105447","1","There is no such thing as a 'constant referenece' in Java unless the programmer specifies 'finally'.","2013-08-02 10:05:23","207421"
"10323356","271616","3","I agree with @Axel in that IllegalArgumentException implies (as I use it anyway) that a precondition for the argument does not hold as it pertains to a _constraint_ on the parameter. A null parameter is usually just ""a general error in programming"" and not an application/API specific constraint. To maintain a defensive fail-fast strategy, there's nothing stopping anyone for checking for a null and throwing a NullPointerException... which exactly conveys what happened, namely, ""you didn't program it right"" :)","2011-12-03 09:54:02","200802"
"71919665","16957078","0","On Ubuntu 14.04.3 this didn't worked. I mounted the directory in Samba and it found the text.","2017-02-22 07:57:35","1057527"
"26345033","4448825","0","@DanDascalescu I found this useful, so +1 utilitarianism, and -1 anal-retentiveness. He included an example, so its function is clear.","2013-08-02 10:24:50","291180"
"102549156","56323695","0","This! This is the only valid check you can really do that doesn't complicate things needlessly. If you really want to know if the email is valid, send the user an email.","2019-09-24 09:35:16","200987"
"102549204","55807372","0","Doesn't work for Unicode. `validateEmail('køkø@gmail.com') === false`. Forget validation using checks like this. Test for `@` and just send the user an email.","2019-09-24 09:36:58","200987"
"26351905","18018493","173","From [the specification](http://www.ietf.org/rfc/rfc4627.txt): The names within an object SHOULD be unique.","2013-08-02 01:50:02","19068"
"26352220","18018493","2","Right, but it's not a syntax error, and all the implementations handle it the same. So I think it's pretty safe to use. 

Not philosophically, but practically.","2013-08-02 01:57:49","249161"
"54835863","31733623","6","@rofrol yeah, omitting for readability is good sometimes, chances of having anything below 1.0.0 for a dependency in package json are pretty low. see also 20/80 principle, is a great rule for focusing on what matters","2015-11-04 04:42:26","5032692"
"118667170","27458534","0","@KonstaPeltoniemi ""Permutation"" & ""combination"" are related technical terms in certain contexts. This isn't such a context. Moreover, the description they appear in is itself vague & the use of one of those term is vague in it. It just *seems plausible at first sight* that math permutations or combinations might be relevant. (Like Venn diagrams.) PS Moreover, to the extent that they might be useful in a precise description, we would expect ""permutation"" to be more helpful than ""combination"" since in SQL 1. re columns, they have order & 2. re rows, tables hold bags of possibly equal row values.","2021-04-17 04:55:46","3404097"
"39786384","15755041","3","How to remove all tags from the local and remote repos. This is what I was looking for, thanks!","2014-08-25 05:12:45","761963"
"87522144","19095988","2","@Berik: `git clean -X` Remove only files ignored by Git","2018-05-09 11:39:25","4632019"
"26353589","10366981","32","CDATA was added to the XML spec to avoid these types of kludges.","2013-08-02 02:31:04","203705"
"26353673","18018493","103","The order of elements in JSON is not guaranteed. That means the ""last"" item could change!","2013-08-02 02:33:10","13652"
"26353872","18018493","11","@Quentin from the rfc2119: ""3. SHOULD   This word, or the adjective ""RECOMMENDED"", mean that there
may exist valid reasons in particular circumstances to ignore a
particular item, but the full implications must be understood and
carefully weighed before choosing a different course.""","2013-08-02 02:37:37","1278218"
"26353934","18018493","6","@Tracker1 — The order is not guaranteed, because what matters is the parser not the person writing the file. The JSON specification doesn't describe what should happen if there are duplicate keys (it says that you SHOULD make them unique), so some parsers might take the first while others might take the last while others fall over.","2013-08-02 02:39:07","19068"
"26353951","18018493","69","This clearly violates the spec (see above comments), don't do this. https://www.ietf.org/rfc/rfc4627.txt?number=4627","2013-08-02 02:39:29","1013460"
"26353969","18018493","2","@erdeszt — Yes, *the full implications* must be understood. There is no way to understand those without testing every JSON parser (and since people will keep writing new ones …).","2013-08-02 02:39:49","19068"
"26354166","18018493","7","It would be totally reasonable for a parser to discard values of existing keys instead of overwriting them.","2013-08-02 02:44:20","250611"
"26354180","18018493","5","There are over a hundred different implementations currently listed at json.org. I bet at least one of them doesn't handle it the same.","2013-08-02 02:44:40","270654"
"26354277","18018493","10","I once had quite some trouble with JSON files that had double keys just because it was not explicitely disallowed in the spec. Please don't advise others to do this.","2013-08-02 02:47:07","387719"
"26354543","18018493","5","My own implementation (for an embedded system, couldn't find an existing one that matched the requirements) always takes the first key in case of duplicates. You really can't assume this will work.","2013-08-02 02:53:19","2298336"
"26354619","18018493","361","__NO__ - what if the parser is streaming? What if the parser reads it into a dictionary where key ordering is undefined? __kill this with fire__.","2013-08-02 02:55:22","13000"
"26354627","17694248","6","There's good info here, so I won't downvote, but I figured it's worth a comment. By default, XMLEncoder.as will actually encode a true `null` value properly, by setting `xsi:nil=""true""` on the element. The issue actually appears to be in the way the ActionScript `XML` type itself (not the encoder) handles the string `""null""`.","2013-08-02 02:55:35","203705"
"26354752","18018493","2","@Quentin I'm just saying that the spec isn't clear about how to handle this case and this is a clever hack which is ""legal"" but of course discouraged.","2013-08-02 02:58:39","1278218"
"102556196","246128","0","@Andrei LED, this seems to work for the bash bug case: $(cd $(dirname ${BASH_SOURCE[@]}) &>/dev/null && pwd)","2019-09-24 01:04:54","3437661"
"26357201","18018493","17","Downvoted. This is a bad idea, pure and simple. You're abusing a gray area of the JSON specification and it is irresponsible to be promoting such a practice to others. It's a hack; don't do it.","2013-08-02 04:04:41","553"
"26357753","18018493","11","You're begging for this to blow up in your face. Like others mentioned, a parser may outright reject your JSON, echo back the ""comment"" instead of the value, or fail in mysterious ways, like pushing two events for the same key (streaming parsers, most likely). For example, the recent APK signature vulnerability was essentially exploiting the same thing, undefined behavior for multiple non-unique keys (file names), just in zip instead of JSON.","2013-08-02 04:19:59","484441"
"26358882","487278","2","One little thing to add here. There are two types of complexity which is not really covered in this answer. Both are defined by BigO notation. This answer mostly covers how long it takes, which is known as time complexity. There can also be spacial complexity, which refers to how much memory the algorithm will require while running. Spacial complexity can be an important factor to analyze as well.","2013-08-02 04:59:44","1026459"
"26361113","18018493","10","That is wrong on so many levels I don't even know where to begin. I'll just put that here - http://pragprog.com/the-pragmatic-programmer/extracts/coincidence - and try to forget what I just saw.","2013-08-02 06:13:45","227887"
"26361248","10976934","0","@ChrisNash It was not meant to be more readable than XML, just easily readable by humans. http://www.json.org/ And, JSON _is_ easily readable by humans. Comments add additional information, but don't make it any more or less easy to read for humans.","2013-08-02 06:18:24","144833"
"118680627","29648972","0","*""An architectural style called REST (Representational State Transfer) advocates that web applications should use HTTP as it was originally envisioned""*: **Noooooo**, [that's not true](https://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven).","2021-04-17 08:26:04","2455888"
"39796406","1783405","27","I think this thread is unhelpful.  Nothing seems to work, the original question seems to have been lost in many of the answers.  I have read every word, tried everything below, and have no idea how to do what the OP wants to do.","2014-08-26 12:16:17","449693"
"118682949","5201642","0","@MatthiasM re ""git push -f sound dangerous. Take care to only squash local commits. Never touch pushed commits!""
Depends on your workflow and context.  Using GitHub it is normal (actually required) to have to `git push -f` after a rebase of a branch.  This may be no different.  If you're working on your own branch for a PR, there's no problem.  Also, you cannot force-push to a protected branch (like `main` on GitHub).  So there's no danger if your project is set up right.","2021-04-17 11:53:19","2511031"
"39797411","8888015","168","Given the amount of upvotes to this question and answer, I think that git should incorporate a command like ``git pull -f``","2014-08-26 01:33:48","809356"
"87534910","1743591","1","It was upvoted a long time ago. A very long time ago. I would wager that the compiler would have solved this back then, too, though. But it sure *looks* more performant, doesn't it? ;-)","2018-05-09 04:58:17","200985"
"118687207","67144341","0","This doesn't match `me@localhost` (valid) but matches `...@...` (invalid). Please, have a look at these sites: [TLD list](https://www.iana.org/domains/root/db); [valid/invalid addresses](https://en.wikipedia.org/wiki/Email_address#Examples); [regex for RFC822 email address](http://www.ex-parrot.com/~pdw/Mail-RFC822-Address.html)","2021-04-18 08:15:15","372239"
"39804280","487278","3","@Josh `log(n^c)=c*log(n)` and `O(c*log(n))=O(log(n))` when c is constant. So, `O(log(n^2))=O(log(n^3))=O(log(n))`. As a result, changing log base will not affect the big O notation and the statement you quote is correct.","2014-08-26 07:55:04","3759505"
"26372952","18018493","2","This is a great hack in todays context. JSON parsing is streamlined both on the server side and browser side. All browsers after and including IE8 support JSON.parse. So really everybody should be using the built in JSON parse. You will use a custom parser for legacy reasons only. And it is highly unlikely the built in JSON parser will change its behaviour and break backward compatibility.","2013-08-03 06:13:00","448587"
"26373053","18018493","1","... continued from above comment by me.
The only thing we need to do now is to standardise it so that it is not confusing to the user. For example we could indicate that it is a comment by doing something like ""** this is a comment **""","2013-08-03 06:21:16","448587"
"118691673","59895","0","A robust and Mac/Linux-friendly solution is HERE=$(cd ""$(dirname ""$BASH_SOURCE"")""; cd -P ""$(dirname ""$(readlink ""$BASH_SOURCE"" || echo .)"")""; pwd) - explanation (with simpler variations) here: https://www.binaryphile.com/bash/2020/01/12/determining-the-location-of-your-script-in-bash.html","2021-04-18 01:22:34","75182"
"26382261","826814","8","If you're selecting a set of comments from a chat thread and each comment has an upvote/downvote button next to it, then it would be nice to select the text without the other stuff. That's what the user expects or wants. He doesn't want to copy/paste the button labels with every comment.","2013-08-03 04:52:21","5114"
"118702387","67144341","0","Yeah this isn't meant to be a catch all solution but rather a human readable regex that works for most cases - basically a simple regex to filter out most the rubbish","2021-04-19 12:35:45","1205871"
"26387234","18018493","27","As we've been working on RFC 4627bis at the IETF in the JSON working group (join us and help! http://datatracker.ietf.org/wg/json/), we have found four different approaches that implementors have used for duplicate names in an object:  use the first; use the last; report all of them and let the caller pick one; return an error and stop parsing.   If your data can't survive all of those approaches, it won't interoperate in practice.","2013-08-03 10:03:30","8388"
"26389956","18018493","3","Bad hack. It's JSON parser matter. At least IAM policy file (AWS) doesn't accept duplicate JSON key. http://www.microsofttranslator.com/bv.aspx?from=&to=en&a=http://dev.classmethod.jp/etc/adding-comment-to-json/","2013-08-04 03:06:42","374851"
"39819806","487278","0","@hk6279 and I agree with you. But the answer isn't talking about log(n^c), it's talking about changing the **base**. Reread my comment.","2014-08-26 02:51:28","2602718"
"26394436","105034","3","David Bau provides a much better, seedable random number generator at http://davidbau.com/archives/2010/01/30/random_seeds_coded_hints_and_quintillions.html I wrote up a slightly different approach to generating UUIDs at http://blogs.cozi.com/tech/2010/04/generating-uuids-in-javascript.html","2010-05-04 11:09:46","6364"
"39823248","3737139","0","Amazing post. Even as an senior php developer this is very handy to reference at times when I need to verbally explain things to my team.","2014-08-26 04:21:13","2697957"
"10368908","6989665","6","SHA-512 is also fast, so you need thousands of iterations.","2011-12-06 09:51:41","6475"
"102589796","16956844","1","freaking life saver!! What takes a solid 60 seconds in notepad ++ takes about 2 seconds using this command. I was missing my life :O","2019-09-25 12:58:57","1437261"
"26400732","18018493","11","This is one of the worst answers I've ever seen on stackoverflow. It can break at any time and it is not so smart as it doesn't make it especially readable like regular comments. One may always wonder if we have an item that is a comment or a real piece of data. JSMin seems like a much cleaner (and more readable) solution. That said, the IT industry should still thank you for the joke.","2013-08-04 05:28:56","1408843"
"102591137","244858","1","Agh! ... Whoever designed the spec did they never imagine it ever being used for configurations files where comments come in really really handy.  Some things like Microsoft.Extensions.Configuration.Json manage seem to ride out //blah comments, whereas others like powershell ConvertFrom-Json do not. So be careful with adding comments.","2019-09-25 01:35:34","2668869"
"26406041","18018493","0","Solr uses multiple Keys. This is incompatible with the major opensource search server!!!","2013-08-04 10:57:48","446497"
"10384649","3737139","130","I ran into this problem a lot too (not being able to search for special characters), which is why I made [SymbolHound](http://symbolhound.com/), a search engine that doesn't ignore special characters. I also posted it on [StackApps](http://stackapps.com/questions/2690/symbolhound-search-stackoverflow-for-special-characters).","2011-12-06 06:34:37","1060522"
"26413642","18018493","1","combine that with [Eli's answer](http://stackoverflow.com/a/244858/1317451), and insert duplicate `""_comment""` keys all around, then you get the best of both worlds.","2013-08-05 07:47:07","1317451"
"39836310","487278","0","@Josh I don't get your point even reread your comment several times.  I know changing log base will affect the representation format of logarithm itself, but the Big O notation will not be affected as stated in my comment. Since the original statement only claim Big O notation will not be changed, I cannot found the relationship of your comment and the original statement.","2014-08-27 01:17:26","3759505"
"87579558","37131496","0","While this is good and true, how exactly does this alone relate to the quesiton being asked?","2018-05-10 09:06:04","5601591"
"26420721","18018493","0","If you have a parser that errors when a duplicate key is found to prevent data loss by mistake, this would break... It is not a good idea to create comments this way, as they aren't comments and if the parser was using some logic so it wouldn't read top to bottom it would break too. Please don't use this as it is against the spec.","2013-08-05 11:43:27","2640007"
"102615356","56694491","0","great clean solution, but this will not work if the file is symlinked.","2019-09-26 08:43:04","1296104"
"39846901","7359734","26","Merge bugs:

http://www.mssqltips.com/sqlservertip/3074/use-caution-with-sql-servers-merge-statement/","2014-08-27 09:38:01","161040"
"102619494","22654961","0","A small warning: `git branch -f master <something>` will reset the tracking information on the master branch. So if you had set the upstream of `master` to anything other than `origin/master`, that setting will now be lost.","2019-09-26 10:50:29","99777"
"118744406","6186799","0","Good point. If 'string' was not invented, we would not have any confusion and not need this pointless discussion. All our apps would just run fine with String. 'int' seems useful if you don't care about the bit size, which happens most of the time, and 'string' seems only added for consistency.","2021-04-20 12:20:32","1845672"
"26429988","10701801","0","Instead of z-indexing the input, how about leaving it as a completely normal-looking `<input type=""text"" name=""email"" />` and then z-index something over the top of it?","2013-08-05 03:54:04","1094772"
"39861759","25425660","1","good answer, but `activity.getCurrentFocus()` can return `null`","2014-08-27 03:59:00","2439721"
"87601479","11227809","46","Another observation is that you don't need to sort the array, but you just need to partition it with the value 128. Sorting is n*log(n), whereas partitioning is just linear. Basically it is just one run of the quick sort partitioning step with the pivot chosen to be 128. Unfortunately in C++ there is just nth_element function, which partition by position, not by value.","2018-05-11 12:45:08","5649936"
"72002582","16839350","0","There is nothing in the question about lines.","2017-02-24 12:10:05","207421"
"10419611","3516699","2","nice name for the function! It's name is identical to the PHP equivalent. There is actually an entire library of PHP functions written in JS; it's called PHP.js and to be found on http://http://phpjs.org/","2011-12-08 02:29:12","942206"
"102637006","23275699","1","Good reference. A better reasoning against using duplicated keys is the standard's quote ""When the names within an object are not unique, the behavior of software that receives such an object is unpredictable."". Also now I understand why the standard was not ""MUST be unique,"" this makes a validator simpler, it only needs to track [ and {, it does not need to know which keys were used already.","2019-09-26 08:22:32","300224"
"26442824","64966","21","It is also removing all files inside .gitignore. I need to delete only files/folders which are new and not in .gitignore","2013-08-05 11:02:34","2215679"
"39875221","21683994","5","Which is what the OP assumed: that ""((a)-->)"" was the maximal munch. It turns out that the OP's original assumption was incorrect: ""-->"" is not a maximum valid operator.","2014-08-28 12:41:45","1335492"
"118769478","67162957","0","nice try, but there is a better way mentioned here with rebase","2021-04-21 09:36:13","1211769"
"118776564","26210057","0","To understand this, one needs to understand that unlike in many languages in Java an array is an `Object` itself.","2021-04-21 01:46:46","2893496"
"118776719","66649532","0","One of the most complete answers is bumped to the bottom. Your #3 describes the situation in Java the best.","2021-04-21 01:51:26","2893496"
"118779057","65460603","1","I agree with David Schwartz: there is actually no difference in terminology. The big difference between Java and C++ is that in Java a ""value"" can **never** be a whole object. It's always either a reference or a primitive value. You simply can't pass a whole object in Java at all.","2021-04-21 03:08:26","40342"
"118779812","8333464","19","Fun fact - According to this logic then <body bgcolor=""cabs""> test </body> would give you the color of a California Taxi Cab! The HQ of Netscape was in Mountain View, California!","2021-04-21 03:36:36","6513465"
"118780249","20301160","1","I have tested this on Firefox 26 and it works so I don't believe your reference is correct. Also from the following link http://scrappy-do.blogspot.com/2004/08/little-rant-about-microsoft-internet.html you will see that this was inherited from Netscape so it is not specific to Internet Explorer or Opera!","2021-04-21 03:52:17","6513465"
"26467566","115983","2","You could probably use a [githook](http://git-scm.com/docs/githooks) or [gitattribute filter](http://git-scm.com/docs/gitattributes) to have a `.deleteme` file added to the repo that on checkout gets removed automatically. It will however probably break `git commit -a` and potentially be triggered on _every_ checkout...","2013-08-06 02:58:55","321973"
"10448794","682343","1","If you like `git reset`, try **`git reset *`** instead of `git reset .` - it un-stages all you previously staged files.","2011-12-09 09:58:24","341929"
"87641690","23905052","0","I added second pair of quotes around `dirname` call. Needed if the directory path contains spaces.","2018-05-13 04:35:07","1338062"
"54877789","31298778","58","@mcrumley No, it's worse than that. In general `$a - $b` doesn't even work for numbers; it works only for *integers*. It doesn't work for non-integer numbers, because `usort` casts your comparator function's return values to `int`, which means 0.5 gets cast to 0, which means that two numbers with a difference of less than 1, such as 4 and 4.6, may (depending upon which one gets passed as the first argument to your comparator function) incorrectly compare as equal.","2015-11-05 03:54:44","1709587"
"39905482","932982","4","@GreenAsJade If I understand the answer properly, this does not do precisely what the OP wanted. This creates a directory with one file in it, not an empty directory. In my case, I'm wanting an empty directory.","2014-08-28 06:10:27","200985"
"39905573","8418403","10","@t-mart ""The `.git` prefix convention should be reserved..."" Why? Does git request this reservation?","2014-08-28 06:13:05","200985"
"39905684","8944077","0","After putting the empty folder into the index and committing, is it then possible to `git svn dcommit` it with the desired result?","2014-08-28 06:16:50","200985"
"118799356","64663592","0","What is the result? (I get an [XSS](https://en.wikipedia.org/wiki/Cross-site_scripting) warning from [NoScript](https://en.wikipedia.org/wiki/NoScript).)","2021-04-22 09:20:50","63550"
"54885127","33493854","0","Well, not really. We use validation to confirm that input matches our expectations in order to avoid trying to use badly formatted data in certain ways. In this instance, OP is looking for code which can validate an email address, as it is intended to be. In your instance, you appear to be validating a string to be something which you want it to be. To put it simply, you are validating that a string matches something that you want it to match, which isn't an email address, while OP is looking validating that a string matches an email address. These are not the same things.","2015-11-05 07:11:31","1813394"
"39915915","21510402","0","I supposed if you must use JSONP you could try to use CSRF tokens in some clever (probably insecure) way.","2014-08-29 02:19:32","1856831"
"87665931","44154594","2","@MatthewBrent you are not wrong, but not right also, React props are object and if changed, they change throughout the application, but its not a way that React developer recommend to use it...","2018-05-14 07:34:28","5423108"
"26496284","10044540","8","""Just like in the real world, if you want to rewrite history, you need a conspiracy: everybody has to be 'in' on the conspiracy (at least everybody who knows about the history, i.e. everybody who has ever pulled from the branch)."" Source: http://stackoverflow.com/a/2046748/334451","2013-08-07 10:10:25","334451"
"39926527","932982","1","""Empty **in the repo**"".  In your working copy, yes, you have the .gitignore file.  Most people consider .git-something files to be ""not there"" for working purposes: IE for all intents and purposes it's considered an empty directory.","2014-08-29 10:43:03","554807"
"72069008","271557","3","No, [do not use assertions in production code](http://stackoverflow.com/a/21245984/3779853).","2017-02-26 12:54:41","3779853"
"87673074","22345808","0","In the `pre-5.x` npm the symbols (`~`/`^`) were affecting the downloaded dependencies during `npm install`. After `5.x` the existence of `package-lock.json` next to `package.json` prevents this. For updating project dependencies based on the rules described in this post, `npm update` can be used (which updates also `package-lock.json`), followed by commit of both `package.json` and `package-lock.json`.","2018-05-14 10:58:00","1555615"
"87677567","105372","3","You may want to check out [the ins and outs of C# enums](https://github.com/steaks/codeducky/blob/master/blogs/enums.md), which discusses this as well as other useful enum tidbits","2018-05-14 12:53:13","1142970"
"87684595","2590281","0","@skofgar PUT is supposed to be idempotent (multiple identical requests have the same result.) That's a powerful concept and makes developers' lives infinitely easier because it's a reliable operation. I agree w/ the user confusion in that scenario, but I think you want to address that in the front end as much as possible.  It's also not uncommon behavior and is sometimes very helpful (e.g. if editing in one browser tab, and you delete it in another by mistake, then saving restores the resource in its entirety)","2018-05-14 03:41:18","3499424"
"72090005","27079977","1","You know that the font scale factor applied to `sp` is a factor, right? Anything that affects `dp` will also affect `sp`. That said, it's still preferable to specify font sizes using `dp` instead of `sp` if your layout is very tight and the larger sizes won't fit - better to have text smaller than what the user wants that a completely messed up layout. But in the first instance you should always strive to respect the user's font size preference - even the biggest setting is not THAT big.","2017-02-26 10:06:15","885306"
"72095415","927358","0","See this guide for Git commits undo on Local, Public and Git Branch [How to undo Git Commits like pro](http://justcode.me/git/undo-git-commits/)","2017-02-27 03:53:19","1939163"
"39955985","681238","0","@Jasper: There is not bigger overhead than checking object in a cycle for key values like in the most popular answer here :)","2014-08-30 12:00:13","8559"
"72102007","27990405","0","This works in Firefox 51. I'm just going to use this method; the other browsers will catch up soon enough for me (given that no functionality is broken if the to-be-standard style is not applied).","2017-02-27 08:39:29","217867"
"26527169","7359734","18","MERGE can also be used to DELETE. But be careful with MERGE as the TARGET table cannot be a remote table.","2013-08-08 03:58:09","1377865"
"87701269","244858","0","But be careful! Some fully parsing engines need something as @JsonIgnoreProperties annotation, or else they will see unknown field as an error.","2018-05-15 05:08:40","715269"
"118850803","67232841","3","Note: The _safely_ in ""now we can edit internalObject safely"" depends on the implementation of the `clone()` method (i.e. ""deep"" or ""shallow"") and how far down the object tree your edits have an impact. For this simple example it is correct though.","2021-04-24 04:59:00","1347968"
"39963532","1644241","4","This is a very important idiom to me for the reason given in the comnmet by @PeteKirkham, as I often need to do decreasing loops over unsigned quantities all the way to `0`. (For comparison, the idiom of omitting tests for zero, such as writing `while (n--)` instead for unsigned `n`, buys you nothing and for me greatly hampers readability.) It also has the pleasant property that you specify _one more_ than the initial index, which is usually what you want (e.g., for a loop over an array you specify its size). I also like `-->` without space, as this makes the idiom easy to recognise.","2014-08-30 08:08:39","1436796"
"39963634","1644241","0","... Actually, I somewhat regret that writing `while(0<--n)` does not do the same thing as writing `while(n-->0)`, and the former is usually not what you want. On the other hand, at least in C++, you can make it descend twice as fast with `while(0<----n)`.","2014-08-30 08:16:12","1436796"
"26537784","487278","7","@Moberg the fact that f(n) is O(g(n)) does not exclude the possibility that f(n) is O(h(n)) for an h(n) that is different from g(n). Trivially, n is O(n) and also n is O(2n). In fact, O(log(n)) is a subset is of O(n). So in the example of log(n), log(n) is both in O(log(n)) and in O(n). You are confusing Theta notation and big O notation.","2013-08-08 10:49:50","1381569"
"72117006","115983","0","You can't. [Just create an empty file, such as `.keep`, in the directory.](https://stackoverflow.com/a/29884569/405550)","2017-02-27 02:52:45","405550"
"26538549","487300","6","This answer also confuses big O notation and Theta notation. The function of n that returns 1 for all its inputs (usually simply written as 1) is actually in O(n^2) (even though it is also in O(1)). Similarly, an algorithm that only has to do one step which takes a constant amount of time is also considered to be an O(1) algorithm, but also to be an O(n) and an O(n^2) algorithm. But maybe mathematicians and computer scientists don't agree on the definition :-/.","2013-08-08 11:11:24","1381569"
"118864643","31733623","0","I like this answer, except the `3.*.*` in the table seems confusing. It implies that 3.8.8 could satisfy the `^3.9.2`. It would not","2021-04-24 09:14:19","163679"
"102754663","9180445","2","These failed for me, but doing them in the ""right"" order, ie. in the chronological order of commits, worked for me: `git cherry-pick 9aa1233 453ac3d 612ecb3`","2019-10-01 02:54:21","15459"
"87722669","19208820","4","Actually, it hasn't been posted. Not as an answer, but as a comment to an answer, and even then it's not clear and concise. Thanks for posting it, Mina Gabriel.","2018-05-15 02:52:54","3116376"
"39985199","79936","6","Also the comments about scope and allocation are wrong - Scope is not connected to the stack or the heap at all. *Variables on the heap must be destroyed manually and never fall out of scope.* isn't correct; it would be more correct to say ""Data on the heap isn't freed when variables that reference them go out of scope. It's up to you (or the garbage collector) to free them.","2014-09-01 02:12:45","234"
"87727753","47942152","3","The other innovation in ARM is the addition of the S instruction suffix, also optional on (almost) all instructions, which if absent, prevents instructions from changing status bits (with the exception of the CMP instruction, whose job is to set status bits, so it doesn't need the S suffix). This allows you to avoid CMP instructions in many cases, as long as the comparison is with zero or similar (eg. SUBS R0, R0, #1 will set the Z (Zero) bit when R0 reaches zero). Conditionals and the S suffix incur zero overhead. It's quite a beautiful ISA.","2018-05-15 05:06:54","3950982"
"87727802","47942152","3","Not adding the S suffix allows you to have several conditional instructions in a row without worrying that one of them might change the status bits, which might otherwise have the side effect of skipping the rest of the conditional instructions.","2018-05-15 05:08:22","3950982"
"87728132","49999727","10","This will break down if there are repeated elements in the list as `index()` will search for the first occurrence of `x`, not mentioning the O( ***n^2*** ) time required to look up each element.","2018-05-15 05:17:59","4320693"
"39991785","681238","4","@Thevs the overhead is bigger, even if it *might be* (I'm not sure it is under every circumstance) in the same order of magnitude. However, that answer involves returning false as soon as a different property is found which makes the story is different all together...","2014-09-01 08:32:21","145287"
"102763771","43311380","0","`export const arrayRemove = (array, value) => [...array.filter(item => item !== value)];` Perhaps this could be simpler.","2019-10-01 09:04:35","2789024"
"39994228","12016806","6","Except that ++> can hardly be used in a while().  A ""goes up to..."" operator would be ++<, which doesn't look anywhere as nice.  The operator --> is a happy coincidence.","2014-09-01 09:46:25","3450840"
"102765800","43311380","0","@darmis Simpler, yes, but doesn't do exactly the same thing. Also don't think you need the `[...` -- `.filter` should already return a copy.","2019-10-01 11:05:54","65387"
"10538794","229157","3","If you are going to go this route, why not bind the click using jQuery as well?  Part of the great thing about using jQuery is the ability to seperate your javascript from your markup.","2011-12-14 10:39:35","446921"
"72139761","271526","1","How about wrapping the object with Optional . Use optional where ever you see possibility of nulls","2017-02-28 05:13:45","2787149"
"10539353","135248","34","`<span>`s are not meant to *do* anything. `<A>`nchors and `<buttons>` are used for that!","2011-12-14 11:15:58","148845"
"39999278","12184274","134","The other two answers don't actually work, this one did.","2014-09-01 12:23:56","421398"
"102772065","43311380","0","@mpem My first impression was that could be a simpler way to do this but I agree is not doing the same thing. And yes the `[...` it is not needed in this case  so even simpler :) thanks for that.","2019-10-02 07:21:04","2789024"
"40006362","21422128","1","This is good for an initial bare directory, but what if it starts to fill with files? Then Git will notice them and claim them as untracked files.  The selected answer here works far more elegantly to allow one to keep a directory but then safely ignore the contents.","2014-09-01 04:20:26","117259"
"10546303","246128","0","let me try that again...

The while loop breaks if any symlink in the chain is a relative symlink. Consider the following setup:

    /bin/bar -> /etc/alternatives/bar -> /usr/lib/bar-bsd -> bsdbar

You'll need to change the while loop to

    while [ -h ""$SOURCE"" ] ; do 
        LAST_SOURCE=""$SOURCE""; 
        SOURCE=""$(readlink ""$SOURCE"")""; 
        if [ ""${SOURCE:0:1}"" != / ] ; then
            SOURCE=""$(dirname ""$LAST_SOURCE"")/$SOURCE""; 
        fi; 
    done","2011-12-15 09:47:26","244326"
"10548071","4675413","1","Same here. Sometimes only the very hard solution works, it happens often that only reset and clean are not enough somehow...","2011-12-15 11:28:09","170443"
"26569727","178386","18","I am toggling the element mamually using this selector. $('element:hidden') is always true for me!","2013-08-09 07:18:33","1063194"
"40010395","7866699","22","Sloppiness may have cause it to be commonly taught that there are only two verbs you need: GET and POST.  GET to obtain, POST to change.  Even PUT and DELETE were performed using POST.  Asking what PUT really means 25 years later maybe a sign we learned it wrong at first.  REST popularity drove people back to the basics where we must now unlearn past bad mistakes.  POST was overused and now commonly taught incorrectly.  Best part: ""POSTing twice with the same data means create two identical [resources]"".  Great point!","2014-09-01 07:36:14","244994"
"118893242","44201563","0","says something about the learning curve of vi, that you should know about state machines before attempting to use it","2021-04-26 09:21:39","543864"
"10552685","3104376","2","Comments do not make sense in JSON. JSON is not meant to be a file format, just a data-packet interchange format. If you need something like commented JSON, use YAML instead.","2011-12-15 03:34:08","109011"
"26572433","487278","3","@JacobAkkerboom Ah, yes that's also true. I'm reading the post in the correct way now. It wasn't all that clear. Although, I'm not confusing it with Theta. Because I have never heard of Theta before. But apparently it is average instead of an upper bound.","2013-08-09 09:21:35","393010"
"118895126","44201563","0","Unix is created by programmers for programmers","2021-04-26 10:32:07","1697709"
"40012451","21422128","17","The question and the predominant general concern is about adding an empty directory. If it later has a resident file, obviously delete the `.keep` file or just disregard it. If instead the files in the directory are to be ignored, that's a different question altogether.","2014-09-01 09:30:24","832230"
"118897218","1482133","0","IMHO, this is the most accurate answer. If you don't have `readlink`, one can use `realpath` too. Be aware only to use canonical output if needed => `readlink -f`","2021-04-26 11:46:53","5561495"
"10554978","5343267","15","@dhruva-sagar Yes, but as long as git doesn't say you're behind, and you don't fetch, you should be fine.","2011-12-15 05:10:32","498594"
"118897905","122704","0","I was scratching my head debugging again & again & turned out File object wasn't being copied with this method & it was being dropped during the deepclone.","2021-04-26 12:13:39","4109794"
"87753133","21409180","0","json is not ordered, so this will blow up approximately 50% of the time (at least in Go where if the ordering is not defined, it is randomized)","2018-05-16 10:35:10","5188449"
"102787603","1628334","1","What if the branch I am working on is not `master` but `some-new-feature? Is it `git fetch origin`
`git reset --hard origin/some-new-feature` ?","2019-10-02 03:30:55","4512005"
"72166474","9041949","0","I got 'Cannot resolve symbol context', on 7th and 10th line of second block of code.","2017-02-28 05:02:15","1815210"
"72166550","9041949","0","Use getContext() instead","2017-02-28 05:04:15","930391"
"54892667","27727752","4","Not supported for IE and Microsfot Edge (2015) (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes)","2015-11-05 11:04:07","868003"
"102798874","24827594","0","Does some short-circuit? Or does it iterate the entire array even if it's found a value?","2019-10-03 12:06:39","3547347"
"118917434","65401892","0","Be aware of the above, and take a look here: https://github.community/t/syncing-a-fork-leaves-me-one-commit-ahead-of-upstream-master/1435/4","2021-04-27 04:54:22","356307"
"40043228","8944077","3","It's unlikely that this tweak will work with any other tool. Like stated in the warning and the edit, I discourage using it unless in a quite restricted case.","2014-09-02 06:15:54","508831"
"40043851","477578","0","@Andrew: That's not actually the case. Multiple SIDs (chains) are permitted because it's the way multiple logged in devices (e.g. the home PC, work PC, and iPad) are supported. Under a single-chain (single-device) scheme, each time a user switches between devices, the 'theft' warning is raised, eventually rendering it worthless because the user sees it all the time.","2014-09-02 06:36:36","57068"
"118921495","122704","0","@GabrielHautclocq:
1. the proposed solution you're struggling with comes under ES6 (_shallow_ copy). The behaviour you highlight refers to _deep_ copy. Shallow copy only copies the values for the immediate level of the object. If some values are themselves non-atomic, they will be copied by reference.
2. The title ES6 is *NOT* misleading at all. ES6 introduces destructuring as in `{...A1}`, which is better than any `for`-based solution by a landslide.

I have a case of a Python-dictionary-like object, where the values are all boolean. The shallow `{...obj}` alternative works like a charm.","2021-04-27 08:34:22","2571805"
"102814868","2334741","0","Is there any reason `UPDATE FROM` statements are frequently written with aliasing? As far as I can tell it's unnecessary. You could remove the aliases and replace `Table_A` with `Some_Table` and `Table_B` with `Other_Table` throughout that example... no need to give things different names.","2019-10-03 12:50:51","5506894"
"72186960","24743196","3","so to simply check if given string does not contain str1 and str2: `^(?!.*(str1|str2)).*$`","2017-03-01 07:20:19","2803565"
"40046139","246128","3","@x-yuri - FYI, `readlink` is not available in the current form on OSX, hence this method would be best, if you're trying to write a semi-crossplatform script on Linux & OSX using Bash.","2014-09-02 07:52:53","33204"
"102818251","58218112","0","Additionally, you need to disclose your affiliation to any links provided.","2019-10-03 02:27:30","334849"
"118936246","1042676","0","I don't this handles circular structures","2021-04-27 05:42:05","830905"
"118936257","1891377","0","Worse, try `let o = {}; o.o = o; cloneObject(o);`","2021-04-27 05:42:37","830905"
"40062438","477578","0","@JensRoland If you want to allow remember-me for multiple devices, then you have to modify the solution. I think one way would be instead of SID, store IP (hashed) in the cookie and in the DB. The DB would have a pool of IPs, some of them marked as Valid and others marked as Banned. Upon manual login, User's IP is stored in the cookie and in the DB and marked as Valid.
Upon every auto or manual login, the incoming user's IP is checked against the DB (token too). If IP is found and Valid - green light. If IP is not found - then green light, BUT incoming user's IP is marked as Valid and","2014-09-03 09:18:08","560972"
"40062459","477578","0","and the old IP (from the cookie) is marked as Banned in the DB. If owner logs in using old (banned) IP, red light - theft is assumed. Everything gets cleared. This is not 100% proof, as until the real owner comes back, thief will be using the site and also during that time Owners IP might change, but the chances are minimized and multiple devices are allowed. Optionally, the banned IP's could be deleted every month / 3 months, etc, as ISP might assign 'old' IP again.","2014-09-03 09:18:35","560972"
"118947390","14415881","1","great Question!","2021-04-28 06:08:41","4618227"
"40073357","953097","17","The `*` is the tricky thing that makes `chain` less straightforward than the list comprehension. You have to know that chain only joins together the iterables passed as parameters, and the * causes the top-level list to be expanded into parameters, so `chain` joins together all those iterables, but doesn't descend further. I think this makes the comprehension more readable than the use of chain in this case.","2014-09-03 02:13:45","1342079"
"10611433","1126089","0","I needed to add a `-x` to that `git clean` to get it to work for me, for some reason (`-d` wasn't deleting a `.ideas` directory for some reason), but this fixed my problem, certainly.","2011-12-19 12:29:27","205245"
"87797622","49441486","1","You'll get unexpected results passing an arg with space. Using `repr(arg)` instead of `str(arg)` might help by the mere coincidence that python and sh escape quotes the same way","2018-05-17 12:08:29","169828"
"118952594","122704","1","@Ricardo Surely you can see the history of the answer to see that ""(shallow copy)"" has been added after ""ES6"", after I wrote my comment. It's now more clear that this is a shallow copy.","2021-04-28 09:39:47","1076652"
"87802516","178386","3","From [jQuery docs](https://api.jquery.com/hidden-selector): ""using `:hidden` heavily can have performance implications, as it **may force the browser to re-render the page before it can determine visibility**. Tracking the visibility of elements via other methods, using a class for example, can provide better performance.""","2018-05-17 02:00:49","6225838"
"87810584","1274447","0","A hanging point for me was that the Git app (as of May 2018) does NOT handle this properly.  Even if these changes are in a single commit (no other changes), committing with the Git app results in ""Commit failed - exit code 1 received"".  Committing and pushing via command line is what finally resolved this for me using this answer.","2018-05-17 05:38:46","3232832"
"102853202","179147","0","Regarding adding multiline commits messages simply don't close the "" until you have entered all your lines""","2019-10-04 04:53:37","4094614"
"26650206","5871742","22","You may want to ignore the .git directory:  

``find . -name .git -prune -o -type d -empty -exec touch {}/.gitignore \;``","2013-08-12 12:51:41","845034"
"118964070","66956107","0","""immutable"" means ""not mutated"" (i.e. returned value is not changing original value), in your case array is actually mutated.","2021-04-28 04:17:45","450103"
"102868273","57526143","0","""*They are the SAME (exactly the same)*"": no, try this: `string s = nameof (string)` to be convinced.","2019-10-05 01:34:41","774575"
"26653497","14774496","0","this doesn't answer the question of what to do with `href`. if you don't have an `href` attribute on an `a` tag, it won't appear as a clickable link.","2013-08-12 02:17:07","810899"
"26655223","38578","1","Thomas: Actually, you and Mark are both wrong about a different part of the phrasing. ""The outer parts of a venn diagram"" refers to ""A U B \ A ∩ B"". So Mark accidentally directly contradicted himself, though the remainder of his explanation was obviously clear enough to make up for that.","2013-08-12 02:56:53","2539058"
"72239359","24743196","1","Yes, or you can use lazy quantifier: `^(?!.*?(?:str1|str2)).*$`, depending on your data. Added the `?:` since we don't need to capture it.","2017-03-02 09:59:57","726650"
"118982566","61214","0","git clean -f 'untracked file path'","2021-04-29 09:24:48","4046691"
"26672527","105402","2","@Jessy if you need all the names (including the ones with duplicate values), maybe try Enum.GetNames in conjunction with Enum.Parse.  It's going to be a little slow though, I recommend doing it once during initialization (or the first time it's needed) and caching the results into an array.","2013-08-13 02:05:09","398630"
"40126898","10375211","2","It's a [standard method](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys) in ECMAScript 5.1","2014-09-04 10:41:53","262631"
"40127846","24843054","7","Nothing gets ever ""overwritten"" in git. In this case the branch pointer will be set to your new commit and the old commit will get stale if no references are left to it and it might get cleaned up after a few weeks. (Until then others still can find and reference it, e.g. by looking into the reflog.)","2014-09-04 11:47:35","2727750"
"87861173","40878","4","It's obsolete but not deprecated and I'm wondering why this is. I'm guessing removing this class (and Vector for the same reasons) would break too much existing code and annotating with @Deprecated would imply an intention to remove the code, which apparently is not there.","2018-05-19 08:11:01","1041442"
"119004241","40523","0","So what is the difference between an ""object reference"" and the ""value of an Object reference"" then .","2021-04-30 12:48:18","9453953"
"102903790","215731","4","@GregHewgill git has recently introduced `git restore`, it is the more appropriate command going forward. You might want to edit that into your answer.","2019-10-07 11:08:01","3043438"
"26693726","6866485","12","Consider noting that the number in `HEAD~1` can be substituted to any positive integer, e.g. `HEAD~3`. It may seem obvious, but beginners (like me) are very careful when running git commands, so they may not want to risk messing something up by testing this stuff themselves.","2013-08-13 02:37:26","425275"
"119008975","14419537","0","Actually that's the algorithm I had in mind: Assuming you have a limited space for *n* socks, proceed as described. If the new sock taken out does not match any of those already taken out and there are *n* socks out already, put it back and take another (randomly), or search in the rest until you find one matching, allowing to ""free a slot"".","2021-04-30 07:19:36","6607497"
"87874004","26335110","0","got the false positive problem also.","2018-05-19 09:33:55","5958323"
"119021488","60785420","6","Doesn't this mess up the remote upstream branches? Isn't `newbranch` now pointing to `origin/master`?","2021-04-30 03:46:56","2886839"
"26701412","2432799","18","You may also want to set the master upstream branch for your new origin location with: `git branch -u origin/master`. This will allow you to just `git push` instead of having to `git push origin master` every time.","2013-08-13 06:06:59","868404"
"26711058","15702135","1","I can't under stand the difference of 'git reset head <file>' and 'git rm --cached <file>. Could you explain it?","2013-08-14 12:39:07","549487"
"40169915","25545360","3","This doesn't teach me anything that's not covered by the other answers that are at least 6 years old, and which are much more complete and actually try to explain how to distinguish URIs from URLs.","2014-09-06 11:06:06","2427596"
"26722358","15733096","82","Technically, the local and remote repositories are really one and the same. In Git, a repository is a [DAG](http://en.wikipedia.org/wiki/Directed_acyclic_graph) of commits pointing to their parents. Branches are, technically, nothing more than meaningful names of commits. The only difference between local and remote branches is that remote ones are prefixed with `remoteName/`

[Git from the ground up](http://newartisans.com/2008/04/git-from-the-bottom-up/) is a very good read. Once you get an understanding of how Git works - and it's beautifully _simple_, really - everything just makes sense.","2013-08-14 09:51:05","833844"
"54910222","33275647","15","I didn't downvote, but my thinking is that it isn't substantively helping. The question is obviously asking for a more commandline type answer without having to use an external program, if people were clicking into here, they likely won't be looking for a github for desktop ways.","2015-11-06 11:51:15","3769412"
"72314084","20241145","2","if it's a directory, make sure to add a trailing slash at the end of the directory name. e.g. `git update-index --assume-unchanged .history/`","2017-03-04 01:18:50","2782583"
"119046917","67246473","0","Very elegant solution! Even works if array elements are objects with properties, so you can do `element.property !== value`","2021-05-01 10:31:09","490683"
"54912547","5189560","3","@matt TortoiseGit is your tool. It provides a single function ""Combine to one commit"" which will call all steps automatically in the background. Unfortunately only available for Windows. See my answer below.","2015-11-06 12:57:47","1909531"
"40196323","52713","105","newbie question, what does ""git checkout -- ."" mean semantically?","2014-09-07 07:21:07","1146695"
"72322201","42398224","6","Be careful with de `-D` option. In a batch consider using lower `-d`","2017-03-04 11:41:41","1358777"
"87927729","2590013","11","There is no meaning to the phrase ""a text editor in HEX form"". A Hex editor shows each byte as its hexadecimal value, for example, the byte 1111000 as ""78"". While there may be some text editors which also happen to have a hex editing mode, this is neither common nor useful for anything but the most technical users doing the most technical tasks. Text, by comparison, means ASCII or Unicode, and in text, the byte 1111000 means lower-case `x` character. Not 78. JSON is text in exactly the same way as HTML (text/html). It contains only readable text characters, with structured meaning in them.","2018-05-21 09:53:54","659764"
"26744542","2432799","37","@kelorek or you can just `git push -u origin master` the first time :)","2013-08-14 07:38:01","152948"
"119056964","1628334","1","@SardarFaisal If you want to remove new/untracked files, you can run `git clean` first. Run `git clean -n` to see what would happen (i.e. which files would be removed), and `git clean -f` to actually remove them.","2021-05-02 02:24:40","7957937"
"102967297","5201642","1","If my current branch has branched off 'otherbranch', and I want to squash everything I did on the current branch before I merge it into 'otherbranch', I can do `git reset --soft otherbranch` rather than having to work out how many commits ago that was","2019-10-09 10:50:43","5986907"
"26752541","18245156","5","Being asked to explain something mathematical without mathematics is always a personal challenge to me, as a bona fide Ph.D. mathematician and teacher who believes that such a thing is actually possible. And being a programmer as well, I hope that no one minds that I found answering this particular question, without mathematics, to be a challenge that was completely irresistible.","2013-08-15 02:09:07","2188862"
"72340039","42398224","0","In my case, I'm almost always deleting after merging (or without the need to merge).  Using lower `-d` will require the branch be [merged](https://git-scm.com/docs/git-branch#git-branch--d) before deleting, using `-D` forces the branch deletion.","2017-03-05 05:45:30","39803"
"40218236","122102","12","`eval()` is generally a bad idea because [many Javascript engine's optimisers have to turn off when dealing with variables that are set via `eval`](http://stackoverflow.com/questions/15447519/can-eval-optimize). Just having `eval()` in your code can lead to worse performance.","2014-09-08 01:37:45","568458"
"119073817","40878","1","HashTable use single intrinsic lock which result in very poor performance in even in low contention. While Threadsfe counterpart of HashMap i.e. ConcurrentHashMap use lock spliting which is user configurable has multitime better performance even in high contention.","2021-05-03 10:09:19","9072300"
"87954391","2003515","0","Only `$ git push <remote_name> :<branch_name>` worked for me.","2018-05-22 02:44:23","657427"
"119081127","46155","5","@Alex The reason I added this comment is that the suggested regex in the accepted answer will not allow existing live email addresses which is a bad start for a customer, and the really big problem is that even IF the address was accepted it still does not say if it works.

The only way to reliably verify that a supplied email is a working valid email is to send a mail with a verification link.

So, if your use case does not demand that you verify the email, just do a minimal test for @, otherwise use a verification email. Regex will only provide bad user experience.","2021-05-03 02:56:56","479137"
"10748241","630475","680","If I'm not mistaken, what we should be stressing is that PUT is *defined* to be idempotent. You still have to write your server in such a way that PUT behaves correctly, yes? Perhaps it's better to say ""PUT causes the transport to assume idempotence, which may affect behavior of the transport, e.g. caching.""","2011-12-28 02:05:20","416621"
"26771204","15702135","6","@jeswang files are either 'known' to git (changes in them are being tracked.), or they are not 'versioned'. `reset head` undoes your current changes, but the file is still being monitored by git. `rm --cached` takes the file out of versioning, so git no longer checks it for changes (and also removes eventually indexed present changes, told to git by the prior `add`), but the changed file will be kept in your working copy, that is in you file folder on the HDD.","2013-08-15 03:09:40","805284"
"72358355","34757096","35","+1 This should be the marked answer, whilst the other answers offer some clarification, only a bottom up low level explanation can clear up how this tech works, 'processes grouped in their own namespace = container'. Thank you so much, I get it now.","2017-03-05 10:16:20","425357"
"72369731","22345808","1","It's worth noting that you can use [npm semver](https://semver.npmjs.com/) to calculate version ranges for a specific package.","2017-03-06 08:21:54","1463681"
"26791233","16825593","25","""synchronous requests block the execution of code and can leak memory and events"" how can a synchronous request leak memory?","2013-08-16 05:54:22","1450248"
"119114705","67389730","2","This is already covered by the accepted answer (and most others, too). New answers, especially to old questions, should take care to not repeat existing content. Rather, they should focus on *novel* solutions to the problem or answers to the question.","2021-05-04 06:07:33","2756409"
"54917929","19506355","1","Might be smart to push with `--follow-tags`: http://stackoverflow.com/a/26438076/667847","2015-11-06 03:19:46","667847"
"103007398","394814","3","@KalZekdor I read that and expected 1... It took me a few seconds to see how you had to read it to make 4 a possibility.","2019-10-10 01:45:06","4022608"
"103007535","470376","1","@jskulski only in old python, before 2.5.  Even then though, `if cond: [expression_1] else: [expression_2]` was more common","2019-10-10 01:48:45","4022608"
"103010544","41841362","0","Late note: this doesn't work with, say, `contains([{ a: 1, b: 2 }], { b: 2, a: 1 })` because the stringified objects maintain the order of the properties.","2019-10-10 03:10:21","215552"
"103010631","44870333","1","Late note: this doesn't work with, say, `contains([{ a: 1, b: 2 }], { b: 2, a: 1 })` because the stringified objects maintain the order of the properties.","2019-10-10 03:12:28","215552"
"103010645","53050132","1","Late note: this doesn't work with, say, `contains([{ a: 1, b: 2 }], { b: 2, a: 1 })` because the stringified objects maintain the order of the properties.","2019-10-10 03:12:51","215552"
"103010656","8758721","0","Late note: this doesn't work with, say, `contains([{ a: 1, b: 2 }], { b: 2, a: 1 })` because the stringified objects maintain the order of the properties.","2019-10-10 03:13:07","215552"
"10789786","8528329","0","i dont agree with ""1."" cause it gives error when u put ur script link when scripts are not allowed. so that kind of links should be added with the js code. that way people can avoid those links while script is not allowed and see no errors at all.","2011-12-30 11:32:45","861019"
"54919529","33275647","12","@Daemedeor , I dissagree.  In 2010 when the OP asked the question, the UI way of doing it didn't exist and the only option was command line.  To indicate that you want a command line only option it should be stated in the question or with the tag, [tag:command-line-interface], which in this case is no present.","2015-11-06 04:00:39","473290"
"72385621","2798934","0","@Travis R could you please explain the purpose of git rest --hard HEAD ?","2017-03-06 03:03:04","1548932"
"72391274","19873535","0","It's harder to create a branch with a bad name in 2.10.1+.  If you do somehow do it, you can use git branch -v to get the short hash version of your branches(add -r for remote).  You can then use git rev-parse <shorthash> to get the full hash if you need it.","2017-03-06 05:19:57","321448"
"40273376","13308092","8","I edited your post because you have made serious technical mistakes about what goes in the stack and heap.","2014-09-09 11:09:12","11440"
"40273664","1815323","0","This almost looks like Python...I can't seem to remember that I've ever used the ""local"" keyword in a shell script...And to what Charles said, use `if [[ ""${script_invoke_path:0:1}"" == ""/"" ]]; then` and so on. Note the logical double `==` ""equals"" operator.","2014-09-09 11:31:46","1337416"
"88002057","27458534","5","How did you do these animations? Great answer, the only bit I dislike is your modesty in saying that the Venn diagrams don't do it for you. The reality is that they are insufficient to model what's going on and this is important to tell, lest people get the wrong idea.","2018-05-23 05:55:03","7454646"
"119139342","246128","0","@MAXdB, did you test on osx?  The concern was osx.","2021-05-05 03:02:57","129550"
"103034394","36798076","0","what would be the advantage of classmethod and cls._counter vs. staticmethod and Apple._counter","2019-10-11 10:38:35","4519387"
"103034891","5189600","0","But shouldn't it be **For example, if the user wishes to view 5 commits from the current HEAD in the past the command is `git rebase -i HEAD~6`.** instead?","2019-10-11 10:55:19","865175"
"103035691","136097","1","more precise youtube.com/watch?v=HTLu2DFOdTg&feature=youtu.be&t=2689 you only need classmethod for alternative constructors. Otherwise you can use staticmethod and access any class attribute (via . / dot) by the somehow more informative actual ""CLASSNAME"" instead of cls like in classmethod","2019-10-11 11:22:37","4519387"
"40292612","671508","2","@ellisbben Agreed. If I understand correctly this is the dissertation that gave rise to REST: http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm","2014-09-10 12:56:12","453851"
"119148264","6428779","1","It was a documentation testing framework and the classes were declarative descriptions of the specific files to be tested, tests to be run, and so forth. The framework reported the results of these in a nicely formatted report grouped by product, document, and test. The report was more useful if it the tests were run in a predictable order.  :-)","2021-05-05 08:57:31","416467"
"40301574","3104376","2","The problem with this answer is that JSON is a serialization format, and so a minifier has to be written for every language (or a built-in minifier for every parser). How am I supposed to find a json minifier for c now?","2014-09-10 04:45:37","1669576"
"72439587","19873535","0","You can also use git show-ref this will give you the long hash of everything in your local repo.  and I mean everything...branches/stashes/tags...etc","2017-03-07 07:40:55","321448"
"119163025","43766002","1","@Henke - I think it is indeed personal preference, and while normally I'd prefer to log raw data and let the console handle it, in this specific case I think you're right about the change. Thanks! :-)","2021-05-06 11:27:48","157247"
"54930335","7901053","0","Groovy has some [built-in classes for handling JSON](http://www.groovy-lang.org/json.html). JsonSlurper can handle comments. Of course, comments are not allowed in the official spec, so this behavior in any parser is non-standard and non-portable.","2015-11-06 09:47:04","3170210"
"119172312","14415881","0","@Mxyk I'm a little scared to ask, why do your children die when they are done soting socks? This seems suboptimal (and cruel).","2021-05-06 04:44:10","5697743"
"40323864","19442557","39","This worked for me when neither git fetch origin or git remote update created local branches. I'm not sure why.","2014-09-11 08:45:56","584503"
"119175996","4754797","0","To make this an alias, simply add: `pull-branches = ""!git branch -a | grep -v HEAD | perl -ne 'chomp($_); s|^\\*?\\s*||; if (m|(.+)/(.+)| && not $d{$2}) {print qq(git branch --track $2 $1/$2\\n)} else {$d{$_}=1}' | csh -xfs #""` (some characters had to be escaped) as an alias in your `.gitconfig`","2021-05-06 07:15:56","8960551"
"88055079","27727752","0","is it applicable to check for the Object .? i don't think it works in case of the Object","2018-05-25 04:18:49","4898274"
"88055085","237148","0","is it applicable to check for the Object .? i don't think it works in case of the Object","2018-05-25 04:19:13","4898274"
"119185113","5871742","0","what about **find . -type d -empty -exec echo mkdir -p {} \; > make_empty_dirs.sh** 
and then commit make_empty_dirs.sh ?","2021-05-07 06:26:04","2623045"
"26874936","1473742","2","@Tim I guess it returns -1 to negate the chance of 0 being taken as falsey","2013-08-19 12:46:24","89211"
"103090096","52704","1","I think either the question or the title should be changed. The title is not the same as the question asked, it is not clear whether the answers cover both.","2019-10-14 04:40:59","1327399"
"119195013","67431074","6","Hi Pranay, please don't repeat existing answers. There are numerous answers already that exhaustively cover this.","2021-05-07 01:23:48","2756409"
"26884608","114549","0","can someone explain how display:table works? why do elements with this styling applied automatically shrink to the size of the inner elements","2013-08-19 05:20:31","938831"
"40349966","2432764","6","I had to do this on an old version of git (1.5.6.5) and the set-url option did not exist. Simply deleting the unwanted remote and adding a new one with the same name worked without problem and maintained history just fine.","2014-09-11 09:17:04","764371"
"103102335","24827594","0","@DouglasGaskell it aborts the iteration once found (mentioned in the answer)","2019-10-14 12:28:19","599912"
"119207409","67425996","0","I tried this and no PR was created, cool! And if your branch can be synced with a fast-forward merge, no divergence will occur.","2021-05-07 11:44:04","9418981"
"119207754","7244321","1","Since May 2021 this is directly possible from the GitHub UI without extra pull request, see [changelog](https://github.blog/changelog/2021-05-06-sync-an-out-of-date-branch-of-a-fork-from-the-web/) and https://stackoverflow.com/a/67425996","2021-05-08 12:23:01","4288506"
"119207830","67425996","0","For now, this function will first compare the branch name between the original and the forked repos. If the same name is found, the upstream of the branch in the fork is the branch with the same name in the original; if it is not found, the upstream will be the default branch (HEAD) of the original. This works fine in most cases, but if some branch modification has occurred in the original repo (e.g., adding or deleting a branch with the same name which already exists in the forked repo, or changing the default branch), the result of the sync may not match you expectations.","2021-05-08 12:31:14","9418981"
"40354348","60014","6","...if using bash constructs in a shell script, the first line of the script should be: #!/bin/bash (and not #!/bin/sh, ksh, etc)","2014-09-12 01:23:39","127971"
"40354467","67458","2","""always wrap variables in double quotes...in a bash script."" For bash, not technically necessary when using [[...]]; see http://tldp.org/LDP/abs/html/testconstructs.html#DBLBRACKETS (note: no word splitting): ""No filename expansion or word splitting takes place between [[ and ]], but there is parameter expansion and command substitution.""","2014-09-12 01:31:01","127971"
"88080440","7216269","1","This option works without the need for the script magic above.","2018-05-25 05:31:01","1106617"
"40354686","59871","12","or, assuming it is only necessary to work on directories (and links can be ignored) => `if [ -d tmpdir -a ! -L tmpdir ]; then echo ""is directory""; rmdir tmpdir; fi` ... or, for one command that works on both links & dirs: `rm -r tmpdir`","2014-09-12 01:47:18","127971"
"103119331","27458534","0","Is `INNER JOIN ON` basically the same as `CROSS JOIN WHERE`?","2019-10-15 01:10:54","5445670"
"119222951","8318976","3","`You might consider editing your answer, because the <font> element is hereby obsolete by HTML5.`","2021-05-08 08:53:46","15578194"
"103121468","114553","2","I use `width: fit-content;` and `margin: 0 auto`. I think this can work with unknown width.","2019-10-15 04:15:50","5983841"
"103123794","27458534","0","@SolomonUcko - yes. An inner join written in ANSI 89 style (before `JOIN` keyword was introduced) is exactly that. Though it  uses the comma operator to denote the `CROSS JOIN`","2019-10-15 06:30:09","73226"
"10893509","8743292","16","shouldn't it be `true` and `false` and not `'true'` and `'false'`?","2012-01-05 03:34:05","18107"
"10893573","178450","56","I actually found that the reverse logic words better: !$('selector').is(':hidden'); for some reason.  Worth a try.","2012-01-05 03:36:15","69993"
"119232508","44935441","0","Why keep `var result;` and `return result;`? The latter will still _always_ return `undefined`!","2021-05-09 12:21:52","9213345"
"88105017","23853061","0","What is the disadvantage of an ugly merge commit?? I don't get it. Just merge and you're done. Is there something I'm missing?","2018-05-26 09:32:04","1018733"
"103129308","34439104","4","In short: `git pull -r`.","2019-10-15 09:29:03","55075"
"119234737","53580319","0","This code does not seem to work as intended. I tried it in a Stack Snippet, and the only output was `{}`.","2021-05-09 02:45:32","9213345"
"119235473","23853061","0","@Transformer your wish has been [granted](https://stackoverflow.com/questions/7244321/how-do-i-update-or-sync-a-forked-repository-on-github/67425996#67425996), albeit 4 years late ;)","2021-05-09 03:26:31","9840318"
"119235833","38931349","0","Why include a Stack Snippet that outputs an error?","2021-05-09 03:47:34","9213345"
"103134365","30479554","0","@gary - that's exactly what *should* happen. `i` is available to all nested code. Without this, there is no easy way to refer to variables in outer scopes. If those two functions want *independent* `i`s, then they each declare *their own*, using `let`. OTOH I see your point - there is no way to ensure `i` is ""frozen"" (constant) within the loop. Could assign it to a const: `const j = i;`, but still have to manually verify that `i` isn't referenced anywhere.","2019-10-15 12:11:06","199364"
"72523355","1783405","29","I feel like I'm taking crazy pills. I'm trying to checkout a branch from an `upstream`, not just `origin`, and every recommended answer doesn't do anything remotely helpful (pun-intended). **EDIT** - excuse me, the multitude of suggestions contained in the top 2 answers were useless; 3rd one (`git branch test origin/test`) is what works. Glad the top 2 have 20x the number of votes...","2017-03-09 04:35:18","2272638"
"40390053","7251912","3","@toolbear No ad hominem attack was intended. ""A pragmatic format with perfect implementations is better than an ideal format with imperfect implementations""—Not sure I agree. If the format is ideal (and implementable), then one can always *make* a good implementation. If the format isn't ideal, then even a perfect implementation won't be very good. :) ""the YAML spec is long, dense, and obtuse""—That's not actually what ""obtuse"" means, but the YAML spec is quite clear. I don't see any ambiguities mentioned in Wikipedia; please cite specific sections  of the article if I missed something.","2014-09-13 12:58:39","109011"
"72525638","40214952","0","There is no reason to use jQuery for this and `window.` is unnecessary.","2017-03-09 05:30:20","2624876"
"119248579","56538984","0","Nice answer! Apparently, the `async` - `await` construct was introduced in the [ECMAScript 2017 Language Specification in June 2017](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Language_Resources).","2021-05-10 08:13:26","9213345"
"54976224","31825535","8","True, but ugly, and only doable for small character sets. You don't want to do this with Unicode strings :-)","2015-11-08 11:43:24","17945"
"88128735","25813188","0","if using es6 than it cam be shorten as `contains = (a, obj) => a.some((element) => element === obj))`","2018-05-28 04:24:29","155861"
"10911435","2691891","31","@Schneider, in this case your server is making an extra effort to guarantee idempotence, but it is not advertising it. Browsers will still warn the user if they try to reload such a POST request.","2012-01-06 10:53:35","229753"
"88135112","44781228","5","note that if you are setting on the branch you want to delete, you need to checkout a branch other than the one you need to delete (eg: master) before deleting the local branch.","2018-05-28 08:43:55","4762075"
"10925389","8565823","23","This allows the entry of so many invalid email addresses it is useless advice.","2012-01-06 11:07:44","6178"
"103159175","28441119","2","@GangadharJannu `git reset --hard` requires a commit, else it wouldn't know what to reset you to. `@{u}` points to a specific commit – the head of the tracked branch, from when you last did a `git fetch`.","2019-10-16 07:06:53","2670584"
"103162157","28441119","1","@KristofferBakkejord Thanks for the explanation but even without commit hash we can do `git reset --hard` though it will not reset to remote branch","2019-10-16 08:42:51","3543808"
"88151848","31250734","1","@Vaitkevicius
do u know if a space(%20) is counted as one character or 3?","2018-05-28 05:26:01","5042169"
"88151917","417184","0","is a space (%20) considered as one character or 3 characters?","2018-05-28 05:28:33","5042169"
"103166912","28441119","0","@GangadharJannu I believe it won't even reset to the local branch then, but to the git index instead.","2019-10-16 11:10:23","832230"
"119272759","82852","1","@makapuf So? The intention is to write to the file, appending if it already exists, creating it if it doesn't. Your objection doesn't make sense.","2021-05-11 04:09:44","207421"
"72554329","40214952","0","Where i have used window. in jquery Query Example ?  ... if you want to redirect the page through javascript ... than you need to use window.location..","2017-03-10 11:23:18","5680730"
"119275837","64624489","2","If you click _Edit_, then remove one of the `await`s, and finally click `Run code snippet`, you will see that it works fine with just one `await`, as explained in the previous comment. (I don't know why the `Run code snippet` button is missing here? Is that because of the downvotes?)","2021-05-11 07:23:09","9213345"
"88159977","31250734","2","@Jun depends where... press F12 and paste following into the console `console.log(""%20"".length +"" ""+decodeURI(""%20"").length)` this should explain it","2018-05-29 02:06:35","1509764"
"40432687","10976934","18","Who flippin' cares if someone was using comments in their JSON to include parsing directives? Honestly. Ridiculous. So, if you put non-standard parsing directives for your own parser in a comment, a parser that follows the official spec will ignore them. Otherwise, people will either not use JSON, or resort to hacks to include comments as data, which is surely no better than having custom parsing directives in the comments. For that matter, people will also put their custom parsing directives into the JSON stream as data. It's a silly argument, and the inability to use comments is obnoxious.","2014-09-15 06:48:53","618649"
"40432831","10976934","0","Honestly; has nobody ever used comments in XML for their own custom processing directives? Did it destroy XML interoperability? Has there ever been another language or data format that allow for comments in the file?","2014-09-15 06:54:53","618649"
"40433019","4729509","0","I still vote for upgrading the JSON spec to allow comments. I'm all for minifying and stripping the comments before transmitting the JSON, but not having any ability to comment your JSON in any standard way without having to pass it through a separate utility before parsing it just seems silly. I also makes it impossible to use a JSON editor on your JSON configuration files, because your files are not valid JSON.","2014-09-15 07:03:06","618649"
"40433147","20267852","4","This also presents the issue that the comments cannot be stripped out by a minification utility before transmission, unavoidably leading to bigger hunks of data being transmitted that serve no purpose on the other end of the transmission. I really feel like taking comment support out of the JSON spec is unfortunate. Specifically because people ARE going to hack solutions together. Taking the support out of the spec is an attempt at behavioral control that is simply going to fail and produce even bigger incompatibilities down the road due to proliferation of mutually-incompatible workarounds.","2014-09-15 07:07:52","618649"
"40433250","20434146","1","@AlexisWilke, ""comments are definitively useless and pump lots of bandwidth for nothing"" -- this is specifically why comments should be supported in the spec. Just look at the number of suggested workarounds that involve numerous different-but-similar ways of schlepping comments into the JSON as data, guaranteeing that a minification tool cannot remove the comments, guaranteeing that they get transmitted over the wire, and forcing the remote parser to deal with them with varying degrees of success. You try to force people ideologically, and they find ways around you. Just the way it is...","2014-09-15 07:11:23","618649"
"26967856","7070976","20","`git rebase -i HEAD~commit_count` will also allow you to change the commit messages of however many commits you choose. Just mark the chosen commits as ""reword"" instead of ""pick"".","2013-08-21 08:21:59","223261"
"119283290","48415961","0","This is a fine and helpful answer that clearly demonstrates how to correctly use the `async` - `await` duality feature. One thing to note is that `async` and `await` are actually not needed in the function `foo()`. (Remove them both and the code still runs just fine.)
This is because `foo()` returns a Promise, and as long as the code receiving the Promise _awaits_ it, everything will be fine. ~ * ~ * ~ * ~
Note: the `async` - `await` feature was introduced in the
[ECMA-262 8th Edition in June 2017](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Language_Resources).","2021-05-11 12:14:48","9213345"
"119283611","48243403","0","Anyone interested in using `async` / `await` will likely also want to read
[this answer](https://stackoverflow.com/a/48415961) (and possibly my comment below it :-).","2021-05-11 12:25:58","9213345"
"119283984","51314958","0","Yet another fine answer demonstrating the use of `async` - `await`. ~ * ~
The `async` - `await` feature was introduced in the
[ECMA-262 8th Edition in June 2017](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Language_Resources).","2021-05-11 12:38:42","9213345"
"103180348","41841362","2","@HereticMonkey, true. That's why I added the `sort-keys` note at the bottom","2019-10-16 05:44:20","283803"
"10956936","72156","1","With the `git checkout -b ...` command, do you need to add the --track parameter? From the help documentation for `git checkout [<branch]` it seems like you do...`If -b is given, a new branch is created as if git-branch(1) were called and then checked out; in this case you can use the --track or --no-track options, which will be passed to git branch. As a convenience, --track without -b implies branch creation; see the description of --track below.`","2012-01-09 08:26:30","201381"
"26979044","15818776","22","This has a race condition due to the repeat of the `exists` test.  If the file is created after `if` but before `elif`, neither branch will be taken.  It would be better to simply change that to `else` to at least make the code deterministic.","2013-08-22 06:45:45","874188"
"40460136","20434146","0","@Craig, Why not use C/C++ like comments on your end and use `cpp` to remove them? (with `cpp` from `gcc` you want to use the `-P` (capital P) to avoid the `# <line#> ...` entries.) That makes it easy enough, I think.","2014-09-15 09:48:36","212378"
"119305333","64624489","1","Despite that the extra `await` does not make any sense, I gave this answer an upvote. - Why? Well, after all the it contains a runnable example that demonstrates what is asked for by the original poster. This alone might not be enough to warrant an upvote, but on the other hand, there are many upvoted answers here that do not meet such a minimal requirement.","2021-05-12 06:56:28","9213345"
"88185380","16956844","0","how do I get rid of the warnings? I only want the files names","2018-05-29 03:32:06","856457"
"72595849","36058314","3","answer with run function was added in 2015 year. You repeated it. I think it was a reason of down vote","2017-03-11 06:27:50","2699806"
"119314935","45218814","0","`url` needs to be properly escaped here: `\`head > script[ src = ""${url}"" ]\``","2021-05-12 01:00:34","247696"
"119314955","8337001","0","Note that if pluginNames contains special characters, this won't work, and might even lead to a security vulnerability. You need to use proper escaping here: `$('head').append('<script src=""js/plugins/' + this + '.js""></script>');`","2021-05-12 01:01:39","247696"
"103208955","21380648","1","@TusharGupta-curioustushar you should include the ""Tables used for SQL Examples""","2019-10-17 01:52:31","3665178"
"27006011","59895","1","Tyipcally, the caller of the script can easily provide the input to that script it needs, such as ""/home/userx/bin/my_script /home/userx/bin"" since the caller knows the path it's using to access the script.  Because Linux uses the inode model from Unix (awesome feature), it's often tricky to find the answer automatically.  And, even using the techniques mentioned below, it can be tricky.  For example, a script can reside at more than one path (ln without -s).  If the fragility those considerations add is not a concern, the answers using BASH_SOURCE and the like do the job.","2013-08-22 07:11:47","2532621"
"88201163","29847192","3","dude bracket is just to mention you have to replace with whatever branch name you want to create and push.","2018-05-30 03:41:02","3568378"
"40485766","20434146","0","@AlexisWilke that's fine, except it isn't a JSON standard and you can't just presume I'm working on Linux and able to shell out and pipe my files through cpp--I'm not. So I added code to my program to strip out C/C++ comments. My point, really, is that people will find a way to add comments anyway, but they'll now add them as JSON data in a million slightly different formats that no automated tool can detect and remove from the data stream, so the attempt to remove comments will perversely **guarantee** the existence of comments in the JSON and bulking up data transfers.","2014-09-16 02:39:13","618649"
"119331532","43131767","1","Great explanation.","2021-05-13 01:59:58","4449489"
"40486292","11478811","0","I believe what you suggest will only address a small subset of null pointer problems in Java, and will not solve the original problem described here.","2014-09-16 02:51:48","202630"
"27017518","18309057","19","While this answer is nice (And we all _love_ XHR2 and posting file data and multipart data is totally awesome) - this shows syntactic sugar for posting XHR with JavaScript - you might want to put this in a blog post (I'd like it) or even in a library (not sure about the name `x`, `ajax` or `xhr` might be nicer :)). I don't see how it addresses returning the response from an AJAX call. (someone could still do `var res = x(""url"")` and not understand why it doesn't work ;)). On a side note - it would be cool if you returned `c` from the method so users can hook on `error` etc.","2013-08-23 05:56:49","1348195"
"40488052","1783426","92","`git checkout test` will NOT work in modern git *if you have multiple remotes which have the same branch name*. It can't know which one to use.","2014-09-16 03:34:55","13973"
"103223013","522578","5","Does `enumerate` not incur another overhead?","2019-10-17 11:03:57","1219213"
"88213512","16956844","0","@matias see [my comment](https://stackoverflow.com/questions/16956810/how-do-i-find-all-files-containing-specific-text-on-linux/16956844#comment24487774_16956844) from a while ago. Also consider using `-I` for binary files.","2018-05-30 10:22:13","1983854"
"103231270","215731","2","@tschoppi: Thanks, I'll do that when the command is no longer marked as ""experimental"".","2019-10-18 08:06:29","893"
"11003406","59916","7","`$0` gives wrong result in sourced scripts (including `bashrc`)","2012-01-11 09:02:36","648265"
"11003596","1482133","15","`readlink` will not availabe in some platform in default installation. Try to avoid using it if you can","2012-01-11 09:14:04","755029"
"55069430","20241145","3","This is very very useful (I wish I could upvote more than once)  but technically it's not the answer to the question. Because it will do it independent of the file being in .gitignore or not, that's what I mean it's not 100 percent answer to the OP question (it solved my problem though).","2015-11-11 09:54:35","938246"
"40499302","20434146","0","@Craig, As a side note, cpp is available under MS-Windows. Although frankly writing your own little tool is probably as easy than messing around with cygwin or MinGW... Now I agree that it is not exactly JSON, but it looks like many interpreters do understand similar extension (C/C++ comments.)","2014-09-16 09:25:53","212378"
"40499883","16317405","7","That is a very creative solution. Especially if it used the title attribute because that would probably be better for screen readers.","2014-09-16 09:49:55","1152664"
"40500081","16317405","4","I tried it ([JSBin](http://jsbin.com/fawip/1/edit?html,css,output)) and it doesn't work in IE. Unfortunately older IEs are the only ones that `user-select` doesn't work for.","2014-09-16 09:58:23","1152664"
"40500150","20745177","3","This does work in IE so long as the selection starts on an element with the `className` class. See this [JSBin](http://jsbin.com/careye/1/edit?html,css,output).","2014-09-16 10:01:32","1152664"
"11005090","1845995","3","this works, however, it hides the android:hint. i'm using Android 1.5","2012-01-11 10:32:12","1099211"
"72628439","41712931","2","This is great! This avoids the totally pointless upload of those commits to github.","2017-03-13 03:34:12","166235"
"40501828","20434146","1","@AlexisWilke at some point, though, doesn't all that seem a little bit like going to heroic lengths just to be able to put a comment in your JSON file? In my case, I just need a bit of code (not an entire C/C++ compiler, running wrapped in an extra runtime library, no less if running under Cygwin/Ming), to strip comments out before I can pass my configuration files through the JSON parser. I also detect when the config files change and dynamically reload them, etc. How lame is it that I can't simply put comments in the files and not worry about it? It's *super* lame. That's how much.  ;-)","2014-09-16 11:45:00","618649"
"72634081","42758961","4","Your way is exactly the way of the accepted answer.","2017-03-13 08:33:07","2621706"
"27040129","18309057","29","`2.ajax is meant to be async.. so NO var res=x('url')..` That's the entire point of this question and answers :)","2013-08-23 05:28:35","1348195"
"11024120","7216269","8","You know this actually seems to be a pretty good answer even though it has no votes. Are there any pitfalls to doing it that way? I had to explicitly checkout a branch after running those commands.","2012-01-12 04:25:11","4704515"
"27042363","64966","28","@Kostanos If you don't want to remove files that are in .gitignore, then do not provide the -x flag.","2013-08-23 06:44:35","269876"
"40521627","179147","0","@rjmunro, the link you provided describes the body of the commit message as optional. ""If there are any technical details that cannot be expressed in these strict size constraints [of the subject line], put them in the body instead."" Sometimes a small change only needs a single line to describe it.","2014-09-17 01:12:08","793309"
"11026533","1041798","17","@aberrant80: unfortunately you have no choice between the two and have to use Hashtable when programming for J2ME...","2012-01-12 08:13:48","283519"
"55091938","89243","61","@KevinWheeler You should NOT use `shell=True`, for this purpose Python comes with [os.path.expandvars](https://docs.python.org/2/library/os.path.html#os.path.expandvars). In your case you can write: `os.path.expandvars(""$PATH"")`. @SethMMorton please reconsider your comment -> [Why not to use shell=True](https://docs.python.org/2/library/subprocess.html#frequently-used-arguments)","2015-11-11 08:24:27","1885518"
"119359489","19298943","0","@MSBerends his answer is more verbose in technical level.","2021-05-14 04:27:36","1147114"
"72646291","40645071","21","⚠️  Use `git branch -D` carefully in a script, since it force-deletes a branch without checking it has been merged. Use `-d` to be safe.","2017-03-13 02:05:07","2125530"
"55096717","477578","0","Interesting that SRP is mentioned in the answer yet so many of the comments discuss obsolete hashing. JavaScript SRP libraries like thinbus-srp are fast and effective with the only overhead being the fetch of a salt and challenge few the server to perform a zero-knowledge password-proof to the server.","2015-11-11 11:07:06","329496"
"27050918","16666424","10","@b123400 - Here's the Lisp version: `(new (chain (-date) (to-i-s-o-string)))`.","2013-08-24 03:17:17","190887"
"55106555","179147","0","if you already pushed to your remote branch it will not work if your have denyNonFastforwards=true in your config git file. you need to change that to false. try the solution in http://stackoverflow.com/questions/10544139/how-to-force-push-a-reset-to-remote-repository","2015-11-12 08:05:01","1179689"
"40533377","179147","0","@antinome the answer has now been edited to reflect my previous comment (http://stackoverflow.com/revisions/179147/12), so that `-m` is now shown as a alternative & not the normal way to do things. I'm happy with the new version, so I'll delete my previous comment.","2014-09-17 06:28:29","3408"
"27061346","14092288","2","Does matlab use native numbers or a mat lab specific implementation (infinite amount of digits or so?)","2013-08-24 04:34:32","53897"
"40539321","11805048","0","And I believe that is why I see a comment in a screenshot on this ASP.NET vNext preview page (under package.json): http://blogs.msdn.com/b/webdev/archive/2014/06/03/asp-net-vnext-in-visual-studio-14-ctp.aspx although I haven't found anything in the spec yet.","2014-09-17 09:54:01","203891"
"55108937","4753609","17","@SabaAhang the correct syntax for that would be `float: none;` and is probably only needed because #inner has inherited a `float` of either `left` or `right` from somewhere else in your CSS.","2015-11-12 09:21:37","1493346"
"27072405","477578","0","Just a thought. What about bitcoin-like hashing for credentials on the client? Iterative hashing of username, password & a random number (session specific) that takes couple of seconds on the client (legitimate users won't mind slight delay) and it would be a nightmare for attackers. Valid credentials and proof of work would be required for successful authentication.","2013-08-25 08:39:44","696475"
"27079901","16919498","3","This is suitable if you want to use a single variable through out the process instead of calling and calling the same object.","2013-08-25 04:57:09","1460756"
"88272059","1274447","3","This supports wildcards, for example: `git rm --cached *.pyc` will recursively remove all files with `.pyc` extensions.","2018-05-31 06:57:51","3474146"
"11062711","178344","17","This is the only solution that worked for me when testing with IE 8.","2012-01-13 06:51:41","78199"
"88273432","50405997","0","It would additionally help to explain in words what `let` is doing, though that would make it a duplicate of another answer here","2018-05-31 07:47:10","3479456"
"72676865","19442557","3","I had a branch of that form: ""xx/xx"" and This was the solution for me.","2017-03-14 08:50:50","1320237"
"55134388","953097","95","@TimDierks: I'm not sure ""this requires you to understand Python syntax"" is an argument against using a given technique in Python. Sure, complex usage could confuse, but the ""splat"" operator is generally useful in many circumstances, and this isn't using it in a particularly obscure way; rejecting all language features that aren't necessarily obvious to beginning users means you're tying one hand behind your back. May as well throw out list comprehensions too while you're at it; users from other backgrounds would find a `for` loop that repeatedly `append`s more obvious.","2015-11-12 08:26:36","364696"
"88278494","47070614","2","Thanks for you feedback, my statement was confusing. I wanted to say that the highlighted aliases come automatically with oh-my-zsh. They obviously work great in `bash`. I edited my answer to reflect that.","2018-05-31 11:35:50","2780334"
"72691155","26998181","0","As others have said, this cannot be activated using the keyboard.","2017-03-14 02:18:59","1358179"
"11076452","136340","0","This would give an error if JS was off instead of seemingly doing nothing or just go to the top of the page","2012-01-14 07:24:18","295783"
"88290243","33918835","0","""....containing specific text..."" : this part of the sentence was not accurate (because it's not find itself that deals with this part of the search). Edited. Thanks.","2018-06-01 09:21:33","729513"
"11081282","136340","1","@mplungjan If JS is off, clicking it will do nothing, which makes sense if there's no non-js alternative representation/action of what the JS is doing. Having the href be ""#"" or some URI isn't any more useful, in the case I was describing.","2012-01-15 06:07:09","1697"
"11082801","136340","0","So have href=""jsdisabled.html"" instead","2012-01-15 10:28:38","295783"
"88295789","6796816","0","@JohnMellor, you are correct that calling `git rebase` with no arguments enables the `--fork-point` option, which can cause commits to be lost.  In my opinion this is a defect in `git rebase`.  It has nothing to do with my answer above, though.  There are many circumstances in which `git rebase` with no arguments can cause trouble.  The moral of the story (unfortunately) is not to call `git rebase` without passing in a branch, even if that branch is already the upstream.  Git's usability has improved quite a lot in the past eight years or so, but this is one area wherre it could use more work.","2018-06-01 11:54:47","5486"
"55143420","15587937","4","No. On my Samsung Tab, Android 5.0, The so-called ""hide keyboard"" code above will TOGGLE the soft keyboard -- if it is already hidden, it will show it. There is a reason this function has TOGGLE in the name.","2015-11-13 03:22:20","199364"
"88305390","33918835","0","Glad to be of help! The only thing else at a very very quick glance is changing the word *folder* to *directory* but I know that’s a crusade of mine I will never win completely. Not giving up though...","2018-06-01 04:13:32","9205647"
"72708483","927386","1","This doesn't really serve as way to undo a set of changes those? This is more if you need to amend a change?","2017-03-14 09:30:44","866741"
"88306676","33918835","0","Why not ""directory"" instead of ""folder"", but why ? Please share your ""crusade"" !","2018-06-01 05:00:56","729513"
"11094186","136340","0","@mplungjan You could. But, that navigates away from the page.","2012-01-16 05:52:36","1697"
"103319611","20846779","0","I like this – I'm more comfortable having it in my bash history than any of the other options, because it's no big deal if I accidentally ctrl-r or ctrl-p to it.","2019-10-21 10:38:30","2506448"
"88315488","33918835","0","I'm saying use directory instead! Referring to: **you'd better replace '/' by a sub-folder name** And it's a pet peeve of mine.. esp since even Windows used to call it 'directory'. Ah..maybe you got that. Why? Well because that's what it's called. It's also called that at the file system level. And look at it this way: was it ever called (for DOS) *`fol`*? No of course not; it was called *`dir`* (and I believe it still is). Folder is a thing contrived for (I guess) user friendliness though in this case it's maybe dumbing it down for less 'advanced' users?","2018-06-02 12:15:19","9205647"
"88315526","33918835","0","Perhaps part of it is semantics and pedantry but as a programmer who also has a fascinating with language (not just computer languages) ... well it matters to me. And the functions also reference directories not folders (no idea in Windows though).","2018-06-02 12:19:28","9205647"
"88315581","46901563","0","@Pathros Oh and if there are any *`-`* s in the search string you'll want to pass in *`--`* to grep first; that can cause interesting side effects otherwise!","2018-06-02 12:25:19","9205647"
"103320847","6428779","1","This is a jolly interesting example, not least because one can genuinely see why a metaclass could be neeeded with this, to supply a solution to a specific difficulty. OTOH I struggle to be convinced that anyone would really need to instantiate objects in the order in which their classes were defined: I guess we just have to take your word for that :).","2019-10-22 12:09:43","595305"
"88316143","31072124","0","Personally I think you should remove the *`#`* because other than comments that typically implies something - and you shouldn't be root unless you absolutely have to be. Even so you needn't have the prompt surely? Call this petty but I have seen people many times over the years simply copy and paste and do things without truly understanding it. Not saying any will here but still.. Just a thought.","2018-06-02 01:30:34","9205647"
"88316150","39662240","0","You might want to point out that *`-i`* makes the search case-insensitive; by default it doesn't have that - nor should it as Unix (etc.) isn't a case-insensitive OS. You might also want to specify what the other options are for too.","2018-06-02 01:31:24","9205647"
"88316170","27481639","0","@amine Yeah rather than using *`grep`* directly it pipes all the files *`find`* finds to xargs running *`grep`* on it. I'm sure you understand that but just to add to those who might not. The command here is .. I can't atm think of a good analogy but it's adding a lot of unnecessary and harmless overhead.","2018-06-02 01:34:08","9205647"
"88316191","39902107","0","@VIPINKUMAR **The parameter list is too long.** Yeah that's what *`xargs`* is for. Unsure on AIX if it has that though; no comment on your actual commands.","2018-06-02 01:36:20","9205647"
"88316200","42852256","1","And in any case this is a useless use of cat... http://porkmail.org/era/unix/award.html","2018-06-02 01:37:14","9205647"
"40595318","14364249","2","@jpmc26 but makedirs does additional stat, umask, lstat when only checking to throw OSError.","2014-09-19 10:31:21","681044"
"72718416","522569","4","For Python 2.3 above, use enumerate built-in function since it is more Pythonic.","2017-03-15 06:31:21","1568024"
"11114416","136340","0","@mplungjan Understood. You could do that. No argument there. I'd personally just have a ""this page requires JS"" message for the page that disappears when JS is on though.","2012-01-17 04:09:41","1697"
"119450257","6581949","1","An awesome and very concise explanation. Congrats to the author of this answer.","2021-05-18 04:33:00","3225309"
"88331413","33918835","0","Good. Much better. :) I up-voted too. One other thought is you might want to say that if the regexp/string to be found includes a *`-`* you might be wise to first pass to grep *`--`*. I was also pretty sure that *`{}`* should be quoted or escaped but I could be remembering wrong. Also I find it instructive that you included alternative tools (not that I would ever use them but then I don't need help with this task in the question anyway). Of course depending on what's wanted you could just as well use recursion with *`grep`*. Just some additional thoughts for whatever they might be worth.","2018-06-02 08:04:02","9205647"
"55178720","19442557","6","This was the most direct way to accomplish what I needed which was to use a remote branch (not master) to create a new branch.","2015-11-13 11:15:47","2137183"
"40618845","1984225","12","Is ""earth128:Edward-de-Leau/6000000000569063853"" (the unique me over multiple multiverse) a URN, a URL or a URI?","2014-09-20 03:06:25","121626"
"88341075","406243","7","Or simply `egrep` or  `grep -Ev ""hede|hihi|etc""` to avoid the awkward escaping.","2018-06-03 10:54:02","209129"
"40626115","59895","0","See also: [Bash script: set current working directory to the directory of the script](http://stackoverflow.com/questions/3349105/bash-script-set-current-working-directory-to-the-directory-of-the-script).","2014-09-20 02:25:26","55075"
"103350356","40058417","0","The things that always seem to get glossed over is that there are still version dependencies: 1) The developer must develop on the same environment that the image contains; 2) The dev environment and the test environment need to be running the same (or compatible) versions of both the linux kernel and docker itself...yes?","2019-10-22 07:56:43","188252"
"103354444","38898933","7","Meanwhile, the guy with the car is stuck on the side of the road.  He *requires* the car is fixed before continuing.  He is now alone on the side of the road waiting...  He would rather be on the phone waiting for status changes but the mechanic would not do it...  The mechanic said he has to get on with his job and can't simply hang out on the phone.  Mechanic promised he would call him back as soon as he could.  After about 4 hours, the guy gives up and calls Uber.  - Example of timeout.","2019-10-22 11:42:25","415559"
"103354709","5201642","0","This worked for me where the `git rebase -i` did not. I was trying to squash some work that had a couple of merge commits thrown in the middle and I kept running in to conflicts (I didn't think that was possible, but I'm guessing it was because of the merge commits that were removed). Tried this and voila! No complaints, worked first time. Highly recommended. :)","2019-10-23 12:05:54","4013587"
"88350869","2030768","1","What do you mean by *""Anyone runs the kwrite not being a subprocess""*?","2018-06-03 08:14:54","63550"
"11141602","8439617","30","@Simon It's not stated that the string is necessarily going to be output as part of a HTML document - CSS is only going to be of use if it is.","2012-01-18 09:32:40","2268"
"119478329","1274447","0","I get fatal: pathspec '<path>' did not match any files","2021-05-19 01:04:48","5289570"
"88356146","477819","7","Internet Explorer sometimes has issues with application/json - blog is offline","2018-06-04 03:59:07","1407094"
"119481845","63580068","1","If you `source` the file, it does not need to be executable.","2021-05-19 06:00:16","15168"
"119482001","246128","0","Just came here to say that this is my most used stack overflow answer right here.","2021-05-19 06:08:58","146757"
"103369475","1628334","2","@RazvanZamfir yes, exactly. I think this should be stated in the answer the first thing. A beginner might reset a local feature branch to master accidentally and be in more trouble that way.","2019-10-23 11:49:45","2563593"
"119493280","1642035","13","I've seen it jokingly referred to as the ""downto"" operator (https://codegolf.stackexchange.com/questions/16226/i-need-a-program-where-the-user-inputs-an-array-of-doubles-and-the-program-outpu/16232#16232)","2021-05-19 01:26:37","2513804"
"103381179","30479554","1","Has something changed in Javascript since this answer was posted?  Both the ""var"" and ""let"" version produce the same results.","2019-10-23 05:56:02","8754098"
"55227545","25500568","1","docker is being brought into the windows world now, since it's no longer dependent on LXC:  http://blogs.msdn.com/b/nzdev/archive/2015/06/02/dockerizing-your-applications.aspx
please correct me if I misunderstood the answers here","2015-11-16 05:50:33","2208504"
"55228599","6796816","0","Probably a good idea to use `--force-with-lease` in case someone has already committed based on top of your old chain.","2015-11-16 06:50:32","2036669"
"40660832","630475","1","@EricB. The ""object ID"" is what he is referring to as the name. Thus, it should be supplied as part of the URL when using POST and not be generated by the server.","2014-09-22 07:28:37","144507"
"40663890","134853","6","@Neel, any anchor that doesn't actually exist in the document (e.g. `#_`) does the same trick, with the same drawbacks.","2014-09-22 09:18:02","2533215"
"72785635","39847263","7","This answer is nice because it creates a copy of the original array, instead of modifying the original directly.","2017-03-16 03:27:40","694105"
"27191385","682343","3","according to `git status` output of git version 1.8.1.4 the correct way to unstage new files is: `git reset HEAD <file>...`","2013-08-28 06:25:05","520567"
"72794303","2691891","2","Comparing **PUT** and **POST** to mysql: **POST** is like an `INSERT INTO` without providing the ID of an auto-increment column, if you do it multiple times, you will create multiple rows. **PUT** is like an `UPDATE` using the primary key in the `WHERE` statement, if you do it multiple times, the row should be the same after each one. Some vendors may also allow you to **PUT** to create, which would be like an `INSERT INTO` providing a value for the auto-increment column.","2017-03-16 07:01:14","3470589"
"119518514","31733623","0","Loved the visual explaination! Thanks for sharing.","2021-05-20 10:09:12","3114333"
"72795908","34690541","0","@bryc maybe the accepted solution, or another solution from here. If you don't care much for performance, than you can use this","2017-03-16 07:49:57","93026"
"103409076","115992","0","You *can* actually add empty directories to a GIT repo without confusing the hack out of GIT + associated tools, [by “technically playing by the rules” while doing so](https://stackoverflow.com/a/58543445/277882)! The solution of course still involves submodules, but they only serve as a placeholder to make stuff look legit to tooling.","2019-10-24 02:45:02","277882"
"27201346","952952","205","[leaf for tree in forest for leaf in tree] might be easier to comprehend and apply.","2013-08-29 01:38:20","75033"
"119528324","7070976","0","`git commit --amend -C HEAD` is golden! Thank you","2021-05-20 03:44:47","338514"
"103409122","8944077","0","I've created a better solution based on this that doesn't have these drawbacks: https://stackoverflow.com/a/58543445/277882","2019-10-24 02:46:26","277882"
"103409141","27635349","0","I've created a better solution based on this that doesn't have these drawbacks: https://stackoverflow.com/a/58543445/277882","2019-10-24 02:46:53","277882"
"72801605","40214952","0","I meant those as separate things: you shouldn't use jQuery for this, and in the JavaScript example, you can simplify `window.location.href =` to `location.href =` or even `location =`.","2017-03-16 11:34:05","2624876"
"103410211","2432799","0","@hobbs continues to have the most utilized and dynamite answer in my life. I am commenting here because I can only give one upvote. I would have given 10 by now.","2019-10-24 03:19:49","6719819"
"119535202","67180936","0","I run that git reset command and then simply force push to my branch like so:
`git push upstream head -f`

The commit is then gone.","2021-05-20 08:26:31","5229473"
"11205571","8439617","10","Adam, true, but I'd guess that over 95% of the Javascript out there is used with HTML & CSS.  Unfortunately, the ""capitalize"" statement actually capitalizes **every word**, so you'd still need JS to capitalize only the first letter of the string.","2012-01-21 04:24:39","195835"
"119539184","417184","0","Does this only pertain to URLs visited directly (e.g. the address bar) or does it also apply to XMLHttpRequests? (and fetch?)","2021-05-21 01:15:06","586030"
"103428313","54329228","0","`jsonc` is nice, but unfortunately, you are restricted to // comments. When you need something else , you are kinda broken, too. https://stackoverflow.com/questions/58553633/how-to-convince-vs-code-to-accept-as-comment-in-json-files","2019-10-25 07:52:11","1531124"
"11210934","115992","16","You can read ""_it's impossible, you can't, etc._"" all over the Internet for this frequent question. The `.gitignore` trick is a frequent answer, and satisfies many needs. However **it IS possible** to make git track an **truly empty** directory, [see my answer](http://stackoverflow.com/questions/115983/how-do-i-add-an-empty-directory-to-a-git-repository/8944077#8944077)","2012-01-21 03:44:30","508831"
"27234656","8024330","3","This also works well with multiple CTEs: `;WITH SomeCompexCTE AS (...), CTEAsAbove AS (SELECT T1.Col1,... FROM T1 JOIN SomeComplexCTE...) UPDATE CTEAsAbove SET Col1=_Col1, ...`","2013-08-29 08:09:10","652876"
"119553033","17789187","0","Recently we finally got an official, backwards compatible way [to do this](https://stackoverflow.com/a/67637849)","2021-05-21 01:33:55","9316168"
"40718478","1984603","1","If `/some/page.html` is not an URI then it is definitely not an URL - it's not complete enough for me to locate the resource.","2014-09-23 04:42:34","2378910"
"119556615","3413739","0","I'd guess the instability is/was caused by API used to render the address bar. Many OS libraries cannot cope with overly long strings to be rendered on display with acceptable performance.","2021-05-21 03:37:42","334451"
"119557854","67637849","2","Well would you look at that! Of course, it had to involve yet another API (window insets controller vs input method manager), but hey, at least the word 'hide' is there.","2021-05-21 04:25:44","680583"
"40722655","11227877","142","Does branch prediction work better on sorted arrays vs. arrays with different patterns?  For example, for the array --> { 10, 5, 20, 10, 40, 20, ... } the next element in the array from the pattern is 80.  Would this kind of array be sped up by branch prediction in which the next element is 80 here if the pattern is followed?  Or does it usually only help with sorted arrays?","2014-09-23 06:58:12","538458"
"27241138","9494042","35","@Mark: Because the method is called ""toggleSoftInput"", not ""hideSoftInput"" :)","2013-08-30 02:08:40","569430"
"88444133","49999727","0","totally agreed that it won't work for duplicate elements in the list. afterall I'm also learning python.","2018-06-06 10:16:34","4970413"
"11228927","1783426","60","...and you would do this with `git fetch origin test`","2012-01-22 11:24:42","48523"
"11229414","6591218","111","What I really wanted to know was whether this will necessarily effect the remote branch when/if you push","2012-01-23 12:15:35","43453"
"103446142","50224999","0","I think this is not a good idea. Basically, if you say inserting into a list is a patch, everything becomes a patch: inserting, updating, even deleting. This does not solve the problem but actually adds another ambiguity.","2019-10-25 06:18:33","1652861"
"11232312","6591218","218","@PandaWood: it will add the new branch when you push, but won't delete the old branch. If you use `git push -f --mirror`, then it will rename the branch on the remote, but you should only use this method if the remote is simply to be a copy of your current repository. See also this question: http://stackoverflow.com/questions/1526794/git-rename-remote-branch","2012-01-23 06:02:09","394487"
"27254774","178450","2","How do you do the inverse of this?","2013-08-30 11:46:09","563247"
"103451449","50224999","0","@dariok Agreed, it'd make it even a bit worse than it already is.","2019-10-25 10:51:07","581205"
"103455184","23855355","0","Works fine. Thanks","2019-10-26 07:18:08","8923759"
"88457934","89237","13","No idea what I meant nearly a decade ago (check the date!), but if I had to guess, it would be that there's no validation done.","2018-06-06 04:01:34","3926"
"88458695","52719","0","`git clean` has a dry-run option, `-n`","2018-06-06 04:25:54","966549"
"119580916","60014","0","@AdamKatz Portability and deprecation of features in dash don't matter since this is about bash.","2021-05-22 08:09:58","445221"
"27264299","17238862","9","The first part of your answer is wrong. ""application/jsonp"" is not a valid MIME type. The response body of a JSONP is just JavaScript, so one of the MIME-types for JavaScript has to be used.","2013-08-30 04:14:44","938089"
"88462547","34899183","1","As a function:
``def dictmerge(*args):
  return {i:d[i] for d in args for i in d}``","2018-06-06 06:27:21","5228288"
"40754262","23762744","1","Where are you getting this stuff? This is all complete nonsense: `String` and `string` are exactly the same thing.","2014-09-24 02:56:13","432294"
"88473952","16957078","0","Use `s` for some amazing ""ignore error and warnings"" goodies! Great for big searches.","2018-06-07 04:47:40","1896797"
"119593308","509295","0","""a[-1]    # last item in the array"" Is this the only way to retrieve last item using Slicing? It seems like a[-1:] doesn't work. Why?","2021-05-23 02:30:55","1571343"
"40760987","23275699","2","The RFC only states ""whitespace is allowed before or after any of the six structural characters"", not explicitly mentioning strings, numbers, ""false"", ""true"", ""null"". This omission is ignored in ALL implementations.","2014-09-24 06:15:00","300224"
"119602640","36394436","0","Tks for the reference to my comment. I find it weird that my original comment was deleted from https://stackoverflow.com/a/1274447/475876","2021-05-24 01:46:04","475876"
"40770398","14105447","0","So fix your answer. If it was a constant you couldn't reassign it inside the called method, and you can, unless you specify `final.`","2014-09-25 12:41:47","207421"
"88494845","1628584","0","I followed these instructions and thought I'd lost all my changes, then changed to the new branch and they were there.  Kind of blew my mind for a moment until I realized why it worked.  I'm dumb.  Thanks.","2018-06-07 02:20:04","684259"
"55336076","178386","2",":hidden is for form elements, not display:none. This is not the answer people are most likely expecting.","2015-11-18 03:57:48","2664702"
"72891470","246128","1","@switch87 your solution doesn't work in all cases. Please do not edit the answer if you are not 100% sure.","2017-03-20 03:23:38","401753"
"119616816","23465314","1","A better '==' table:  https://algassert.com/visualization/2014/03/27/Better-JS-Equality-Table.html","2021-05-24 02:40:42","544958"
"55342997","60232","9","If you intend to disprove his comment, PROVE that a script CAN access where it's stored with a code example.","2015-11-18 06:54:12","1864166"
"119626163","50289800","0","This was one H*  of a short solution, and it's originality! My gosh thank you!  It's brilliant;","2021-05-24 09:27:18","14346786"
"55345997","33784821","1","This does not provide an answer to the question. To critique or request clarification from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/10250356)","2015-11-18 08:14:25","2570353"
"72905361","30479554","4","@gary According to MDN + changing the above demo to `i++` each function has its own block scope and doesn't interfere with the other instances: http://jsfiddle.net/rmXcF/474/","2017-03-20 11:57:52","36821"
"27311751","13242127","1","Yeah of course, `git merge origin/master` will be faster and probably even safer. Since if someone pushed new changes during the removal of of files of this script (which is not likely to happen, but possible), the whole pull could fail.

The only reason I put `pull` in there is because someone might not be working on the master branch, but some other branch and I wanted the script to be universal.","2013-09-01 10:25:37","1343616"
"27312036","15114868","0","The checkout of modified files is needed, so this works 100% of times. I updated my script with that a long time ago, but forgot to update here as well. I also use it a little differently than you. I checkout files which have any type of modification, not just M, so it works all the time.","2013-09-01 10:48:40","1343616"
"119633231","17789187","0","Finally there is an official way https://stackoverflow.com/a/67683124/4985958","2021-05-25 06:59:28","4985958"
"55352187","33784821","4","@SergeyDenisov What gives? This is definitely an answer. (Whether it works or not is another matter.)","2015-11-18 11:43:53","712526"
"55352417","33784821","1","@jpaugh then you should explain it in details.","2015-11-18 11:55:18","2570353"
"55352483","33784821","1","@SergeyDenisov. It gives a suggested course of action that might produce the correct result. Or, even if it does not, it might help someone else. That's what I mean by, ""It's an answer."" If you want to know how it works, ask the poster.","2015-11-18 11:58:40","712526"
"55352529","33784821","0","@SireeshYarlagadda You should provide more information in your answer, especially since this command is relatively complicated. Break it down into parts and explain each one. (It was flagged as low quality because it lacked an explanation.)","2015-11-19 12:00:57","712526"
"40793224","24420461","1","This is very inefficient when the array is large.","2014-09-25 02:40:36","657427"
"55355005","31886761","0","I ran across this issue on a Mac too now. If the file is not tracked in the Repo sometimes git reset doesnt touch it. I cant really isolate the ""WHY"" but when that happens, if I reset, and i still have 1 uncommitted file or two, i add --all and reset --hard again","2015-11-19 02:18:10","1563884"
"55366353","33784821","2","@jpaugh I'm sure that one line command/code is not enough for a complete answer. You could write a comment giving a suggested course of action, but an answer should include an explanation. That's why this answer was flagged as ""Low Quality Post"" (not by me).","2015-11-19 09:47:28","2570353"
"55373194","33784821","0","Let us [continue this discussion in chat](http://chat.stackoverflow.com/rooms/95563/discussion-between-sergey-denisov-and-jpaugh).","2015-11-19 12:26:17","2570353"
"40812051","11444416","3","let is not hoisted like its counterpart 'var'
Hoisting behaves differently around a function block and any other block","2014-09-26 03:19:02","1421069"
"40813873","52713","1","Michael: start with git clean -df to remove all untracked files first, as suggested in Mariusz' answer above.","2014-09-26 05:27:23","584503"
"11313566","2691891","51","@Schneider POST may create a subsidiary resource; hence you can POST to collection, like **POST /expense-reports** and it would create as many entities (expense reports) on your server as the quantity of requests you've sent, even if they are completely similar. Think of it as inserting the same row in the DB table (/expense-reports) with auto-incremented primary key. Data remains the same, key (URI in this case) is generated by server and is different for every other insert (request). So, POST effect **can** be idempotent, but also **may** not. Hence, POST is **not** idempotent.","2012-01-26 05:32:20","970835"
"103533617","57474959","0","Nice.‌‌ ༼ ͡☉ ͜ʖ ͡☉ ༽","2019-10-29 04:30:11","3353495"
"11316143","4358620","21","Instead of using the class=""unselectable"", just use the attribute selector [unselectable=""on""] { … }","2012-01-26 07:39:16","101869"
"88539959","27635349","0","This actually works but I think confuses the heck out of IntelliJ... :|","2018-06-08 06:09:06","32453"
"88540577","432564","0","I did this, but then a ""git log file"" would say that I was on the original commit, HEAD. It seemed that ""git checkout"" was failing. However, a git status showed that the file was actually changed and and a ""git diff --staged file"" would show the actual changes. Also, a ""git status"" showed the file changed as well. So don't use ""git log"" here to track which files changed.","2018-06-08 06:35:11","3191035"
"119659068","2003505","0","Ordinary user note: If you intend to upvote Robert Harvey's comment, do note that there are already 1215 upvotes added.  Will your new upvote add any substantial value?  :)  ...Now it's 1216!  That is a *lot*.","2021-05-26 12:41:06","279112"
"55386904","31886761","0","If you haven't committed or staged a new file git completely ignores it and won't touch it. It doesn't want to accidentally delete something you might want. You can see [here](https://git-scm.com/docs/git-status) at `--untracked-files[=<mode>]` that untracked files are shown by default in `git status`, and you can tell it not to show them if it bothers you! For the record, `git add --all` will stage the files ready for commit, at which point git recognises them (hence git reset --hard will then work). `git clean` removes untracked files [see here](https://www.git-scm.com/docs/git-clean/1.7.5)","2015-11-19 05:41:06","1813394"
"103540241","89237","0","The one solution that worked for me for running NodeJS stuff.","2019-10-29 08:49:50","4764353"
"27347314","10945139","0","hi. when you test this function with number or boolean true or false return true and this is not correct result. isObjectEmpty(true). isObjectEmpty(false). isObjectEmpty(1)","2013-09-03 04:40:19","2334465"
"40829543","23261705","0","Even shorter: `new Date().getTime()/1000|0` but its slow and dirty","2014-09-26 01:53:17","1283772"
"88545029","32212535","0","@ChunYang You are absolutely right. I am already using lodash, why not just use it if it saves time.","2018-06-08 09:48:30","1516648"
"27349617","10945139","2","We are checking whether the object is empty, not if the data type is an object. In your case to check if its an object we need to something like if(typeof a === ""object"") {...}","2013-09-03 06:31:47","1188322"
"119666068","1109108","2","now `getSystemService()` requires a `Context` and a  serviceClass `Class`. For the context I can call `requiredContext` but what about for the serviceClass?","2021-05-26 08:37:08","3122668"
"40834044","21890252","0","@funroll Agreed. Just dropping the last commit msg is a super common need for me. We should be able to devise that...","2014-09-26 03:52:34","3779"
"40834130","21890252","0","@SteveClay Somewhere around here: `git commit --edit -m\""$(git log --format=%B --reverse HEAD..HEAD@{1})\""` :)","2014-09-26 03:55:16","1580288"
"55394029","33784821","0","@SergeyDenisov I agree with you on that! But I did not understand what you meant from the ""canned"" comment in the review tools.","2015-11-19 09:00:54","712526"
"119669168","2399033","0","Just one detail, interactive rebase lets drop commits by deleting lines, but if you remove everything, rebase will be simply aborted. Easiest trick here is removing all lines but one, and label this last one as ""drop"" so everything is discarded.","2021-05-26 10:35:27","2067969"
"40837415","2386013","1","@JacekS Just for information - for Android development, As of version 19.1 of the Android support library, `@NotNull` and `@Nullable` annotation support has been added. So basically all Android developer can take advantage of it. It won't be IDE specific anymore. More information regarding support annotations here - http://tools.android.com/tech-docs/support-annotations","2014-09-26 05:42:07","1723372"
"72947741","40214952","0","Yes location.href = would be better option to redirect the page -:)","2017-03-21 11:01:48","5680730"
"11338018","4682612","13","If I do git clone, I have the master branch locally and 10 branches ""remote"". So THIS answer by Gabe was very helpful and answers the question.","2012-01-27 07:07:30","356815"
"72950715","35472255","8","`git reset --hard HEAD~1` is **too dangerous**! This will not just 'cancel last commit', but will revert repo completely back to the previous commit. So you will LOOSE all changes committed in the last commit!","2017-03-21 12:09:47","1720476"
"11348674","114549","114","You have to use the !DOCTYPE tag on your html page to make it work well on IE.","2012-01-28 02:23:14","250329"
"88567442","49497485","0","Thank you for the answer. I tried your approach, but unfortunately, it does not work. Because it could be some kind of mistake on my side, I ask you for check my [example in JSFiddle](https://jsfiddle.net/x8k9avf2/9/)  and if it will be some mistake on my side, I'll vote up for your answer.","2018-06-10 03:39:53","4818123"
"88567523","49497485","0","When I run your fiddle, I get `{ foo: 1, bar: { fooBar: 22, fooBaz: 33, fooFoo:  11 }, baz: 3}` and `{ foo: 1, bar: { fooBar: 22, fooBaz: 44, fooFoo:  11 }, baz: 4}`.  Is that not what you expect to happen?","2018-06-10 03:50:01","4009972"
"88567562","49497485","0","what you pasted is what I expected. I don't understand why, but I see `fooBaz: 44` for both `testObj2` and `testObj3` in console... ([screenshot](http://prntscr.com/jt5tj0))","2018-06-10 03:55:32","4818123"
"88572695","163659","0","On windows with VsCode?","2018-06-10 11:13:12","2581562"
"55420128","1628334","0","@DanMoulding Is there a way to do this to a branch that isn't the current branch? Eg, I'm on branch `ticket1066_super_new_feature` and I want to reset `uat_stable` to `origin/uat_stable` without first doing `git checkout uat_stable`. If there is, would you consider adding this to the answer?","2015-11-20 01:15:45","2547229"
"119696170","105074","0","I challenge the claim that Math.random is that low of a quality of randomness.
https://v8.dev/blog/math-random. As you can see, it's passes a good test suite, and the same algorithm is used by v8, FF and Safari. And the RFC states, pseudo-random numbers are acceptable for UUIDs","2021-05-27 08:38:59","856465"
"88581255","33132462","0","Related meta question on SU arguing to remove all image-only answers: [Video/image-only answers](https://meta.superuser.com/q/13072/116475)","2018-06-10 07:49:29","395857"
"72976195","22063635","0","The unprefixed CSS property must be strictly at the end of list of prefixed versions of the property. It is good right practice, other is bad practice making an ""new IE"" from Chrome/Webkit and leading to so much UGLY THINGS as introducing -webkit prefix support in not webkit browsers. Look, this was already in 2012: https://dev.opera.com/articles/opera-mobile-emulator-webkit-prefix-support/","2017-03-21 10:52:27","1848217"
"72976202","22063635","0","And I quote: `This is because through our site compatibility work, we have experienced that many authors of (especially mobile) sites only use -webkit- prefixed CSS, thereby ignoring other vendor prefixes and not even including an unprefixed equivalent. This leads to a reduced user experience on Opera and Firefox, which don’t receive the same shiny effects such as transitions, gradients and the like, even if the browser supported those effects.`","2017-03-21 10:52:47","1848217"
"119704357","179147","0","Running this command will get you back to the previous state and what are the things which you want to have. git reset --soft HEAD~1 and then you can do commit from start with relevant files and message which you want to write.","2021-05-27 01:34:14","9301205"
"119704824","20338254","0","Small correction over here you to added the files back again if all files than git add . can be used an post that git commit -m ""New message"" and git push origin BRANCH_NAME","2021-05-27 01:47:11","9301205"
"55430995","1628334","0","@Benjohn I don't think there is a way to do that, at least not with git-reset. git-reset always operates on the current HEAD (i.e. the currently checked-out branch).","2015-11-20 05:47:50","95706"
"55432010","3737139","4","A question was asked today (Nov.20/15) http://stackoverflow.com/questions/33833259/what-is-rscat-in-php asking *""What is $rsCat in php""* (should that question still be made visible and not deleted).  Strangely enough, there isn't a reference about `$` variable, but about `$$` Variable Variables only. I believe that should be amended somewhere.","2015-11-20 06:19:22","1415724"
"119708857","11312069","0","Seven years later, this answer doesn't work: ""SyntaxError: import declarations may only appear at top level of a module"".","2021-05-27 03:52:48","2184308"
"11370523","5916151","5","In your first JSFiddle example you should be using `removeAttr('checked')` rather than `attr('checked', false)`","2012-01-30 07:00:08","68210"
"27399506","14419228","13","**Case 1** is not constant time when there's an operation involved, such as folding pairs together. In this case, it's linear time with the smallest constant factor (the proof of which is left as an exercise for the reader). **One** can't possibly take the same time folding one pair and a bucket full of socks. However, it scales linearly. By Amdahl's law, it has unlimited speedup, ignoring overhead. By Gustafson's law, you can fold as many pairs as it takes to fold one pair given enough workers (the amount of which is left as an exercise for the reader), ignoring overhead.","2013-09-04 01:00:06","800524"
"11376663","5916151","4","@DanielXMoore, You're skirting around the issue. The example was to show that once the check-box was clicked by the user, the browser no longer responds to `checked` attribute changes, *regardless* of the method used to change them.","2012-01-30 01:28:29","696056"
"11383172","406230","372","@stevendesu: try this for 'a-very-very-long-word' or even better half a sentence. Have fun typing. BTW, it is nearly unreadable. Don't know about the performance impact.","2012-01-30 06:45:04","204042"
"55445228","31886761","0","Thanks - So basically if you git add --all, you can reset, or you have to git add --all , then get clean

Guess clean is a few less characters ;)","2015-11-21 05:38:47","1563884"
"72997166","16144913","0","Isn't the ""justify-content: center;"" for the vertical alignment and the ""align-items: center;"" for the horizontal alignment?","2017-03-22 12:04:47","6761698"
"72998269","16144913","6","@WouterVanherck it depends on the `flex-direction` value. If it is 'row' (the default) - then `justify-content: center; ` is for the horizontal alignment (like I mentioned in the answer) If it is 'column' - then `justify-content: center;` is for the vertical alignment.","2017-03-22 12:29:34","703717"
"119742983","22343224","0","Docs for [`npm shrinkwrap`](https://docs.npmjs.com/cli/v6/commands/npm-shrinkwrap) and [package-lock.json vs npm-shrinkwrap.json](https://docs.npmjs.com/cli/v7/configuring-npm/package-lock-json#package-lockjson-vs-npm-shrinkwrapjson) #toSaveYouAGoogle (or two) -- fncomp mentions [above](https://stackoverflow.com/questions/22343224#comment44548771_22343224) and tehfoo [below](https://stackoverflow.com/questions/22343224#comment45166739_22345808). Also, mneumonic: `~` stays about even, `^` goes up a little higher.","2021-05-28 07:56:54","1028230"
"119744360","35446009","2","With Java 9 you can get a byte array from the InputStream using .readAllBytes. So ""new String(inputStream.readAllBytes())"" works using String's byte[] constructor.","2021-05-28 09:18:10","11069710"
"119744380","309424","3","Most of these answers were written pre-Java 9, but now you can get a byte array from the InputStream using .readAllBytes. So, simply ""new String(inputStream.readAllBytes())"" works using String's byte[] constructor.","2021-05-28 09:19:30","11069710"
"103619999","57294442","2","This is treasure 🐱‍👤🐱‍👤🐱‍👤","2019-11-01 11:32:45","6566310"
"119746486","134957","11","_“If that is not possible, then” use a button instead._ That’s how this answer should’ve ended.","2021-05-29 12:52:42","4642212"
"119746576","135248","0","_“Links are made for navigation, and if your JavaScript code isn't for navigation it should not be an `<a>` tag.”_ — Even if the JavaScript code is “for navigation”, a link may not be appropriate every time.","2021-05-29 01:04:30","4642212"
"119746629","759284","0","`href=""javascript:""` and `href=""javascript:void 0;""` are all equivalent as well, but they’re all equally bad.","2021-05-29 01:10:08","4642212"
"119746645","26998181","0","@HrvojeGolcic Please note the [accessibility concerns](//developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex#accessibility_concerns) when using `tabindex`.","2021-05-29 01:13:16","4642212"
"27421905","6866485","2","Could someone comment on ""what if you have already pushed the commit?"".  Is this answer still valid, or does that make it all more difficult?","2013-09-05 03:10:54","554807"
"11401543","180085","23","Use `-p` (`--preserve-merges`) if there was a merge after the flawed commit.","2012-01-31 02:37:47","774669"
"55470793","31886761","0","Pretty much, although if there are untracked files lingering I tend to just leave them alone. Paranoia and all that, makes me think I'll break something :D","2015-11-22 09:25:17","1813394"
"73033943","9244805","2","This is the cleanest answer, and should be the accepted one. To save some typing you can use the short form: `git stash -u`.","2017-03-23 08:30:32","191246"
"73036629","20241145","2","This solution is what I was looking for. `git rm --cached` will delete the removed file upon pull (which means, you don't want to just ignore the file, you want to delete it). `git rm --cached ` with `.gitignore` is a misleading combination. The actual solution that will not delete your files on your colleagues who run `git pull` after your changes is this answer. Thank you !  Run `git ls-files -v | grep '^[[:lower:]]'` to find files ignored this way.","2017-03-23 09:37:30","4730332"
"11420082","8480518","13","I'd be offended if a program went looking through my entire hard drive to find a directory rather than just politely looking in my current working directory or using the absolute path I give it. What you've suggested might be nice for a tool named `locate` but not nice for anything else...","2012-02-01 09:29:09","377270"
"73042353","5201642","0","This helped me when ```git rebase --interactive``` was giving me ```error: could not apply```. Possibly because one of the commits I was trying to squash was a merge with a resolved conflict.","2017-03-23 11:51:58","5130652"
"40931403","22975492","4","There are few things that can be known for sure, but this solution definitely doesn't work in *all* browsers.","2014-09-30 09:27:40","1696030"
"40932268","64966","0","I am sorry if I am missing anything, but is `git clean -f` different from simply deleting the file ?","2014-09-30 09:49:49","896561"
"88653694","22345808","1","This is wrong. As pointed out ^ specifies to update to minor versions & patches (middle & last number), & ~ specifies to only update to patch releases (last number). ""Major"" is the first number in semantic versioning, specifying breaking changes, which you don't want to auto-update to. Never saw such a glaringly wrong answer with upvoted so highly on here. It's a bit concerning.","2018-06-12 07:19:11","2533975"
"119769528","2334741","0","This does not work for mysql. For mysql you need to make a join","2021-05-30 11:06:19","2311074"
"40938144","20846779","17","@pal4life It was added in 1.8.4, you might be running an older version of git? https://github.com/git/git/blob/master/Documentation/RelNotes/1.8.4.txt","2014-09-30 12:37:52","2115166"
"11430126","671132","0","@WesOldenbeuving As I understand it, POST is used when updating iff you're updating a part of the content, while PUT is used if you're updating the whole thing. For example, POSTing to /user can be looked as an update to that resource; /user is a container resource. May not be totally correct guys, so feel free to jump in.","2012-02-01 05:31:23","176217"
"11432337","674302","12","cool links, thanks.  I'm tired of these REST guys that say some example is not ""REST-ful"", but then refuse to say how to change the example to be REST-ful.","2012-02-01 07:19:02","2052164"
"11432859","671132","11","1) Stop conflating CRUD with HTTP verbs. 2) REST isn't REST without Hypermedia (HATEOAS), it's just HTTP. 3) REST doesn't talk about the format of your URIs, only that you manipulate resources using representations of those resources.","2012-02-01 07:41:53","18315"
"11433040","671508","37","An answer providing a reading list is very appropriate for this question.","2012-02-01 07:50:55","34441"
"103651218","1026069","40","`\`${s[0].toUpperCase()}${s.slice(1)}\``","2019-11-02 08:20:04","1095213"
"103652319","59895","1","`realpath ""$(dirname ""${0}"")""`","2019-11-02 09:45:55","4620617"
"11436006","1081601","40","For me this answer captured the essence of the desired answer.  Simple and pragmatic.  Granted there are lots of other criteria, but the example provided is a great launch pad.","2012-02-01 10:09:41","23999"
"11436626","671132","5","I'm surprised that HATEOAS wasn't brought up sooner.","2012-02-01 10:45:24","436361"
"11437354","671508","26","Thanks for the update.  `PUT` and `POST` don't really map one-to-one with update and create.  `PUT` can be used to create if the client is dictating what the URI will be.  `POST` creates if the server is assigning the new URI.","2012-02-01 11:30:14","41747"
"40945852","26111877","0","I've edited the question to not use the word `union`, for clarity.","2014-09-30 03:49:34","3207"
"88668775","9197466","0","Bangs head against wall. HTTP has no solution to the problem of reliability, and this is not well understood, not much discussed, and simply not catered for in the vast majority of web applications. @Joshcodes I have an answer to this question. I essentially agree with Hans. There's a problem.","2018-06-13 08:21:20","1585345"
"119782952","26998181","0","@SebastianSimon Agree! I'd absolutely not recommend it. Better is `<a>`! In this specific case I guess since he is already implementing `role` then it's a custom control. Indeed he needs `tabindex`, events for SPACE and ENTER keys, visible focus etc.","2021-05-31 04:31:30","996010"
"11438915","5916151","3","@ChristopherHarris Ok, you're right, I missed that. As of jQuery 1.6 shouldn't you use the .prop method though?`$('.myCheckBox').prop('checked', true)` That way it will automatically apply to the entire set of matched elements (only when setting though, getting is still only the first)","2012-02-02 01:45:40","68210"
"11439452","5916151","0","Yes. `prop` is definitely the appropriate way to set attributes on an element.","2012-02-02 02:40:32","696056"
"11439765","406230","13","@PeterSchuetze: Sure it's not pretty for very very long words, but it is a viable and correct solution. Although I haven't run tests on the performance, I wouldn't imagine it being too slow since most of the latter rules are ignored until you see an h (or the first letter of the word, sentence, etc.). And you could easily generate the regex string for long strings using iterative concatenation. If it works and can be generated quickly, is legibility important? That's what comments are for.","2012-02-02 03:14:07","436976"
"103661218","34152896","1","Yes, the same technique can be used with [TortoiseGit](http://en.wikipedia.org/wiki/TortoiseGit), getting the Git commands for the common use cases.","2019-11-03 01:43:01","63550"
"103661341","44800259","0","Image: *""The command add...""* → *""The command adds...""* ([present simple tense, third person](https://www.youtube.com/watch?v=1Dax90QyXgI&t=0m38s))","2019-11-03 01:52:03","63550"
"103661363","44800259","0","Image: *wanna* → *want to* (there is no need to use slang here)","2019-11-03 01:53:19","63550"
"119792386","11312069","0","Share your code what you are trying to do.","2021-05-31 12:06:37","946170"
"119792666","138233","0","@Nathan Non-jquery: `const voidLinks = document.querySelectorAll('a[href=""#""') for (const voidLink of voidLinks) { voidLink.addEventListener('click', e => { e.preventDefault ? e.preventDefault() : e.returnValue = false }) voidLink.addEventListener('keypress', e => { if (e.keyCode === 13) e.preventDefault ? e.preventDefault() : e.returnValue = false }) }`
That is including event listener on keypress Enter (code 13) for people navigation through page with keyboard.","2021-05-31 12:18:05","9583480"
"88680881","47652283","0","How would you compare the value of x to the next items x value? This isnt working: ```for (var i = 0; i < n; i++) {
  if (numbers[i].x == (numbers[i] + 1).x) {
    count += 1;
  }
}```","2018-06-13 01:32:18","2336356"
"119793141","67058208","0","Doesn't look very elegant to me, not very readable. Typical example of overcomplicating something simple.","2021-05-31 12:36:29","11647753"
"27470403","16144913","0","what do you mean by ""syntax is outdated"", is it deprecated?","2013-09-06 10:18:39","1307915"
"119799805","11312069","0","Okay, here is code that works nicely:

function Include(jsFilePath) {
	var js = d.createElement(""script"");
	js.type = ""text/javascript"";
	js.src = jsFilePath;
	d.body.appendChild(js);
	} // Include","2021-05-31 05:04:57","2184308"
"119801614","509295","0","Why does it seem like start: stop are in the wrong order for these: `a[1::-1]   # the first two items, reversed
a[:-3:-1]  # the last two items, reversed
a[-3::-1]  # everything except the last two items, reversed` I checked on iPython console that your answer is correct but it seems to not be in line with the start:stop: step.  I would think reverse first two items would be `a[:2:-1]`","2021-05-31 06:38:16","9481613"
"73070958","36463546","0","@Walf, history is rewritten in this case by `git reset --keep`. So you're rewriting history yourself in this example by dropping commits, and that's how they're ""lost"" when rebasing.","2017-03-24 01:11:55","1327867"
"73071429","36463546","1","You can also use `--no-fork-point` when you run `git rebase`.","2017-03-24 01:43:54","1256452"
"73072469","16957078","4","Can anyone explain why there is a \ in include argument --include=\\*.{c,h}? thanks","2017-03-24 02:52:55","2641038"
"40963591","25500568","4","Your part ""b"" above is exactly what the Docker folks have been saying about the technology. It's meant to make the development **and** deployment tasks easier. And based on my experience as a dev and as a sysop, I have to agree.","2014-10-01 05:30:43","325042"
"119808027","23961231","0","Great answer—I appreciate how the visuals explain *why*! You could consider making the ""short answer"" even shorter (e.g. list only the short versions of commands, choose one of -d and -D and note the other as per @Eric Brotto). The alternate forms can follow below.","2021-06-01 03:09:35","13326516"
"27483579","14415881","358","Why not spawn a child and `waitpid` so that, as the parent, you're not even sorting any socks yourself?","2013-09-06 04:48:54","834063"
"27484650","14419556","7","Or you could do what I do and buy 100% of the same sock, and then you can guarantee O(1) time for search AND sort.","2013-09-06 05:24:47","12930"
"27484691","163659","4","@advocate Just `git add` the fixed files.  Doing so effectively marks them as resolved.","2013-09-06 05:26:22","1704134"
"119815456","1628563","0","@mins Perhaps TortoiseGit is one step nearer to what you're asking for. The beauty of Git is that you have full control at your fingertips, but this requires a deeper understanding and a need for the user to be comfortable using a command line interface. I've been using Git for some years now, yet I still rely upon making references to the documentation and/or stackoverflow when I need to do less frequent operations. I like operating with the git CLI (I use GitBash) as I can get things done quickly. However, I turn to TortoiseGit to resolve conflicts as I find this easier.","2021-06-01 09:53:34","2145392"
"27489777","14415881","157","I solved this problem by only owning white knee-high socks.  They all match.  I could simply grab any two socks at random from the pile and they would match.  I further simplify the problem by NOT pairing the socks.  I have a sock drawer that I simply throw all my socks into, unpaired.  I grab two at random from the drawer every morning.  I've simplified it down to O(0).  Can't get any simpler than that. :)","2013-09-06 08:18:28","486641"
"119820348","17789187","0","Thanks it is helpful.","2021-06-01 01:06:36","3150748"
"27493780","14421438","3","I came here specifically to post your ""non-algorithmic"" answer. As in true computer science, most people never pay enough attention to the data and its structure.","2013-09-06 11:39:31","933963"
"119821915","43766002","1","Out of convenience for myself (and others?), adding a link to a related answer:
[How to make many asynchronous calls and wait for them all](https://stackoverflow.com/a/31426920).","2021-06-01 02:01:43","9213345"
"103693995","114549","0","@amachreetamunoemi do you think that? then could you ask with a better solution","2019-11-04 06:04:15","7542452"
"103694157","12196466","0","I always think that use lots code is bad practice for example with this code I center my div:
   display: table;
   margin:  auto; simple and easy","2019-11-04 06:11:22","7542452"
"55537644","28980049","0","Yes.. dp and dip are same... used interchangeably... Is my answer solve your query?","2015-11-24 06:36:23","1994950"
"27494934","14416010","0","This is what I do as well, and since I only ever have 4 to 5 different types of socks, I can always quickly eyeball the unmatched socks, and so for all practically purposes, it functions as the ideal Hash @JonHanna described and scales as O(n).","2013-09-07 01:26:10","630989"
"27494949","14418638","1","@Vilx- But how do you deal with lost socks? When I have one sock that wears out, I just throw it away and throw the other into the laundry, hoping that it will match up with some other orphaned socks.","2013-09-07 01:27:46","630989"
"27495140","14415881","16","This is O(1) anyway - there's a constant limit to the number of socks that will fit in any particular washing machine or sock drawer.","2013-09-07 01:51:31","180247"
"55540438","27979309","0","As per the documentation

The compiler accepts both ""dip"" and ""dp"", though ""dp"" is more consistent with ""sp”.","2015-11-24 08:15:46","2191069"
"40982893","2866221","3","Note that jQuery.isEmptyObject returns **false** when you feed it an empty jQuery object (as noted on [its API page](http://api.jquery.com/jQuery.isEmptyObject/)). It only works for regular JavaScript objects.","2014-10-01 03:40:30","1805453"
"11479966","5431108","2","I'm a bit late to this - but someone saying something similar on another website got it to click for me. If you're creating a resource and using an auto-incremented ID as it's ""identifier"" instead of a user assigned name, it should be a POST.","2012-02-03 06:51:40","128382"
"27507527","14418638","0","@JacobEggers - I always throw out the whole pair. Arguably suboptimal, yes.","2013-09-07 05:53:43","41360"
"27507690","487258","36","[`Big-O notation explained by a self-taught programmer`](http://justin.abrah.ms/computer-science/big-o-notation-explained.html)","2013-09-07 06:02:25","447156"
"40985917","9180445","5","+1 for a useful approach in some situations. This is good if you only want to pull your own commits (which are interspersed with others) into a new branch.","2014-10-01 05:11:06","1038564"
"40987595","12184274","2","this reverted to previous commit for some reason","2014-10-01 06:03:37","647485"
"55545503","16776988","0","Just set this rule for `#inner` only: `#inner { position:relative; left:50%; transform:translateX(-50%); }`. This works for any width.","2015-11-24 10:30:28","607874"
"119833187","138233","0","@s3c The enter keypress already triggers the click event, so is that last listener necessary?","2021-06-01 10:01:17","507629"
"27516597","11112320","67","JSONP is not really JSON though, it's a technique for passing a JavaScript object literal","2013-09-08 06:44:30","1348195"
"103705346","22365742","1","Yes, this answer seemed totally backwards until I realized the answerer meant ""fix"" as in ""to make fixed, stationary, or unchanging.""","2019-11-05 05:57:48","8888320"
"88716518","115983","0","I propose to add this to the main solution: https://stackoverflow.com/a/21422128/1670956","2018-06-14 11:59:44","1670956"
"73104845","25348157","0","ConcurrentHashMap is not read-synchronized, whereas Hashtable is.  So if you have a high amount of read operations happening simultaneously with writes, a Hashtable would serve you better if you care about data integrity.","2017-03-24 07:27:20","6998684"
"73104912","42622789","0","Why do you say ~""**Hashtable is a legacy class**""?  Where is the supporting documentation for that.","2017-03-24 07:29:13","6998684"
"40998836","179147","1","A link to http://git-scm.com/book/en/Git-Tools-Rewriting-History would be great in the answer.","2014-10-02 02:31:38","1049112"
"119841420","138233","0","@Nathan Did not know that. Thank you. PS: Can't find documentation on it, but from what I've found from other people it seem confirmed. Fixed snippet: `const voidLinks = document.querySelectorAll('a[href=""#""') for (const voidLink of voidLinks) { voidLink.addEventListener('click', e => { e.preventDefault ? e.preventDefault() : e.returnValue = false }) }`","2021-06-02 08:08:35","9583480"
"119841624","67799533","0","This idea can be abused for distant targets in a bow and arrow style: `while((x --)>          0)`","2021-06-02 08:16:28","4593267"
"119841760","67799533","0","That's upto the understanding, whatever seems easy & understandable to a person, it's fine for him/her. Main Goal is to clear the concept and be a successful developer :)","2021-06-02 08:21:24","7469973"
"119841919","67799533","0","Of course. And IMHO `while (x --> 0)` is clear and effective. `x` takes all values below the starting one down to and including `0`, which is perfect for a loop enumerating index values for an array for both signed and unsigned types of `x`.","2021-06-02 08:28:29","4593267"
"119844557","43188775","0","Thanks for the jQuery one, great!","2021-06-02 10:11:45","701049"
"73112764","16957078","2","I find the `-i` option very useful too to ""ignore case"". Maybe throw this in your list of options.","2017-03-25 01:37:19","4561887"
"73124614","40857703","6","I just wrote pretty much the same, because I didn't see your solution ... here is what I looked for  ""recursively flatten complete multiple lists"" ... (+1)","2017-03-25 03:32:05","562769"
"73127697","40857703","3","@MartinThoma Much appreciated.  FYI, if flattening nested iterables is a common practice for you, there are some third-party packages that handle this well.  This may save from reinventing the wheel. I've mentioned `more_itertools` among others discussed in this post.  Cheers.","2017-03-25 05:51:51","4531270"
"55575500","30733500","13","A picture is worth a thousand words! Is the updated image with clone and merge data flow ready somewhere? Any other data flow besides what's already in the diagram?","2015-11-25 12:27:05","2977601"
"73134592","39850612","0","Suppose I am at 1st pic meaning meaning I have not even did ""git.add"". Also, I not at all want all this change. I mean when I do git status, it should not show any red files. I mean it should be in sync as if there was not a single file altered since the last git push. how to achieve that.","2017-03-26 12:59:40","1292432"
"73134600","39850612","0","SO suppose you are just at step first. And you want to get rid of all the changes you have done which is making ""newFile.txt"" to come up as red.","2017-03-26 01:00:12","1292432"
"73134611","39850612","0","When I do git status. I should not see any change at all. All the red files should get reverted.","2017-03-26 01:00:50","1292432"
"55578930","1026069","198","Simpler: `string[0].toUpperCase() + string.substring(1)`","2015-11-25 04:00:25","1320932"
"55578940","3516699","11","One liner: `string[0].toUpperCase() + string.substring(1)`","2015-11-25 04:01:07","1320932"
"27539082","7644118","65","1) HashMap's iterators are NOT fail-safe.  They are fail-fast.  There is a huge difference in meaning between those two terms.  2) There is no `set` operation on a `HashMap`.  3) The `put(...)` operation won't throw `IllegalArgumentException` if there was a previous change.  4) The fail-fast behaviour of `HashMap` *also* occurs if you change a mapping.  5)  The fail-fast behaviour *is* guaranteed.  (What is not guaranteed is the behaviour of a `HashTable` if you make a concurrent modification.  The actual behaviour is ... unpredictable.)","2013-09-09 08:14:31","139985"
"27539136","7644118","29","6) `Hashtable` does not guarantee that the order of map elements will be stable over time either.  (You are perhaps confusing `Hashtable` with `LinkedHashMap`.)","2013-09-09 08:16:53","139985"
"119865380","2432799","0","To change user on new remote: `git config [--global] user.name ""Full Name""`
`git config [--global] user.email ""email@address.com""`","2021-06-03 02:25:42","9212427"
"119866847","40480","0","What would it mean then for some language to pass a reference not by value? Passing pointers to pointers? Are there languages that do such a thing? Don't languages such as C/C++ also pass references and pointers by value??","2021-06-03 04:56:29","527702"
"11519696","9113274","8","Careful with using generics like this. If you try to use `EnumLoop` with some type that is not an enum, it will compile fine, but throw an exception at runtime.","2012-02-06 12:09:08","41071"
"73141037","39850612","0","Hi, I think your question is how to remove untracked files from the current tree. For that, you can use ""git clean -f -d"". This will remove untracked directories as well.","2017-03-26 10:19:04","3719179"
"73141061","39850612","0","If you don't want to delete the untracked files, just ignore ""-f"" flag.","2017-03-26 10:20:26","3719179"
"73141773","39850612","0","It did not work. Suppose I did a git push. Now if I add a single line in my code and check git status. It will show a file in Red colour. Suppose I do not want that one line change at all. One option is I can do cntrl + z. But I want git to do that for me. I want my local project to  get in sync with the master repo. I mean when I do ""git status"" then I should see message as ""Its in sync with the master"". And when I open my code I should have a message like ""some external source is making changes"" and when I say ""Yes"" to that prompt then the one line change that I had made shold be gone.","2017-03-26 11:06:35","1292432"
"73141797","39850612","0","basically I want a git command which will revert all the changes which is making the git status to show ""red files""","2017-03-26 11:07:43","1292432"
"73141834","39850612","0","So I made a change to a file. I did not do anything else. NO git command at all (no git push not even git add or git commit). But now I want a git command which will revert those changes in my local repo.","2017-03-26 11:10:07","1292432"
"73141997","39850612","0","In a more technical terms ""How to revert the file changes made in local repo which has not been put in the staging area""","2017-03-26 11:21:10","1292432"
"73142976","39850612","0","Didn't you try ""git checkout file_name"". Also, you can stash the changes by using ""git stash"".","2017-03-26 12:14:59","3719179"
"103740977","27540786","1","The Venn diagrams are mislabelled. See my comments on the question & other answers. Also most of this language is poor. Eg: ""When the join-predicate is satisfied by matching non-NULL values, column values for each matched pair of rows of Employee and Location are combined into a result row."" No, not ""When the join-predicate is satisfied by matching non-NULL values"". Values in rows don't matter other than whether the condition as a whole being true or false. Some values could well be NULL for a true condition.","2019-11-06 07:00:37","3404097"
"103741093","100146","2","@thomas-wouters Is this line `metaclasses are inherited` correct? [Jerub's](https://stackoverflow.com/questions/100003/what-is-a-metaclass-in-python/100037#100037) answer says that metaclasses *are not* inherited. Also, what happens if the class subclasses multiple classes, and they each have their own `__metaclass__` (or two or more parent classes define a `__metaclass__`).","2019-11-06 07:04:46","1365918"
"27545157","59839","5","It might be worth mentioning that as soon as the check has been performed the situation can have changed already due to other processes.  In many cases it is better to just create or use the directory and react on a failure.","2013-09-09 11:51:59","1281485"
"27547402","14105447","0","What I meant by constant reference is, there is no way to change the reference itself by saying new MyClass() in a function. If I put it correctly, there object references are passed by value which means a copy of the reference is passed so you can change the data where that reference refers to but you can not change it with new operator and allocate a new object.","2013-09-09 01:06:23","1678760"
"41032219","20388370","9","You missed one thought - whats the reason for keeping and empty folder (e.g. /logs, /tmp, /uploads)? Yes - its to keep the folder empty. :) So if you want to keep a folder empty, you have to ignore the files inside it.","2014-10-03 12:08:17","2139671"
"119873800","46155","0","@David Mårtensson I added a + on your thoughts. However I do think that a verification email-link thing also can be bad user experience. One that can make you lose a customer.","2021-06-03 10:22:01","2761299"
"11543567","9113274","8","Thank you svick. Runtime exceptions will actually occur with the other answers on this page... except this one because I have added ""where Key : struct, IConvertible"" so that you get a compile time error in most cases.","2012-02-07 12:13:14","1185191"
"119885285","6858453","3","While your comment is technically correct (the best kind of correct!) Greenwich Mean Time has been around for a long long time before the invention of the acronym UTC.","2021-06-03 05:18:17","1016716"
"55602627","22654961","1","I agree with @Godsmith! Why isn't this rated higher? The part about forcing master to point to a former commit is definitely the best option I have seen in here. Thank you @aragaer","2015-11-25 03:48:24","2590435"
"55608393","28506621","3","@RuchirBaronia, I think the DP or DIP is still there inside apk, because the apk doesn't know which kind of screen density it will run with yet, so the device independence should be still kept.","2015-11-25 06:18:55","2368492"
"41051530","7359734","17","@SimonD: pick any SQL Server keyword and you will find bugs. Your point? I wager there are more bugs (and more fundamental ones too) associated with `UPDATE` than `MERGE`, folks have just learned to live with them and they become part of the landscape ('features'). Consider that blogs didn't exist when `UPDATE` was the new kid on the block.","2014-10-03 03:29:09","15354"
"103770747","23762744","0","@JaySullivan I'd beg to differ.","2019-11-07 12:49:09","197591"
"41055157","2590281","3","PATCH isn't a realistic option for at least a few years, but I agree with the ideology.","2014-10-03 05:33:08","1195273"
"55613262","1628584","1","Thanks Worked for me very well, only then reset a git stash apply, I changed to the correct branch and apply git stash pop! with that I get my changes and where I corresponded!","2015-11-25 08:52:25","4287850"
"88793385","394814","6","Programmers need precise correct formulation even more than mathematician, because in mathematics there is always a resort to underlying concepts. A convincing argument  is the % operator, mimicking the way ""mod"" is used in math would have been a disaster.  So no, I don't accept your argument. It is like adhering to imperial units. Groetjes Albert","2018-06-17 12:50:52","1374975"
"88793454","39067220","2","Algol68:  a=.if. .true. .then. 1 .else. 0 .fi. This may be expressed also a=(.true.|1|0)  As usual Algol68 is an improvement over its successors.","2018-06-17 12:55:29","1374975"
"119902949","67835679","0","Did `git push <remote_name> :<branch_name>` really not work? In your case `git push origin :Test_FE`. That's listed in the top-voted, accepted answer which was posted 11 years ago.","2021-06-04 11:11:42","5067311"
"119905948","2003505","0","A very nice blog on [freecodecamp](https://www.freecodecamp.org/news/how-to-delete-a-git-branch-both-locally-and-remotely/)","2021-06-04 01:09:22","465053"
"119908090","46155","1","@mikael1000 Sure, but what is the purpose of a regex validation when you will not know if its a valid email anyway. If you do not want to intrude on the customer with a validation link just do the most simple validation <something> at <something> and leave it at that. It will ensure that the customer at least added something that might be an email, anything more it mostly a waste of code until you get to actually validating. You could possibly check if the domain exists with a dns lookup.","2021-06-04 02:23:12","479137"
"119908182","67835679","0","Sorry, that should probably have been `:feature/Test_FE`.","2021-06-04 02:25:55","5067311"
"55628422","275869","0","This only hides the problem. What if you are using  `foo` later on?
If a variable shouldn't be null, but is...your app needs to get a NPE so you as the developer can actually fix the underlying reason.","2015-11-26 08:57:15","528617"
"88800832","11828573","1","You can search in `:help` like in every other window by typing `/<some text>` which searches for occurences of `<some text>`","2018-06-17 09:07:31","3102935"
"41104564","630471","2","I agree with the answer with a slight modification. Use POST to create and PUT to update the resource completely. For partial updates, we can use PUT or PATCH. Lets say we want to update the status of a group. We can use PUT /groups/1/status with the status is the request payload or PATCH /groups/1 with the details about the action in the payload","2014-10-06 06:26:04","268850"
"41104602","630475","1","In pratice, POST works well for creating resources. The URL of the newly created resource should be returned in the Location response header. PUT should be used for updating a resource completely. Please understand that these are the best practices when designing a RESTful API. HTTP specification as such does not restrict using PUT/POST with a few restrictions for creating/updating resources","2014-10-06 06:28:04","268850"
"41104769","630471","0","@BradKoch You are right with the statement; but when you are designing a RESTful API, you need to ensure that its consistent so that it makes life easy for clients consuming your API's. If you are using POST/PUT interchangeably to create/update resources it makes life hard for your consumer. You would want to keep it easy for your clients because thats how you grow your consumer base.","2014-10-06 06:38:21","268850"
"41104823","630453","1","In pratice, POST works well for creating resources. The URL of the newly created resource should be returned in the Location response header. PUT should be used for updating a resource completely. Please understand that these are the best practices when designing a RESTful API. HTTP specification as such does not restrict using PUT/POST with a few restrictions for creating/updating resources. Take a look at http://techoctave.com/c7/posts/71-twitter-rest-api-dissected that summarizes the best practices.","2014-10-06 06:42:08","268850"
"27620214","16276586","3","I only started using Github this year, so I was wondering why this was such a highly rated question, and why none of the top answers were suggesting to just delete it from the Github web interface! Interesting that it's only a recent addition.","2013-09-11 12:18:54","665488"
"27623524","14421438","0","I use this algorithmic approach every morning and it works like a charm! Additionally, I put worn out socks to a different pile to throw away later (unfortunately they manage to get to the original pile again before I find the time to trash it).","2013-09-11 01:35:41","494616"
"27627257","14488421","25","return (JSON.stringify(obj) == '{}')","2013-09-11 03:05:26","826290"
"119947423","11227902","7","Conclusion: Always start your answer with a catchy image. This answer could never get these many upvotes had the image not be there. 
PS: Thanks for such a great answer.","2021-06-06 05:26:23","8957899"
"119947791","8963158","0","I really like this solution as it feels like a natural compliment to the way `INSERT ... SELECT` works. Thanks for sharing!","2021-06-06 05:50:48","1124758"
"103822331","927386","4","Running the first command gives `fatal: ambiguous argument 'HEAD~': unknown revision or path not in the working tree.`","2019-11-08 02:19:31","10048799"
"119957257","66318382","1","So you are recommending that to remove one property, the whole object should be copied into a new object without the targeted property?!?","2021-06-07 07:07:43","2943403"
"27634141","15669052","1","Just to point out the obvious that one doesn't have to make a single commit when going back from a feature branch. What many people do is rebase on the target branch (to make things look clean) then merge with the option to suppress fast-forwarding. Agree with the main point of being careful before you push up though.","2013-09-11 06:20:34","410882"
"41124683","1984603","41","For future people who read these comments and are as confused as I was: This answer wasn't posted for this question. This question never had anything to do with CodeIgniter. There was a duplicate question which specifically mentioned CodeIgniter which was closed and had all of its answers migrated over to this question. This answer was one of those which were moved from the old closed question to this protected question. Even so, I this answer is misleading. I have downvoted it - others should do the same since, in its new home, it is wrong. The author should delete it or the merge be undone.","2014-10-06 05:33:08","901641"
"11619362","4682612","46","this only fetch remote branches that have been locally added not *any* remote branch","2012-02-10 11:45:59","174027"
"88848086","38923942","0","Also, no `removeAt` in ES standard. I suppose, this is some IE-only stuff? That should be mentioned in answer.","2018-06-19 09:01:38","2109067"
"73226986","42902202","1","If you're going to name it `pop` at least make it do what the method name implies!","2017-03-28 02:06:10","219661"
"103837140","2432799","0","Please include Ben's additional optional command to update all branches (if user desires). Setting the new origin is great, but without pushing your history to the repo, the remote is out of sync by one or more branches.","2019-11-09 01:45:44","3582957"
"73233613","630453","1","I don't understand the prevailing wisdom on this. OP's citation for PUT begins with ""The PUT method requests that the enclosed entity be stored...."" That screams ""creation"" to me. When we talk about ""putting"" something somewhere, we're talking about a place it hadn't been previously. You don't ""put"" something to change it. When you amend a document, you don't ""put"" a new one. The use of the HTTP verb PUT to mean ""update"" is an ill semantic fit.","2017-03-28 04:31:30","613651"
"73233680","630453","0","PUT began as a way for early Microsoft HTML design tools to publish content directly to a server. The fact that it was also used to update (wholesale) was due to the lack of another updating method. Even still since it was a wholesale update, it really was creation, just one that was idempotent. An ""update"" implies that some aspect of the previous state was maintained.","2017-03-28 04:33:03","613651"
"88856596","9197466","0","@bbsimonbb, HTTP has a robust and well documented set of error responses. My answer to this question (https://stackoverflow.com/questions/630453/put-vs-post-in-rest/9197466#19670755) covers how to use http according to specification to achieve consistency.","2018-06-19 12:50:19","965382"
"88856875","42219730","0","PUT is used by FB to update the comment because an existing resource is being updated, and that is what PUT does (updates a resource). PUT happens to be idempotent, in contrast to POST. An HTTP verb being idempotent affects the error handling but does not dictate usage. See my answer for a more detail explanation: https://stackoverflow.com/questions/630453/put-vs-post-in-rest/9197466#19670755","2018-06-19 12:57:06","965382"
"27659123","417142","1","Related ServerFault question about Tomcat: http://serverfault.com/questions/56691/whats-the-maximum-url-length-in-tomcat","2013-09-12 11:32:01","545127"
"27659174","417142","0","Related ServerFault question about Jetty: http://serverfault.com/questions/136249/how-do-we-increase-the-maximum-allowed-http-get-query-length-in-jetty","2013-09-12 11:33:30","545127"
"88869305","48569551","1","If you are still interested in Python 2 compatibility, change `yield from` to a `for` loop, e.g. `for x in flatten(i): yield x`","2018-06-19 07:06:43","4531270"
"119984877","73021","0","""However, you cannot change where that pointer points."" -> Shouldnt it be ""However, you cannot change where that pointer points in some other method.""","2021-06-08 06:30:57","8311083"
"41157533","215731","57","If you're going to use a branch name for *abcde* (e.g. `develop`) you'll want `git checkout develop -- file/to/restore` (note the double dash)","2014-10-07 03:14:07","67824"
"55713044","14292739","1","@nomen Not that this answer addresses it, but INNER JOIN is an intersection and FULL OUTER JOIN is the corresponding UNION *if* the left & right sets/circles contain the rows of (respectively) LEFT & RIGHT join. PS This answer is unclear about rows in input vs output. It confuses ""in the left/right table"" with ""has a left/right part in the left/right"" and it uses ""matched row"" vs ""all"" to mean row extended by row from other table vs by nulls.","2015-11-29 01:17:46","3404097"
"119991781","66956107","0","@VictorGavro yes, but weirdly enough arrays are immutable even if their values are changed, as long as you don't change them into a new array. i know, it's weird for me too. i changed the phrasing in any case.","2021-06-08 12:20:22","3356679"
"11646679","3417733","0","I think the scenario description makes it clear that he doesn't really want to throw away the content.  Rather what he wants is to stop git baulking at overwriting the files.  See my suggestion.","2012-02-11 11:03:53","152860"
"11646698","5361169","7","I think the scenario description makes it clear that he doesn't really want to throw away the content.  Rather what he wants is to stop git baulking at overwriting the files.  @Lauri, this should not have happened to you.  Unfortunately people seem to have misread the essence of scenario description - see my suggestion.","2012-02-11 11:05:41","152860"
"103866221","11828573","1","@sid-m Yes and no. That depends on if you're say root. But generally speaking you're right. It would be more correct to say that it works if vim is in read only mode. Then assuming you have permission to write to the file itself then you can force a write (it will turn off read only mode).","2019-11-10 07:42:27","9205647"
"88883675","82852","61","concerning the first remark (use ""try"" if check before open) unfortunately this will not work if you want to open for appending being sure it exists before since 'a' mode will create if not exists.","2018-06-20 07:58:09","78931"
"103866289","44148097","1","Hmm no. You're forgetting visual mode.","2019-11-10 07:47:34","9205647"
"103866315","28342808","1","@Val That looks strangely familiar. Iirc that's because the two do the same thing. As in `^[` is the same as `ESC`. That's interesting that Windows makes it more complicated. And amusing.","2019-11-10 07:49:45","9205647"
"11649991","80142","0","[@Heath] I have a small comment on your answer. Take a look at the accepted answer to [this question](http://stackoverflow.com/questions/240212/what-is-the-difference-between-new-delete-and-malloc-free). It says that the **free store** _most probably_ is the same as the **heap**, though not necessarily is.","2012-02-12 06:34:39","830320"
"11650004","662570","0","[@T.E.D.] Why did you say ""sometimes the parameters get pushed on the stack""? What I know is that they _always_ are. Could you please elaborate more?","2012-02-12 06:36:42","830320"
"41161780","21422128","3","It was suggested that `git clean -nd | sed s/'^Would remove '// | xargs -I{} touch ""{}.keep""` will do this in all untracked empty directories.","2014-10-07 05:16:31","832230"
"55717967","7244456","1","@MarkLongair what does ""replayed on top of that other branch"" mean here?","2015-11-29 09:02:15","2636873"
"27677349","14419228","9","@PauloMadeira The sorting is constant time - you just take the pile and put it in your drawer.  The only operation in this case is actually putting the socks on your feet which is also constant.  Performance is gained by deferred execution of the sock wearing, possibly with some sacrifice in space (consumed space of non-folded socks is larger than folded).  I argue that this is worth it; I usually lose this argument with my wife.","2013-09-12 07:59:21","533907"
"27680492","7104747","28","@Tino yours is really the most important point. People may not know that ""remote"" branches are actually stored as a bunch of hashes in `.git/refs/remotes/origin/`.","2013-09-12 09:49:41","448858"
"119997485","63580068","0","Have you considered using a `.gitignore` file to prevent the files and directories that should not be added from being added?","2021-06-08 03:17:34","15168"
"120000532","1628088","0","Obviously not an answer if the repo is large, but for small repos you can hit it with a hammer and avoid git entirely: `rm -fr ./repo; git clone repo`. best way i've found","2021-06-08 05:08:07","670023"
"41171511","13308579","3","you might want to use ""git remote"" to get the name of the remote. In certain cases, it won't be ""origin""","2014-10-07 10:54:31","177275"
"103875304","22417539","1","@Adam:  There is an assumption in this answer that you already have a working branch that has diverged from your target branch, and that you want to squash all the commits on the working branch from the divergence point from target, and apply them to the target branch in a single squash (non-merge) commit.   If your changes are already committed on the target branch, this answer doesn't help, since if you follow it, it will just add a new commit to your target on top of the ones you want to squash (in that case, you'd need to rebase to rewrite history on the target branch to remove commits).","2019-11-11 07:42:00","188252"
"120007731","40523","1","@redd77 when you pass the ""value"" you are not passing the actual variable, only the value it contains. Meaning you're making a copy of the values and passing in the copy. An object reference (i.e. a pointer) is a variable containing the physical address of the memory which contains the object.  The values of an object reference is a copy of that address. Languages which support pass by reference allow you to pass the actual variable and not just a copy so that changing it in the function (like setting it to null) also changes it for the caller.","2021-06-08 10:38:15","1028560"
"55744810","7074","104","You can use `string` without a using directive for System. You can't do that with `String`.","2015-11-30 08:52:40","5479063"
"88910894","61212","1","I would Stash it in case you need to use them again and to clean use git clean: more deatils:  https://git-scm.com/docs/git-clean","2018-06-20 08:44:33","6164893"
"88912072","105402","1","@BartoszKP I ran your code and I found a mistake ([answered here](https://gist.github.com/bartoszkp/9e059c3edccc07a5e588#gistcomment-2625454)). I improved [my tests using the BenchmarkDotNet benchmark.](https://gist.github.com/marbel82/5bfa2010b534c681a3c618a98719c862)","2018-06-20 09:31:49","2122718"
"120020485","67835679","0","yes. may be because of the directories it did not work. 
With correct naming it should work as I can see the number of upvotes.
But I thought of sharing what I learnt.
Thanks","2021-06-09 11:20:58","7877771"
"103897347","5201642","0","Put this in your bashrc for an alias to squash the last two commits together, using the message of the first commit --> alias gsquash=""git reset --soft HEAD~2 && git commit --edit -m\""$(git log --format=%B HEAD@{0}..HEAD@{2})\""""  # Squash last two commits together, using message of first commit.","2019-11-11 09:34:04","542576"
"88925571","105402","2","@marbel82 Well done, thanks! This really qualifies as a separate Q&A (you can self-answer). Thanks for letting me learn something, this is very interesting indeed. I've reverted my edit as it looks that it's true - the version with the cast consistently produces faster code. Although IMHO this still qualifies as a micro-optimization that will make sense only in very specific cases.","2018-06-21 09:05:13","2642204"
"120033907","58297652","0","This is identical to [your own answer from a few days earlier](https://stackoverflow.com/a/58212263) only with even less detail.","2021-06-09 07:34:10","874188"
"120034000","5824565","0","Like the answer vaguely mentions, and many other answers on this page explain in more detail, you can pass a list, or with `shell=True` a single string which the shell then takes care of parsing and executing. Using plain `.split()` is fine under the circumstances you mention, but beginners typically don't understand the nuances; you are probably better off recommending `shlex.split()` which does handle quoting and backslash escapes correctly.","2021-06-09 07:39:09","874188"
"120034031","2030768","0","It is baffling indeed that `subprocess` runs a subprocess.","2021-06-09 07:40:29","874188"
"120037763","53022304","0","Note that *this is safe* and will not delete any commit - only the tag itself","2021-06-09 11:27:58","1549918"
"27715403","14419228","1","@Travis, you are correct. But the problem states pairing socks (possibly resulting in a pile of folded/stuffed socks), not sorting a pile of socks (resulting in just another pile). That's what I wanted to point out.","2013-09-13 08:38:22","800524"
"120043280","73021","1","@NiharGht Good point - I've clarified it (please comment again if it's still not clear)","2021-06-10 07:03:53","12541"
"27721329","14415881","3","@Steve314 So parallelize and use multiple sock drawers.","2013-09-14 04:07:38","1102380"
"41211418","727725","28","What is the difference between this answer, which has `--`, and the accepted one which does not?","2014-10-09 12:20:29","691859"
"27724300","8212184","6","Catching `NullPointerException` and returning `null` is horrible to debug. You end up with NPE later on anyway, and it's really hard to figure out what was originally null.","2013-09-14 08:44:57","116509"
"73318136","37614185","9","You can replace `git add --all` by `git add .`. So you can do it in a shorter way in oneline `git add . && git reset --hard HEAD` *( be **very** carefull with this command)*.","2017-03-30 01:35:10","5935198"
"27731830","11478811","3","This answer is relevant for C++ but not for a garbage collected language like Java.","2013-09-14 05:08:54","116509"
"41223804","20979806","7","[Don’t modify objects you don’t own](http://www.nczonline.net/blog/2010/03/02/maintainable-javascript-dont-modify-objects-you-down-own/)","2014-10-09 09:59:42","569751"
"88942337","5201642","1","If you have already pushed the commits that you are squashing and you want to avoid having to do a force push, create a new branch at the commit you are at and push it:
git checkout -b new-branch-name && git push -u","2018-06-21 04:05:05","2356287"
"120051772","7244456","0","This was helpful. Could not find instructions for setting upstream in official git docs [here](https://docs.github.com/en/github/collaborating-with-pull-requests/working-with-forks/merging-an-upstream-repository-into-your-fork)","2021-06-10 12:38:19","1650421"
"120052004","7244456","0","Makes me wonder do we have something better now from git in 2021 than to manually add, fetch upstream and rebase upstream/master ?","2021-06-10 12:45:06","1650421"
"41233948","727725","92","In git, a ' -- ' before the file list tells git that all the next arguments should be interpreted as filenames, not as branch-names or anything else. It's a helpful disambiguator sometimes.","2014-10-09 02:32:00","10369"
"103932170","36798076","2","`cls._counter` would still be `cls._counter` even if the code is put in a different class, or the class name is changed. `Apple._counter` is specific  for the `Apple` class; for a different class, or when the class name is changed, you would need to change the referenced class.","2019-11-12 10:55:23","225647"
"41234970","16218718","15","It's *very* important to emphasise that using Optional only with ifPresent() does *not* add much value above normal null checking. It's core value is that it is a monad that can be used in function chains of map/flapMap, which achieves results similar to the Elvis operator in Groovy mentioned elsewhere. Even without this usage, though, I find the orElse/orElseThrow syntax also very useful.","2014-10-09 02:57:09","234391"
"41235320","11896966","0","The `Objects.requireNonNull(object, string)` version (where you can pass an error message as 2nd argument) is more useful than the single-arg version (the latter probably just added for the sake of completeness), especially when you're using it to check multiple argument values. Say you had to check 3 arguments for null, this would reduce your code from 3 if/then-throw blocks (separated by empty lines), to 3 single lines not needing empty lines.","2014-10-09 03:05:11","234391"
"120058742","67914659","2","While this correctly answers the question, it just replicates information already provided in this highly upvoted, six-year-old answer: https://stackoverflow.com/a/28072982/3216427 If you're trying to add new information to this old question, please explain what it is you are trying to contribute, and how this answer improves on information already found here.","2021-06-10 04:22:18","3216427"
"88954503","23277075","1","No, watch this code! `Object.create` doesn't necessary create a copy of an object instead it uses the older object as a prototype for the clone","2018-06-22 01:07:33","4424428"
"120064175","67914659","0","yes did it...i wanted to show use f string here","2021-06-10 08:28:16","16062063"
"103943533","50522849","2","If you find yourself using this frequently add a bash shortcut `alias gplf='git fetch && echo ""HEAD was at $(git rev-parse --short HEAD)"" && git reset --hard origin/$(git rev-parse --abbrev-ref HEAD)'`","2019-11-13 09:43:57","803804"
"120066383","67914659","1","Ah, OK, then that's worth adding here. I suggest you add an intro sentence saying so. You'll be less likely to get downvotes if you do, or get your answer deleted.","2021-06-10 11:05:59","3216427"
"103944389","630453","0","OP's enclosed quote about POST is no longer valid. ""The actual function performed by the POST method is determined by the server and is usually dependent on the effective request URI. The action performed by the POST method might not result in a resource that can be identified by a URI. "" via https://tools.ietf.org/html/draft-ietf-httpbis-p2-semantics-21#section-5.3.3","2019-11-13 10:09:09","3674262"
"103944395","8418403","0","Usually use .empty or .keep","2019-11-13 10:09:34","1246955"
"120067059","67914659","0","For reference, see [What is print(f“…”)](https://stackoverflow.com/questions/57150426/what-is-printf).","2021-06-11 12:19:05","924299"
"11736043","7328339","42","Tools that don't adhere to standards should be avoided whenever possible; use `application/json` per spec.","2012-02-16 02:05:08","146610"
"120082966","208106","2","This is a nice way to do it, but only good if you're actually going to use `regex`, otherwise eslint will complain about an unused variable.","2021-06-11 02:45:40","163799"
"120084207","932982","0","I didn't see an example of this though the README solution proposed by @JohnMee is suggested in the comments above. This works:
`# Ignore everything in this directory
*
# Except these files
!.gitignore
!README.md`","2021-06-11 03:30:58","341922"
"88987651","14488421","2","And it doesn't work for objects that contain functions.","2018-06-22 11:27:34","218196"
"73368502","30479554","5","@krulik This is what I meant: http://jsfiddle.net/k7nmhoed/ two functions declared in the same block modify the shared loop variable i.","2017-03-31 04:32:09","2324063"
"103967590","8099186","0","@PeterMortensen but `user-select: none` doesnt even work on `input` elements?!?! you can always still select the text. how do i make `user-select: none` work on input elements????","2019-11-13 11:06:33","7543162"
"120093110","11227902","3","@Tom: Not exactly.  Most ISAs don't have any mechanism for the compiler to actually provide branch hints to the CPU.  `likely`/`unlikely` macros mostly just affect decision to use cmov (branchless) vs. actually branching, and to lay out the asm so the expected case has fewer taken branches.  (i.e. the fast path can get fetched contiguously in wide chunks by the pipeline.)  [Is there a compiler hint for GCC to force branch prediction to always go a certain way?](https://stackoverflow.com/a/30136196), and [this](https://stackoverflow.com/a/31133787/224132) is an example of actual x86 code-gen.","2021-06-12 12:53:38","224132"
"73378874","522569","0","Enumerate is not always better - it depends on the requirements of the application. In my current situation the relationships between the object lengths is meaningful to my application. Although I started out using enumerate, I switched to this approach to avoid having to write logic to select which object to enumerate.","2017-03-31 11:18:56","219025"
"89013894","31486842","0","A simple link in an email isn't actually secure, since email is not secure.","2018-06-24 02:01:51","2184308"
"89018316","31486842","0","It is as secure as any other token based password reset system that is not two-factor though. Which is almost all of them.","2018-06-24 06:31:03","1108964"
"55854879","6440396","0","This is old, but I believe that using # is not a good idea.
Json is close to the syntax of a Javascript  litteral.
Javascript supports 2 types of comment : 
   // and /* ... */
If I were you I would stick with one or both these types of comments.","2015-12-02 06:24:38","964743"
"55856776","215718","14","After revert, don't forget `--cached` when checking `git diff`.  [link](http://stackoverflow.com/questions/34051174/after-reverting-a-file-to-a-previous-revision-git-diff-shows-no-differences)","2015-12-02 07:20:46","1438029"
"103996495","58243103","1","Does this traverse a directory tree, or only the files in the path specified without going into contained directories?","2019-11-14 05:44:48","925592"
"73407473","237104","6","The title is misleading. Where is the `[[1,2],[3,4]].includes([3,4])` ?","2017-04-02 09:20:58","295783"
"89028922","40878","1","You can also use ConcurrentSkipListMap (https://docs.oracle.com/javase/10/docs/api/java/util/concurrent/ConcurrentSkipListMap.html). It is thread-safe collection similar to ConcurrentHashMap and this map is sorted according to the natural ordering of its keys, or by a Comparator provided at map creation time.","2018-06-25 07:25:44","663999"
"55863350","20241145","33","I'm quite confused as to how this isn't the accepted answer. The accepted answer here clearly isn't answering the actual question being asked. This answer ignores changes to the file that is in the repository whilst not removing it from the repository.","2015-12-02 10:46:16","3894430"
"27826085","2389361","5","[If you need to **preserve history**, use *Yuri*'s solution down below](http://stackoverflow.com/a/6217372/274502)! (just adding a link to @Sedrik comment)","2013-09-17 07:08:36","274502"
"55871358","23796058","0","could you elaborate that a bit further @igorGanapolsky ?","2015-12-03 05:54:27","2341325"
"55872067","23796058","3","@trudolf This isn't really squashing (picking individual commits to squash).  This is more of committing all of your changes at once.","2015-12-03 06:26:55","6998684"
"27827076","1482133","47","be careful to quote everything to avoid whitespace issues: `export SCRIPT_DIR=""$(dirname ""$(readlink -f ""$0"")"")""`","2013-09-17 07:40:27","106797"
"27828212","2389423","2","Maybe this **warning** should go into the answer itself: [***Always avoid rewriting git history!***](http://stackoverflow.com/questions/1491001/what-are-the-practical-consequences-of-rewriting-git-history)","2013-09-17 08:17:34","274502"
"27828229","5343267","2","Once again, maybe this **warning** should go into the answer itself: [***Always avoid rewriting git history!***](http://stackoverflow.com/questions/1491001/what-are-the-practical-consequences-of-rewriting-git-history)","2013-09-17 08:18:03","274502"
"41330231","932982","1","This what I need. Thanks. I just need a 'log' folder to put logging file, but I do not want to add any of these log files in git. PHP throws an error if the directory does not exist.","2014-10-13 05:22:22","2710165"
"120141911","22345808","1","The links in this accepted answer are broken. The best current official documentation link is https://github.com/npm/node-semver#versions","2021-06-14 03:03:27","1767106"
"73429974","34508422","0","how can you check that it doesn't exists?","2017-04-03 07:04:16","53991"
"89052913","28949149","0","this capitalizes the whole string","2018-06-25 07:09:16","7344314"
"104022766","8418403","0","`.emptydir` can be less confusing than `.gitkeep`.","2019-11-15 01:07:57","2753851"
"11806784","7760865","43","You could do a `git revert HEAD~3` to remove the last 3 commits","2012-02-19 06:59:22","64633"
"89059283","39771096","0","This command: git checkout --theirs  -- <filename> changed ALL the files to theirs, not just <filename>","2018-06-26 01:00:29","4501354"
"89059532","39771096","0","Actually I was wrong. This only updates specified file.","2018-06-26 01:23:15","4501354"
"27843706","2432799","0","you'll probably have to do a git pull to merge contents after that: http://stackoverflow.com/questions/1713137/how-to-merge-remote-changes-at-github","2013-09-18 09:15:26","1038178"
"104033266","48775964","0","Mostly I agree with Dalibor. You say you have a ""good understanding of Java benchmarks"", but you seem to have implemented the most naive approach while being apparently ignorant of the well known issues of this approach. For starters, read every post on this question: https://stackoverflow.com/questions/504103/how-do-i-write-a-correct-micro-benchmark-in-java","2019-11-15 06:48:01","201891"
"104036362","48775964","0","@DavidS my test complies with the rules in the excepted answer that you linked. Are you able to point out for any problem in my implementation?","2019-11-15 08:59:38","1129332"
"104037119","2334741","1","For MySQL db: `UPDATE Table_A, Table_B SET Table_A.col1 = Table_B.col1
WHERE Table_A.id = Table_B.table_a_id`","2019-11-15 09:33:03","3752988"
"104037566","48775964","0","From the accepted answer: Rule 0: Read the paper, which essentially warns against attempting a micro-benchmark. Rule 1: You have no warm up phase. Rule 2-3: You've given no indication you used these flags. Rule 8: Use a library like JMH. With 135 votes in the comments: Don't use `System.currentTimeMillis()`. Moving on to other highly voted answers. Jon Skeet: use `System.gc()` between iterations, and run your test long enough to measure the results in seconds, not milliseconds. Mixing tests in a single JVM run is bad, as the compiler optimizations done for one test will impact another.","2019-11-15 09:55:56","201891"
"120166979","58562442","0","i wont check its code now - but you can invoke it with ""bash"" if you want.
see ""sh"" just as an alias for the binary based selection of the compatible shell executor.","2021-06-15 01:31:54","3423146"
"41375681","6841333","12","A great video about these kind of things: http://www.youtube.com/watch?v=-5wpm-gesOY","2014-10-14 10:39:15","53897"
"11847290","2798934","272","instead of merging using 'git pull', try git fetch --all followed by 'git reset --hard origin/master'","2012-02-21 02:56:54","337710"
"27868847","826849","2","Doesn't work on PNG-images with transparent areas: The will always select in a light blue… Any workaround?","2013-09-18 09:12:27","1106393"
"120181759","19506355","1","i found this way more helpful than the git documentation!","2021-06-16 02:47:48","9910692"
"55925329","23796058","17","yes, hence it squashes all of your commits into one. congratulations!","2015-12-04 10:50:44","2341325"
"55928137","7244456","1","@crisron: good point - that's not really clear. The rebase will look at the change (patch) that was introduced by each commit in its original point in the history and try to apply that change on a different parent commit (keeping the same message and author information). Sometimes this won't apply cleanly, and you have to fix conflicts. So what I meant by your commits being ""replayed on top of that other branch"" is taking each of your new commits that aren't in that branch, and trying to recreate them, one-by-one, by making the same change as they did with respect to their original parent.","2015-12-04 12:09:14","223092"
"27874360","3884245","0","This is way shorter than the chosen answer. And appears to work just as well. This deserves 1000 votes just so people do not overlook it.","2013-09-19 03:07:26","306248"
"120185593","66977491","0","**They are NOT the same thing**, only in this case. `filter` removes **every** instance, `splice` with `indexOf` removes **only the first**.","2021-06-16 07:15:04","4420543"
"89095120","1081601","1","This is just an example of an API not necessarily a RESTful api. A RESTful has constraints it adheres to. Client-Server Architecture, Stateless, Cache-ability, Layered System, Uniform Interface.","2018-06-26 10:11:08","4488725"
"73469304","477819","79","[Complete list of MIME types](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types)","2017-04-04 05:08:21","327614"
"120191486","43846195","0","I'm not sure I follow `origin/HEAD` here and I don't think it's correct","2021-06-16 11:07:49","1507124"
"55942433","21541902","2","Cute! A [trampoline](https://en.wikipedia.org/wiki/Trampoline_(computing)) (in the Lisp sense). Not often one sees those!","2015-12-04 06:31:17","1998076"
"55943144","34093201","1","Why are you passing `window` to the jQuery function in this line: `jQuery(window).redirect(...)`?","2015-12-04 06:55:17","1449624"
"120193774","17789187","0","Would you please provide your guidance on following question 
:https://stackoverflow.com/questions/67985653/highlight-the-menu-item-found-in-search-result-of-android-settings-app","2021-06-16 12:38:14","10183294"
"120193777","15587937","0","Would you please provide your guidance on following question 
:https://stackoverflow.com/questions/67985653/highlight-the-menu-item-found-in-search-result-of-android-settings-app","2021-06-16 12:38:22","10183294"
"89104723","20394520","1","I am not assigning th update operations to `z` :-)
But got an idea to make them single liner.. Thanks.","2018-06-27 07:43:46","850018"
"55948981","34093201","0","@A1rPun what i need to pass window ord document ?","2015-12-04 10:20:15","2924013"
"55949674","3737139","0","I came across this one the other day: `|=`","2015-12-04 10:48:49","1467612"
"73488326","16957078","3","What does the -e stand for?","2017-04-04 01:20:10","6549908"
"55952398","33132462","24","<strike>As far as I understand, above the ""docker engine""  there should be a shared linux kernel. Then there are commonly even shared bins/libs. First after that comes the bins/libs and apps that are specific to each container. Please correct me if I am wrong.</strike> I was wrong. Docker images shares the kernel with the host, see http://superuser.com/questions/889472/docker-containers-have-their-own-kernel-or-not. However, to illustrate the union filesystem of the containers, there could be a shared layer of libs/bins directly above the docker engine.","2015-12-05 01:33:38","248914"
"120204456","40857703","0","Strings are a PITA : they act like lists when we do NOT want them to . so yes this code is needed","2021-06-16 07:21:24","1056563"
"41411442","25500568","3","It's pretty abstract answer. We need use-cases when to use/not use Docker. That's the question. Everyone can find what the Docker is like but only a few can explain on real scenarios.","2014-10-15 08:43:20","1863694"
"120208158","1026069","0","For those who don't know how Stack Overflow is designed to work: Resolving advice is posted to the page as an ""answer"".  Any non-resolving advice, requests for clarity, and lone/relevant hyperlinks can be posted as comments under the question.","2021-06-16 11:17:52","2943403"
"120208165","3516699","0","Please do not litter this page with commented solutions @dr.d","2021-06-16 11:18:48","2943403"
"55955678","25178676","1","To change a word in vim is `cw` typed at its beginning (though the question is not about vim, I agree).","2015-12-05 06:25:59","952234"
"27891881","14415881","6","If you'd be able to duplicate socks, ""hashing"" wouldn't be the most efficient answer ;)","2013-09-19 01:46:27","178526"
"89121807","51013125","1","updating e in objClone will still update e in obj. This is still only a shallow copy. The question explicitly asks for a deep clone.","2018-06-27 02:59:10","3362191"
"89126026","51013125","0","@Taugenichts... did you tested it? The method works perfectly. [Spread_syntax](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax) `Spread in object literals` section","2018-06-27 05:06:16","1715542"
"73496058","7589612","0","`git config merge.conflictstyle diff3` - thank you, sir. This is _amazing_ and has freed me from trying to find (and pay $$) for a good 3 way merge GUI. IMO this is better because it shows the common ancestor as well as local/remote, _and_ shows the last commit log lines which (AFAIK) no GUI does. The commits definitely help you identify what code belongs to what branch.","2017-04-04 04:00:53","5228806"
"89126893","51013125","1","yes, I tested it. run this code: objClone.e[4] = 5; console.log(obj.e); You will see obj.e being updated","2018-06-27 05:35:46","3362191"
"73497791","1274447","1","If you keep getting ""Fatal: pathspec ... did not match any files"", you can list them all with ""git ls-files"", and then copy and paste the path of the offending file.","2017-04-04 04:43:46","955459"
"120215496","66977491","0","@andras I never claimed they were the same. Were you trying to respond to another answer?","2021-06-17 08:21:17","4774824"
"120215604","66977491","0","@andras Also, for future reference, putting your comment in bold and capitals for emphasis makes it come across as very aggressive.","2021-06-17 08:25:58","4774824"
"120216548","66977491","0","You are right, did not think of it that way. Just wanted to highlight it as important. My point was that since you are comparing the 2 approaches, you make it seem like they are the same thing (which technically is only in this case).","2021-06-17 09:00:46","4420543"
"104091682","58905771","0","Do you know that `\w` already includes `\d` and  `_`? Please, have a look at these sites: [TLD list](https://www.iana.org/domains/root/db); [valid/invalid addresses](https://en.wikipedia.org/wiki/Email_address#Examples); [regex for RFC822 email address](http://www.ex-parrot.com/~pdw/Mail-RFC822-Address.html)","2019-11-18 12:50:48","372239"
"104091688","58687286","1","Please, have a look at these sites: [TLD list](https://www.iana.org/domains/root/db); [valid/invalid addresses](https://en.wikipedia.org/wiki/Email_address#Examples); [regex for RFC822 email address](http://www.ex-parrot.com/~pdw/Mail-RFC822-Address.html)","2019-11-18 12:51:00","372239"
"73507814","727725","0","@HawkeyeParker you mean the *filename* is `-f`?! I'm assuming that's a very rare case right?","2017-04-04 09:50:49","5175709"
"73507926","727725","0","@foxxtrot You said `--` should be interpreted as files but after seeing Greg Hewgill 2nd answer below I'm confused.he suggests `git checkout -- foo` <-- In his example is `foo` a filename? or it's just something tree-ish? I mean you can't checkout to a fileName! It's meaningless","2017-04-04 09:55:16","5175709"
"41428685","2389423","0","""git reset --merge ORIG_HEAD"" just lost a ton of my changes :-\","2014-10-15 04:26:26","480641"
"41430550","7244321","4","Another good blog post on this - [Keeping A GitHub Fork Updated](http://robots.thoughtbot.com/keeping-a-github-fork-updated)","2014-10-15 05:26:57","2767755"
"73511285","5871742","0","@zerweck You should have `.DS_Store` in `.gitignore`. See [this link](http://devoh.com/blog/2013/01/global-gitignore) on to set it up.","2017-04-05 01:04:32","828885"
"120225024","2219560","0","@happycoder while in the most recent edition of this answer and the accepted it answer contains the same content, at the time this answer was submitted, the accepted answer was much simpler and didn't contain a full working example https://stackoverflow.com/revisions/179147/1 and it wasn't until https://stackoverflow.com/revisions/179147/5 2 years later from this answer that the complete example was added, and in that time this answer would have been receiving votes for a complete example","2021-06-17 02:12:39","2104648"
"73517850","16047306","1","If you're looking for difference between their images - http://stackoverflow.com/questions/29096967/what-are-the-differences-between-a-vm-image-and-a-docker-image?noredirect=1&lq=1","2017-04-05 06:51:02","2841123"
"120233565","66977491","0","@andras Thanks for clarifying your intent, but I don't see how I ""made them seem like the same thing"" when I explicitly said in my answer ""`splice` merely edits an existing array, whereas `filter` creates a new array."" I also linked the docs for both functions at the beginning. That they do different things should also be evident from their names.","2021-06-17 08:05:17","4774824"
"120233591","66977491","0","@andras Also, your statement that ""`filter` removes every instance"" is false. `filter` doesn't remove any instances -- instead, it creates a new array entirely.","2021-06-17 08:07:03","4774824"
"55986622","3737139","0","@Typeless did you mean http://stackoverflow.com/questions/3362626/php-equivalent-for-rubys-or-equals-foo-bar/3362660#3362660?","2015-12-06 03:08:41","208809"
"41444060","671132","0","How do you interact with a web server with HTTP like the author did in this answer?","2014-10-16 04:33:03","1697249"
"55997275","33980745","14","I think the preference should be for vanilla Js as most people will not download an entire framework only to capitalize a string.","2015-12-06 11:49:20","2671392"
"41456201","18018493","1","You could easily state that your ""comment"" properties either have a single string as their value, or an array of strings. That way you can include as many comment lines as you like, while staying valid JSON.","2014-10-16 11:48:38","3255455"
"27929555","16957175","68","Very useful, simple and fast. Warning: ""On Debian-derived distros, ack is packaged as ""ack-grep"" because ""ack"" already existed"" (from http://beyondgrep.com/install/). You may end up running a Kanji code converter on those Linuxes...","2013-09-20 01:32:27","858626"
"120243899","5767357","0","As @RashidIqbal mentioned, it is much easier to use `filter` method to remove specific item that meets certain condition. For eg, `let array = [1, 2, 3, 5, 7]; const SOME_NUMBER = 5 (say); array = array.filter(num => num !== SOME_NUMBER)`. Of course, it will create a new copy of array. But it's much readable. But if the original array needs to be preserved without updating any elements, make sure you make another copy.","2021-06-18 08:22:59","9685065"
"41460343","477578","0","Just a note: SSL is NOT the only solution for ""safe login"". You can actually make a sniffer-safe login process using a hashed password. Basically, when generating the login page you send a salt to the browser (which will be saved on server-side too), and when submitting the form data, you'll send the hashed password and salt (look @ crypto-js), server then hashes the password + generated salt on the session and compares both. If the password on the server is hashed, just hash the password on the browser, then concat the salt and hash again.","2014-10-16 01:35:32","1085920"
"120245709","406408","0","Superb! You made my day! Thanks","2021-06-18 09:35:38","1548094"
"89164444","28949149","2","@henhen no, the regex character `^` asserts position at start. then `.` matches a single character","2018-06-28 04:51:24","1487413"
"104126748","55045803","0","Re ""`width 100%;`"": Do you mean ""`width: 100%;`""?","2019-11-19 12:16:52","63550"
"104126817","53112709","0","This is the only way I know that allows to rewrite the first commit history.","2019-11-19 12:18:31","2391795"
"104126956","55515508","0","Related: *[Will CSS 3 still allow omitting final semicolons?](https://stackoverflow.com/questions/11062615/will-css-3-still-allow-omitting-final-semicolons)*","2019-11-19 12:22:12","63550"
"120254430","1789952","7","While this is a good answer, and the OP never requested for a ""case-sensitive"" search, it should be noted that `includes` performs a [case-sensitive](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes) search.","2021-06-18 03:22:54","594083"
"120254736","26853961","0","I think that the requirement of ""single-line"" should give way to the clarity given by the two line ""copy + update"".   This will be readable to almost all, where the more concise syntax require intimate knowledge of semantics.","2021-06-18 03:34:11","53897"
"120254789","39437","0","@AlexanderOh The single-line requirement should give way to clarity.","2021-06-18 03:36:14","53897"
"73538400","25476365","2","`Object.assign()` is not for cloning nested objects.","2017-04-05 02:31:34","4543207"
"89169779","10113231","2","The problem with this (excellent) answer, is it adds the all the local files, which sometimes may not be what you want. You may just want to add the specific files that were omitted.

But the best thing about it is, it gets him to do what he should have done -- add them locally.

You probably won't need the -X theirs strategy, since they're the same image. In fact, I'd suggest leaving it off at first, just to find out if there are any anomalies, and  add it in if there are, after reviewing that 'theirs' is always the correct choice.

But then, I'm paranoid.","2018-06-28 08:27:02","556742"
"11928724","7328339","16","@one.beat.consumer while that is true, it's not specific to ExtJs per se. It's a browser limitation (or rather, perhaps, a ""security measure"").","2012-02-24 03:54:58","122441"
"104143674","39848137","0","If you implement the Null Object Pattern, instead of returning null, you should return the NullObject. This way, you don't need the check. Just call `object.doCalc()`. If the object is the NullObject instance, the `doCalc()` won't do anything. It will be just an empty implementation of the method.","2019-11-19 08:53:09","6090844"
"41474902","64966","59","`git clean -f :/` works as if you had run it in the root repo dir.  See also later answers also accounting for submodules with `git clean -ffxd :/`","2014-10-16 08:38:11","1754875"
"104144510","48775964","0","I have some free time, so here are a few more. Rule 5: You include the first iteration in your timing phase. Rule 6: You have used no special tools to ""read the compilers mind"". Rule 7: You have given no indication that you used these flags. There, I think that about covers it. I think that's every rule except for rule 4.","2019-11-19 09:26:36","201891"
"120268249","7244456","0","The 'master' branchname is changed to 'main' now ?","2021-06-19 09:46:54","2083315"
"73552404","727725","2","@Honey Yes, that's what I mean, and yeah, probably not common at all.  I've seen that example in various places, maybe just to make it sortof memorable:  rm -f is well-known to be scary/dangerous.  But, the point is, in *nix a file name _can_ start with a '-', and this will confuse various commandline interpreters which, when they see a '-', expect a command option to follow.  It could be any file starting with '-'; e.g., ""-mySpecialFile"".","2017-04-05 08:35:50","99717"
"104150439","48775964","0","@DavidS Rule 0,8: As I already mentioned, I know what I am doing, so this one does not applies here, there is more than one way to do things. Rule 1: of course I do, read my code more carefully, the test is called before the timer starts to worm up! As for System.gc(), it's just hint for for the system, you cannot trust it to do anything.","2019-11-20 03:36:34","1129332"
"104150461","48775964","0","@DavidS if you disagree with my implementation, run your own banchmark using what ever library you want and bring your results here. I be happy to compare","2019-11-20 03:38:28","1129332"
"11944691","6866485","2","@Kyralessa: If I do `git reset --hard HEAD^` twice, will the state shift to `(A)`?","2012-02-25 01:31:31","267197"
"120275132","53689911","0","Also note that specialized hardware instructions do not help if the computation within the `if` is more complicated than an simple addition, which is quite likely in the general case. Therefore, this answer is unique in offering a general solution that is still `O(n)`","2021-06-19 05:50:55","2297550"
"104160522","58617482","1","can you explain your function capitalize.","2019-11-20 10:34:24","4827282"
"89198860","1021384","0","`git checkout --` does not work if you have only one branch.  `git checkout .` always works.","2018-06-29 04:23:26","695833"
"73574012","38793323","3","`return file_path and os.path.isfile(file_path)`","2017-04-06 10:35:01","1084416"
"27984940","509295","160","Slicing builtin types returns a copy but that's not universal.  Notably, [slicing NumPy arrays](http://docs.scipy.org/doc/numpy/reference/arrays.indexing.html) returns a view that shares memory with the original.","2013-09-23 12:13:06","239657"
"27986462","10976934","93","Personal opinion: not allowing comments IS lame. I had no option other than building a non-standard JSON parser that ignores comments, to decode my config files.","2013-09-23 02:28:34","1608072"
"104171879","244777","5","""I removed comments from JSON because I saw people were using them to hold parsing directives, a practice which would have destroyed interoperability. I know that the lack of comments makes some people sad, but it shouldn't."" - Douglas Crockford (Author of JSON), 2012","2019-11-20 03:45:04","1048170"
"73577608","5871742","1","@akhan Adding something to `.gitignore` has no influence on the `-empty` flag of the `find` command. My comment is about removing the `.DS_Store` files in a directory tree, so the `-empty` flag can be applied.","2017-04-06 11:58:07","2902647"
"104176596","48775964","0","You asked me to point out the problems. I have done so. I'm almost done trying to convince you, but here we go one more time. Rule 1: A single iteration is not a ""warm up"": the JIT compiler optimizes after thousands of iterations, not one. `System.gc` is a just a hint, but it's a very reliable one, and it would improve your tests. Finally, you are ignoring all of the other points: compiler flags, currentTimeMillis, splitting tests across multiple JVM runs. These are the serious problems with your attempt at benchmarking. I did not make them up myself: they are well known practices and tools.","2019-11-20 06:02:26","201891"
"89206212","51013125","2","Because both are stored in different locations merely means it is at least a shallow copy.  Look at where `obj.e` and `objClone.e` are stored; you will find that they are stored in the same location.","2018-06-29 09:24:06","2521261"
"104179177","348234","2","As of git 2.23.0, there is now `""git restore --staged <file>..."" to unstage`. See https://stackoverflow.com/a/16044987/40422","2019-11-20 07:31:23","40422"
"104182091","48775964","0","@DavidS I think you are miss reading this. Check out the input size. It's 1M byte array. Iterating on it once means the underline stream implementation is going todo a lot of loops.","2019-11-20 09:16:53","1129332"
"104182456","48775964","0","How many loops for warm-up? Will the loop count vary by algorithm used? Will it be enough to ensure the JIT compiler has achieved optimization? How would you know when it is enough? Wouldn't it be better to explicitly declare a warm-up phase with a known-number of iterations instead of relying on the underlying stream implementation?  Wouldn't it be better to use a tool like JMH instead of trying to account for all of this?","2019-11-20 09:32:40","201891"
"56064148","33980745","8","In all my projects so far I've never used lodash. Don't forget either that most people on google will end on this page, and listing a framework as an alternative is fine, but not as a main answer.","2015-12-08 02:44:54","2671392"
"104188097","58965171","2","Please note that with the basic setup, you can lose the changes made in your forked repository. To keep the changes, set up a config file and specify a ```mergemethod```. More on this [here](https://stackoverflow.com/a/58966490/10155936)","2019-11-21 03:06:39","10155936"
"89221252","18243587","0","This was the most helpful resource by far showing the difference between PUT /users/John and POST /users/John.  Thanks.","2018-06-30 06:40:48","86973"
"28005501","17109182","3","+1  This I agree with. You should never return half initialized objects. Jaxb related code and bean code is notiroius for this. It is bad practice. All collections should be initialized, and all objects should exist with (ideally) no null references.  Consider a object that has a collection in it.  Checking that the object is not null, that the collection is not null and that the collection does not contain null objects is unreasonable and foolish.","2013-09-23 02:52:42","619895"
"56071010","3737139","0","@Gordon. No, I actually saw it in a popular PasswordHash class. The full line looks like this: `$diff |= ord($a[$i]) ^ ord($b[$i]);`","2015-12-08 05:24:49","1467612"
"41531068","38549","77","Of the answers & comments & their references below [only one](http://www.datamartist.com/sql-inner-join-left-outer-join-full-outer-join-examples-with-syntax-for-sql-server) actually explains how Venn diagrams represent the operators: The circle intersection area represents the set of rows in A JOIN B. The area unique to each circle represents the set of rows you get by taking its table's rows that don't participate in A JOIN B and adding the columns unique to the other table all set to NULL. (And most give a vague bogus correspondence of the circles to A and B.)","2014-10-18 08:24:59","3404097"
"104196464","58965171","1","I did note that the basic setup sends pull requests and merges them (as opposed to what's stated in the documentation). This is slightly annoying but solves the data loss problem?","2019-11-21 09:24:52","946850"
"28009755","3884245","4","As many of the previous answers explain in detail, neither `$0` nor `pwd` are guaranteed to have the right information, depending on how the script is invoked.","2013-09-23 04:51:44","157957"
"41533928","16175525","12","`gitk --all $(git reflog | cut -c1-7)&` may be helpful for finding the previous revision if you want to undo an '--amend' commit.","2014-10-18 11:38:11","86967"
"120321975","40523","0","@redd77 Only difference is that assigning to a ""value of Object reference"" does not touch the object. In that way it's like a C/C++ pointer.","2021-06-22 01:14:24","4945014"
"73604716","727725","0","@Honey http://stackoverflow.com/questions/4715374/what-is-the-meaning-of-nix-and-what-is-its-relation-with-ruby","2017-04-07 01:00:21","99717"
"56081980","927378","0","Another 'shortcut' use of stash; if you want to unstage everything (undo git add), just `git stash`, then `git stash pop`","2015-12-08 10:30:29","2555263"
"104208759","1628584","0","Thats not a good solution, because in the git history it is still visible that you merged from master...","2019-11-21 02:58:40","4684797"
"56084324","16218718","0","This blog has a good entry on Optional http://winterbe.com/posts/2015/03/15/avoid-null-checks-in-java/","2015-12-09 12:05:53","1745416"
"104212127","58905771","0","@Toto that's right, i don't know how i lost it there, i actually used this regex in my database handaling :\, thanks again.","2019-11-21 04:30:49","10387008"
"89241413","20704301","0","You are correct. But what is the effect on flow which is to see the behaviour of ""yield"" ? I can change the algorithm in the name of mathmatics. Will it help to get different assessment of ""yield"" ?","2018-07-02 01:44:08","1077381"
"28024110","11478811","0","I respectfully disagree. Good memory handling in JAVA ( or almost any other language) will give you many benefits. From better stability as nullpointers reduced, better performance as lower memory footprint, to better design as relationships are better controlled. 
I will suggest that the sloppy memory management of many JAVA applications leds to frequent NPEs and memory leaks.","2013-09-24 04:44:05","1022180"
"104219032","31594643","2","A little shorter: `git clean -xdf` that is equal to `git clean -x -d -f`.","2019-11-21 08:30:23","2463365"
"41551607","21232996","15","and `git pull --all` pulls it all back elsewhere ? kewl","2014-10-19 09:15:13","95733"
"28036980","4114122","65","You can use `git revert --no-commit hash1 hash2 ...` and after this just commit every single revert in one commit `git commit -m ""Message""`","2013-09-24 12:12:16","828095"
"28037326","10976934","1","@caiosm1005 Writing own parser for well-defined format is always less-than-perfect. I found that formats like Java properties or plain old INI are far more suitable for configuration files. Java, C++, Python and nodejs all have built-in or library support for one or the other. I especially favor the INI files. It's either that or always supplement configs with a robust readme file.","2013-09-24 12:22:12","572370"
"120360594","1274081","0","Please note that, as most (all?) other answers, this removes other people's file upon `git pull`.","2021-06-23 11:32:57","13508"
"56118340","31114625","2","it's also deprecated.  use subprocess","2015-12-09 06:13:59","16148"
"12034003","1473742","14","Also, dont use indexOf alone as a condition, because the first element will return 0 and will be evaluated as falsy","2012-02-29 05:17:09","709635"
"104245760","246128","0","why ${BASH_SOURCE[0]} instead of simpler $BASH_SOURCE","2019-11-22 03:57:51","248616"
"120374272","66318382","1","Is that valid code? A `}` seems to be missing. You can [edit your answer](https://stackoverflow.com/posts/66318382/edit) - but ***without*** ""Edit:"", ""Update:"", or similar - the answer should appear as if it was written today.","2021-06-23 08:38:58","63550"
"41579725","246128","0","Sadly, this will not work from ~/.bashrc because the $DIR variable is only evaluated once at login time, not dynamically all the time. :-(","2014-10-20 05:09:41","2682142"
"120375770","67943877","0","And this wasn't covered by one of the previous 151 answers (not a rhetorical question)? (Including deleted answers). In any case, you could make an (annotated) list of links to similar answers (as 152 answers (including deleted answer) as 6 long, long pages makes it difficult to navigate) to make navigation easier - say the ones that contain solutions using Visual Studio Code. ([30 synonyms for Visual Studio Code have been observed in the wild](https://pmortensen.eu/EditOverflow/_Wordlist/EditOverflowList_latest.html) so far.)","2021-06-23 10:21:22","63550"
"120377516","6581949","0","This made me realize Python is just a prototype-based language under the cover of a class-based one.","2021-06-24 01:31:29","11064188"
"120379453","630475","0","We send data through both. And do whatever we want with both","2021-06-24 04:50:45","2451499"
"56131540","52713","1","Is it always better using a double dash `git checkout -- path/to/file/to/revert`?","2015-12-10 02:19:42","2925169"
"28055980","179147","0","a great answer! and covers the important point of merges which `rebase -i` wont let you do by default. To use rebase to change the message of a merge commit you must use the preserve option `-p`","2013-09-24 08:57:29","1137254"
"28057402","163659","5","In Windows, Winmerge is a pretty good merge tool. I have been using it for 5 years.","2013-09-24 09:49:16","505406"
"120391546","33980745","0","@GGG In all my projects so far I've used lodash","2021-06-24 01:31:53","1016588"
"41601934","18243587","0","It is a very reasonable way to implement a CRUD API that is REST/http complient. A good reading: the RFC about HTTP, and in particular what is idempotent and the expected behavior of web cache. The use of POST/PUT are constrained by the expected behavior of cache (web or user agent)","2014-10-21 09:34:02","3665698"
"73678507","41841362","0","This particular chunk of code may work in IE6 (haven't tested), but IE didn't support ES5 until IE9.","2017-04-09 12:51:47","797049"
"120397571","73021","0","Java does not act exactly like C. If you pass a pointer to a function in C and modify where that pointer points to, the effect of reassigning that pointer is seen at the call sight, not just within the scope of the call. Seeking this behavior out of the languages is the purpose of the const keyword. Please stop saying java is just like C, because it's in many many fundamental ways entirely NOT c (or c++) and all you're doing is confusing people that do know C (or C++) and are trying to get a working overview of java. See: https://courses.washington.edu/css342/zander/css332/passby.html","2021-06-24 05:20:30","2954950"
"104281429","826782","1","The user interface changed. In 2019, all three mentioned items are now in a hamburger menu in the upper left. *""Tags""* and *""Users""* are in there, and ""Questions"" is now called ""Stack Overflow"" (with an icon in front).","2019-11-24 12:23:10","63550"
"56156679","487279","0","You can use Big O to do measurements on both `space` and `time`. For example, you could create an algorithm that requires a lot more space, which helps reduce your time complexity, or you could create a an algorithm that does not require any additional space, such as `in situ` algorithms. People in practice would then pick the algorithm that best suits their need, need it be for performance or to minimize space, etc.","2015-12-10 03:48:59","1190934"
"120401636","67943877","0","No, it was not.","2021-06-24 08:49:26","2122672"
"120403688","1628563","0","Be sure to read through the first ten answers (or so), as the best are not the most upvoted.","2021-06-24 11:17:56","148680"
"41617401","19095988","0","I'm having a hard time finding an answer, but will this solution delete any files? If I run this on my local machine, push changes out, and someone pulls, will they lose anything on their machine?","2014-10-21 04:39:52","2887128"
"41624655","1473742","1","I thought dart was it's own language. Does it actually compile to JS? Edit: oh, it can be compiled to JS, though it runs best on a browser made to run it.","2014-10-21 08:31:59","728393"
"12090764","136138","7","So which is better: having a Math __class__ with methods like sin, cos, etc, or having a Math __module__ with functions sin, cos, etc.  Seems to me that the latter would be preferable, so I'm hard pressed to think of a possible case where staticmethod would be useful. Helper methods I suppose are a potential case, but if a helper is so general as to not need anything from the class or a class instance, you really do have to wonder if it would be better served as a utility routine in a library.","2012-03-02 11:17:22","808804"
"56175963","52719","3","@FelipeTonello I wish I could give you 100 rep for that comment. In my test, that seemed to do exactly what I wanted. Instead, I spent the last hour using ""git checkout -- *"" and working around all the untracked file errors.","2015-12-11 03:36:08","631764"
"73712554","1274447","1","i just tired this answer with my github repository and it didnt work","2017-04-10 01:15:22","2662639"
"89322796","2798934","0","This is mostly what I think of when I think of forcing the pull. Mostly after I tried some settings","2018-07-04 09:17:41","5389713"
"104303950","34491966","0","`Object.keys` is slow, but less code. On a small page, where this is called... maybe 10 times... Will this still be slower considering the additional parsing time of the additional code?","2019-11-25 10:43:35","327301"
"120427207","65857751","2","Be aware that this returns True if the file is not present but path to file exists. If you are really interested in asking whether the file exists or not you should be using p.is_file()","2021-06-25 09:38:18","13174142"
"120427662","16238123","0","""master"" is no longer politically correct, git now prefers ""main"".","2021-06-25 10:19:54","6366075"
"120431432","33980745","1","Vanilla js is better than lodash. Nobody uses it anymore.","2021-06-26 06:59:08","33522"
"41650531","26509484","14","Your 2 last comments were just rewriting an accepted answer... Please answer a solved problem only if you have more information to provide than the accepted one. If not, just upvote the accepted answer.","2014-10-22 02:43:13","1403082"
"89357219","36463546","1","Your 'alternative that doesn't rely on the reflog' does not interoperate with `git push`: it gives errors no matter which branch I try to push to remote repo: either old or new. Thumbs down","2018-07-05 09:27:22","529442"
"120441146","63970897","0","Few months later, how to update this mirror with all latest changes?","2021-06-26 07:30:01","565877"
"120441272","67712","0","I think @Cerran meant to say ""downloads all remote branch NAMES""","2021-06-26 07:41:13","565877"
"120441502","63970897","0","Seems like `git remote update` will apparently give you a ""fresh"" mirror if I'm understanding this right. I think it may also reflect cleanup done on the remote repo. So if refs/branches/tags/etc were deleted remotely, it'll delete them locally. But, I'm not 100% certain.","2021-06-26 07:59:17","565877"
"120441566","7216269","0","correction: `git config --bool core.logAllRefUpdates true` (capitalization)","2021-06-26 08:03:55","565877"
"120441673","73021","0","@Jonathan That link is C++, not C. C does not work that way. C is strictly pass by value, just like Java. If you pass a pointer to something, the _pointer_ is the value that you can follow. You cannot change the pointer but can follow it and change the value it points to. If you re-point it, the caller does not see the change.
In C++, you can pass a _reference_ to something (seen in that page you reference as int&), which is similar to an alias; if you change it in a function/method it does actually change the object/primitive/pointer passed as an argument.","2021-06-26 08:14:39","12541"
"104328842","40017019","1","This is a good addition to the previously upvoted ""accepted answer"".  It provides examples for intermediate coders to chew on.","2019-11-26 03:51:05","3412660"
"28114498","11896966","7","It's not just code bloat. Better to check up front than halfway through a method that causes side effects or uses time/space.","2013-09-26 11:33:26","61938"
"120452927","68151844","5","That wasn't the question.  The question was, *if* the data happens to already be sorted, why does that specific conditional-increment loop run faster.  But yeah if you want to answer the question of ""how to optimize this query against the array"":  Histogramming indeed would put your data into a form that could answer queries with an arbitrary threshold much faster.  But if you just want to answer one query for a given threshold with that data, it's not faster to pre-process the data.  (At least if you can convince the compiler to do a branchless sum of boolean 0/1 compare results.)","2021-06-27 03:36:27","224132"
"120456963","39067220","0","`print(a or ""alt text"")`?","2021-06-27 08:28:14","363437"
"73746738","35152521","0","@philipxy: Disagreed on your statement `Join is not an intersection unless the tables have the same columns` No. You can join any columns that you want and if the value match, they will join together.","2017-04-11 09:23:49","1460189"
"104344798","59048417","1","Please, have a look at these sites: [TLD list](https://www.iana.org/domains/root/db); [valid/invalid addresses](https://en.wikipedia.org/wiki/Email_address#Examples); [regex for RFC822 email address](http://www.ex-parrot.com/~pdw/Mail-RFC822-Address.html)","2019-11-26 01:50:55","372239"
"104347640","53185164","0","Did it work for you? I used exact same query but had errors when used inner join, alias coun't be resolved.
However the co-related sub query worked perfectly.","2019-11-26 03:12:44","5367871"
"104347674","135139","1","Not good solution for accessibility: https://dequeuniversity.com/rules/axe/3.0/href-no-hash","2019-11-26 03:13:53","996010"
"104347730","26998181","0","Yeah, when pressing TAB key one cannot navigate to it. Using `tabindex=""0""` might make it better but I'm not sure it that's appropriate solution","2019-11-26 03:15:25","996010"
"41671957","25180214","3","This looks gross in my opinion - in fact I think adding a flag to any method to get it to perform different behavior is a bit daft.  Consider `var s = capitalizeMe('some RANDOM string', true);` - a reader of your code isn't going to know what the `true` means without reading the function implementation.  If you want your function to do something else, write it in another function instead of overloading the method with magic flags or parameters.","2014-10-23 04:50:40","333988"
"120474406","246128","0","As stated in the ""Beware"" clause, using cd this way may may leads to problems in some cases and is overkilling for the problem. The solution of $(dirname ...)) o even better $(dirname $(readlink -f ... )) seems more direct, simpler and better to me.","2021-06-28 02:42:41","7087345"
"120474500","1482133","0","The command readlink is in the coreutils packages which is part of any standard Linux distribution, so I think  'dirname `$(readlink -f ""$0"")` is the more general and simple solution which doen't depends on how the script was executed (absolute vs relative paths)","2021-06-28 02:45:28","7087345"
"73760326","22417539","24","It would be great if you expanded on (1).","2017-04-11 02:16:59","1385174"
"73760668","35152521","0","That comment is as unclear as your answer. (I suppose you might be thinking something like, the set of subrow values for the common columns of the result is the intersection of the sets of subrow values for the common columns of each of the inputs; but that's not what you have written. You are not clear.)","2017-04-11 02:24:05","3404097"
"28138228","59895","1","ash: With hardlinks, you'll get one of the correct answers - the path which was used for invocation. If hardlinks are a problem, don't use them (they're probably a bad idea for scripts anyway, in *most* cases).","2013-09-26 11:57:51","53974"
"120480999","67868294","3","Make sure to add an `-r` switch after `grep` if you're looking recursively into sub directories.","2021-06-28 07:28:43","293280"
"28146919","114549","19","Note that it may be necessary to add ""float:none;"" for the #inner.","2013-09-27 08:30:50","1887691"
"120489007","25921504","1","With for-in loop you should use ```hasOwnProperty``` to exclude inherited properties. I use (possibly even faster) plain for loop over ```Object.keys```.","2021-06-29 06:19:29","1053562"
"120493140","271526","0","The most common misuse of null is people returning null instead of an empty collection. That drives me crazy each time. Stop using nulls, and you'll live in a better world. Also, spread your code with `final` keyword and you'll live in a even better world.","2021-06-29 09:22:07","1654526"
"120493733","7034719","0","I tried this:  <br />
        File file = new File(""C:/"");

        changeFile(file);

        System.out.println(file.getAbsolutePath());
    }

    public static void changeFile(File f) {
        f = new File(""D:/"");
    }`","2021-06-29 09:44:59","4317395"
"104369048","26998181","0","5 years after the answer I also consider the a11y features:)","2019-11-27 07:43:57","3010765"
"56246226","14421438","3","«n packet of white and m packets of black. No need for other colors in everyday's life» A good standard rule for easy sock selection is actually that they should match either the color of your trousers or the color of your belt. For this reason, the most commonly used colors will likely be black, blue, gray and some brown. It's hard to believe one needs many white socks.","2015-12-13 02:46:52","1101509"
"73776628","22417539","3","@Adam: Basically, this means use the GUI interface of `gitk` to label the line of code that you are squashing and also label the base upon which to squash to.  In the normal case, both of these labels will already exist, so step (1) can be skipped.","2017-04-11 09:48:17","86967"
"120496810","36354972","0","It only makes it invisible","2021-06-29 11:54:36","14264568"
"120496831","34896018","0","That does not disable select at all...It only makes it invisible","2021-06-29 11:55:18","14264568"
"120496839","36643359","0","Please add details about your solution","2021-06-29 11:55:38","14264568"
"12168621","3104376","0","@Viktor Why would you need comments in a data packet? That wastes space. If for didactic purposes, just put them elsewhere, or accept that you're breaking the format. In an actual application, they shouldn't be necessary.","2012-03-07 12:07:50","109011"
"104377395","2389423","1","Life saver :-D Thanks guys!","2019-11-27 11:57:46","1435079"
"120509825","60132971","0","If there's a conflict then one'd only need to resolve those after the merge command and mark the resolves by `git add` command for the conflicted files. Also, if the repo in question is a forked one someone has to first define the `upstream`: `git remote add upstream https://...git` where the git is for the repo which got forked.","2021-06-29 09:11:06","292502"
"120509843","60132971","0","Also, GitHub's PR (the UI Fetch button creates the PR against the fork repo) is a shitshow if there's a conflict. I'd rather just go with these manual steps.","2021-06-29 09:12:25","292502"
"104385028","58882484","2","You are checking if an object is empty with fixed strings and hacks/irregular practices like ""toString.call(obj). This is just bad practice and code you dont wanna see in a codebase. There are much better and clean solutions that make sense just by reading them. This does not make sense while reading it, it's a hack.","2019-11-27 03:38:11","1712332"
"56266087","32991784","6","After 5 years a lot has changed and this should be the accepted answer now. But maybe add the pre-2.7 syntax as well.","2015-12-14 08:17:58","184792"
"28179475","13159111","6","What if $a takes a value greater than 255?","2013-09-28 09:35:46","2095841"
"120519251","25861938","0","Another resource : https://nodejs.dev/learn/semantic-versioning-using-npm","2021-06-30 08:45:00","4214921"
"28183965","16956844","12","If you are not searching using a regex you can use fgrep in place of grep on most systems.","2013-09-28 02:49:37","288951"
"73803183","6581949","43","It appears that in Django `models.Model` it does not use `__metaclass__` but rather `class Model(metaclass=ModelBase):` to reference a `ModelBase` class which then does the aforementioned metaclass magic. Great post! Here's the Django source: https://github.com/django/django/blob/master/django/db/models/base.py#L382","2017-04-12 01:18:59","4548304"
"73803460","38657362","1","actually PUT You can think of similar to ""UPDATE STUDENT SET address = ""abc"" where id=""123""; would be a statement for PATCH. ""UPDATE STUDENT SET address = ""abc"", name=""newname"" where id=""123"" would be a correct analogy for PUT","2017-04-12 01:24:36","487291"
"28186805","1274447","0","I find @AkiraYamamoto 's solution better.","2013-09-28 05:28:16","562222"
"56283123","14620228","18","@SMR, In your example, all are pointing into current HEAD only. HEAD^ = HEAD^1. As well as HEAD^1 = HEAD~1.  When you use HEAD~2, there is a difference between ~ and ^ symbols. If you use ~2 means “the first parent of the first parent,” or “the grandparent”.","2015-12-14 03:34:11","1996609"
"120528730","3291856","0","@aggregate1166877 can you explain why? almost 1500 upvotes for this answer. So without an explanation, people will just ignore you. Like me, cause I am gonna do this.","2021-06-30 02:36:19","5334073"
"104400309","16957078","0","`grep --exclude-dir={'dir1','dir2','wildcard*'} -rnwl '/path/to/somewhere/' -e ""pattern""` is good on OSX","2019-11-28 04:46:58","3309645"
"89439326","35214606","3","This will also discard everything in the index (not just things not in the index), which is beyond what the OP is asking for.","2018-07-08 07:51:17","437583"
"120533696","25921504","1","In a deep copy, wouldn't you want to copy the inherited properties as well? Also, note that invoking the `hasOwnProperty` method, creates a performance hit (pushing the function call on and off the stack, and executing the method code) for every key.","2021-06-30 05:47:34","1404726"
"120541755","3291856","7","@NielsLucas Fair enough. It has the potential to break future additions to JS. If it's code that only you will use, then it's not so bad - you just update your code and move on. The real issue here is when you start publishing libraries with code like this: your code modifies the built-in behavior for every library using your code. The consequence is that if you and another library author both override the same built-ins with your own implementations, you create bugs in the other library's code (or whichever is loaded last) leaving the user with debugging hell of unreproducible bug reports.","2021-07-01 03:52:32","1166877"
"120541863","42185640","1","This answer works great! You can always add `--dry-run` option to list the files/folders to remove before commit the action","2021-07-01 04:06:27","3164091"
"12212088","246128","4","*When doing variable assignment to the output of command substitution or to the output of a variable reference, there is no reason whatsoever to use quotes*. Proof: run `x=""my name is ryran""` and then `a=$x` or `a=${x/ryran/bob jones}` or `a=$(echo $x)`","2012-03-08 06:54:04","406281"
"12212868","470376","136","`(lambda: print(""a""), lambda: print(""b""))[test==true]()`","2012-03-08 07:31:48","20003"
"41737386","477578","0","@WoLfulus: First of all, as an MITM attacker all I have to do is replace the salt (or the JS hashing function) you're sending to the browser over an unencrypted connection and your entire scheme is void. Secondly, even if I can't manipulate the server response ahead of time, simple sniffing will give me the salt, the hash function and the hashed password+salt, which opens you up to simple dictionary and brute force attacks. Never trust client side hashing for security.","2014-10-25 12:37:59","57068"
"41740436","13474925","1","in my case, in addition to `android:imeOptions=""actionDone""` also needed to include `android:singleLine=""true""`","2014-10-25 06:37:03","3120387"
"28208346","14260056","8","Agree with Emil. Additionally, reading the docs - it seems that all ""-c"" does is tell git which commit's message to use as the default/template for your new commit..Really its already going to do ""-c <commit ID>"" by default, so no need to specify it.","2013-09-29 07:12:37","251788"
"12228486","426258","0","A more specific (and very useful!) question,  ""How do I check a item in a checkbox-set BY VALUE?"", I think we can also discuss here, and I posted an answer below.","2012-03-09 12:36:34","287948"
"120555180","3291856","1","@aggregate1166877 Thank you for the explanation. I totally agree with you that this way is NOT gonna be a good practice for creating a library and I also agree that this way is fine for a project. Hope people will read this, cause I think this is a good attention to the original answer.","2021-07-01 01:59:25","5334073"
"104431164","39315895","0","If I may start an argument here: The accept header in the request does not make the server reply in that format. As you said, it's the desired format. The q qualifier is a wieghtage. The server app can go ahead and reply in whatever format it desires if it doesn't do as the request says. Along the same vein, if the server app only supports xml, specifying json won't do any auto-convert; you'll get an xml response.","2019-11-29 05:26:52","7210927"
"41756923","477578","0","@JensRoland The salt is stored on the server side for validation too, if you change it on the client you'll fail the validation on the server, resulting in an invalid password. I agree with the bruteforce.","2014-10-26 01:24:07","1085920"
"120561206","1274447","0","@CBBailey How do you stop the file from being deleted on the repository I want the file gone locally (causes issues with my compiler) but want to keep it on the repository for everyone else","2021-07-01 06:01:35","4494222"
"28220739","16956844","10","Yes @markle976, in fact from man grep: `fgrep is the same as grep -F -> Interpret PATTERN as a list of fixed strings`.","2013-09-30 08:23:43","1983854"
"73858684","927386","4","If you have already pushed your changes to a remote branch, and you do git reset as shown above, you will be behind the remote branch. In such a situation, it is preferable to use git revert <commit hash> which will add another commit which reverts the previous changes. More information [here](http://christoph.ruegg.name/blog/git-howto-revert-a-commit-already-pushed-to-a-remote-reposit.html)","2017-04-13 06:08:08","3613932"
"73862677","22417539","5","Note that this method doesn't mark the working branch as being fully merged, so removing it requires forcing deletion. :(","2017-04-13 08:17:07","634551"
"56341893","3499225","2","This is what I tend to do as well.. Keeps the code clean in my opinon.","2015-12-15 09:44:57","1173112"
"89487930","2003515","0","The `--delete` might be easier to remember, but it's too late if you already understand the `push remote :deadbr`, plus the cute thing about the latter is that it also works for tags.","2018-07-09 09:52:50","835945"
"41777365","2765461","1","William's miscellaneous git tools appears to have moved (that link is now dead). A working link is: https://gitorious.org/willgit","2014-10-27 02:08:22","1574942"
"104456009","57696996","0","@PeterMortensen I don't think it works in DOS, but it should work in Cygwin.","2019-11-30 01:39:23","1459669"
"28243298","275869","9","This is the first example I have seen of [Yoda Conditions](http://www.codinghorror.com/blog/2012/07/new-programming-jargon.html) that actually makes sense","2013-09-30 07:37:04","335227"
"104460597","21403753","2","Aborting a git commit with `:q!` works fine, since git's checking for a non-empty message and not a non-zero exit code.","2019-11-30 10:03:57","413354"
"73875617","41841362","0","For performance reasons you should avoid stringifying. At least you should avoid to JSON.stringify the ""obj"" on every loop because it is expensive and will slow down you application. Therefor you should capture it before the for-loop in a temp variable","2017-04-14 08:45:44","1397160"
"104464948","2003505","0","@Adam: 81.  42 answers were deleted for various reasons.  The public's unexplained obsession with a particular topic is one of life's greatest mysteries.","2019-11-30 03:21:45","102937"
"120592100","1642035","3","I think you wouldn't really *need* the parentheses around `x--` though it does further enforce the separation. It would probably be enough just to associate tokens more clearly with something like `while (x-- > 0)`.","2021-07-03 01:18:31","14860"
"89501375","51013125","1","Thanks a lot, guys@LupusOssorum @Taugenichts  for pointing this out. I tested it myself and found out what you guys identified here. But do you have any idea why the array still does not change memory, though ECMA2018 boasts of this as a feature.","2018-07-10 09:29:16","4960055"
"89508800","215731","0","I was going to +1 you but clearly I have been here at least once before :D A very useful answer that maybe I should memorise!","2018-07-10 12:40:06","312962"
"28259834","138233","154","Fast-forward to 2013: `javascript:void(0)` violates [Content Security Policy](https://developer.mozilla.org/en/docs/Security/CSP) on CSP-enabled HTTPS pages. One option would be then to use `href='#'` and `event.preventDefault()` in the handler, but I don't like this much. Perhaps you can establish a convention to use `href='#void'` and make sure no element on the page has `id=""void""`. That way, clicking a link to non-existing anchor will not scroll the page.","2013-10-01 09:21:52","245966"
"41804666","477578","0","@WoLfulus: Even if the login doesn't go through, I now own your password, despite your effort to mask it with hashing.","2014-10-27 07:10:01","57068"
"120610354","679937","0","@NicholasKreidberg That code `function isEmpty(object) { for(var i in object) { return true; } return false; }` got to be corrected after 11 years. 

Here's the correction: 

`function isEmpty(obj) {
    return !(() => {
        for (const i in obj) {
            return true;
        }
        return false;
    })();
}`","2021-07-04 08:52:14","11432"
"41807947","2251026","2","I'm seeing `import subprocess as sp;sp.Popen('calc')` not waiting for the subprocess to complete. It seems the creationflags aren't necessary. What am I missing?","2014-10-27 09:01:35","177498"
"41807953","17782979","2","`i = (x < node->value);
node = node->link[i];` doesn't have an explicit branch, but it still contains a comparison; it depends a lot on the target architecture as to whether this can be resolved without a branch or not. Since it can be done on x86 (using either CMOV or LAHF) and ARM (conditional add or move), which are the only architectures I use, this is possibly not important!","2014-10-27 09:01:42","1685098"
"41810917","17782979","2","On what architecture would an expression like `(x < node->value)` require a branch to evaluate?  All the architectures with which I am familiar have a ""flags"" register, and it is simple to extract the desired flag value.  I guess on the Pentium 4 the flag bit extraction might be slow as IIRC that chip doesn't have dedicated shifting hardware for addresses, but borrows the ALU to shift bits.  But I don't know where an actual branch would be needed.  Hmm, your examples were conditional... the idea is that once you extract the bit from flags, you can just use indexing with no branch.","2014-10-27 11:05:57","166949"
"89526771","22365742","3","@TheBaj They mean ""fix"" as ""define"" (""fixate"") rather than ""adjust"", so you all agree on how the major number gets handled.","2018-07-10 09:41:52","581205"
"73913162","41082358","0","ref. https://coderwall.com/p/0ypmka/git-clone-all-remote-branches-locally","2017-04-15 03:13:49","1882064"
"120625121","67090432","0","Feel free to improve the answer.","2021-07-05 06:44:21","7469973"
"104500872","57880896","3","I wanted to revert my unstaged changes only without affecting newly added files so a  `git restore .` worked perfectly. Thanks.","2019-12-02 10:23:51","1932141"
"120625807","679937","0","Alernatively: 

`function isObjectEmpty(obj) {
    for (const i in obj) return false;

    return true;
}`","2021-07-05 07:18:39","11432"
"28282773","16144913","8","The Flexbox specification has gone through 3 major revisions.  The most recent draft is from Sept 2012, which officially deprecates all previous drafts.  However, browser support is spotty (particularly old Android browsers):  http://stackoverflow.com/questions/15662578/flexible-box-model-display-flex-box-flexbox","2013-10-01 08:33:33","1652962"
"56390834","33885543","5","Could you please add an example? Then you may actually need those extra characters.","2015-12-17 12:15:10","488195"
"120627735","209580","0","this depend if you need button on your bem ( block element model) of html.","2021-07-05 08:43:01","8331407"
"120627798","56597389","0","if use versión that require detect javascript and use function for dectect browser version you can instead using #
```
<a href=""javascript:void(0)"" onclick=""testFunction();"">Click to check </a>

function testFunction() {
   alert(""hello, world"")
}
```","2021-07-05 08:45:39","8331407"
"41828643","13575102","1","taking from Dave's answer below. Using 'git config --bool core.bare false' instead of 'git config unset core.bare' seems to do the job.","2014-10-28 12:25:07","256935"
"41828669","2251026","1","@ubershmekel, I am not sure what you mean and don't have a windows installation. If I recall correctly, without the flags you can not close the `cmd` instance from which you started the `calc`.","2014-10-28 12:25:50","68998"
"104506350","36463546","1","@Eugene Gr. Philippov Same here, git kept telling me that I need to `git push` - which in turn tells me that everything is up to date already and consequently does nothing. Next, git tells me to `git push`, cycle repeats. I am sure it is named ""git"" for a reason. I had to use `git push origin` to coerce cooperation.","2019-12-02 01:21:20","6012508"
"120635377","48120399","0","""short version"" - how short is that? Capital letter makes the word longer?","2021-07-05 02:12:25","13490404"
"28294660","237104","18","many have replied that the Array#indexOf is your best choice here. But if you want something that can be correctly cast to Boolean, use this: `~[1,2,3].indexOf(4)` will return 0 which will evaluate as false, whereas `~[1,2,3].indexOf(3)` will return -3 which will evaluate as true.","2013-10-02 07:59:07","1568684"
"120635724","5201642","0","What if code push has already been done and I want to remove previous commits from history. Will it work?","2021-07-05 02:24:24","7352747"
"120636555","53425369","0","This syntax is not correct. Could you edit your answer to show us what you mean?","2021-07-05 02:58:33","718960"
"120638915","487278","0","@Top-Master Why did you replace _""Big-O""_ with _""BigOh""_? And what is _""BigOh""_?","2021-07-05 04:47:08","402037"
"120639105","487278","0","@Andreas In mathematical discussions, usually the dash ""-"" is mistaken with minus, also, don't add space like ""Big Oh"" unless it is followed by something like ""... notation"" (again, to prevent misunderstandings)","2021-07-05 04:58:24","8740349"
"28300819","5036460","10","@Niklaus That's because you're concatenating it to another string. In that case, `new Date().toString()` is called.","2013-10-02 11:50:18","709376"
"120640873","57613696","0","This worked nicely for me! What's going on?","2021-07-05 06:46:54","5922373"
"89548750","25861938","1","A more specific link form the above -> https://docs.npmjs.com/files/package.json#dependencies","2018-07-11 12:38:26","233266"
"28303644","932982","3","The problem with ""Just add a README"" solution is that many times an application is descending into the directory and setting values from (temporary) files that are put in this otherwise empty directory.  I like the idea of actually forcing git to keep it empty since this may be what the application wants/needs.","2013-10-02 01:13:56","2249641"
"12319298","7905820","1","Note: The symbolic link that I suggested is ""broken"" in a clean checkout because the `.generated` directory does not initially exist.  It will no longer be broken once you do your build.","2012-03-14 12:14:36","86967"
"73935238","7244456","78","Another Git failure. If this tools is supposed to support distributed collaboration, then why is it so difficult to perform a basic workflow? 4 million people and 2200 upvotes mean the tool failed. *""you can add the original GitHub repository as a ""remote""* - Why does one even have to do this? Why is it not done during the fork? What is so broken about this tool?","2017-04-16 04:05:57","608639"
"120645040","309448","0","I added an edit to include a searchable link to the actual source code itself as a reference. I believe this augments the answer for those who want to see how the command works.","2021-07-06 12:03:14","92678"
"56415068","33718996","0","What is meaning of this code I could not understand.","2015-12-17 02:22:59","1166505"
"104525299","22654961","0","+1 this perfectly worked for me after I additionally did `git push origin master --force` and `git push --set-upstream origin <newbranch>`","2019-12-03 03:56:32","6724567"
"89555342","136097","38","tl;dr >> when compared to normal methods, the static methods and class methods can also be accessed using the class but unlike class methods, static methods are immutable via inheritance.","2018-07-11 03:02:35","5483914"
"120649652","487278","0","@Top-Master Even if that would be the case... There's no _""BigOh""_, it's _""Big O""_","2021-07-06 06:56:03","402037"
"120651105","19298943","0","@MSBerends It's just upvotes! What are you going to do with it?","2021-07-06 07:58:43","10602851"
"73947028","41841362","2","@itinance good point. Updated the `includes` function with your suggestion.
I've ran jsperf with my function. It's about 5x slower than lodash's includes. Though lodash doesn't compare by value and can't find `{a: 1}` in `[{a: 1}]`. I don't know if any library does it. But I'm curious if there's any more performant and not insanely complex way of doing it.","2017-04-17 04:57:19","283803"
"120655797","487278","0","@Andreas we have ""Big Oh, Big Omega, Big Theta"" names and ""OΩΘ"" letters, just like we have ""Ay Bee Cee"" and ""abc"", also, I could link you other posts which use ""BigOh"" (instead of ""Big-O"") but let's agree to not agree about this","2021-07-06 11:00:55","8740349"
"120659864","487278","0","If a letter stands for something, then that something spelled out is more human-readable (if we spell out ""Big"" why not ""Oh""), see [2015 discontinued wiki](https://wiki.c2.com/?WikiAlphabet) for more","2021-07-06 01:34:53","8740349"
"73955941","10361980","0","@Sirens That is not the problem. If my name is ""<&quot;>"", then I expect it to be properly escaped as &quot;&lt;&amp;quot;&gt;&quot;, that goes without saying. The real problem is with an application behaving as if it uses a blacklist for names.","2017-04-17 11:04:55","1016716"
"41885835","52713","128","@Ninjack `git checkout -- .` means the same thing as `git checkout .`, except that you're explicit about the fact that you're not specifying the branch name.  They both say checkout the HEAD version on the branch I am currently on for '.' or './'.  If you do `git checkout branch-name directory-or-file-name` in general, you get the HEAD version of `directory-or-file-name` on branch `branch-name`.","2014-10-29 07:55:29","3010183"
"120684915","68129835","0","this is a better way as boundary conditions are also handled","2021-07-07 12:07:23","7505466"
"41891651","5201642","120","This kinda-sorta required me to `push -f` but otherwise it was lovely, thanks.","2014-10-29 11:32:58","691859"
"41897323","2251026","0","I'm on Windows 8.1 and `calc` seems to survive the closing of `python`.","2014-10-30 05:45:20","177498"
"89600423","51311500","0","you can see there are a lot of answers with many upvotes, what is special about your answer?","2018-07-12 06:00:13","6147374"
"89600563","51311500","0","I just wanted to add a few more functions made available with `Java 9`.","2018-07-12 06:04:40","4014678"
"89601298","51311500","0","then emphasize on it with a bold font at the beginning of your post","2018-07-12 06:31:34","6147374"
"41900025","11227877","185","So basically everything I conventionally learned about big-O is out of the window?  Better to incur a sorting cost than a branching cost?","2014-10-30 07:51:58","3206624"
"104574874","58562442","0","This question is `bash` specific.  If you invoke a script with `sh`, the shell might be something else, such as `zsh` or `dash`.","2019-12-04 01:08:53","13365"
"89607770","40471","25","HashTable is obsolete in Java 1.7 and it is recommended to use ConcurrentMap implementation","2017-04-09 10:10:19","2446305"
"41904388","11227877","173","@AgrimPathak That depends. For not too large input, an algorithm with higher complexity is faster than an algorithm with lower complexity when the constants are smaller for the algorithm with higher complexity. Where the break-even point is can be hard to predict. Also, [compare this](http://stackoverflow.com/questions/14023988/why-is-processing-a-sorted-array-slower-than-an-unsorted-array?lq=1), locality is important. Big-O is important, but it is not the sole criterion for performance.","2014-10-30 10:14:12","1011995"
"28363861","10976934","19","@ArturCzajka I still dislike the fact JSON doesn't support comments, but I gave INI a try and I must admit it makes much more sense to use them over JSON for config files. Thanks for the response and hopefully more people will change their minds as they read this conversation. (making a parser was more of an exercise anyway :)","2013-10-04 02:42:27","1608072"
"12389872","40878","314","I would also comment that the naive approach to thread-safety in `Hashtable` (""synchronizing every method should take care of any concurrency problems!"") makes it very much *worse* for threaded applications. You're better off externally synchronizing a `HashMap` (and thinking about the consequences), or using a `ConcurrentMap` implementation (and exploiting its extended API for concurrency). Bottom line: the only reason to use `Hashtable` is when a legacy API (from ca. 1996) requires it.","2012-03-16 05:19:38","3474"
"28366568","8439617","1","So just wrap the tag around the single world you want capitalized","2013-10-04 05:40:36","1763217"
"28371246","630475","5","To make things even clearer it might be an idea to add that this example should return an error: 

PUT /questions HTTP/1.1
Host: wahteverblahblah.com","2013-10-04 08:46:51","20553"
"120711865","32108184","0","Why do we need to check `obj.contructor===Object` in `ECMA5+` code ? We can only use this code ```obj // 👈 null and undefined check
&& Object.keys(obj).length === 0```","2021-07-08 11:54:50","12051334"
"120712843","1628334","0","I can't count how many times I came back to this solution^^ thx","2021-07-08 12:32:42","11480578"
"104594720","932982","1","Almost empty ≠ empty. Question author asked about empty directories, and you should have assumed that they had a very good reason for that.","2019-12-05 02:33:29","1885442"
"104594737","5305908","0","This should be the accepted answer to the question as it was asked. An impossibility result is a valuable result. It saves the time that would be wasted looking for a solution that does not exist.","2019-12-05 02:34:54","1885442"
"41924672","16957078","0","if it doesn't work unquote the directory. also, if it's a big directory it may just hang for a sec. it's not instant.","2014-10-30 07:05:29","1444609"
"120724327","48800","2","But it won't accept ""Mohit Atray""@gmail.com because it contains space character. Maybe we should just use /^\S.*@\S+$/ regex.","2021-07-08 07:57:10","7649590"
"28390583","18671531","0","Worked partly, even if keyboard was hided ""isActive()"" returns false!","2013-10-04 06:27:03","575643"
"12418900","8809472","35","Bear in mind, `new Date().getTime()` is not updated every millisecond. I'm not sure how this affects the expected randomness of your algorithm.","2012-03-18 05:27:22","238948"
"120736317","67131910","0","git update-index --skip-worktree .idea/
git rm -r  --cached .idea/

did the trick after I accidentally hit add . with newly generated IDE folder","2021-07-09 09:56:28","7809709"
"56500496","671508","0","Besides, resources manipulation request should be stateless, and response with common HTTP code.","2015-12-20 09:12:27","1369022"
"56502942","33871169","1","@user1167442 The array you have provided is not empty, it's an array containing an empty array, so is not what I would describe as falshish. I'm not sure that it could be handled without adding recursion increasing the complexity of the basic function.","2015-12-20 12:04:09","1733478"
"120744784","14502904","1","@jpmc26 Anyone with a background in Perl or Javascript is totally comfortable with this idiom, using `and` as a control statement.  I don't have any issue with it.  Another similar idiom is using `or` to set default values.  For example, `x = input(""what is your name? "") or ""Nameless Person""`.","2021-07-09 04:04:56","1812732"
"28402641","18671531","0","Ofcourse it does, it's supposed to. Or maybe I don't understand you.
Anyway, you could supplement the class with `hide()` and `show()` methods to have more control over when it should show and when not. Works for me, I did it too :) I will edit example","2013-10-05 07:55:39","1417267"
"120747345","138233","0","I've been trying to find why I was getting a `Uncaught SyntaxError: Unexpected token ')'` error in the debug log. It kept pointing to my `href` in my navigation menu. I checked functions, css, anything I could think of and then thanks to Google brought me to this page. Changing `href=""javascript:void()""` to href=""javascript:void(0)""` and now no more error in the debug. Thanks for the clear explanation!","2021-07-09 06:18:26","483140"
"120747922","14502904","0","@JohnHenckel This is not Perl or JavaScript. This is not a Python idiom. It is considered bad form to use a function with side effects in the middle of a Boolean statement in Python. Particularly in this case, there is absolutely no benefit to using `and` here; the function doesn't even return a value. It just makes the code less obvious.","2021-07-09 06:51:24","1394393"
"41945559","12184274","19","@dval this is becues the first command removed the unindexed files and the second one removed the unstaged changes (of indexed files). So if you did not have any staged changes this it is the same as reverting to the last commit with `git reset --hard`","2014-10-31 10:47:51","2711378"
"56505245","33871169","0","- I got it.  I got here looking for a solution that would handle both scenarios elegantly, so though your code is fine; I was irritated that it didn't solve my problem :).  U got up voted for solving the problem you were trying to solve.","2015-12-20 02:23:08","1167442"
"56510662","10439581","0","I second that. Of all the possible ways only the getWindow().setFlags() method works, at least on stock Android 5.1. Note that setSoftInputShownOnFocus() is now setShowSoftInputOnFocus() and no longer hidden but does not work, at least not when the user touches the field.","2015-12-20 07:04:34","389020"
"12456533","9244805","0","Aren't you assuming that a commit has never been performed? In my case I made several commits to my local branch, but wanted to ""reset"" everything back to the remote branch","2012-03-20 10:55:38","491945"
"41960376","8963158","10","By far the simplest! However your missing the **ID** field from the inner SELECT. You'll need this for the WHERE clause to work","2014-10-31 06:03:20","443431"
"120769405","426276","0","How can I see prop() in the source code. I tried to search and found these instances but nothing that seems right: https://pix.realquadrant.com/jquery-prop","2021-07-11 06:51:56","92678"
"120770360","2432799","0","For me, I couldn't use my git username, but was asked to use ""git@github"" for SSH to work, as written here: https://docs.github.com/en/github/authenticating-to-github/troubleshooting-ssh/error-permission-denied-publickey#always-use-the-git-user","2021-07-11 08:29:50","1097657"
"104643802","59213597","9","Hi and welcome to stackoverflow, and thank you for your answer. Rather than just posting a block of code, can you give a short explanation to what the issue is you solved and how you solved it? This will help people who find this question in the future to better understand the issue and how to deal with it.","2019-12-06 01:13:56","11936678"
"56532295","244858","1","The thing is it changes the semantic of the JSON, e.g. changing the length of an array.","2015-12-21 12:21:04","1663023"
"28425315","19208820","6","This was already posted [year and half ago](http://stackoverflow.com/a/9849276/447356) no need to repeat it.","2013-10-06 12:33:01","447356"
"104647604","47475081","1","@inf3rno don't bash him, all the proposed solutions in this thread are cryptic but they are correct answers considering the question was to have a one-liner of sorts. that's what one-liners are cryptic. they can't afford to be readable to the average developer but they save screen real estate where a simple preceding comment will do. And as a result, ends up being much more readable that way then if it had been in ""readable code"" instead.","2019-12-06 03:19:35","4770754"
"12474822","9244805","2","No I don't think so.  Stashing just moves uncommitted files out of the way.  The above also moves (stashes) files that git does not track.  This prevents files that have been added to the remote, which have not yet pulled down to your machine - but which you have created (!) - to be pulled down.  All without destroying the uncommitted work. Hope that makes sense?","2012-03-20 11:54:34","152860"
"104658267","49534766","1","This works best! I wish this was on the front page. API Level 21 is Lollipop, which came out 5 years ago!!! According to Google, more than 89% of users currently use this API (as of Dec. 2019).","2019-12-06 11:16:27","5351927"
"74068663","33223622","6","Tying socks (or any clothes) in a knot reduces the capability of the washer to wash the clothes, and makes untying them to wear much more difficult. Solution 2 makes maintenance more difficult the longer the state of affairs progresses; after 6 months, when you need two black ankle socks to wear with a pair of shorts and sneakers, 6 months of doing whatever works is going to make finding that pair in the same condition (dirty/clean, similar wear) much less likely. Solution 3 is less ""asynchronous"" and more straight-up ""lazy""; do the minimum work you need exactly when you need to.","2017-04-19 10:15:55","436376"
"89684747","48189442","0","It only updates the last two commits even I reset to a commit Id to the 6th last commit, do not know why","2018-07-16 07:06:33","136126"
"74072427","114549","2","voted most but not a better solution. the best way to do this is to use the combination of div and span tag, block css property and cross browser inline-block, and text center will do the simple magin","2017-04-20 02:07:19","5634507"
"12491772","6440396","0","@Hamidam Over a dozen languages support yaml: http://yaml.org - but you're right to ask how many have support built-in, without the need for a third-party library dependency.  Looks like Ruby 1.9.2 does.  Anyone know of others?  And which languages ship support for json by default?","2012-03-21 03:53:56","507544"
"74073568","6581949","0","what if indicate different __metaclass__ in both base and derived class?","2017-04-20 03:24:08","4818445"
"120800302","952952","7","@RobCrowell Same here. To me the list comprehension one doesn't _read right_, something feels off about it - I always seem to get it wrong and end up googling. To me this reads right `[leaf for leaf in tree for tree in forest]`. I wish this is how it was. I am sure I am missing something about the grammar here, and I would appreciate if anyone could point that out.","2021-07-12 05:19:14","3375713"
"12496252","2691891","3","This is dead on, and the ""accepted"" answers look to me (@brian) to miss this critical subtlety.","2012-03-21 06:48:59","688305"
"42003871","5305908","0","I recommend to put a file named `PLACEHOLDER` instead of `README` for subdirectories.","2014-11-02 11:04:07","246776"
"56573055","16957078","46","Note(especially for newbies): The quotation marks in the above command are important.","2015-12-22 12:37:38","2541267"
"120814174","406408","1","This is not a look ahead way. Why is it not ^((?<!hede).)*$ ?   I donot understand.","2021-07-13 09:04:29","3762471"
"120814682","52713","0","I had only un-staged changes and git checkout -- . worked for me. Thanks.","2021-07-13 09:22:27","13647851"
"120815047","406408","1","@VictorChoy `(?<!...)` is negative look behind, and `(?!...)` _is_ negative look ahead: https://www.regular-expressions.info/lookaround.html","2021-07-13 09:36:08","50476"
"12515394","122102","566","Eval is not evil. Using eval poorly is. If you are afraid of its side effects you are using it wrong. The side effects you fear are the reasons to use it. Did any one by the way actually answer your question?","2012-03-22 02:08:54","310678"
"74096083","19876416","2","Which is what this command does: `find` will pass all the paths it finds to the command `grep -l ""text-to-find-here"" <file found>""`. You may add restrictions to the file name, e.g. `find / -iname ""*.txt""` to search only in files which name ends in `.txt`","2017-04-20 01:46:45","212749"
"89712919","8876254","9","@EJP In linux files can exist but not accesible.","2018-07-16 09:30:18","1243068"
"120824634","13010393","0","This is not complete answer, missing ""Find the commit you want, change pick to r (reword)..."" as explained explained here https://stackoverflow.com/a/28421811/1818723","2021-07-13 03:41:55","1818723"
"28469180","244777","1","Check out http://www.highcharts.com/samples/data/jsonp.php?filename=aapl-c.json&callback=? and you will see comments. This is JSONP, though, not pure JSON. See my response below.","2013-10-07 08:39:35","1243926"
"120826569","44936961","0","Not questioning anything on this approach... but why implementing KMP where there's a `includes` or `indexOf` on the table. (Although the underneath impl of those maybe using KMP... not sure)","2021-07-13 05:00:17","5347169"
"120833158","11552180","1","@RomainValeri: “Git will fail (gracefully) in case it needs to modify this file in the index e.g. when merging in a commit; thus, in case the assumed-untracked file is changed upstream, you will need to handle the situation manually.”—http://git-scm.com/docs/git-update-index. You commit to: (1) backup the file out of the tree; (2) reset the a.-u. bit; (3) reset the file to its original content `git checkout -- file`; (4) git pull or merge, which will now succeed; (5) copy the file back and examine changes; (6) set the a.-u. bit again. That's a definition of PITA in my book, but YMMV. :)","2021-07-13 11:21:03","1149924"
"120833514","48120399","1","Hi @MichaelAdams, thanks for pointing that out. What I mean was that `string` is the *shorthand* version of `System.String`.","2021-07-14 12:00:26","5670752"
"28483158","80113","106","Good answer - but I think you should add that while the stack is allocated by the OS when the process starts (assuming the existence of an OS), it is maintained inline by the program.  This is another reason the stack is faster, as well - push and pop operations are typically one machine instruction, and modern machines can do at least 3 of them in one cycle, whereas allocating or freeing heap involves calling into OS code.","2013-10-08 08:31:45","929845"
"56607647","8418403","8","Doesn't work if you're writing a unit test that should test code on an empty directory...","2015-12-23 10:22:31","75103"
"74114077","25938347","1","Seems odd to include git in a group of tools like rpm and dpkg.   I mention this because I see the attempts to use versions control systems like git as a distribution/packaging tool to be a source of much confusion.","2017-04-20 10:12:02","7263924"
"42042407","25501002","18","This does not explain how promises would solve this issue at all though.","2014-11-04 02:29:10","1348195"
"120847015","64437815","0","Is myvar a boolean or a String in this case? I'm having trouble figuring out what you mean by `!myvar` if `myvar.length()` is present. Is that perhaps the way null is checked for in other languages?","2021-07-14 01:09:54","2398263"
"42045294","5189600","117","What is meant by `<after-this-commit>`?","2014-11-04 05:49:24","2540625"
"28500937","15851463","0","@Dmitry well it's not a hello world...it's a complex application for tablets. I refuse to totally unload it from memory just to hide a silly keyboard... Anyway I found something that works combining the thousand solutions proposed here :)","2013-10-08 04:21:53","1108397"
"28502726","17852986","14","The question was to explain without buzz-words, and here we have ""data elements"", ""connectors"", ""components"", ""positioning syntax"", ""operations"". Besides, you start by saying that REST is a design style. Then you say that REST is not a style but a group of pages in which the result of clicking a link is another web page (what else can it be?) After that, it turns out, REST is not a group of pages but a description of some network system, and this description has to ""meet some conditions"". And I still cannot wrap my brain around ""Status of the application functionality is split into resources""","2013-10-08 05:12:50","1243926"
"28502786","9105182","5","""Saying that Rest is just a syntactic change... makes it look like it has no benefits and is purely cosmetic"" --- that's exactly why I am reading answers here on SO. Note that you did not explain, why REST is not purely cosmetic.","2013-10-08 05:14:47","1243926"
"120853849","64437815","1","@Brian_Entei !myvar should resolve to (myvar != true), and since NULL is never equal to anything, if it is NULL, it will resolve correctly and !myvar should catch it. I believe this is viable in most languages. Basically I'm checking to make sure it's not null, if it is, that short-circuits the secondary check for length. If it is not null, then it checks the length of the variable. In this case it would be a string. More the overall null check vs. exception, I didn't pay too much attention on the language.","2021-07-14 05:21:09","3152516"
"89741251","373848","0","@HawkeyeParker uhh yes, we see that.  Thanks for summarizing.","2018-07-17 03:01:40","730566"
"28504004","671132","0","Another explanation of REST that I found very helpful: http://www.ibm.com/developerworks/library/j-grails09168/","2013-10-08 05:53:36","1243926"
"120855227","215718","0","I use this manual solution: $ git revert <commit> then unstash wanted changes then upload this wanted changes into a new commit.","2021-07-14 06:19:59","14537170"
"56622070","34236947","2","what is the point of using `find` and then `grep -r`? They are meant for the same, so this is redundant.","2015-12-23 05:02:39","1983854"
"42055898","5189600","55","`<after-this-commit>` is commit X+1 i.e. parent of the oldest commit you want to squash.","2014-11-04 12:04:24","348495"
"74131117","36177142","18","Wow, this answer is so wrong. Both your methods do a shallow copy of one level. Anyone looking at this answer, move on.","2017-04-21 09:59:44","1137669"
"74131326","25476365","3","Wow, another useless answer. Taken from MDN https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign : `Warning for Deep Clone -
 For deep cloning, we need to use other alternatives because Object.assign() copies property values. If the source value is a reference to an object, it only copies that reference value.`","2017-04-21 10:04:31","1137669"
"120859734","64437815","0","Ah, I see. In Java, attempting to use a `!` operator on anything other than a primitive boolean (or a Boolean object with auto-unboxing) or an expression would result in a syntax error and wouldn't compile, so I was confused. Thanks for the clarification.","2021-07-14 10:32:44","2398263"
"104732421","51741812","1","Hey, your last example is wrong. In my opinion, you must use _clone and not _cloneDeep for the wrong example.","2019-12-10 07:20:58","2409080"
"120874300","9204568","0","The second regexp does not require a top-level domain, i.e. it accepts `user@domain`. But AFAIK this is actually a valid e-mail address, although uncommon. The first regexp requires a TLD, so it doesn't cover these types of addresses.","2021-07-15 01:00:42","5193586"
"12580419","246128","0","This is great, however I ran into a really weird problem. I have a funky command prompt defined, and when using this exact method I was getting unprintable characters in my DIR. I fixed it by using the following: DIR=""$( cd ""$( dirname ""${BASH_SOURCE[0]}"" )"" >/dev/null 2>&1 && pwd )""","2012-03-26 03:50:28","767229"
"120881233","44936961","0","KMP provides linear O(n) performance here.","2021-07-15 05:20:04","3307887"
"42088532","9180445","10","It's better answer. This way you can move commits to any branch.","2014-11-05 08:32:09","1698467"
"120884679","62359248","0","Is the inclusion of a UUID here guaranteed, or is it just something that the current browser implementations all happen to do?","2021-07-15 08:10:50","1108305"
"120884758","58266401","0","The proposal currently is [proposing](https://github.com/WICG/uuid/blob/gh-pages/explainer.md#proposed-api-addition-to-crypto-interface) including it in the `crypto` interface: `const uuid = crypto.randomUUID(); // ""52e6953d-edbe-4953-be2e-65ed3836b2f0""`","2021-07-15 08:16:42","1108305"
"104757520","41020368","0","you can use `<sha>^!` instead of `<sha>^ <sha>`","2019-12-10 08:57:13","2019549"
"104762108","927386","1","By accident I did `git commit -m '...' files` without first doing `git add files` and noticed that that commit and push worked fine. I guess git is now smart enough to do an add automatically when you use `git commit`.","2019-12-11 01:17:42","452587"
"89784870","477578","0","Regarding 'Don't reset a forgotten password to an autogenerated strong password - such passwords are notoriously hard to remember, which means the user must ... just let users pick a new one right away - which is what they want to do anyway.' I would argue that if you use a 3rd party password manager this (remembering autogenerated pws) is no longer a problem. I would also posit that letting a user pick a new one (if they're relying on human memory to retain the password) they're going to pick an easily-cracked or repeated password 9 times out of 10 anyway. Now you're back to a worse problem.","2018-07-18 04:27:39","1129926"
"28542373","2389423","0","Using HEAD~N doesn't work for large N, and finding commit hash is a pain for large N","2013-10-09 04:28:18","1586965"
"120891673","64437815","1","@Brian_Entei Interesting! Thank you, now I'm realizing since the answer was for Java, I should have taken more care to stick to Java syntax. Sorry!","2021-07-16 06:28:11","3152516"
"42101377","3737139","0","Should we add [this one](http://stackoverflow.com/q/3413920/1633117)? It's not syntax, but similarly hard to google, and may look like syntax to some people.","2014-11-05 02:50:13","1633117"
"28546303","271526","0","use [Lombok](http://projectlombok.org/), you got [@NotNull](http://projectlombok.org/features/NonNull.html)","2013-10-09 06:21:21","1870054"
"56673280","33718996","0","@AnkurLoriya This code removes all 0s from the given array","2015-12-25 07:16:37","2676500"
"104768546","38012026","0","This is really useful answer because without `git remote rm origin` git remembers details about the old origin.","2019-12-11 08:02:09","2107205"
"120894115","6841333","0","Unix time is also not monotonic if you include sub-seconds (common for logging applications). It will jump backwards during a leap second.","2021-07-16 08:27:05","908744"
"120897648","13975255","2","This should be the accepted answer by a long shot. Let browser vendors with on staff regex gurus maintain massively complicated regexes for email addresses. Your average frontend dev building a form for collecting email does not often have time to master verbose regex. Yes you have to rely on the regex the vendor provides, but if you need something more complex, do it on the server and or send an actual email and check the response","2021-07-16 11:04:36","2043490"
"120897906","4407335","2","According to caniuse it seems that it doesn't need those prefixes anymore.","2021-07-16 11:16:09","9868445"
"12609178","3407920","2","This was indeed what I was looking for! Why, oh why, can't ""git checkout -- filename.c"" work here, too.. Would be too consistent, I guess.","2012-03-27 08:23:07","639119"
"28559823","13532998","3","A more efficient way to implement this method would be to use a loop and stop applying `search_lambda` once something is found.","2013-10-10 04:49:23","298233"
"120904903","406408","0","This is a good seires of articles. I got it.  You are so kind. Thanks. @BartKiers","2021-07-16 03:51:52","3762471"
"120908861","67786883","0","This looks pretty much like the accepted answer","2021-07-16 07:03:44","1991020"
"120912172","46181","3","@KevinFegan let's be realistic: you would not be using JavaScript to confirm whether an e-mail is authentic. I see this validation as perfectly reasonable when a user signs up. You probably do not want to bother sending verification e-mails to addresses that cannot possibly exist. Some might also have outbound e-mail limits, making it north worth it to send e-mails to `email@localhost`, `i don't have an email` or any other funny user inputs.","2021-07-16 11:02:29","7089726"
"56699262","161813","0","This seems to be a detailed tutorial - http://githubtraining.com/fix-merge-conflict-git-using-sourcetree/","2015-12-27 08:29:36","121067"
"56706498","7866699","0","I would say that POSTing twice with the same data MAY result in two identical users.
Were I creating my API, if someone tried to POST a new user with the same email address, but different data, I might issue a 409. If someone tried to POST a new user with identical data, I might issue a 303. I probably wouldn't want my system to be able to have two identical users.","2015-12-27 04:24:57","367461"
"12633818","134853","23","If you have a base href, then `#` or `#something` will take you to that anchor *on the base href* page, instead of on the current page.","2012-03-28 06:39:43","19851"
"120922923","231855","0","So yield anywhere in a function makes the function a generator, which is basically an iterable of yields from a function?","2021-07-17 04:40:22","14305096"
"120925219","36167495","0","you said, ""This is especially handy for long chains of possible null values"". Can you please explain how?","2021-07-17 07:42:53","398348"
"56714955","28428970","4","This answer is misleading. Quote from Wikipedia ""A Uniform Resource Name (URN) functions like a person's name, while a Uniform Resource Locator (URL) resembles that person's street address. In other words: the URN defines an item's identity, while the URL provides a method for finding it."" Also both URNs and URLs are URIs.","2015-12-28 12:54:13","4718419"
"89823790","31045763","0","Don't use this one anymore. There are several more elements with placeholder and more prefixes. See solutions above or use `::placeholder` together with autoprefixer.","2018-07-19 03:21:16","2590616"
"120931172","44936961","0","@wz366 KMP provides O(n), what about the rest? Any Idea?","2021-07-18 08:12:40","2918731"
"56725346","14488421","1","This is a very slow option - I suggest to use the (for...in) option instead","2015-12-28 10:33:44","1931538"
"56725395","19813797","0","The Object.getOwnPropertyNames({}).length is 10 times slower than the (for...in...) option - I suggest to avoid it as a way to test if an objetc is empty.","2015-12-28 10:35:17","1931538"
"74227215","35472255","0","You right, to undo this you can use `git push -f <remote> HEAD@{1}:<branch>`","2017-04-24 01:07:03","3621912"
"56728768","12184274","1","@ctlockey if those are in your repository then you have bigger problems.","2015-12-28 12:31:08","1804599"
"42151178","10999165","267","@megido well `-D` force deletes, `-d` gives you a warning if it's not already merged in.","2014-11-06 07:04:59","541208"
"42152472","1628584","5","This is what I used: `git push --force -u origin master` and then `git push -u origin newbranch`.","2014-11-06 07:44:43","2736496"
"42152990","52713","3","`git checkout .` is shorter","2014-11-06 08:01:45","8279"
"120949735","67786883","0","sequence of check matters.","2021-07-19 08:44:07","3296607"
"74240211","3516699","0","@dr.dimitru: Instead of idiomatic `(string[0] || '')` you could just `string.charAt(0)`.","2017-04-24 06:24:05","959552"
"120954371","16259217","0","Suggested Edit Queue is full, but someone put the modification from @wjandrea into the answer, which is wrong - it's no longer a `a single, updateable view`. This edit should be reverted.","2021-07-19 12:08:27","4331885"
"120954706","68440375","0","No, this is not what OP wants. They ask: ""How do I make the first letter of a string uppercase, but not change the case of any of the other letters"".  **Capitalizing a string is not the same as making it title case.** They want the former, you're doing the latter. Please look at the examples in the question.","2021-07-19 12:22:06","2227743"
"104839150","72156","1","I've created this one-liner to checkout and pull all remote branches: `for branch in $(git branch -a); do if echo $branch | grep -q remotes && ! echo $branch | grep -q HEAD; then git checkout ""${branch#remotes/origin/}""; git pull; fi; done`
Loops through all branches using `git branch -a` then filters the results to only those with `remotes` in the name (skip all local branches) and filters out `HEAD`. Checks out the branch using the part after `remotes/origin/` so if you already have that branch locally it reuses it but does do the `git pull`. (only tested with bash)","2019-12-13 09:15:59","2014060"
"74255810","1628563","4","http://eddmann.com/posts/move-last-git-commit-to-new-or-existing-branch/ this one works","2017-04-25 06:35:42","4670278"
"120967561","56332104","0","Used today 2021/07/19 by myself, qué capo aguadopd del pasado","2021-07-19 09:40:29","2343869"
"120967967","53930826","0","I had been wondering for a while why `toUpperCase` didn't really do much for some languages... but didn't quite care enough to find out. Glad I finally did, this was a very interesting read!","2021-07-19 10:09:48","3978539"
"28619448","1274447","34","@AkiraYamamoto 's method worked well for me as well. In my case I suppressed the output since my repository had thousands of files: `git rm -r -q --cached .`","2013-10-11 03:21:13","873263"
"28619654","426277","0","Why using ""form #mycheckbox"" instead of simply ""#mycheckbox""? The id is already unique in the whole document, it is faster and simpler to pick it directly.","2013-10-11 03:27:03","1352240"
"120970098","68440375","0","@EricAya yeah, you right, so I edit my answer and add a function that will turn first letter of a string into uppercase.","2021-07-20 02:01:23","12883974"
"56761899","30942174","7","I too found this ""cleanest"".  It might be obvious, but just running the first part, `git ls-files --ignored --exclude-standard`, on its own lets you first understand/verify what files your new `.gitignore` is going to exclude/remove, before you go ahead and execute the final `git rm`.","2015-12-29 11:56:02","489865"
"12676048","4089452","2","Use git config as described below instead if using jgit with amazon-s3.","2012-03-29 05:20:40","468315"
"56763916","30942174","0","Be aware, fails on filenames with certain ""nasty"" characters in them, e.g. `\n`.  I have posted my solution to cater for this.","2015-12-29 01:01:42","489865"
"56763934","23839198","0","Be aware, fails on filenames with certain ""nasty"" characters in them, e.g. `\n`.  I have posted my solution to cater for this.","2015-12-29 01:02:04","489865"
"74261360","707970","0","_""I like the accepted answer better since it's even more low level.""_ That's a bad thing, not a good thing.","2017-04-25 09:02:17","560648"
"104848402","28441119","8","For anyone else who almost opened a new question here, if you git from Powershell, use quotes (`git reset --hard ""@{u}""`). Took me a while to figure that out.","2019-12-13 02:26:34","2383265"
"104848500","58531294","1","The instructions stay hot in the CPU's L1 instruction cache regardless of mispredicts.  The problem is fetching them into the *pipeline* in the right order, before the immediately-previous instructions have decoded and finished executing.","2019-12-13 02:29:22","224132"
"104848977","53689911","0","If you just want to implement the algorithm efficiently over unsorted data, you would do that operation branchlessly (and with SIMD, e.g. with x86 `pcmpgtb` to find elements with their high bit set, then AND to zero smaller elements).  Spending any time actually sorting chunks would be slower.  A branchless version would have data-independent performance, also proving that the cost came from branch misprediction.  Or just use performance counters to observe that directly, like Skylake `int_misc.clear_resteer_cycles` or `int_misc.recovery_cycles` to count front-end idle cycles from mispredicts","2019-12-13 02:44:53","224132"
"104851182","1628584","0","I have used this post so many times because I often accidentally commit to a local master branch and can never remember how to do this. Wish I could upvote ten times. Thanks yet again for saving me...","2019-12-13 03:57:08","684259"
"104851244","59310011","5","Wow, javascript is finally adding what Java 1.0 had in 1995. Great!","2019-12-13 03:59:12","49153"
"74267047","178450","1","Changes in 1.12+ and 2.2.0+ and 3.0+ change the counts if multiple elements selected (see note at the bottom of this http://stackoverflow.com/a/17426800/125981)","2017-04-25 11:18:26","125981"
"42190814","8212184","3","@MykhayloAdamovych: The benefit of `Maybe<T>` or `Optional<T>` isn't in the case where your `T` might be null, but in the case where it should never be null.  If you have a type that explicitly means ""this value *might* be null -- use with caution"", and you use and return such a type consistently, then whenever you see a plain old `T` in your code, you can assume it is never null.  (Course, this would be a lot more useful if enforceable by the compiler.)","2014-11-07 07:55:35","319403"
"89878656","16047306","5","In simple words: 
VM -> three virtual layer must run for allow to your app run, if you want a server virtualization OK but if you want only run a web application is not the best solution.


DOCKER -> Only one layer between your real cpu and you web application. More powerful and better cloning/mirroring  if you must only run your web application for virtualize those i reccomend it","2018-07-21 09:18:24","4803735"
"12691149","426276","19","""If you're working with just one element, it will always be fastest to use `DOMElement.checked = true`"". But it would be negligible, because it's only one element...","2012-03-30 09:32:56","652722"
"56777736","33885543","6","It's required by the SO guidelines to provide an actual answer. Link-only answers are not desired. You can check the guidelines http://stackoverflow.com/help/how-to-answer","2015-12-29 08:06:55","488195"
"56782284","487258","1","Actually big-O notation has nothing to do with algorithms and complexity.","2015-12-29 10:57:25","1221660"
"120989730","14502904","1","@jpmc26 I'm trying to find an authoritative source that agrees with you. Is this mentioned somewhere?  For example in PEP8 does it say that we should avoid using `and` for control purposes, or using `or` to assign a default value?  I tried to google it, but I could not find anything.","2021-07-20 06:23:33","1812732"
"74280479","178344","2","This answer can be used when an element exists but is not currently on the page, such as after detach().","2017-04-25 04:05:39","784868"
"12701112","4692569","7","use `git clean` with caution","2012-03-30 04:39:22","105484"
"28652387","426277","0","@YuriAlbuquerque it was an example. you can use whatever selector you want.","2013-10-13 12:14:28","48500"
"120994846","14502904","0","@JohnHenckel See PEP 20. ""Explicit is better than implicit,"" ""Readability counts,"" and ""There should be one-- and preferably only one --obvious way to do it."" You shouldn't need someone saying to avoid burying an invocation in an `and` statement. Python has constructs that make such behavior more apparent to a reader. The usage pattern here (execute the following code if the condition is true) is **the** single purpose for which `if` was designed; `and` was designed to compute whether two conditions are true simultaneously. The second operand of this `and` statement isn't even used.","2021-07-21 12:15:36","1394393"
"56786948","8347427","0","I don't like this solution because when the inner element is too broad for the screen, you can't scroll over the whole element horizontally. margin: 0 auto works better.","2015-12-30 04:02:09","3393058"
"89894068","80113","4","""stack is the memory set aside as scratch space"". Cool. But where is it actually ""set aside"" in terms of Java memory structure?? Is it Heap memory/Non-heap memory/Other (Java memory structure as per  https://betsol.com/2017/06/java-memory-management-for-java-virtual-machine-jvm/ )","2018-07-22 06:22:38","4571486"
"56790065","4200724","0","I am using .NET framework 4.0 & silverlight enum.getvalues work, the code I used is ---> enum.GetValues(typeof(enum))","2015-12-30 06:41:18","328911"
"120999261","49970799","0","What is *""DS_Store""* (or *"".DS_Store""*?)? A Mac-specific file?","2021-07-21 07:14:43","63550"
"120999706","53373557","1","It can be read as if the command lines will change the content of file *.gitignore*. Can you [make it](https://stackoverflow.com/posts/53373557/edit) clear that is not the case (***without*** ""Edit:"", ""Update:"", or similar - the answer should appear as if it was written today). That is, not a direct clarification, but by changing the way it is written.","2021-07-21 07:37:00","63550"
"121000095","59332338","0","What do you mean by ""do `Git Bash Here`""? How is it connected to the command-line? Please respond by [editing (changing) your answer](https://stackoverflow.com/posts/59332338/edit), not here in comments (***without*** ""Edit:"", ""Update:"", or similar - the answer should appear as if it was written today).","2021-07-21 07:55:45","63550"
"121000137","59506449","0","Where did the *.lock* files come from? What created them?","2021-07-21 07:57:46","63550"
"74290243","10113231","1","Hang on...doesn't have `git add *` and `git commit -a <more-options-here>` have the same effect? Why would you need both?","2017-04-25 08:41:26","131929"
"74291770","6581949","22","<<Be careful here that the `__metaclass__` attribute will not be inherited, the metaclass of the parent (`Bar.__class__`) will be. If `Bar` used a `__metaclass__` attribute that created `Bar` with `type()` (and not `type.__new__()`), the subclasses will not inherit that behavior.>> -- Could you/someone please explain a bit deeper this passage?","2017-04-25 09:32:44","1861627"
"56798114","33885543","2","SO is moderated by its users. That means I can provide an answer if I have it the same way I can comment yours if it doesn't follow guidelines. That's how SO gets to be a great resource.","2015-12-30 11:21:54","488195"
"12716276","762011","116","ECMAScript is the standard and `let` is included in the [6th edition draft](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-12.2.1) and will most likely be in the final specification.","2012-03-31 03:08:35","382228"
"12716287","762297","11","It's also worth noting that ECMAScript is the standard and `let` is included in the [6th edition draft](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-12.2.1) and will most likely be in the final specification.","2012-03-31 03:09:58","382228"
"56805889","34236947","0","ohh!! corrected , Actually find is for running grep  on filtered files and not all, thanks","2015-12-30 03:25:08","3840196"
"42224805","11227877","93","When does branch prediction takes place? When does language will know that array is sorted? I'm thinking of situation of array that looks like: [1,2,3,4,5,...998,999,1000, 3, 10001, 10002] ? will this obscure 3 increase running time? Will it be as long as unsorted array?","2014-11-09 01:37:18","2047418"
"42225007","11227877","89","@FilipBartuzi Branch prediction takes place in the processor, below the language level (but the language may offer ways to tell the compiler what's likely, so the compiler can emit code suited to that). In your example, the out-of-order 3 will lead to a branch-misprediction (for appropriate conditions, where 3 gives a different result than 1000), and thus processing that array will likely take a couple dozen or hundred nanoseconds longer than a sorted array would, hardly ever noticeable. What costs time is i high rate of mispredictions, one misprediction per 1000 isn't much.","2014-11-09 01:49:37","1011995"
"74309517","33567227","2","As far as I am aware, this will not work for merge commits.","2017-04-26 09:50:49","1206487"
"74312078","426258","0","attr() doesnot work with IE. using prop() is the best option","2017-04-26 10:52:29","3673073"
"56817797","14364249","0","@CharesL Anytime there's a directory separator, os.makedirs() starts off with a stat() so a pre-check with os.path.isdir() is just extra effort.","2015-12-30 09:54:49","681359"
"121026811","50534323","0","The simplest way of cloning all branches!","2021-07-22 07:59:14","3131939"
"89926424","59969","4","The behavior is not the same under `set -e` (which is a [shell programming best practice](https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/)).","2018-07-23 12:40:46","328115"
"104906878","6591218","0","Nitpicking: Windows' file system ([NTFS](https://en.wikipedia.org/wiki/NTFS)) is in fact case-sensitive. It is provisioned for systems that choose to expose the file system in a case-insensitive fashion. Windows does that.","2019-12-16 11:57:03","1889329"
"56828965","8888015","3","@Red Yep, if you want to remove everything untracked, even ignored, use git clean -dxf after resetting hard.","2015-12-31 08:52:02","857975"
"104915141","56687773","0","Just wanted to thank you. This worked perfectly and it doesn't suffer from various problems related to cloning a bare repo such as some pull behaviour changing etc.","2019-12-16 04:27:01","238517"
"89947062","21380648","1","Your text is unclear & wrong. The ""matched rows only"" are rows from the cross join of A & B & what is retrieved (A inner join B) is not A intersect B but (A left join B) intersect (A right join B). The ""selected"" rows are not from A & B, they are from A cross join B & from null-extended values of rows from A & B.","2018-07-24 01:09:33","3404097"
"104929267","59921","2","@Till, In this case we can use `realpath` command to get full path of ./foo/script. So `dirname $(realpath ./foo/script) ` will give the path of script.","2019-12-17 05:17:43","5201274"
"121062198","927358","0","Git is a framework to deal with versioning of many files and allow collaborative work. It requires absolute control about what you are doing to accomplish those goals. It is great _precisely_ because it tries to leave all the unnecessary ""magic"" out. Something like `git undo` is generally a bad idea, but is ridiculously easy to implement if you really want to. But then, be aware, you are responsible for it. I find really amazing how people would so promptly give up control to not have to learn stuff. Git is _easy_ you just have to learn the concepts.","2021-07-23 03:02:37","1240001"
"12777320","662570","1","@OmarOthman - I say that because it is entirely up to the writer of your compiler/interpreter what happens when a subroutine is called. Classic Fortran behavior is to not use a stack at all. Some languages support exotic things like pass-by-name, which is effectively a textual substitution.","2012-04-03 03:57:07","29639"
"121068260","16957078","0","Does not work for me at all. Does nothing but change my prompt to `dquote>`","2021-07-23 08:12:16","2448430"
"74368326","246128","0","The oneliner assumes 'cd' is silent. If not you will end up with garbage. Better:
    DIR=""$( cd ""$( dirname ""${BASH_SOURCE[0]}"" )"" >>/dev/null && pwd )""","2017-04-27 02:27:16","54710"
"121076153","51011507","1","This is by far the best ""understandable"" answer.","2021-07-24 11:00:23","11000382"
"28750469","1783437","19","This will create a local branch without switching to it.","2013-10-16 07:20:02","712666"
"28751791","7244456","3","After your changes are accepted in the upstream, you need to repeat these steps: `git fetch upstream`; `git rebase upstream/master`; `git push origin master`","2013-10-16 08:06:47","1069083"
"89991599","16956810","0","This question should be on Unix-Linux community.","2018-07-25 05:46:54","7918560"
"28753708","5423934","13","Elements with `visibility: hidden` or `opacity: 0` are considered to be visible, since they still consume space in the layout. See [answer by **Pedro Rainho**](http://stackoverflow.com/a/8266879/109392) and [jQuery documentation](http://api.jquery.com/visible-selector) on the `:visible` selector.","2013-10-16 09:12:04","109392"
"104976833","51741812","0","This created method (2.) won't work for arrays, will it?","2019-12-18 02:06:07","6691051"
"121093979","73021","0","@ScottStanchfield Does C have pointers? Java does not! Give this to your favorite c compiler and test the output. C has reference semantics, Java does not. You can't swap values from within a function in java and have it reflected at the call site.  https://pastebin.com/U9QBFrwL","2021-07-25 02:36:33","2954950"
"89999438","79988","1","""This is why the heap should be avoided (though it is still often used)."" I'm not sure what this practically means, especially as memory is managed differently in many high level languages. As this question is tagged language-agnostic, I'd say this particular comment/line is ill-placed and not applicable.","2018-07-25 09:34:14","1045493"
"12808810","630475","0","There are some [ideas about how to make POST more reliable](http://www.prescod.net/reliable_http.html) on Paul Prescod's website, though the site overall doesn't seem to be kept up to date.","2012-04-04 06:48:51","490873"
"12809153","237176","0","you should use `i in obj && ... === ...` because in case of sparse arrays `var arr=[];arr[4]=""d"";` it will wrongly return `true` when searching for `undefined`","2012-04-04 07:04:09","908879"
"90002886","21494623","0","@fedorqui `egrep` is equivalent to `grep -E` and it means `--extended-regexp` you can find details here https://unix.stackexchange.com/a/17951/196072","2018-07-25 11:00:42","1829921"
"28759847","14415881","2","This paper discusses a related problem : http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.178.4654&rep=rep1&type=pdf","2013-10-16 12:20:55","827927"
"28760072","14415881","2","Here is another related link: http://www.mail-archive.com/kragen-tol@canonical.org/msg00084.html","2013-10-16 12:26:50","827927"
"90022525","41978194","1","This presumes you are on Linux(?).","2018-07-25 08:15:43","63550"
"121118617","73021","0","@Jonathan That's similar to this in java: https://pastebin.com/1tZsVVRw. The * is creating a pointer to the argument (which itself could be a pointer), which is similar to creating a ""bucket"" to hold the value - Java doesn't allow the C syntax and pointers to be created to manipulate existing data, but that doesn't mean Java doesn't _have_ pointers (note that C still doesn't have reference semantics either...). Pascal, for example, uses ^ in a similar way to C's * - just because languages have different syntaxes does not mean they don't have the same concepts (such as pointers).","2021-07-26 04:38:07","12541"
"121124678","40514","5","The answer is concise, correct, and my own work.  I answered the question in 2008, a decade before many of the longer and more elaborate answers which may be confusing you into thinking it was copied.","2021-07-26 09:56:45","3305"
"28779783","3407920","5","If you `git stash pop` and run in to a conflict, `--ours` will be HEAD and `--theirs` will be the stashed changes.","2013-10-16 09:37:04","305736"
"42332593","5201642","0","Here's an alias in case you'd like to fixup instead of squash: `fixup = ""!f() { base=${1:-2}; git reset --soft HEAD~$base && git commit -C ORIG_HEAD~$(expr $base - 1); }; f""`.","2014-11-12 02:24:06","1127485"
"121128392","13012436","1","It has now been renamed to `.keep` https://github.com/rails/rails/blob/main/activerecord/test/migrations/empty/.keep","2021-07-27 04:27:53","13951118"
"105007803","50113060","1","Thanks, it worked perfectly for me, because I only want to move the last commit, without the previous commits, to the other branch. Basically I made the mistake of committing to master instead of develop and master is ahead of develop with changes that I am not interested in merge right now.","2019-12-19 01:06:36","761951"
"28784161","178450","3","I [found this informative](http://blog.jquery.com/2009/02/20/jquery-1-3-2-released/#:visible.2F:hidden_Overhauled) when looking up about `:visible` and `:hidden`. Essentially, it looks at the `offsetHeight` and `offsetWidth` allowing it to provide the best coverage (eg. you might have a class which has `display:none;` as a property and it will correctly report whether it is visible)","2013-10-17 01:53:01","1676444"
"121132147","44078785","0","Not compatible with IE since .repeat method is [not available](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat).","2021-07-27 08:20:03","1303210"
"121132669","44078785","0","Changing _'0'.repeat(16)_ to _'000000'_ worked for me. I don't know why 0 needs to be repeated 16 times, only couple of times should be enough.","2021-07-27 08:41:39","1303210"
"42338607","237176","0","Does your contains function works in all old and new browser?","2014-11-12 05:03:10","508127"
"90035177","15860345","0","This may not work if you have other divs below the centered div.","2018-07-26 07:59:28","1010405"
"28787586","105402","10","I just want to point out that this, unfortunately won't work in silverlight, since the silverlight library don't comprise `enum.GetValues`. You have to use reflection in this case.","2013-10-17 05:50:55","1117427"
"42343566","25638420","0","I'm in the 2nd case, but when I do ""git revert HEAD"" it says ""error: Commit [ID] is a merge but no -m option was given.  fatal: revert failed"".  Any suggestions?","2014-11-12 07:36:02","892487"
"56931315","1274057","44","The only real answer to this is down below, see [`git update-index --assume-unchanged`](http://stackoverflow.com/a/20241145/985454). This solution 1) keeps the file on server (index), 2) lets you modify it freely locally.","2016-01-04 02:15:28","985454"
"121145191","208106","1","@Loolooii you can rename the variable in your destructuring assignment to meet your `argsIgnorePattern` in the `no-unused-vars` rule. Easy problem to solve.","2021-07-27 04:29:59","1829589"
"12850443","4682612","34","The first command is redundant.  Simply `git pull --all` will do the same – it just won't fetch twice.  And infosec812 is right that this does not answer the question anyway.  I wonder how this got so many upvotes.","2012-04-06 02:03:57","279627"
"56934887","23819901","16","This answer is completely semantic... your success method is just a callback within a callback. You could just have `success: handleData` and it would work.","2016-01-04 03:49:49","2518398"
"56935036","8888015","0","I did this and my local changes were NOT discarded - which is unfortunate because I was hoping they would be! Does anyone know how to do this, but also force git to discard any locale changes that don't exist in the remote branch? I essentially want an EXACT, 1-to-1 correspondence with the remote branch.","2016-01-04 03:53:50","830905"
"105024257","59418364","5","Welcome to Stack Overflow! Please consider adding a description or explanation for this code block.","2019-12-20 12:24:23","3345375"
"121151686","16957078","0","Is it possible to bookmark an answer for quick reference. This is so useful. I'll just rtfm lol","2021-07-27 09:47:09","3011819"
"74427915","13012436","0","@QuolonelQuestions https://github.com/rails/rails/blob/master/activerecord/test/migrations/empty/.gitkeep","2017-04-29 01:15:21","3538165"
"105032166","59406659","1","it helped.The link was useful","2019-12-20 09:35:25","4928284"
"90064289","79988","2","Good point @JonnoHampson - While you make a valid point, I'd argue that if you're working in a ""high level language"" with a GC you probably don't care about memory allocation mechanisms at all - and so don't even care what the stack and heap are.","2018-07-26 10:22:52","11440"
"90064595","13326916","1","@ZaeemSattar Think of the static function variable like a hidden global or like a private static member variable.","2018-07-26 10:42:00","11440"
"74439733","1274447","7","@PetrPeller, that's right .. then what is the right solution ?","2017-04-29 03:38:33","1295905"
"28822890","1787014","13","@aidan If you get a response like `error: pathspec 'branch_name' did not match any file(s) known to git.` then you should do a git fetch first.","2013-10-18 12:40:10","72321"
"42374014","176264","182","Mini Venn diagram: `( URIs ( URLs ) )`","2014-11-13 03:20:31","327074"
"121167294","1783426","0","**important note** - making sure you have no changes is obvious, but also make sure that you don't have any untracked files changes. For regular checkouts it didn't bother me, but in this case, it did. `git clean -nfd` to see what would be removed and then `git clean -fd` to remove it.","2021-07-28 01:30:12","11952668"
"105057178","59418364","0","1. backup your folder on desktop","2019-12-21 01:04:55","11239018"
"105057184","59418364","0","2. my project name is 'ipozal'","2019-12-21 01:05:20","11239018"
"105057198","59418364","0","then use this command and replace 'ipozal' with your folder name, to find files that contains this text 'geolocation'","2019-12-21 01:06:48","11239018"
"74454527","33067594","0","@ProLoser But you won't get `^0.1.x` by default when installing from npm. Most likely it will be `^0.1.3` which dissalows any updates. Anyway I have dropped the advice for not using `0.*` and just added notice.","2017-04-30 09:46:40","588759"
"90081102","38055140","5","git tag not tags","2018-07-27 11:43:01","992055"
"105066797","59418364","1","Good explanation -- you should edit your answer so that the explanation is included.","2019-12-22 04:14:16","3345375"
"90087719","9113274","2","Starting with C# 7.3 (Visual Studio 2017 ≥ v15.7), one can use `where Key: Enum`","2018-07-27 02:48:51","422877"
"90088023","17121612","6","Starting with C# 7.3 (Visual Studio 2017 ≥ v15.7), one can use `where T: Enum`","2018-07-27 02:57:05","422877"
"90088051","20009790","3","Starting with C# 7.3 (Visual Studio 2017 ≥ v15.7), one can use `where T: Enum`","2018-07-27 02:57:51","422877"
"90088095","3195229","2","Starting with C# 7.3 (Visual Studio 2017 ≥ v15.7), one can use `where T: Enum`","2018-07-27 02:59:01","422877"
"90088112","4200724","2","Starting with C# 7.3 (Visual Studio 2017 ≥ v15.7), one can use `where T: Enum`","2018-07-27 02:59:35","422877"
"90088154","944352","1","Starting with C# 7.3 (Visual Studio 2017 ≥ v15.7), one can use `where T: Enum`","2018-07-27 03:00:45","422877"
"28843743","406260","1","Exactly analagous to my situation. Velocity template engine uses regular expressions to decide when to apply a transformation (escape html) and I want it to always work EXCEPT in one situation.","2013-10-18 02:43:00","593533"
"121180438","1642028","21","if you use it in a for loop it requires an obligatory wink: `for (int x = 10; x --> 0 ;) ...`","2021-07-29 12:16:35","204555"
"42392356","24806549","6","How about just
    `return /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(email)`?","2014-11-14 03:24:32","938505"
"42406111","237176","0","what prototype() does in js? does it use to add any extension to any class or object from out side?","2014-11-14 12:53:21","508127"
"121192769","66672138","0","Liked very much the simplicity of this answer. Wish could have given 100 votes for it.","2021-07-29 12:34:20","5056004"
"74473956","426273","0","`$(""#mycheckbox"").click();` worked for me as I was listening to change event too and `.attr` & `.prop` didn't fire change event.","2017-05-01 06:30:54","534525"
"90101673","17344732","0","@IsaacSupeene Best practice is to make the window of (file) operation as small as possible followed by a proper exception handling","2018-07-28 02:52:48","103734"
"28868550","1628584","15","""If you don't merge your changes first, they will be lost."" -- This isn't entirely true. The commits only become detached. Garbage Collection takes a very long time (Something like >1000 commits or so maybe 10000?) So you can still recover them. Either by remembering the SHAs or finding them with `git reflog` or `git fsck --lost-found`. [More info on lost commits](http://gitready.com/advanced/2009/01/17/restoring-lost-commits.html)","2013-10-19 02:20:21","227176"
"28868744","1628584","1","By very long time I mean 30 days, NOT >1000 commits.","2013-10-19 02:34:28","227176"
"28869197","1628584","1","Why would you do unnecessary checkouts and trash your worktree?  `git checkout -b newbranch; git branch -f master master~3` (or ...`origin/master`).","2013-10-19 03:05:40","1290731"
"121206797","73021","0","@ScottStanchfield C indeed has reference semantics, it's achieved using pointers, exactly like what I put in the Pastebin. So what does the address-of operator do in C? HMM? C has reference semantics. It always HAS had reference semantics. I'm sure you've got linguistics and semantics confused here. I'm not talking about the grammar, it can be a *, a ^, or a type&, the meaning is (mostly) all the same, the caviates being the rules of each langauges typesystem, which AGAIN, is another reason that JAVA IS NOT LIKE C","2021-07-29 11:49:28","2954950"
"74488477","3104376","2","This answer abuses the comment by Crockford - jsmin is a javacript minifier, not a JSON minifier. a javascript minifier accepts javascript as input, not JSON, and as such, supports comments. The comment by Crockford in no way can be twisted to mean that comments in JSON are ok, or a JSON minifier should support comments. At best, it's an extension, at worst, it's a security bug, and as such, the backlash is understandable and using Crockfords comment to justify it is a bug.","2017-05-01 04:22:15","1303846"
"42426433","8418403","15","In this case a `README` or `ABOUT` file would be just as good or better. Leaving a note for the next guy, just like we all used to do it before URLs.","2014-11-15 12:59:30","295163"
"57027435","23839198","3","`git rm` will complain if `ls-files` didn't match anything. Use `xargs -r git rm ...` to tell `xargs` not to run `git rm` if no files matched.","2016-01-06 07:15:35","1979340"
"57028337","31886761","3","A nice little variation of this I like is `git reset --hard @{u}` which resets the branch to wherever the current remote-tracking branch is","2016-01-06 07:39:27","2221343"
"90128090","48802631","2","You better be sure you know the element is in the array, otherwise findindex returns -1 and consequently removes the 9.","2018-07-29 02:44:45","3416551"
"121224641","73021","3","Wow. Simple and elegant. I got the whole dilemma.","2021-07-30 04:21:44","8148637"
"42452838","671132","0","@HankGay, please i really want to understand your comment (Don't forget ""Hypertext as the engine of application state"") I tried many times. thanks","2014-11-16 12:15:22","1276136"
"90137708","42622789","0","Maintaining HashMap is costly than TreeMap. Because HashMap creates unnecessary extra buckets.","2018-07-30 02:05:50","2771888"
"90141604","20241145","7","this command will only be effective on your machine right?
what if i want to stop tracking the file on all machines ?
also on the machines that will clone the rep in the future?","2018-07-30 06:37:25","7354094"
"121232318","73021","0","@Jonathan No. C only has pass-by-value (in your example you're passing the value of a pointer - see https://stackoverflow.com/questions/2229498/passing-by-reference-in-c for a good discussion, esp the answer by Ely). Pass-by-reference has a *very* specific meaning in compiler parlance. FYI - I'm a compiler guy and was on the ANSI C++ 98 committee... C++ has reference semantics; C does not. The difference is whether the actual argument can be modified. When you pass in &i the actual argument value is the address of i, not a reference to i.","2021-07-31 01:37:20","12541"
"121232397","73021","0","@Jonathan (Submitted too early and cannot edit) Inside the method you're not changing that address; you're following that address and changing the data residing there.","2021-07-31 01:50:08","12541"
"105126760","51522896","0","""Passing an object"" is not a valid operation in Java. You pass a reference to an object. Doing so is _not_ called ""passing by reference"". It is called ""passing by value"". The reference passed is a _value_, which is _copied_ to a new place on the stack for the method to use, just like any primitive value.","2019-12-25 12:00:47","666583"
"121243653","63316751","0","why would you use a tuple? now your solution is inefficient.","2021-07-31 06:53:23","5014455"
"121243659","63316751","0","And with any sequence, `sum((flatten(e) for e in itr), tuple())` is highly inefficient,","2021-07-31 06:53:53","5014455"
"121243662","40275594","0","@EL_DON of course, that isn't what this question is asking, there is another question that deals with that case","2021-07-31 06:54:23","5014455"
"121245900","44078785","0","The the many zeros in front are needed, because a random number might be just one digit. Even if its very rare, it still has to work.","2021-07-31 10:13:34","3546836"
"121246002","6376039","0","`revert` deleted some files I add added to my repo. Use it with caution!","2021-07-31 10:25:00","7389293"
"121247986","32108184","0","The comment right above yours literally explains why =) There are a million different objects, so you want to make sure to only test for ""actual object primitives"", i.e. objects whose constructor is not some extension of Object.","2021-08-01 03:41:29","740553"
"121248016","679937","0","Note that the code in isEmpty alone is not enough, though. You also want to test for `obj.constructor === Object`, in case you're dealing with objects that have a million non-enumerable properties, which Object.keys() explicitly [will not include](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/keys)","2021-08-01 03:46:00","740553"
"121256407","25861938","0","Is `latest` recommend for debs that never depend on versions? Does the question makes sense at all..","2021-08-01 04:04:26","1705829"
"121257831","63316751","0","@juanpa.arrivillaga Your comment made me think about improving my answer and I think I found a better one, what do you think?","2021-08-01 05:37:17","694360"
"105155362","45409899","1","I had multiple remotes added, so `git remote rm origin` command was needed for removing all the associated urls. Then the add command worked.","2019-12-26 03:44:17","2880080"
"105155423","38012026","1","The above `git remote rm origin` resolves the issue of multiple remotes: issue where I was not able to set the remote url. `remote.origin.url has multiple values fatal: could not set 'remote.origin.url'`","2019-12-26 03:47:16","2880080"
"42486051","671132","1","@whitelettersandblankspaces It's one of the core tenets of REST as described in Fielding's thesis. I highly recommend you read it, as he does it more justice than I possibly could in a comment on SO. The TL;DR of it is that you should use rich ContentTypes that embed possible actions in each representation, the way `href` in an HTML document indicates other resources you could request. The idea is to provide machine-discoverability, as opposed to APIs where all the endpoints are documented and humans are expected to figure out how to put them together. It's really hard to get right, BTW.","2014-11-17 03:05:26","4203"
"90182016","20241145","0","Yes, this command will only stop tracking it locally. To stop tracking file completely just remove if from the repository and commit/push the changes.","2018-07-31 08:15:42","2808879"
"28943135","944352","3","+1 for reusable code: examples - save these extension methods in a library and reference it [Flags]public enum mytypes{name1, name2 }; List<string> myTypeNames = mytypes.GetAllItems();","2013-10-22 06:55:57","314770"
"28949070","12199843","0","validateEmail(""e_mail@sth.com"") and validateEmail(""e.mail@sth.com"") both return `false` value","2013-10-22 10:04:13","1344509"
"57095906","1628088","12","According to the output of `git status` your second command `git reset --hard HEAD` failed. You didn’t paste it’s output, though. → Incomplete question.","2016-01-08 11:06:08","825924"
"57096052","1628088","4","You are mixing two issues here: 1) how to reset a local branch to the point where the remote is and 2) how to clear your staging area (and possibly the working directory), so that `git status` says `nothing to commit, working directory clean`. – Please specify!","2016-01-08 11:09:55","825924"
"121283549","40275594","0","@juanpa.arrivillaga it's a simple and natural extension of the question, though. Answers that can handle greater depth of nesting are more likely to be useful to someone who finds this question.","2021-08-02 07:53:32","6605826"
"90198876","5480292","3","It is also interesting to know that `git tag -d \`git tag\`` will delete all local tags. Same applies for `git push --delete origin \`git tag\`` assuming you pulled the remote tags locally. That was handy in a test environment.","2018-07-31 03:15:01","5420675"
"28955186","14774496","0","But what if there is a list of elements and I want add link to remove some element from it by string ID?","2013-10-22 12:55:45","253142"
"13007300","136138","5","When you have a class instance its often simpler to call `inst.method()` rather than `module.method()`. Sometimes you don't even know which module you're using, Python _is_ a dynamic language after all...","2012-04-13 04:04:38","348545"
"42515003","13486116","0","This is the real one! Works with simple `sh` too! Problem with simple `dirname ""$0""` based solutions: If the script is in the `$PATH` and is invoked without path, they will give wrong result.","2014-11-18 10:25:02","163454"
"105185487","59506360","1","This belongs on [Check/Uncheck checkbox with JavaScript (jQuery or Vanilla)?](https://stackoverflow.com/q/8206565/215552) or [JavaScript check multiple checkbox](https://stackoverflow.com/q/31032777/215552), not this jQuery question.","2019-12-27 10:03:53","215552"
"121291312","59686433","0","Couldn't this be avoided by merging the parent branch before rebasing?","2021-08-03 07:19:07","953833"
"13012230","5032238","2","What's the common reason *against* this? ie: why do people prefer the if statement to the try/except? Is it that try/except is more dangerous if you miss the error?","2012-04-13 07:46:56","971529"
"57106172","14364249","5","This is the wrong answer, as it introduces a potential FS race cond. See answer from Aaron Hall.","2016-01-08 03:20:49","1267398"
"74574116","16957078","2","This is a solid answer, but the issue is that it will only match whole words because of the `-w` parameter. I found that it will not match arbitrary text.","2017-05-03 05:24:13","4851565"
"57114782","32524385","23","@MobileMon No, REST methods are not CRUD.","2016-01-08 07:06:38","647641"
"121305917","64907232","0","JSON5 is not ""the new standard"" - It's a separate standard developed by separate people.","2021-08-03 04:51:07","11885828"
"121306042","237104","0","console.log(['joe', 'jane', 'mary'].includes('jane'));","2021-08-03 04:56:08","4603244"
"121306087","5767325","0","const array = [2, 5, 9];

console.log(array);

const index = array.indexOf(5);
if (index > -1) {
  array.splice(index, 1);
}

// array = [2, 9]
console.log(array);","2021-08-03 04:57:51","4603244"
"121306106","208105","0","delete myObject.regex;
// or,
delete myObject['regex'];
// or,
var prop = ""regex"";
delete myObject[prop];","2021-08-03 04:58:42","4603244"
"121306221","2334712","0","UPDATE
    Table_A
SET
    Table_A.col1 = Table_B.col1,
    Table_A.col2 = Table_B.col2
FROM
    Some_Table AS Table_A
    INNER JOIN Other_Table AS Table_B
        ON Table_A.id = Table_B.id
WHERE
    Table_A.col3 = 'cool'","2021-08-03 05:04:01","4603244"
"121306228","2334712","0","UPDATE YourTable 
SET Col1 = OtherTable.Col1, 
    Col2 = OtherTable.Col2 
FROM (
    SELECT ID, Col1, Col2 
    FROM other_table) AS OtherTable
WHERE 
    OtherTable.ID = YourTable.ID","2021-08-03 05:04:21","4603244"
"105203863","40471","4","@MissFiona No, [`ConcurrentMap`](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/ConcurrentMap.html) is *not* necessary here, as the Question says “non-threaded applications” meaning threading/concurrency is not an issue.","2019-12-29 01:11:13","642706"
"57121622","105402","54","I made the mistake of trying to use `var` for the type. The compiler will make the variable an `Object` instead of the enum. List the enum type explicitly.","2016-01-08 10:57:08","1394393"
"28979225","630475","2","I second that, @MartinBrown... your point is quite illuminating for me, actually. The answer as it stands is already fantastic, though, don't get me wrong!","2013-10-23 03:57:52","1429273"
"13040887","246128","5","To deal with a relative symlink, I found I needed `DIR=""$( cd ""$( dirname ""${BASH_SOURCE[0]}"" )"" && cd -P ""$( dirname ""$SOURCE"" )"" && pwd )""`","2012-04-15 07:35:06","212001"
"121325576","65422380","0","In the first example: `(a := 3) if True else (b := 5)` actually it's a redundant first walrus operator. This will do: `a = 3 if True else (b := 5)`","2021-08-04 12:48:25","3455918"
"13051553","2251026","0","Windows gotcha: even though I spawned process with DETACHED_PROCESS, when I killed my Python daemon all ports opened by it wouldn't free until all spawned processes terminate. WScript.Shell solved all my problems. Example here: http://pastebin.com/xGmuvwSx","2012-04-16 10:04:33","8338"
"13056014","1787014","36","Unsurprising, but this version has been released in the last few years - knowing this syntax can save a lot of time since there's still a lot of old documentation and comment threads floating around that suggest the older method for doing this.","2012-04-16 01:24:49","364485"
"90258271","163659","0","For Step 4, if you want to take all the changes instead of just the current buffer  from remote/local/base, you can use `%diffg` instead (% is a range specification, http://vimdoc.sourceforge.net/htmldoc/cmdline.html#[range]), e.g. `:%diffg BA` or `:%diffg LO` or `:%diffg RE`","2018-08-02 06:58:31","4301119"
"42574077","14415881","6","I have also solved the practical problem in O(1) time, by only buying black socks in packs of 50 pairs. It's interesting how many Stack Overflow posters have found the same solution!","2014-11-19 07:29:18","4213662"
"42574098","215731","8","@aliteralmind: Actually, yes, there's a way to do it: ""git log --reverse -1 --ancestry-path yourgitrev..master"" and then use the appropriate options to just get the git rev. --ancestry-path will ""draw a line"" between two commits and -1 will show you just one version, and --reverse will ensure the first entry emitted is the oldest one.","2014-11-19 07:29:52","1576886"
"29018015","2389423","0","if the merge was the last state change `git reset --hard HEAD@{1}` will work too -- otherwise use `git reflog` to find the sha or revision reference you want.  see also `man gitrevisions`","2013-10-24 01:26:08","1754875"
"74636657","16957078","1","I thing I would like to add to this answer is that '/path/to/somewhere/' cannot be relative path. It should be absolute path from your / directory.","2017-05-05 06:50:10","2543524"
"29026496","5871742","3","A simpler variation for most situations is `find * -type d -empty -exec touch {}/.gitignore \;`","2013-10-24 08:26:19","828885"
"121356996","65422380","2","@AndrewAnderson No it's not redundant. You should compare both the first and the second examples. You can combine them and consider this: `(a := 3) if x else (b := 5)`, you always get either `a` or `b` assigned, not both. However, consider `a = 3 if x else (b := 5)`, when `x == False`, you will get `a = 5` and `b = 5`, where both them are assigned.","2021-08-05 03:36:53","1148123"
"105257770","59503209","2","Now this is one hell of an in depth answer! Thank you very much! Although, what I'm curious about is why the ""new RegExp(...)"" syntax gives that much of an improvement.","2019-12-31 12:59:08","1923441"
"105257985","36035604","0","This worked. After git merge upstream/master, auto merge failed due to unmerged paths which I had to run git add -A then git commit -m ""message"" then it was up to date.","2019-12-31 01:10:52","11630148"
"105260289","27664932","1","git clean -ffxd to remove everything","2019-12-31 03:07:55","1169741"
"105260308","31594643","0","git clean -ffxd to remove everything not in the repo","2019-12-31 03:09:09","1169741"
"105260320","55297455","2","git clean -ffxd to truely remove everything","2019-12-31 03:09:43","1169741"
"121366298","16212050","0","This is no longer true re: Search Engines not analyzing Javascript","2021-08-06 12:27:09","751570"
"105268045","487300","0","if anyone is still confused about why the answer uses seconds instead of operations, ""assuming each computation takes 1 second"" which I think means it's using time as a representation of an operation(s)","2020-01-01 01:20:32","7183221"
"121370088","13178771","1","gautam+@Gmail.com - showing is valid which should not","2021-08-06 06:33:00","8618965"
"121370093","46181","0","gautam+@Gmail.com - showing is valid which should not","2021-08-06 06:33:05","8618965"
"121376861","65422380","0","Yes, that's correct :). I considered this only for `x=True` case which is of course is limited.","2021-08-06 11:56:32","3455918"
"121378972","59686433","1","@Jabari - My answer was for situations when rebasing against a previous commit in the same branch.  For example: If you are working on a change and made 10-15 commits locally, but want to clean-up the commit history before pushing to a remote branch.  You can use this command to squash all your commits into one commit and push that to the remote.","2021-08-06 01:27:55","553718"
"105284220","57772662","0","Installing **Python** to do something **git** does well by itself, is not really a solution. More like an programming exercise.","2020-01-02 03:19:57","2346209"
"121385984","59686433","0","Gotcha!  I should have read the first line better!","2021-08-06 06:45:01","953833"
"29054981","6866485","1","Great tip. Just used it, though I think it's relevant to note that any tags associated with the deleted commit will continue to exist, even though it won't appear in gitk. Delete it with ""git tag -d XXXXX"" where XXXXX is the tag name.","2013-10-24 09:54:20","1666676"
"42623122","1644241","1","`x=10; while(x --> 0)` is not the same as `for(x=10; x>0; x--)`... it would on the other hand be the same as `for(x=10-1; x=>0; x--)` .","2014-11-21 02:12:47","1789176"
"74681581","231801","25","I tried this example in Python 3.6 and if I create `iterator = some_function()`, the variable `iterator` does not have a function called `next()` anymore, but only a `__next__()` function. Thought I'd mention it.","2017-05-06 02:37:55","4138739"
"105292681","57772662","3","@Mogens Python is already preinstalled in most sane distributions. With git only you can't for example: 1) customize the output (e.g. make it more consistent) 2) combine multiple commands in desired way 3) easily customize the logic. Besides, entering the same commands over and over again is pretty boring.","2020-01-02 11:24:54","244297"
"105294546","29887121","0","There's a null check in above code - `if(homeServices != null) {` which can be changed to `homeServices.ifPresent(h -> //action)`;","2020-01-02 12:36:05","248847"
"74688187","2669690","3","Would prevent eval, but not with an infinite loop.","2017-05-06 08:27:42","3515174"
"121396760","65422380","0","Because we don't really write down this code `if True else`, the reason of the first example is only compared with other examples.","2021-08-07 12:30:59","1148123"
"13125846","373834","5","possibly followed by a `git push --force`","2012-04-18 09:47:55","201042"
"121400350","67637849","0","If you want to hide the keyboard but only have a reference to the Activity, which view should you use? `window.decorView`?  Before, you would get the windowToken with `currentFocus?.windowToken` and then use `InputMethodManager.hideSoftInputFromWindow(windowToken, 0)`","2021-08-07 04:45:49","444761"
"42632272","5904539","0","Hi, actually this is a trick for a `work around` but really effective. Because some conflicts may happen just in few commits then reverting 5 commits will make sure no conflicts with remote code.","2014-11-21 10:03:43","2526476"
"121401705","33999337","0","I will recommend using the Counter's `.update()` instead of `+`. This is because, if the sum results to a value of 0 for any of the keys, Counter will delete it.","2021-08-07 06:23:52","8665639"
"121401920","927358","0","_""undo things not to be undone""_ - These things would be all things. How can I really trust my source code to something that let me (or others) change the history.","2021-08-07 06:36:17","16391"
"121403254","6620071","0","@ninjagecko **It should be ""`Big Oh`"" not ""`Big-O`""; 1. Because** in mathematical discussions, usually the dash ""-"" is mistaken with minus, **2. Also,** if a letter stands for something, then that something spelled out is more human-readable. **3. Lastly, if we spell out ""Big"" why not ""Oh""?!** We have ""Big Oh, Big Omega, Big Theta"" names and ""OΩΘ"" letters, just like we have ""Ay Bee Cee"" and ""abc"", see [2015 discontinued wiki](https://wiki.c2.com/?WikiAlphabet) for more","2021-08-07 08:19:49","8740349"
"42635984","21718540","133","If one of the commits between 0766c053..HEAD is a merge then there will be an error popping up (to do with no -m specified). This may help those encountering that: http://stackoverflow.com/questions/5970889/why-does-git-revert-complain-about-a-missing-m-option","2014-11-21 11:55:43","1624933"
"105307595","417184","2","This is a really good answer and I'd like to add to this. Even if you forget about Internet Explorer and sitemaps, CDNs also impose limits on URI length. Most CDNs suppor the minimum required request-line lengths of 8000 octets and return 414 Too long request when reached. 

[Fastly](https://docs.fastly.com/en/guides/resource-limits) 8kb, [CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html): 8,192 bytes, [Cloudflare](https://support.cloudflare.com/hc/en-us/articles/115003014512-4xx-Client-Error#code_414) 32KB","2020-01-02 08:59:52","1509183"
"74699199","28617347","0","I've not seen the construct ${branch##*/} before - looks really useful - any idea where I can find out more on that? can't seem to find under bash anywhere. Thx.","2017-05-07 11:44:06","521893"
"121413849","73021","0","@ScottStanchfield You obviously don't understand pointers and references. The only difference between a pointer and a reference is that a pointer's type can be cast away. A reference IS a pointer with type safety. A pointer is simply a variable that holds the address of something else. Guess what a reference is? A variable that holds the address of something else. A reference isn't an instance of that something else. A reference is basically syntactic sugar for pointers with type safety. If a language has pointers, it has reference semantics.","2021-08-08 03:05:41","2954950"
"42650642","1026069","0","what about: `return str.replace(/(\b\w)/gi,function(m){return m.toUpperCase();});`","2014-11-21 07:25:37","1319799"
"74710692","271616","2","Throwing `NullPointerException` is the Java convention. See e.g. [`Objects.requireNonNull`](http://docs.oracle.com/javase/8/docs/api/java/util/Objects.html#requireNonNull-T-) which is *""primarily for doing parameter validation in methods and constructors""* and throws `NullPointerException`. There is also simply the doc for [`NullPointerException`](http://docs.oracle.com/javase/8/docs/api/java/lang/NullPointerException.html) which states that *""applications should throw instances of this class to indicate other illegal uses of the `null` object""*.","2017-05-07 09:51:27","2891664"
"121425630","215731","0","with git restore: `git restore --source <hash>~1 -- <path>`. Notice the `~1` after the hash which will restore the files to the state they were at the commit _before_ the `hash`'s commit.","2021-08-09 07:33:31","5063316"
"121427094","73021","0","@Jonathan You're confusing 'reference' as a type with 'pass-by-reference'. There's a huge difference between ""pass by a value by reference"" (reference semantics) and ""pass a pointer/reference by value"" (value semantics). It's all about how you define the FORMAL parameters of a function/method, not the ACTUAL parameters. If the language gives you syntax to automatically de-reference values in the FORMAL parameters (the function/method signature), it has reference semantics. Creating a pointer to something in the ACTUAL arguments (the call site) is still only passing a value.","2021-08-09 08:39:41","12541"
"121427203","73021","0","@Jonathan C and Java are strictly pass-by-value. You can SIMULATE pass-by-reference in them by doing something both inside the function/method AND at the call site (for example, in C, using & at the call site and * inside the function/method, or in Java, wrapping the value at the call site and working inside the wrapper inside the function/method), but that's still pass-by-value. Pass-by-reference is a specific compiler term for logically aliasing a variable passed into a function by ONLY specifying this behavior in the FORMAL parameters, not at the call site.","2021-08-09 08:44:52","12541"
"74720022","11444416","1","Unfortunately browsers still (as of May 2017) do not optimize all corner cases for this nice feature and there are possible some loop slowdowns due to that http://stackoverflow.com/questions/43153889/javascript-var-vs-let-deoptimization-slowdown-issue-in-v8-and-spidermonkey","2017-05-08 07:29:00","6908891"
"74724294","4685330","6","wondering why no answer mentions the case when element is moved away from the visible window, like `top:-1000px`... Guess it's an edge-case","2017-05-08 09:34:11","714733"
"42691489","17344732","17","As long as you intend to access the file, the race condition _does exist_, regardless of how your program is constructed.  Your program cannot guarantee that another process on the computer has not modified the file.  It's what Eric Lippert refers to as an [exogenous exception](http://blogs.msdn.com/b/ericlippert/archive/2008/09/10/vexing-exceptions.aspx).  You cannot avoid it by checking for the file's existence beforehand.","2014-11-23 06:37:59","2362578"
"13196847","1181809","25","No reason to extract the DOM node in the snippet used in the example, and then have to look it back up again.  Better to just do:
    var $button = $('#btnUpdate');

And then in the If expressions just use $button instead of $(button).  Has the advantage of caching the jQuery object.","2012-04-21 10:32:30","228429"
"121468538","15702135","1","just what i searched `git checkout -- <file>` thanx !","2021-08-10 06:31:34","5809937"
"121469263","10113231","1","If you don't want a merge commit you can run `git pull --rebase=interactive -s recursive -X theirs` instead and drop your local undesired changes [as detailed in this answer](https://stackoverflow.com/a/68732289/2166823)","2021-08-10 07:05:18","2166823"
"121472027","68554053","2","Best and easy way.","2021-08-10 09:35:31","1707311"
"57299917","630475","1","@KevinWheeler: Bill de Hora has a good blog post about using POST to update only some fields of a resource, while PUT must supply all fields (whether creating or updating):  http://www.dehora.net/journal/2009/02/03/just-use-post/  He makes the point that PUT can be very heavy weight if you have to send through all the fields when you only want to update one.  So, following his scheme, you could have POST sending through an update to a couple of fields and another POST request updating another couple of fields in the same resource.  Not sure but I think PATCH now does the same sort of thing.","2016-01-13 09:31:05","216440"
"121476380","26853961","0","`x | y` is confusing to read, as @ysth explained it is counter-intuitive. I prefer `x |= y` which is going to mutate `x` with new values from `y` and reads far clearer!","2021-08-11 05:01:10","1490061"
"57300160","2691891","0","If using POST to partially update an existing resource, such as updating only a couple of fields, can you specify the resource name?  The reason I ask is that many people say POST can't be used with an individual resource, only with its parent collection.  eg POST applied to expense reports.  Is it possible to update say a single field of expense report 10929 using `POST /expense-report/10929` ?","2016-01-13 09:39:17","216440"
"42713107","52713","1","IMO this suggestion doesn't handle deletes while stash variant does.","2014-11-24 12:29:27","561062"
"42714001","373848","0","Git reset without hard option does not modify working copy, which is why it didn't have any effect. Hard reset causes file to look exactly as in repository in specified commit, and WILL DISCARD your local changes, if any.","2014-11-24 12:54:00","2424641"
"121480866","20241145","0","Thank you , how can I do this for only some lines in a file?","2021-08-11 08:44:42","3403972"
"29149844","16956810","34","remember that grep will interpret any `.` as a single-character wildcard, among others. My advice is to alway use either fgrep or egrep.","2013-10-28 11:54:06","1046007"
"29150083","16956810","12","anyway, you were almost there! Just replace `-H` with `-l` (and maybe `grep` with `fgrep`). To exclude files with certain patterns of names you would use `find` in a more advanced way. It's worthwile to learn to use `find`, though. Just `man find`.","2013-10-28 12:01:23","1046007"
"105379125","1026069","8","`([initial, ...rest]) => [initial.toUpperCase(), ...rest].join("""")`","2020-01-06 06:49:40","4510033"
"121485817","952952","9","I kept looking here every time I wanted to flatten a list, but this gif is what drove it home:
https://i.stack.imgur.com/0GoV5.gif","2021-08-11 12:04:22","826897"
"105389173","57205151","0","that ""1) Abort Merge"" was pretty enough. Upvoting.","2020-01-06 01:32:46","1018154"
"121497110","406408","0","`-bash: !hede: event not found` mind sharing a working context, please?","2021-08-11 07:26:44","2550808"
"105397747","417184","0","Thanks @timrs2998, I've added those link into the body of the answer","2020-01-06 06:33:35","6521"
"74784803","246128","20","@tvlooy your comment is not macOS (or probably BSD in general) compatible, while the accepted answer is. `readlink -f $0` gives `readlink: illegal option -- f`.","2017-05-09 04:14:06","76900"
"42733563","25553225","23","Maybe you could at a note/warning that his command will throw away the commit **and the changes in the working directory** without asking any further.","2014-11-24 10:35:29","455269"
"42733703","25553225","6","If you happen to do this by accident, not all is lost, though. See http://stackoverflow.com/questions/10099258/how-can-i-recover-a-lost-commit-in-git, http://stackoverflow.com/questions/15479501/git-commit-lost-after-reset-hard-not-found-by-fsck-not-in-reflog and http://stackoverflow.com/questions/7374069/undo-git-reset-hard/7376959.","2014-11-24 10:40:57","455269"
"13233318","373834","0","If after the above ""git reset --hard SHA1_HASH"", you do a ""git status"" and see Untracked files, and you want to get rid of them too. Run ""git clean --force -d""","2012-04-23 06:28:40","543839"
"13234275","397740","36","Smells like over-engineering to me. Just let the JVM throw an NPE and don't clutter your code with this junk.","2012-04-23 07:11:10","181551"
"74793663","246128","1","All BSD's have it. OSX doesn't. Install coreutils and use greadline","2017-05-09 08:31:53","704087"
"105411387","53185164","0","I don't have the exact error logs but the alias A was being referenced before the assignment, which caused the error.","2020-01-07 08:16:26","5367871"
"57340924","1482133","11","In OSX, there is `greadlink`, which is basically the `readlink` we are all familiar. Here is a platform independent version: `dir=\`greadlink -f ${BASH_SOURCE[0]} || readlink -f ${BASH_SOURCE[0]}\``","2016-01-14 08:16:28","3422257"
"57341539","5189600","5","I always end up screwing up the rebase for some reason, reset --soft seems more intuitive for most purposes.","2016-01-14 08:33:49","2137668"
"42748473","22654961","3","@GerardSexton `.` is current director. git can push to REMOTES or GIT URLs. `path to local directory` is supported Git URLs syntax. See the GIT URLS section in `git help clone`.","2014-11-25 10:24:20","222893"
"121513841","5397515","0","If adding the entire dependency is mortifying to your super-performance dependent application, you can install just `_.isEmpty`: `npm i lodash.isempty`","2021-08-12 12:20:28","2483271"
"29188970","16931854","24","This method is dangerous, do not use it. If the replacement string contains the search keyword, then an infinite loop will occur. At the very least, store the result of `.indexOf` in a variable, and use this variable as the second parameter of `.indexOf` (minus length of keyword, plus length of replacement string).","2013-10-29 11:33:41","938089"
"57347606","31298778","2","Sherif, why state that the operator returns ""less than 0"", 0 or ""more than 0"" rather than simply stating that it returns 1, 0, or -1? The latter is both more precise and more succinct; I don't understand why you reverted that detail of my edit.","2016-01-15 12:13:25","1709587"
"13256545","373834","4","If you have uncommitted changes, **you will loose** them if do a git reset --hard","2012-04-24 03:30:55","697489"
"29194709","16276586","6","I was going to point this one out. Note that the button won't delete your local branch... see this answer for how to do that: http://stackoverflow.com/a/10999165/901641","2013-10-29 02:02:45","901641"
"121517141","21718540","1","If you remove that '..HEAD' at the end of the command, you can remove only a specific commit. For example: `git revert --no-commit 0766c053` will remove only the specific changes made for 0766c053 keeping all changes after 0766c053 untouched.","2021-08-12 02:22:02","3267317"
"90441122","3377569","5","For those reading in future - please note that `git revert` is a separate command - which basically 'resets' a single commimt.","2018-08-08 07:11:00","4880924"
"74807711","13575102","1","It's `git config --unset core.bare` actually... To me, this seems the cleanest solution of all presented in the answers here. A pity it has so few upvotes...","2017-05-10 08:05:14","1512592"
"57351298","178386","16","@cwingrav You might want to re-read the documentation, :hidden applies to all elements. Form elements with `type=""hidden""` is just one case that can trigger :hidden. Elements with no height and width, elements with `display: none`, and elements with hidden ancestors will also qualify as :hidden.","2016-01-15 04:15:16","674675"
"121525385","7104747","0","So, `fetch` command is something like a ""commit from the remote to local"". Right?","2021-08-12 08:44:42","7389293"
"29203531","630785","6","There's something very wrong with allowing PUT to create resources: the client provides the URL. That's the server's job!","2013-10-29 05:33:01","965382"
"29203610","17114749","1","No, PUT implies that you know the URL. If you only know the ID then POST with that ID to get the URL.","2013-10-29 05:35:20","965382"
"121527109","21963136","0","@Andy is right. Broofa's code is faster as of Aug 2021. I implemented Dave's suggestions and ran the test myself. But I don't imagine the difference should matter all that much in production: https://jsbench.github.io/#80610cde9bc93d0f3068e5793e60ff11","2021-08-12 10:38:07","217579"
"105434836","1473742","1","@Stophface @Emobe How can this not be a correct answer? The question asked for ways to accomplish the same as the supplied code. And `Array#includes` does exactly what the code in the question does.","2020-01-07 09:25:27","526040"
"57365249","31298778","2","Btw, prior to PHP7 there's still a way to avoid if-else block that works not only with numbers: `return $a < $b ? -1 : $a != $b;`","2016-01-15 01:04:29","2637490"
"29212346","17114749","6","The id is part of the URL, so yes, use PUT if you know the URL (which includes the id).","2013-10-29 10:02:53","278976"
"29213828","17114749","0","No, the URL is determined by the server and the ID is not necessarily part of the URL. Roy Fielding would tell you the [same](http://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven) or you could just read his [thesis](http://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm).","2013-10-29 11:06:18","965382"
"42786717","1482133","13","In OSX Yosemite 10.10.1 `-f` is not recognised as an option to `readlink`. Using `stat -f` instead does the job. Thanks","2014-11-26 09:29:32","1623036"
"13285723","1213360","38","@Martin - A very good answer/explanation than the more abstract accepted answer. A sample assembly program showing stack pointers/registers being used vis a vis function calls would be more illustrative.","2012-04-25 04:42:17","211574"
"13288147","952946","96","This is a Shlemiel the painter's algorithm http://www.joelonsoftware.com/articles/fog0000000319.html -- unnecessarily inefficient as well as unnecessarily ugly.","2012-04-25 06:24:57","192839"
"42791273","7359734","3","@SimonD I'm sure you would be able to find problems similar to these MERGE ""bugs"" (well...) in separate INSERT/UPDATE/DELETE combo. One thing - always use MERGE in SERIALIZABLE transaction (or use HOLDLOCK hint) if you want to avoid most common race conditions. Same for manual merge using INSERT/UPDATE/DELETE...","2014-11-26 11:36:43","986161"
"105453976","6840978","0","I prefer, `$BASH_SOURCE` over `$0` , because it's explicit even for readers not well-versed in bash.

    `$(dirname -- ""$(readlink -f -- ""$BASH_SOURCE"")"")`","2020-01-08 01:04:31","1198114"
"105455117","21403753","3","I know it works, it's just that :cq doesn't require the shift key. :-)","2020-01-08 01:39:28","1356472"
"57382725","1482133","6","Good call, @robert. FYI, `greadlink` can easily be installed through homebrew: `brew install coreutils`","2016-01-15 09:27:26","39207"
"57385506","3737139","0","@davejal: Please make sure a tag applies instead of simply blindly adding it.","2016-01-15 11:19:18","3204551"
"29239329","1274447","4","You should make reference to Seth's answer below as a danger of this approach. The exact thing Seth mentioned happened to me but I'd followed your answer due to the number of up-votes.","2013-10-30 02:58:20","1283527"
"29239571","1274447","0","@Mark: there's no danger because git will only remove the file on checkout (merge, etc.) if it is unchanged in the working tree. In this case, if the developer decides that he really does want the unchanged version kept he can easily retrieve the version from the commit before you removed it.","2013-10-30 03:09:46","19563"
"29240564","1274447","6","@CharlesBailey: By your own comment you've shown there is a case where the file can be removed which you might not want. Just because you can retrieve it doesn't mean that you want it to happen. I 'stopped tracking' a file by this method and when I pulled to a qa server it deleted the important (but environment specific) shell script rather than just not tracking it. This slowed down the deployment process and had it been a live roll out there would have been downtime while I retrieved the file. I'm not saying this is the wrong method, I'm saying you should make reference to Seth's answer too.","2013-10-30 03:34:52","1283527"
"29240622","1274447","2","@CharlesBailey: Surely you can see there's a reason why Seth has 16 upvotes for his answer. Probably 15 other people making the same mistake I did.","2013-10-30 03:36:35","1283527"
"29241153","1274447","2","@Mark: You probably don't want to use a source control tool as the only element in a deployment strategy but if you do then you certainly aren't in the same situation as the question asker who wanted to force git ""to completely forget about"" the file. I did explicitly say in my answer: ""The removal of the file from the head revision will happen on the next commit.""","2013-10-30 03:48:43","19563"
"29241283","487278","2","`Traditional computers can solve polynomial-time problems`. Can they or can't they?","2013-10-30 03:51:22","1443490"
"29241476","1274447","3","@CharlesBailey: Firstly, let's not get petty, I didn't set up this deployment strategy it's a project which I've inherited. Secondly, the asker said ""that file keeps showing up in git st after it's edited"" so clearly they wanted to keep the file, just not have it tracked, hence why a warning about it's risk of deletion is warranted.","2013-10-30 03:55:42","1283527"
"42808558","6796816","71","I also needed to do a `git push origin master --force` for the change to show up in main repository.","2014-11-26 07:20:10","276168"
"121580115","1021384","0","Not being funny but this appears to be the only working answer. The higher rated answers appear to do nothing. I'm sure they do something, but they certainly don't ""reset"" the unstaged changes.","2021-08-15 07:48:16","893254"
"121581197","34435000","0","I have to wonder: how does one retrieve the resource associated with a `mailto` URL ?","2021-08-15 09:30:01","294313"
"57397334","246128","2","As a side note: By convention, environment variables (PATH, EDITOR, SHELL, ...) and internal shell variables (BASH_VERSION, RANDOM, ...) are fully capitalized. All other variable names should be lowercase. Since variable names are case-sensitive, this convention avoids accidentally overriding environmental and internal variables.","2016-01-16 02:02:54","5649859"
"90504695","16218718","1","So, other than the API contractual hints, it's really just about catering to functional programmers who enjoy chaining methods endlessly.","2018-08-09 05:39:02","1195273"
"105487256","14415881","1","Step 1) Throw away all your current socks. Step 2: buy 15 pairs of identical black socks for yourself, and 15 pairs of identical white socks for your wife. Step 3) The algorithm reads: ""Black socks are yours, and white socks are your wife's""!","2020-01-09 12:40:03","5419821"
"42826147","671508","1","One doubt on this point: ""the actual representation retrieved for a resource is dependent on the request and not the identifier: use HTTP Accept headers to control whether you want XML, HTTP, or even a Java Object representing the resource"" --Here, should it be ""...whether you want XML, HTML, or even a Java Object representing the resource..."" I am thinking that HTTP Accept headers tells the format for data exchanged. And HTTP is the protocol used in RESTel web APIs","2014-11-27 09:34:23","1060044"
"121585975","46181","0","@KevinFegan You can't _validate_ an email address, but you can recognise obviously invalid ones. Basically anything that will stop your outgoing mail server from even attempting to send the message.","2021-08-16 06:35:24","19851"
"105490302","46790107","1","An outer join result is the same as inner join but plus some additional rows so I have no idea why you think outer join would be faster. Also what are these ""two types"" of inner join? I suppose you are referring to full,left, and right for outer?","2020-01-09 02:07:02","73226"
"105490443","46790107","1","Outer join is not faster than inner join.","2020-01-09 02:10:30","3404097"
"105503046","100146","3","The documentation describes [how the metaclass is chosen](https://docs.python.org/3/reference/datamodel.html#determining-the-appropriate-metaclass). The metaclass isn't inherited so much as it is derived. If you specify a metaclass, it has to be a subtype of each base class metaclass; otherwise, you'll use the a base class metaclass that is a subtype of each other base class metaclass. Note that it is possible that *no* valid metaclass can be found, and the definition will fail.","2020-01-09 09:14:22","1126841"
"74898232","7847199","0","Compile-time and run-time dev tools like findbugs will have a harder time identifying duplicate null checks. Also, you better hope Java inlines that isNull function,","2017-05-12 08:28:28","2683399"
"74898410","452820","4","Kotlin has the null safe call operators, too. https://kotlinlang.org/docs/reference/null-safety.html#safe-calls","2017-05-12 08:33:34","2683399"
"74901211","14147470","0","what about trailing whitespaces? Eg, if I want test to fail with string `"" hede 
  ""`?","2017-05-12 09:45:27","1457181"
"42856228","20241145","0","`hg forget` is mostly `rm --cached`. This trick is really cool (for forget forever).","2014-11-28 08:23:43","222893"
"13361744","682343","1","Instead of the dry run, walk through the add with `git add -p`","2012-04-28 10:05:18","1068324"
"29294295","6591218","26","@PandaWood, it depends on how `push.default` is configured. By default (`matching`) it will push to a remote whose name matches. You would have to do `git push origin <newname>:<oldname>` or you will create a new remote branch. However, if `push.default` is set to `upstream`, then you can `push origin head` and things will go to  the oldname on the remote.","2013-10-31 11:46:51","32177"
"42864063","7866699","1","How can you use PUT to create a record by the ID, like in your example `user 5` if it doesn't exist yet?  Don't you mean `update, replace if already exists`? or something","2014-11-28 12:44:13","894792"
"121617116","5189600","0","What if there are too many `pick`to replace manually?","2021-08-17 10:26:22","6655465"
"74914273","7310676","0","cdiggins, what if i have O(N/2) complexity , should it be O(N) or O(N/2), for example what the complexity if i will loop over half string.","2017-05-12 03:08:29","1973933"
"57450022","2610497","7","@MathiasBynens _The :placeholder-shown pseudo-class matches an input element that is showing such placeholder text._ So it matches `<input>` tag, like `input` selector, but showing placeholder text just now. It also doesn't match the placeholder attribute itself.","2016-01-18 12:55:44","1059400"
"42869846","7866699","0","@Coulton: I meant what I wrote. You insert user 5 if you PUT to /users/5 and #5 does not exist yet.","2014-11-28 03:46:33","83741"
"42870157","7868846","0","What you describe POST as is actually how PATCH should behave. POST is supposed to mean something more akin to ""append"" as in ""post to mailing list"".","2014-11-28 03:57:25","83741"
"105527980","57613696","1","`Automatic merge failed; fix conflicts and then commit the result.`","2020-01-10 04:32:39","1741850"
"42880742","1213360","3","This is the best in my opinion, namely for mentioning that the heap/stack are *very* implementation specific. The other answers assume a *lot* of things about the language and the environment/OS. +1","2014-11-29 02:00:15","510036"
"74925481","27664932","1","@mikoop Under what scenarios?","2017-05-12 08:54:53","3832377"
"74925796","14147470","0","@eagor the `\s` directive matches a single whitespace character","2017-05-12 09:07:42","163227"
"121637505","506004","0","If anyone still has a problem that all the great answers you've applied but page redirect is not working then please visit: https://stackoverflow.com/questions/15759020/window-location-href-doesnt-redirect

it works for my case.","2021-08-18 05:39:05","6542943"
"74934593","40288213","26","The program here gives different output than original because x here is decremented after printf. That demonstrates well how ""simple  answers"" are usually Incorrect.","2017-05-13 09:30:30","528720"
"105548596","34428027","0","With ECMAScript 2015 duplicate property names are allowed again! See [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode).","2020-01-11 05:39:09","2607891"
"74945191","14147470","0","thanks, but I didn't manage to update the regex to make this work.","2017-05-13 07:22:41","1457181"
"57488624","9849276","2","I'd call the lack of knowledge about the effects of boolean operators unprofessional. But I agree about the value of readable code, I would certainly wrap this in a clearly labelled function. And that's exactly what most major JS frameworks do.","2016-01-19 11:18:19","1178663"
"121676020","14488421","0","Please note that `JSON.stringify(new Error('gotcha')) === '{}'` is `true`","2021-08-19 01:43:31","1214911"
"57496094","2610497","5","@HEX It’s not like the `input` selector because that selects all `input` elements. `:placeholder-shown` only selects `input` elements that are currently showing the placeholder, allowing you to style those elements only, and effectively style the placeholder text. What are you trying to say?","2016-01-19 02:19:14","96656"
"13422889","9244805","3","If you don't have 1.7.6, you can mimic `--include-untracked` simply by temporarily `git add`-ing your entire repo, then immediately stashing it.","2012-05-01 10:48:15","105484"
"121682303","50113060","1","If ""newbranch"" didn't exist yet, then you can move the unstaged changes after reset to a new branch with this command w/o having to stash: `git checkout -b newbranch`","2021-08-19 05:43:39","8383845"
"121685828","7104747","0","@carloswm85 No, In order to retrieve from remote branch(possibly on a separate server) to the remote-tracking branch (i.e. Locally located remote-tracking branch(which is like a proxy) on your local development computer ), we use git fetch","2021-08-19 08:47:47","6888123"
"57513133","31298778","0","@MarkAmery Because that is the documented behavior.","2016-01-19 09:38:05","1878262"
"105589560","58731581","0","VS Code `.jsonc` FTW 🙌","2020-01-13 03:28:10","400836"
"29368433","2064441","3","The Optional pattern doesn't solve anything; instead of one potentially null object, now you have two.","2013-11-04 04:15:57","964243"
"121689846","44936961","0","If this is used for speed, it would likely run faster if you replaced `.charAt(i)` with `[i]` to avoid the extra function calls.","2021-08-20 02:54:27","2317490"
"105591239","13308092","0","@confused00 Neither - because _those aren't stacks_. They are frames of the call stack. Each frame you can just roll around as you please. Another inaccuracy/misleading description then!","2020-01-13 04:23:05","560648"
"13438089","179147","122","If you've already pushed, just force push again: `git push -f origin branchname`","2012-05-02 02:12:24","1088009"
"13438259","373834","0","i found this article that helped me get passed this issue: http://blogs.gnome.org/diegoe/2009/03/18/saving-your-neck-when-git-svn-dcommit-fails/
it seemed to work great and is very similar to this particular answer.","2012-05-02 02:18:09","339698"
"74990362","33132462","6","This does not clarify what is *Docker Engine*. Very abstract pictures.","2017-05-15 01:22:45","3743145"
"57523081","38578","3","The + syntax was never ANSI, it was Oracle, and it was always inadequate for expressions using multiple tables or comparisons. The ON syntax is ANSI. PS The comparison to Venn diagrams is phrased wrong. See my comment on the question.","2016-01-20 06:09:25","3404097"
"29373964","671132","1","...and Martin Fowler of course has something to say (and I liked it better than the ""wife"" article): http://martinfowler.com/articles/richardsonMaturityModel.html","2013-11-04 09:36:41","385273"
"57527538","1125968","34","anyone reading this who thinks they might lose files, I've been in this position and found Sublime Text's buffer has saved me - if I'm working on something, then accidentally delete everything by trying to solve a similar problem to this or by using an answer on this question and have had the files open in Sublime (which there's a good chance of) then the files will still be there is Sublime, either just there, or in the undo history","2016-01-20 08:51:22","1249829"
"121702391","21963136","0","I feel your comparisons may be unfair as broofa's anwer appears to be for an e4 UUID, and your testing against Ward's e7 implementation here. When you compare broofa's answer to the e4 version presented to here, this answer is faster.","2021-08-20 02:11:33","5884968"
"75000313","14147470","2","@eagor: `^(?!\s*hede\s*$).*`","2017-05-15 05:33:04","163227"
"75001715","8418403","5","@szablica I don't think it's confusing at all. In fact I think it's very intuitive to call it .gitkeep. Calling it .gitignore is what sounds contradictory to me. So this is just a matter of personal taste.","2017-05-15 06:17:24","4124574"
"121709512","292359","0","Is it `git fetch` something like *staging FROM* the remote repository? (I'm somewhat new to version control and Git)","2021-08-20 08:21:13","7389293"
"42951997","2919360","7","@Craig , I agree, but it's also helpful to know what will happen when there are no parentheses. In real code, I too would tend to insert explicit parens.","2014-12-01 09:30:51","1593924"
"29380611","246128","0","@DaveDopson: I suggest to add `>/dev/null` after the `cd` because the above breaks in odd ways when `cd` prints something to stdout.","2013-11-04 01:40:40","34088"
"29380789","15255856","0","And it fails when `cd` is configured to print the new path name.","2013-11-04 01:45:25","34088"
"121713611","11227902","1","@C.Binair The prediction is made at runtime, and it costs millions of transistors per core to implement it. And multiple Ph.D. dissertations worth of work :) Modern branch predictors are marvels of engineering, to the point that the Eiffel Tower starts looking minuscule. They are hidden from the view, but they are largely responsible for the performance of modern processors. Turn branch prediction off (e.g. by writing code that slams the predictor and makes it useless), and an i7 3GHz core is like a cheap ARM Arduino...","2021-08-21 04:24:34","1329652"
"13458865","136138","22","-1: This answer A) gives a very corner-case feature of class method as an explanation of its utility (so they are only useful when subclassing to allow you the name of the subclass, *really*?), and B) implies ""static methods should be module methods"", which, although they semantically are, it makes a *lot* or sense to use them *if your module defines many classes, and a given helper function only applies to a given class*. So a very poor answer with lots of misconceptions imho.","2012-05-03 09:40:59","624066"
"29385430","14767865","1","Step 4 is unnecessarily wasteful, -1.","2013-11-04 03:49:02","770230"
"13459246","1669524","126","@Alcott: as unutbu said, static methods are an organization/stylistic feature. Sometimes a module have many classes, and some helper functions are logically tied to a a given class and not to the others, so it makes sense not to ""pollute"" the module with many ""free functions"", and it is better to use a static method than relying on the poor style of mixing classes and function defs together in code just to show they are ""related""","2012-05-03 09:55:03","624066"
"13459425","1669457","9","Could be expanded a bit to show that, by having a class as a first argument, class methods have direct access to other class attributes and methods, while static methods do not (they would need to hardcode MyClass.attr for that)","2012-05-03 10:01:46","624066"
"42958778","7074","92","@O.R.Mapper, but the fact remains that `string` is a *lexical* construct of the C# *grammar* whereas `System.String` is just a type.  Regardless of any *explicit* difference mentioned in any spec, there is still this implicit difference that could be accomodated with some ambiguity.  The language itself *must* support `string` in a way that the implementation is not (quite) so obligated to consider for a particular class in the BCL.","2014-12-02 03:05:22","189950"
"29391088","11478811","0","I most emphatically agree with what you wrote, and think it very unfortunate that Java makes no distinction between references that encapsulate ownership and those which do not.  Those who would argue ""that's what GC is for"" miss a critical point: GC avoids the need for *immutable* objects to have owners, and it also *eliminates* the possibility of a dangling reference to a deleted object turning into a reference to some other arbitrary object (as can happen in C++).  It's hard to write correct code, however, if more than one object encapsulates a mutable object's state as part of its own.","2013-11-04 06:36:56","363751"
"29391152","11478811","0","My preferred way of thinking of things is to say that references can encapsulate identity, mutable state, both, or neither.  Additionally, references can encapsulate mutable state either because they identify an immutable object, or because the object they identify will never be exposed to anything that might mutate it.  It's too bad Java has no concept of such distinctions, since things like equality checking and cloning could be handled 99% automatically if it did.","2013-11-04 06:38:47","363751"
"42964796","7074","124","@KirkWoll: According to the language specification, the language itself *must* consider `string` to be exactly the same as the BCL type `System.String`, nothing else. That is not ambiguous at all. Of course, you can implement your own compiler, using the C# grammar, and use all of the tokens found like that for something arbitrary, unrelated to what is defined in the C# language specification. However, the resulting language would only be a C# lookalike, it could not be considered C#.","2014-12-02 08:22:33","1430156"
"90655090","19095988","0","This is not working for me. Running `git push` after these instructions still keeps trying to upload files in my `.gitignore`.","2018-08-14 11:21:54","7023816"
"105629213","57880896","4","I did `git restore <filename>` and it worked perfectly.","2020-01-14 07:13:59","2223505"
"57552292","31298778","1","@Sherif http://php.net/manual/en/migration70.new-features.php documents it as `1` / `0` / `-1`, not to mention that the [original RFC](https://wiki.php.net/rfc/combined-comparison-operator) did likewise. I think that's sufficient documentation to justify including the same detail here, and have rolled back for now; feel free to rollback and continue this argument if you still disagree.","2016-01-20 06:54:09","1709587"
"75024797","13326916","1","you must be kidding. can you really define static variable inside a function ?","2017-05-16 09:57:26","4905400"
"57555584","20344271","1","Think I tried 10 answers before this one. Had given up hope. Thanks man.","2016-01-20 08:33:14","1983904"
"57559785","31298778","5","@MarkAmery the migration guide isn't the documented behavior of the operator. For that you want to look at the language operators section of the manual for that http://www.php.net/language.operators.comparison the actual behavior behind this relies on various comparison functions of the API, like when you're doing  strcmp for strings, where you can not guarantee the actual return value in every single case. Sure, it's almost always 1, 0, or -1, but for the cases where you can't guarantee it like in wrapping libc's strcmp, you offer up the same defined behavior as the underlying spec to be safe","2016-01-20 10:45:28","1878262"
"57559898","31298778","11","@MarkAmery The point here is not to allow people to rely on undefined behavior. For the one case where someones gets a value that is not exactly 1, 0, or -1, you get someone filing a bug report thinking there's something wrong in the language. Which is why we document that all we can guarantee is that value will be _less than_, _greater than_, or _equal to_ 0, and not necessarily 1, 0, and -1.","2016-01-20 10:50:30","1878262"
"121741456","67637849","0","@Mark, good question! Testing shows that `window.decorView` does not work on API 25-29: `ViewCompat.getWindowInsetsController()` returns `null`. `currentFocus` has a similar problem on API 30. But you can use any view in your layout, e.g. its root view. For hiding keyboard it works, but for showing keyboard you might be better off with some `EditText`: `WindowInsetsControllerCompat.show()` uses it to request focus.","2021-08-22 10:30:03","9316168"
"90671337","394809","14","In the years since nobar's comment the [conditional expression documentation](https://docs.python.org/3/reference/expressions.html#conditional-expressions) has been updated to say _Conditional expressions (sometimes called a “ternary operator”)..._","2018-08-15 01:25:07","3358139"
"57575731","2610497","3","@HEX (Of course, it also selected `textarea` elements that are showing placeholder text.)","2016-01-21 10:18:26","96656"
"75046199","9113274","2","@GrantM Why? This code is neither complex, and it's incredibly short. On top of that, writing the class once will allow even shorter iterations of code with using is as per his example. This is extremely clean, if you can't update that code, you probably can't update any of the companies code.","2017-05-16 06:30:32","3924743"
"42999080","246128","0","@lpapp If you're trying to reference the directory of `~/.bashrc`, you already know it! It's `~`. ;) Normally, I don't like to assume, but in this case, it's a pretty safe assumption since it's happening at log in and `bash` is only looking in that specific place.","2014-12-03 04:00:58","1394393"
"90684588","50937561","2","Pseudocode would be: for each key, assign its value to the same key in a new object (shallow copy). However if the value is of type `Object` (can't shallow copy), the function recursively calls itself with the value as an argument.","2018-08-15 08:48:06","9154756"
"43000498","671159","7","@aehlke - I think the real question there would be ""Why does an anonymous user have the ability to delete records from your system?""","2014-12-03 05:28:19","52551"
"43009171","952946","50","The append operation on lists forms a **[`Monoid`](http://en.wikipedia.org/wiki/Monoid#Monoids_in_computer_science)**, which is one of the most convenient abstractions for thinking of a `+` operation in a general sense (not limited to numbers only). So this answer deserves a +1 from me for (correct) treatment of lists as a monoid. *The performance is concerning though...*","2014-12-03 10:35:23","531179"
"13496605","426276","49","As Tyler says, it is a negligible improvement in performance. To me, coding using a common API makes it more readable than mixing native API and jQuery APIs. I'd stick with jQuery.","2012-05-04 04:28:15","645511"
"121761617","66332305","0","@PeterMortensen A blob is an opaque, efficient representation of some amount of ""raw"" (binary) data, for convenience of scripting on the Web.","2021-08-23 05:39:26","254343"
"13503549","8823660","3","""POST can also be used for non-idempotent updates to existing objects (especially, changing part of an object without specifying the whole thing"" That's what PATCH is for","2012-05-04 10:11:24","173208"
"121771271","68581547","0","better way is `killall -9 vim && killall -9 vi`","2021-08-24 05:56:01","16163563"
"121774398","5767357","1","out of curiosity, what's the reason for using `index > -1` instead of `index !== -1`? `indexOf()` will either return value from `0..n` range, or `-1`, but never anything LESS THAN -1 (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf#return_value)
so i think `!==` is more intuitive and binary choice.","2021-08-24 08:32:24","3132457"
"90710254","5361169","1","It can be good to run `git clean -nfd` first, which only shows, *what would be removed* before it's actually done, that is before you run into troubles. :-)","2018-08-16 02:26:41","1908192"
"121778844","53930826","0","This doesn't seem to work with digraphs such as ""IJ"" in dutch. Using the latest version the example here is incorrectly capitalized to ""Ijsselmeer"" (The regex version). The code I used was: `capitalizeFirstLetter('ijssel', 'nl-NL')` - That's a correct localization string right?","2021-08-24 11:38:41","511302"
"105685607","406408","0","I return to this time after time and it never cease to amaze me the complete dominion you have over regex. Thanks for this and for the great explanation. Stack Overflow, please give me a bigger up arrow button.","2020-01-16 01:45:13","877027"
"13541416","10113231","66","This is the best answer I've seen so far.  I haven't tried it, but unlike other answers, this doesn't attempt to nuke all your untracked files, which is very dangerous for obvious reasons.","2012-05-07 09:36:16","161972"
"75085037","34953875","2","Maybe 'cos this is already covered in many answers? Let's not make answers redundant.","2017-05-17 03:38:33","661933"
"121792670","208106","1","The problem I've had with this approach is that if the destructing is inside a conditional, it makes ESlint go bonkers.","2021-08-24 09:56:55","1170686"
"105700199","28581216","0","`isEmpty({})` gives FALSE [here is test](https://jsfiddle.net/Lamik/aq2Ls9mc/)","2020-01-16 09:28:06","860099"
"13547212","9713750","4","Without `Object.hasOwnProperty`, this function will always return `true` (the function is called `isEmpty`, but returns true when it's not empty, by the way...). Also, the function will not invoke itself automatically. Add `()` after `obj.isEmpty`.","2012-05-07 02:01:02","938089"
"105705144","59779899","8","When adding answers to ten year old questions with forty four other answers the bar is higher. It is useful to address in your answer what new aspect of the question your answer addresses and how the passage of time an emergence of new technologies has impacted the answer. The answer should also explain how and what the code does.","2020-01-17 02:43:36","214143"
"121802457","36463546","0","I had **only one commit** to move. Important for this case: Use `HEAD~1` in the first step, but keep `..HEAD@{2}` in the last step. Otherwise you get a **cherry-pick** failed error. (When I tried `..HEAD@{0}` or `..HEAD@{1}` before, I got the cherry-pick error and **I thought my commit is lost**.)
. . . . . . . . . . So use these steps: `git reset --keep HEAD~1` `git checkout -t -b newbranch` `git cherry-pick ..HEAD@{2}`","2021-08-25 09:33:17","789423"
"121805657","67637849","0","Thanks @gmk57 So how about using `currentFocus` pre-30, and `window.decorView` 30+?","2021-08-25 11:34:03","444761"
"121806618","53930826","0","""ij"" as U+69, U+6A would capitalize as ""Ij"", yes - ""ĳ"" (U+133, a single code point) is what capitalizes to ""Ĳ"" (U+132). Locale-awareness here only extends as far as the case mapping rules Unicode defines that sometimes vary per language, as in Turkish; knowing whether ""ij"" (U+69, U+6A) _should be interpreted as_ ĳ (U+133) is outside its scope and requires at minimum a dictionary for that language.","2021-08-25 12:09:42","1631952"
"13553061","5032238","25","The accepted answer is actually dangerous because it has a race-condition. It is simpler, though, so if you are unaware of the race-condition, or think it won't apply to you, that would be your obvious first pick.","2012-05-07 06:23:20","62596"
"121811154","11227902","2","Probably one of the best answer on the platform, thanks!","2021-08-25 02:51:16","2408863"
"43058477","26410745","23","I believe the second illustration is incorrect.
By the specification https://url.spec.whatwg.org/#url-writing 
A URL must be written as either a relative URL or an absolute URL, optionally followed by ""#"" and a fragment.
So, `#posts` fragment identifier could be part of the URL","2014-12-04 02:57:40","1300170"
"121815850","67637849","0","That might work, but in any case you will have to test it thoroughly. Behavior might depend on device manufacturer, your specific widgets layout and other factors. For example, on one of my devices [this method to show keyboard](https://developer.squareup.com/blog/showing-the-android-keyboard-reliably/) works well with GBoard, but disables SwiftKey completely. This is Android. :(","2021-08-25 06:00:33","9316168"
"75104783","34953875","0","@nawfal yes may be covered in other answers, though not concluded well in most of them.","2017-05-18 05:39:08","4576125"
"75105260","38549","18","@DanteTheSmith No, that suffers from the same problems as the diagrams here. See my comment above re the question & below re that very blog post: ""Jeff repudiates his blog a few pages down in the comments"". Venn diagrams show elements in sets. Just try to identify exactly what the sets are and what the elements are in these diagrams. The sets *aren't* the tables and the elements *aren't* their rows. Also any two tables can be joined, so PKs & FKs are irrelvant. All *bogus.* You are doing just what thousands of others have done--got a *vague impression* you (wrongly) *assume* makes sense.","2017-05-18 05:57:51","3404097"
"57640585","34950096","2","Question is asking for Difference between INNER and OUTER joins though, not necessarily left outer join lol","2016-01-22 07:32:48","4623674"
"57640640","34811153","1","If you're using GitHub, you might also want to push your changes to your GitHub branch.  `git push HttpsForYourForkOfTheRepo BRANCH_NAME`","2016-01-22 07:34:36","3731622"
"121822176","30131247","1","Thanks! `git reset --merge` helped after a failed `git apply --3way`, when the other answers didn't.  This seems to be because there is no MERGE_HEAD.","2021-08-26 12:42:35","1742632"
"43065512","15775364","11","I ended up just add the alias ""shoot"" into my .gitconfig
shoot = push origin --delete","2014-12-04 06:06:37","1966876"
"90748237","630453","0","The `JavaBrains` explains it very clealy. Have a look https://www.youtube.com/watch?v=rhTkRK53XdQ","2018-08-17 03:32:02","5465632"
"90751508","7056886","0","This is a little confusing.  Sitemap protocols ""supports URLs with less than 2048 characters.""  I imagined a site like example.com would work.  I think this question is more about the maximum?","2018-08-17 05:21:38","2430549"
"121823653","67474649","1","Most applications support JSON comments ""//"" now, but it is not universal.","2021-08-26 03:49:22","2290413"
"90753099","630453","0","Difference between [POST vs PUT](https://restfulapi.net/rest-put-vs-post/) methods should be described in defined context. Such as here, question is about REST, and it is actually about consistency and uniform interface. Till the time, you are honoring the API design consistency, you are good.","2018-08-17 06:22:08","820345"
"43071347","4089452","0","What file is this written to?  I thought the `.gitconfig` file would have it, but I didn't see it in mine.","2014-12-04 09:15:45","3522284"
"121824280","67637849","0","@gmk57 good to know thanks. So it sounds like it would be better to use a View in the activity's View hierarchy (usually I have access to `SomeBinding.root`). From a `Fragment`, just use `view?.hideKeyboard()`. However, I'm not seeing any benefit over using `context.getSystemService<InputMethodManager>()?.hideSoftInputFromWindow(windowToken, 0)`","2021-08-26 04:52:58","444761"
"90765901","67699","0","https://stackoverflow.com/a/7216269/480982 should be the accepted answer","2018-08-18 10:56:42","480982"
"75129950","43831317","0","I do believe it's subjective in regards to what you should/should not do, and misleading to tell someone to always use a particular action. While I agree than in most cases we care to use '===' vs. '==', there may be a particular case where you want the type conversion done. - Cannot think of an exact use case off the top of my head, but perhaps the design is to have a loose check. Regardless, if something is included in the language, it's there for a reason. We should try to avoid blanketing statements of 'always do x' in my opinion.","2017-05-18 03:45:51","6305055"
"75133976","43831317","0","I knid of agree with you, if you read my whole answer, you see I explain in more details later on,  to be honest there are not many cases we use and need loose comparation in Javascript... I can say less than 5 percent, even much less, but I use ´always´ for those people with no js background, which think == check strict comparation in JavaScript, they learn to be catious and not using it at first place, but as they get more expert, they know in which rare cases they might use it. That's why I write my answer like that.","2017-05-18 05:41:35","5423108"
"105747780","49194320","0","""[Are answers which merely summarize other answers acceptable?](https://meta.stackoverflow.com/q/300586/128421)""","2020-01-18 06:48:05","128421"
"43090083","10113231","4","This will overwrite any conflicts with the repositories files and not your local ones, correct?","2014-12-05 11:40:52","1720829"
"75138194","7310676","1","@Melad This is an example of a constant (0.5) being multiplied to the function. This is ignored as it is considered to have a meaningful effect for very large values of N.","2017-05-18 07:47:55","184528"
"43095546","13270340","1","@RRMadhav, indeed you won't see the deleted branch after deleting it since the reference to the remote branch will be removed for you locally. Anyone else on your team that has checked out that branch will still have that reference and will still see it unless they prune the branch.","2014-12-05 02:27:38","350644"
"13592564","72156","1","You may need to 'git remote update' before you 'git checkout -b experimental origin/experimental' for it to find a remote branch that's newer that your local repo.","2012-05-09 08:25:22","113076"
"43100607","20081966","0","@chhh then you need to extend this functionality to make this a variable instead of an assumption.","2014-12-05 04:44:44","8047"
"43102595","2798934","3","This will reset the current changes back to the last branch commit pulled.  Then git pull merges the changes from the latest branch.  This did exactly what I wanted it to do.. Thanks!","2014-12-05 05:42:09","468360"
"90786456","35472255","0","Unfortunately, I use --hard, and my files are deleted! I did not check the comment first because it is collapsed. Do not use --hard if you do not know what you are doing!","2018-08-19 01:53:17","6710360"
"105773073","59511454","11","You're just throwing darts, and this one not only missed the board, but almost hit the bartender.","2020-01-20 05:55:13","624814"
"105773195","59498318","0","Seems to work, although it's kotlin complicated. thanks","2020-01-20 06:02:01","624814"
"121873550","1145525","0","what to do in case-sensitive case","2021-08-27 11:03:33","15748278"
"43133073","25638420","7","Probably worth mentioning that instead of `HEAD~1` you could use the actual hash as displayed by `git log --stat` or by `git reflog` - useful when you need to 'undo' more than one commit.","2014-12-07 12:38:49","191246"
"43134026","14421438","0","in my case, I don't need step (1), as they automatically discard themselves, unfortunately not in pairs. Socks tend to disappear at a constant rate, normally about 2 months are enough to lose track of 10 pairs.","2014-12-07 01:54:46","1108397"
"43134136","14419556","0","About parallelism, I think we could also introduce **thread affinity** , so the involved multiple workers are in fact the different sock owners. Each of them should be more efficient at selecting their own socks, provided their tastes are not similar.","2014-12-07 02:05:13","1108397"
"43138231","4089452","1","@ayjay `´~/.gitconfig` is global to all `git` repositories, this here comes from the local config which usually is in `.git/config` (however for git-submodules the answer is a bit more difficult).  Note that `strace git config --get remote.origin.url` is your friend.","2014-12-07 09:10:04","490291"
"43138417","23682620","5","Note `git config --get remote.origin.url` retrieves the original URL which was set with `git remote add ...` or `git remote set-url ...` while `git ls-remote --get-url origin` retrieves the URL which is actually used to access the remote - which might be different in presence of `git config --global url.XXX.insteadOf YYY`.  **So both outputs may differ!**  Also note that `git ls-remote --get-url` (without `origin`) does not neccessarily retrieve `origin`, instead it shows the tracked upstream, so it will fail for example in detached HEAD state.","2014-12-07 09:27:02","490291"
"43138494","24396083","4","For `ssh` this only works in absence of `~/.ssh/config` which rewrites the hostname or alias.","2014-12-07 09:33:54","490291"
"121892239","12049323","0","@Lennon. Say you made a change, committed, and pushed it. You want both local and remote to appear as though this never happened. First 
`git reset --hard HEAD^`
You've now blown away all local changes from the last commit.
Then: `git push --force origin HEAD`
This takes the current HEAD commit in local and overwrites the HEAD in the remote, removing the last commit.
Note: This isn't a secure way to delete secrets accidentally pushed to a remote. Assume all secrets are compromised then
See caveats for '--force': https://evilmartians.com/chronicles/git-push---force-and-how-to-deal-with-it","2021-08-29 05:46:56","27963"
"121892378","22178776","0","Note: This only applies to your local repository. If you've pushed commits to a remote, just a reset locally will not change anything on the remotes. It is more complicated and dangerous and full of caveats to try to undo changes on a remote.","2021-08-29 06:04:14","27963"
"57719599","394814","325","The order may seems strange for coders however `f(x) = |x| = x if x > 0 else -x` sounds very natural to mathematicians. You may also understand it as do A in most case, except when C then you should do B instead...","2016-01-25 03:07:08","495769"
"121895614","68417609","1","This is a Django-specific feature where a nested class called `Meta` has a special meaning. The question is about an unrelated Python language feature with a similar name.","2021-08-29 10:40:21","4657412"
"90828846","38657362","0","Put could also be used for INSERT.  For example if you server detected you were trying to upload the same file multiple times, it would make your request idempotent.  (No new file uploads are done).","2018-08-20 10:46:20","2351948"
"121899841","40897192","0","I am working my way through the content about APIs specifically, REST or RESTful APIs. And, although there are many upvoted answers above, I find yours particularly interesting not because of the immediate content within this SO answer (although it is interesting as well) but, because of the video in your shared blog post. It is outstanding. Your insights on Level 3 / Hypermedia API after an actual implementation was invaluable. It certainly provides points for considerations while authoring APIs.","2021-08-29 03:20:35","1887854"
"90831246","932982","0","This is the best solution to this to the question as by design git doesn't allow you to store empty folders and .gitignore can make sure that it stays empty.","2018-08-21 02:22:22","494907"
"90835047","2765459","13","sometimes your need this `git push origin -u local_branch:remote_branch`","2018-08-21 06:28:29","947482"
"105810430","1628334","0","When using a --bare repository you might need to make sure that remote tracking is enabled or you might get a `fatal: ambiguous argument 'origin/master': unknown revision or path not in the working tree`. See  https://stackoverflow.com/questions/38981470/git-clone-create-a-bare-clone-but-with-remote-tracking-branches-for-a-worktre","2020-01-21 09:32:28","2017192"
"121904732","27153569","0","Downvoting. Localized computation is *almost* always the right thing to do. You should have to explicitly opt out of it if you don’t want it.","2021-08-29 08:45:05","109011"
"57732857","10757800","0","I just utilized `git revert commit-id` worked like a charm.  Of course then you will need to push your changes.","2016-01-25 09:07:16","3502119"
"121915287","68982424","0","This has already been suggested or mentioned in 18 other answers, and in the comments under the question. The compatibility considerations are easy to find on [CanIUse](//caniuse.com/?search=replaceAll) and [MDN](//developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/replaceAll#browser_compatibility). This is all mentioned in the accepted answer.","2021-08-30 10:27:28","4642212"
"121918374","68982424","0","well at first glance I didn't find anything mentioning older browsers and OLE implementations in legacy code. Just thought it might help someone no point of downvoting a helpful answer. You don't have to upvote either I just care that someone might find it useful. Thanks for your contribution nevertheless","2021-08-30 12:42:11","508134"
"105826816","58905771","0","Gmail's domain is not `@google.com`, it's `@gmail.com` or (for very old accounts) `@googlemail.com`","2020-01-21 05:36:49","11091039"
"90847546","932982","1","@GreenAsJade Yes good point, but sometimes this is exactly what is required. In My case this is for WordPress Plugins' cache folders (which need to exist as errors are thrown otherwise but you never ever want to commit any cache file).","2018-08-21 12:42:24","576746"
"90851541","246128","0","Probably it's not robust, for the link and no link aproach I do the following:

LINK=`readlink ""${BASH_SOURCE[0]}""`
if [ $? -eq 0 ];
then
	echo ""Link detected""
	export SCRIPT_DIR=""$( cd ""$( dirname ""$LINK"" )"" && pwd )""
else
	echo ""No link""
	export SCRIPT_DIR=""$( cd ""$( dirname ""${BASH_SOURCE[0]}"" )"" && pwd )""
fi","2018-08-21 02:16:39","4535300"
"90858921","35480588","2","Wont storing response be like maintaining a session? Which would cause (horizontal) scaling issues.","2018-08-21 05:57:34","5967859"
"90859557","48189442","0","Even you can rearrange the commit order. It works fine.","2018-08-21 06:16:48","596370"
"43180793","5189600","13","If you've already pushed the commits, you will need to push -f to forcibly move the remote branch to your new commit. This will upset anyone who was working on top of the old commits, though.","2014-12-08 06:31:21","402891"
"57756277","8860548","2","what is the difference between this (git checkout HEAD file/to/restore) and git reset --hard file/to/restore ???","2016-01-26 01:23:26","609285"
"105843150","55393395","0","IOUtils has a simpler function for that.","2020-01-22 08:29:46","6944068"
"121938857","17344732","0","The best would be to open the file, using try+catch and there is no time window.","2021-08-31 08:50:36","1427758"
"90876898","1125968","2","basically, only do a pull from develop after the initial checkout -b. do your work, then push back in.","2018-08-22 09:09:33","862973"
"57776289","388282","39","@G.Rassovsky on the accu.org website, there's a book reviews section with ratings. You can search for the C++ ones. Many of them are rated ""not recommended"".","2016-01-26 09:58:27","1506169"
"105856624","59213597","1","OP asked if there is any good CSS solution for that, not javascript.","2020-01-22 03:06:19","390946"
"105864613","348234","0","I have also added some files from a common library to the stage. Since, it is an angular app, so I had to use `git reset */commonlib/styles/*.scss` to locate all such files and it worked.","2020-01-22 07:22:56","2123151"
"121955528","7077","0","it is a bad practice for a language to have two different name for an exact same thing so i suggest microsoft to remove one of them","2021-08-31 07:38:19","5466135"
"121957544","5480292","2","The fact we're at 6700+ upvotes and that it is this freaking complicated probably means it could be redesigned.","2021-08-31 09:31:00","1836553"
"121963466","34757096","0","Excellent answer, it does explain clearly the differences! this should be the market answer for me.","2021-09-01 06:49:35","1162043"
"105872370","59661328","0","This doesn't remove the item from the array. It creates a brand new array with some items from the original array filtered out.","2020-01-23 02:09:59","111635"
"105874021","59661328","0","Yes it will return new array filtered. let me update code","2020-01-23 04:30:34","6631280"
"43223032","3950863","5","I think this answer touches the key point of understanding REST: what does the word **representational** mean. Level 1 - Resources says about *state*. Level 2 - HTTP Verbs says about *transfer* (read *change*). Level 3 - HATEOAS says driving future transfers via representation (JSON/XML/HTML returned), which means you've got known how to say the next round of talk with the information returned. So REST reads: ""(representational (state transfer))"", instead of ""((representational state) transfer)"".","2014-12-09 07:49:34","2073130"
"43223641","292357","32","Make sure you know how to use git stash correctly. If you're asking about 'pull' and 'fetch' then maybe 'stash' will also need explaining...","2014-12-09 08:09:04","2091579"
"121970059","73021","0","Maybe ""pass-by-sharing"" is even more precise and disambiguated? https://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_sharing Since it incorporates the reason why people resort to calling it ""pass-by-reference"" in the first place: the danger that functions are able to mutate objects passed in. They don't want to say ""pass-by-value"" as it implies copying and thus safety from mutating what's passed in.","2021-09-01 11:25:04","380607"
"43228384","17530055","5","Actually Git stash can have a title.  For instance `git stash save ""Feature X work in progress""`.","2014-12-09 10:39:11","994153"
"121983024","66110060","0","Or you could use the .Net convention of applying the `[Flags]` attribute and using `.ToString()` on the value. The separators will be commas instead of pipes. That is: [Flags] enum DemoFlags { ... } //...; return demoFlags.ToString(); But that doesn't answer the question about enumerating the values.","2021-09-01 07:46:10","1307074"
"121984763","14415881","0","Maybe you need to [sort the array](https://stackoverflow.com/questions/11227809/why-is-processing-a-sorted-array-faster-than-processing-an-unsorted-array) of socks first to achieve such speeds.","2021-09-01 09:17:34","15209993"
"121984881","68310404","0","Why do you think this is better than the multitude of answers using variations on `git reset`?  What does it do that `reset` does not?  What doesn't it do that `reset` does do?","2021-09-01 09:25:49","15168"
"57816963","3104376","23","If JSON is to have universal acceptance (which it basically does) then it should have universal application. Example: JSON can serve as an application configuration file. This application would desire comments.","2016-01-27 07:31:22","1010444"
"90923314","47285378","3","This is understandable, but one major difference is that you can have multiple yields in a function/method. The analogy totally breaks down at that point. Yield remembers its place in a function, so the next time you call next(), your function continues on to the next `yield`. This is important, I think, and should be expressed.","2018-08-23 01:27:21","3768749"
"122000735","73021","0","@Magne I've never understood why Liskov felt it necessary to coin ""call by sharing""; it's just passing the address/reference by value and following it in the function, and causes confusion. Some people didn't want to use the perfectly-correct word ""pointer"" (even though they used it in ""NullPointerException"" in Java...) There's nothing about the definition of ""pointer"" that says it must be implemented directly as a memory address (though it's easiest to think of it that way) - it's just indirect access to data. You don't pass the _object_ in Java; you pass a _pointer_ to an object.","2021-09-02 12:27:16","12541"
"57830769","16956810","8","`find … -exec <cmd> +` is easier to type and faster than `find … -exec <cmd> \;`. It works only if `<cmd>` accepts any number of file name arguments. The saving in execution time is especially big if `<cmd>` is slow to start like Python or Ruby scripts.","2016-01-28 05:16:24","601203"
"57831414","24323369","3","This is equivalent to `grep 'text-to-find-here'` without file name if `find` does not find anything. This will hang and wait for user input! Add `--no-run-if-empty` as an option to `xargs`.","2016-01-28 05:46:33","601203"
"57831491","24323369","4","This combination of find and xargs does not work as intended if file or directory names contain spaces (characters that xargs interprets as separators). Use `find … -exec grep … +`. If you insist on using find together with xargs, use `-print0` and `-0`.","2016-01-28 05:50:11","601203"
"122003418","73021","0","I think it is because people are not ""pointer-oriented"", but ""value/object-oriented"". The pointer is invisible to them. As you said _""The mistake they make is in the definition of `Dog d;` itself. When you write that definition, you are defining a pointer to a Dog object, not a Dog object itself.""_. Maybe because many languages make it invisible (like Java here), but it's common to humans to ""mistake the map for the territory"" in real life as well; in effect treating the symbol as the referent). ""Call by sharing"" takes this cognitive artifact into account, so the intention is clearer, to most.","2021-09-02 01:55:58","380607"
"43260188","18632808","0","Beware though, that the git ignored content will not retain it's original permissions!

Hence it can cause a security risk.","2014-12-10 06:06:10","449217"
"13743701","7359734","135","`MERGE` can also be used for ""Upserting"" records; that is, `UPDATE` if matching record exists, `INSERT` new record if no match found","2012-05-15 07:51:44","957950"
"122015125","47696235","0","```-d``` does not work for me. The terminal tell me to use ```-D``` instead","2021-09-02 11:25:17","11683537"
"57845275","16956844","25","You can replace / with path to directory `grep -Ril ""text-to-find-here"" ~/sites/` or use . for current directory `grep -Ril ""text-to-find-here"" .`","2016-01-28 12:19:30","1997088"
"13759049","452820","10","Interesting idea but the choice of syntax is absurd; I don't want a codebase full of question marks pinned into every joint.","2012-05-16 11:51:58","346741"
"43268736","18632808","0","@twicejr You're wrong, please read `git help clean` ""-d Remove untracked directories in addition to untracked files.""","2014-12-10 10:40:41","144020"
"13761075","9717217","4","In HTML5, most of the restrictions on IDs are lifted, so they can start with a number. The only restrictions now are that they must be unique and cannot contain spaces. See http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#the-id-attribute. Also, your solution modifies the URL and inserts a history entry, polluting the back button with useless states.","2012-05-16 01:07:52","94197"
"13761362","9717217","3","@AndyE yep, your right, I wasn't aware that id's could start with numbers, also this solution was never meant to be any good or recommended, I added it for ""completeness sake"" on the number of ways to do it.","2012-05-16 01:16:26","175071"
"57850867","30479554","1","While reading the link in @Jim s comment I noticed a note that mentioned let working in Firefox 44.","2016-01-28 02:25:28","2647442"
"13771066","138934","7","Can someone explain the reason why this answer has so many downvotes?","2012-05-16 07:36:15","175071"
"13781243","8888015","22","Watch out! If you have local unpushed commits this will remove them from your branch! This solution keeps untracked files not in the repository intact, but overwrites everything else.","2012-05-17 08:18:25","34103"
"13781317","2798934","0","Lloyd Moore's suggestion is correct, but beware that it can remove local unpushed commits from your branch.","2012-05-17 08:23:04","34103"
"57854901","27458534","0","Pretty sure a lot of your JOIN results have too many green rows.. that first INNER JOIN should only have 2 green rows for example. In fact pretty much all the cases where you have 4 green rows consecutively should all only be 2 rows.","2016-01-28 03:47:01","1051628"
"57855215","27458534","16","@Arth - Nope you're wrong. SQL Fiddle http://sqlfiddle.com/#!3/9eecb7db59d16c80417c72d1/5155 this is something the Venn diagrams can't illustrate.","2016-01-28 03:54:10","73226"
"90959980","8876254","9","since you `import os`, you do not need to `import os.path` again as it is already part of `os`. You just need to import `os.path` if you are only going to use functions from `os.path` and not from `os` itself, to import a smaller thing, but as you use `os.access` and `os.R_OK`, the second import is not needed.","2018-08-24 01:10:26","1590024"
"122025803","9494042","1","This doesn't work correctly. It some times shows the keyboard.","2021-09-03 11:30:33","10365380"
"90965843","10976934","3","Removing comments is a 'BAD IDEA'. As the comment is also data for the person reading it,removing them because they are not data is a bad argument. In addition, it can be argued that all comments in any language, specification file, config file, etc are data. Just because it is not intended for the machine it does not mean it's not data.","2018-08-24 03:41:37","85334"
"122036103","2932827","0","Extremely outdated now.","2021-09-03 07:02:16","6025788"
"90969090","51724500","4","Please don't post pictures of code, it's considered bad practice on SO as it will not be searchable for future users (as well as accessibility concerns). As well, this answer adds nothing that other answers haven't already addressed.","2018-08-24 05:29:59","2212678"
"122039210","27965515","0","Your examples are slightly contrived, but only slightly. I would consider both to be indicative of design problems, but in legacy code it's quite conceivable.","2021-09-03 10:47:21","3419534"
"122042076","11828270","0","This question and thread are very helpful (and answered my question), but it's a shame that Vim is so hard to figure out, that people have to resort to using a search engine, and a 3rd party website, to figure out how to get Vim to do something as simple as quitting without saving.","2021-09-04 06:15:07","1332729"
"90971364","215731","1","Note for windows users: A relative path was not sufficient, I had to include the full path e.g. `/d/Repos/MyRepo/Folder1/Folder2/FileIWantToCheckout.json`","2018-08-24 06:57:09","284743"
"122048090","73021","0","@Magne Pointers are a key concept in programming; trying to word one's way around them is a sure way to cause more confusion, not less.","2021-09-04 02:30:33","12541"
"122053412","73021","0","I can see how that might be the case, when coming to Java from a lower level language where you do have to deal with pointers. But coming from a higher level language, or from no previous language, it’s the other way around. Esp. if working in a language where you don’t directly deal with pointers.","2021-09-04 09:19:44","380607"
"43310788","15775364","0","If your origin is a Atlassian Stash and the branch is set as the default, you will get an error ""By default, deleting the current branch is denied..."". I had to change the default branch in Stash to point to another branch before I could delete.","2014-12-12 12:29:35","1148240"
"43311452","826782","10","There a bug in some browsers where doing ""Select All"" (CTRL+A and CMD+A) still selects things. This can be fought with a transparent selection color: 

`::selection { background: transparent; }
::-moz-selection { background: transparent; }`","2014-12-12 01:03:56","2852590"
"122061754","50391764","0","Not half the answer.","2021-09-05 01:15:14","9437799"
"90992877","51522896","0","I'm not sure it's technically correct to mention that copies are made for primitive types. Primitive types are immutable which is why they cannot be modified inside a method they are passed to.

The difference is negligible for things like numbers, but there is an important difference for potentially large strings.","2018-08-25 09:08:34","423941"
"57901556","18048546","2","It's the lower right portion of the Windows Git Gui. Just select the 'Amend Last Commit' toggle, and it will populate with the most recent commit info.","2016-01-29 04:51:33","633714"
"91013497","555","0","SRP is specific to the presence of several parties if I understand well","2018-08-27 01:28:11","9817602"
"91013558","477578","0","""When a lost password code is requested, send the plaintext code to the user's email address"" you are not supposed to store the plain password in database","2018-08-27 01:34:32","9817602"
"43338896","25887881","5","but OP said: ""good ol' fashioned JavaScript - no frameworks allowed""","2014-12-12 06:51:31","731947"
"57915065","19286984","3","Update => HTTP POST : POST is not for updating","2016-01-30 12:57:59","1697099"
"57916123","246128","3","By convention, environment variables (`PATH`, `EDITOR`, `SHELL`, ...) and internal shell variables (`BASH_VERSION`, `RANDOM`, ...) are fully capitalized. All other variable names should be lowercase. Since 
                variable names are case-sensitive, this convention avoids accidentally overriding environmental and internal variables.","2016-01-30 02:16:59","5649859"
"57916174","59895","63","I stronly suggest to read this [Bash FAQ](http://mywiki.wooledge.org/BashFAQ/028) about the subject.","2016-01-30 02:22:03","5649859"
"122096737","4591639","0","Fails for objects with Circular properties","2021-09-07 06:27:29","7724205"
"106021972","50930429","1","If the spec stated that ""a line beginning with # is a comment"", then that would be _fully interoperable._ As it stands, comments both load the parser space, as they are valid **parsed items** rather than understood to be comments, and they can be different for every .json file in existence. Whereas if (for instance) the spec said ""lines beginning with # are comments"", then the parsers could skip those lines without parsing (faster) and not load the parser space (better memory utilization.) There's no benefit at all from the lack of comments in .json, only downsides.","2020-01-28 02:41:48","599484"
"57939546","35109320","1","The `@{upstream}` syntax requires upstream to be set which happens by default if you `git checkout <branchname>`. – Otherwise replace it with `origin/<branchname>`.","2016-01-31 01:31:08","825924"
"57939591","35109320","0","Add `-x` to `git clean` to remove everything not in the commit (i.e. even files ignored with the .gitignore mechanism).","2016-01-31 01:34:28","825924"
"122112414","40897192","0","@MuhammadTalhaAkbar thx, appreciate your upvote","2021-09-07 04:39:54","442773"
"122117699","273227","0","I don't know why the docs of `mkdir` not tell me what the params meanings.","2021-09-07 08:56:19","3907561"
"13873578","9835461","3","There is no ""lookcurrent"" in perl regexp's. This is truly a negative lookahead (prefix `(?!`). Positive lookahead's prefix would be `(?=` while the corresponding lookbehind prefixes would be `(?<!` and `(?<=` respectively. A lookahead means that you read the next characters (hence “ahead”) without consuming them. A lookbehind means that you check characters that have already been consumed.","2012-05-21 04:35:40","525036"
"122120011","903152","0","The question specifically requests for a jQuery solution.","2021-09-08 12:15:58","1897036"
"122120049","4464316","0","you _can_ use the css class, as long as you keep in mind that css classes aren't meant to be unique. If you want to respond to changes in a single element then ID would be the preffered way to go.","2021-09-08 12:20:10","1897036"
"57960741","15315403","1","@VladLifliand How exactly would a UTF-8 character manage to span across several lines? That's impossible by definition. You probably meant something else.","2016-01-31 10:05:01","3554264"
"122125467","6620071","1","Incredible answer. Thank you.","2021-09-08 07:39:26","7757908"
"43385186","5407529","0","@DaveRager in this case, though, the obsolete answers are not only obsolete, but also completely redundant since the accepted answer covers their content fine already. There's no point in updating an obsolete answer if afterwards it will still not be useful.","2014-12-14 11:43:22","1709587"
"43385255","11177092","3","This doesn't answer the question (the question is about *setting* whether a checkbox is checked, not determining whether a checkbox is checked). It's also a pretty ugly way of determining if the checkbox is checked (for one thing, you're exploiting the non-self-evident fact that `.val()` will always return `undefined` when called on 0 elements to detect that a jQuery object is empty, when you could simply check its `.length` instead) - see http://stackoverflow.com/questions/901712/check-checkbox-checked-property-using-jquery for more readable approaches.","2014-12-14 11:47:58","1709587"
"13881548","487300","7","This doesn't explain very well that O(n^2) could be describing an algorithm that runs in precisely .01*n^2 + 999999*n + 999999.  It's important to know that algorithms are compared using this scale, and that the comparison works when n is 'sufficiently large'.  Python's timsort actually uses insertion sort (worst/average case O(n^2)) for small arrays due to the fact that it has a small overhead.","2012-05-21 11:14:36","936083"
"43387051","27476145","0","But *what is* this email parser function? Could you post it so that one can use it without angular?","2014-12-15 02:07:32","1048572"
"122129596","1109022","0","Are you serious with that? Can't simply hide the keybord at any point just if you want to? It doesn't mater if you have many buttons, or text, or a huge screen, to ask Android to hide keybord must be a single instruction :S","2021-09-08 10:25:39","12199158"
"122129885","1109108","0","@capo11 I tried with Application.Context.getSystemService(), so I didn't need the serviceClass, but it doesn't work","2021-09-08 10:37:20","12199158"
"122131063","14220321","0","use deasync like this
https://stackoverflow.com/a/47051880/2083877","2021-09-08 11:26:35","2083877"
"122136567","48569389","0","I think this is the fast of above all functions","2021-09-08 02:33:29","5962938"
"122141875","2432799","0","Note: if you're getting 403 forbidden, follow this tutorial: https://janac.medium.com/pushing-to-git-returning-error-code-403-fatal-http-request-failed-bcdcb5c0732","2021-09-08 06:10:34","1502439"
"122141879","19298943","0","Note: if you're getting 403 forbidden, follow this tutorial: https://janac.medium.com/pushing-to-git-returning-error-code-403-fatal-http-request-failed-bcdcb5c0732","2021-09-08 06:10:38","1502439"
"43405048","5407529","2","@MarkAmery you mentioned that my post added nothing at the time of post but that is in accurate. If you look at the history of the accepted answer you'll find they suggest removing the element. Which makes it impossible to reset the form, which was why I posted to begin with.","2014-12-15 02:50:10","234670"
"122145184","27664932","0","Do I need to do a git pull after this, per @Asclepius , or is doing so redundant?","2021-09-08 09:02:33","7453"
"122145418","31298778","1","return $b <=> $a; // for reversing order","2021-09-08 09:18:46","4646323"
"122146498","950146","0","Which one of these solutions could be used in ES3?","2021-09-08 10:38:27","14067569"
"43409647","5407529","1","@mcgrailm I've gone ahead and modified the accepted answer in light of your remarks. If you'd like to cast an eye over it and check that it looks good in its current state, I'd appreciate that. My apologies again for offering up sharp criticism that was, at least in part, highly misguided.","2014-12-15 04:54:38","1709587"
"43412776","19971153","3","-​1; this adds no value at all to an already bloated thread. The code here is exactly the same as the accepted answer.","2014-12-15 06:25:36","1709587"
"43412889","17666910","4","-​1 for being a code-only answer, not answering the question directly, and adding nothing that other answers hadn't already covered.","2014-12-15 06:28:39","1709587"
"43413032","18266967","0","-​1; mixing jQuery selectors like `$(""#check"")` with raw DOM API calls like `document.getElementsByTagName(""input"")` seems inelegant to me, especially given that the `for` loops here could be avoided by using `.prop()`. Regardless this is yet another late answer that adds nothing new.","2014-12-15 06:33:08","1709587"
"43413466","8743292","0","@chris97ong I've rolled back your edit; when someone says ""Don't use the code below because it doesn't work"", *fixing* that code while leaving the comment saying that it doesn't work is harmful - especially when it breaks the explanation in the comments of *why* the code isn't working. That said, this answer is still somewhat confused and deserves a downvote for the reasons given by tpower and ShadowWizard.","2014-12-15 06:46:12","1709587"
"43416016","932982","16","Unfortunately, this results in a non-empty directory, it has a single hidden file.","2014-12-15 08:09:24","945742"
"43416141","18862362","0","@MarkAmery The accepted answer does not cover how to do it without jQuery. My answer adds supplementary benefit to the accepted answer.","2014-12-15 08:12:47","1399491"
"57986510","8963158","15","This will tend to work across almost all DBMS which means learn once, execute everywhere.  If that is more important to you than performance you might prefer this answer, especially if your update is a one off to correct some data.","2016-02-01 02:46:33","463967"
"43418120","394809","36","""ternary"" (having three inputs) is a consequential property of this impelmentation, not a defining property of the concept. eg:  SQL has `case [...] { when ... then ...} [ else ... ] end` for a similar effect but not at all ternary.","2014-12-15 09:14:24","4211741"
"43418299","394809","14","also ISO/IEC 9899 (the C programming language standard) section 6.5.15 calls it the ""the condtitional operator""","2014-12-15 09:20:22","4211741"
"13908865","7077","179","If you decide to use StyleCop and follow that, that will say to use the types specific to the language. So for C# you'll have string (instead of String), int (instead of Int32), float (instead of Single) - http://stylecop.soyuz5.com/SA1121.html","2012-05-22 10:36:15","128444"
"122158033","1274447","0","Matt's answer below is better as it does not require specifying the name of the files you want to update.","2021-09-09 11:28:26","2037431"
"106070172","39789894","0","Caret both freezes the major number and will update you to the most recent major version (the first number)? The major number is the first number, so this doesn't make sense.","2020-01-29 11:57:40","8888320"
"122164494","31298778","0","@bytepan right you are. I updated the comment 😉","2021-09-09 03:16:01","1878262"
"122165978","11828270","0","I couldn't figure out how to open a file for editing. So, I used the -y argument because the --help said that it would make VIM easy.  Now, ESC does nothing. ^C does nothing. : just types a colon.  ESC ESC ESC : just types a colon.
All I could do was kill the terminal.","2021-09-09 04:14:43","4054539"
"122166265","509295","0","@James_ ```a[-1]``` isn't slicing, it's indexing, which is why it returns the last object in the list, instead of the sublist containing only the last object in the list, which is what ```a[-1:]``` returns.","2021-09-09 04:27:47","6394617"
"122166482","509295","1","@mLstudent33, ```a[:2:-1]``` does not specify a ```START```, but specifies that you want to index in reverse and ```STOP``` at index 2 (not inclusive), so it will return all but the first three elements, in reverse order (i.e. ```a[-1], a[-2],...,a[3]```).  ```a[1::-1]``` specifies the ```START``` at index 1 (inclusive), does not specify a ```STOP```, and specifies that you want to index in reverse, so it will return the first two entries in the list, in reverse order (i.e. ```a[1], a[0]```).","2021-09-09 04:37:25","6394617"
"13923505","10701801","35","This is a useful anti-spam trick, but I would suggest using a field name other than 'email', or you may find that browser auto-fill's fill it in, inadvertently blocking genuine users of your site.","2012-05-23 01:18:53","140293"
"13924244","10701801","1","I already noted that in the Warning section, but yeah that's true.","2012-05-23 01:43:58","192310"
"43424951","12184274","3","use **-dff** if the untracked directory is a git clone.","2014-12-16 02:52:30","909009"
"43431979","14345010","6","This is what I was looking for. My own shell function alias didn't work (Unexpected EOF) and I couldn't figure out why, but this works great! The only change I made was replacing `&&` with `;` so that even if the first command fails the second will still execute (sometimes only local or only remote exists).","2014-12-16 08:55:29","1021726"
"106080488","20241145","0","There are instances in which you want to push clean files to a repo, then disable change tracking so that users can edit them on their machine. One example would be appsettings files for ASP.NET applications.","2020-01-30 09:56:18","1677682"
"106083253","394814","0","Go doesn't have ternary operator, bro.","2020-01-30 11:18:05","3788340"
"58009186","10999165","16","I would suggest using -d instead of -D because it is safer. If -d fails due to unmerged commits then you need to assess that and if it is definitely OK to remove then use -D.","2016-02-02 03:47:57","1751497"
"43442508","4701836","19","Actually, it should be `POST /users`. (Note that `/users` is plural.) This has the affect of creating a new user and making it a child resource of the `/users` collection.","2014-12-16 01:54:53","1497596"
"43442868","7866699","0","@Coulton: And `PUT` can also be used to *replace* the value of an *existing* resource in its entirety.","2014-12-16 02:02:34","1497596"
"43443148","630471","2","It should also be made clear that `PUT /items/42` is also valid for *creating* a resource, *but only if the client has the privilege of naming the resource*. (Does Rails allow a client this naming privilege?)","2014-12-16 02:10:00","1497596"
"122180958","14220321","6","@SunilKumar I don't think this is useful. OP made this question and self-answer to document how to get the response from async calls. Suggesting a 3rd party module defeats such purpose, and IMO the paradigm introduced by that module is not good practice.","2021-09-10 09:14:18","3670132"
"58019353","23839198","11","It would be better to use \0 as separator:
`git ls-files --ignored --exclude-standard -z|xargs -0 git rm --cached`","2016-02-02 10:05:42","2922675"
"13955831","7244456","2","I +1'ed this answer because it probably accomplishes what the question author actually needed.  But I'm in the same situation and am curious:  is there any way to actually ""pull"" from the main repo into my fork?  Or will the upstream fork only be updated if I push back up to it after fetching from upstream?","2012-05-24 04:06:07","160955"
"58024261","34511442","2","For me this is the best solution. It has much better performance than a `git add .`. It also contains the best improvements from some comments above.","2016-02-02 12:08:07","2922675"
"58025603","114549","0","CSS `margin:0 auto` will not work when the div has `position` property other than `relative`, like in the case of `position:absolute`","2016-02-02 12:37:35","2614847"
"122194922","3840321","0","This is a great answer!","2021-09-10 07:45:12","3986879"
"122197131","40523","0","@Sanjeev that finally made sense. Pass by reference or by pointer means to pass the reference itself, and not a copy of it. Passing a reference in a pass by value only language, is not pass by reference, it is pass by value.","2021-09-10 10:24:54","2715384"
"122202030","8809472","0","i am new to javascript. when I run the ES6 version with node 14, i get `ReferenceError: performance is not defined`. How do i fix it?","2021-09-11 08:41:36","11814996"
"106125455","50113060","1","To keep the commit messages too, you can just to git log before and copy them to a text file. Then later add all of that to the new message :)","2020-01-31 04:12:37","10313894"
"58039688","11620938","0","@DanubianSailor - I don't think it does...it seems to return primitives right away from the start, and doesn't seem to be doing anything to them that would turn them into wrapper objects as they are returned.","2016-02-02 06:06:42","1293622"
"122208757","1985476","0","@Adrien: I beg to differ: if `x` is negative, UB only happens when `x == INT_MIN`, at least `x - INT_MIN` iterations occur before this... Conversely, if `x` has an unsigned type, no undefined behavior happens for arithmetic operations: they are computed modulo 2 to the power <number of bits of the type>.","2021-09-11 05:27:52","4593267"
"91148531","630475","0","""*You do not need to support both PUT and POST,*"" is followed by, ""*If the URL is not yet created, you should not be using POST to create it while specifying the name... You should PUT the <new_question> resource on the server first.*"" Perhaps, ""*You do not need to support POST if you support PUT*""? Or is @SynackSA [on to something](https://stackoverflow.com/questions/630453/put-vs-post-in-rest/630475#comment83681818_630475)?","2018-08-30 02:05:20","1028230"
"122212734","53203953","0","@CodeManiac there are so many languages and letters except [a-z]","2021-09-11 11:20:05","724015"
"43485109","11444416","68","`let` block expression `let (variable declaration) statement` is non-standard and will be removed in future, https://bugzilla.mozilla.org/show_bug.cgi?id=1023609.","2014-12-17 02:51:12","368691"
"43485746","16957078","1","Doesn't work when trying to find something like  ""foo@email.com""    it will return for ""email.com"" but as soon as you throw the (At) [@] symbol in the string, grep chokes and returns zip.","2014-12-17 03:07:59","3504007"
"13984219","4199917","20","Ubuntu 12.04 has this by default","2012-05-25 05:52:09","1048087"
"43488432","52713","0","""git checkout path/to/file/to/revert"" what I have to add if I am on branch, and want contents of file to be replaced by last revision of that file on branch.","2014-12-17 04:13:50","279611"
"91165382","20241145","0","This won't help me solve, my case is files was staged and pushed to remote.
So this solution is temporary remove the files from my view, but if files were changed again, it will come back to my unstaged view.","2018-08-31 01:14:06","603324"
"91176118","2432799","0","In the case of ssh, you will get the URL in your repo. You have to use exactly the same, unless that it doesn't work.
expl: git@github.com:reponame.git","2018-08-31 09:51:27","4363801"
"91176348","22345808","3","I have edited this answer to correct the explanation. Instead of complaining about a wrong answer in its comments, please DO SOMETHING about it next time!","2018-08-31 09:58:00","70345"
"58070686","23021801","0","Ad. 4. It is not very useful - when you check if a pointer is null, you probably want to call a method on it. Calling a method on null gives you the same behavior - NullPointerException.","2016-02-03 12:18:50","718590"
"58070988","23031015","0","The solution with ""hasBackground()"" has one drawback - it's not thread-safe. If you need to call two methods instead of one, you need to synchronize the whole sequence in multi-threaded environment.","2016-02-03 12:26:12","718590"
"122231451","18168814","0","Do you recall the source for where you found this? Was it Wikipedia or somewhere else? It is okay if it is Wikipedia! I am not trying to be difficult about attribution but rather, I am asking because your answer [is different than this one](https://stackoverflow.com/a/28428970/321143), and I think that your answer is correct.","2021-09-13 05:27:13","321143"
"58079152","23031015","0","@pkalinow You made a contrived example only to point out that this solution has a drawback. If code is not meant to run in multithreaded application then there is no drawback. I could put at you probably 90% of your code that is not thread safe. We're not speaking here about this aspect of code, we're speaking about design pattern. And multithreading is a topic on its own.","2016-02-03 03:29:59","2000185"
"14007512","7354651","47","`WHERE EXISTS(SELECT T1.Col1, T1.Col2 EXCEPT SELECT T2.Col1, T2.Col2))` is more concise.","2012-05-27 09:44:34","73226"
"122240484","68185836","0","3.9 introduced the pipe operator for dictionaries to do exactly this. why are you using a dict comprehension?!","2021-09-13 12:33:33","4298200"
"91198420","26335110","0","https://docs.python.org/3/library/os.path.html#os.path.exists  **To the above statement from chris** >>os.path.exists(path) > Return True if path refers to an existing path or an open file descriptor. Returns False for broken symbolic links. On some platforms, this function may return False if permission is not granted to execute os.stat() on the requested file, even if the path physically exists.

Changed in version 3.3: path can now be an integer: True is returned if it is an open file descriptor, False otherwise.

Changed in version 3.6: Accepts a path-like object.","2018-08-31 11:24:22","1896134"
"122243783","36368012","0","+1, very concise answer. But it should be noted/added that with WSL2 and Windows running a ""true"" Linux kernel, Hyper-V is not required anymore and containers can run natively. This has notable effects in particular with respect to performance.","2021-09-13 02:32:09","1753435"
"122244184","8809472","1","@NaveenReddyMarthala Node.js by default runs JavaScript in strict mode, which unfortunately doesn't allow boolean logic operators to shorthand check the truthiness of `undefined` variables.  To fix this, try replacing `var d2 = (performance ..` with `var d2 = (typeof performance !== 'undefined' ..` as in the update version.  The other option (which will actually utilize the enhanced precision of performance with Node.js rather than throwing it away) is to re-add `const { performance } = require('perf_hooks');` in your requirements.","2021-09-13 02:47:53","508537"
"58094585","13486116","0","@Notinlist Not so. If the script is found via the `PATH`, `$0` will contain the absolute filename. If the script is invoked with a relative or absolute filename containing a `/`, `$0` will contain that.","2016-02-03 10:08:15","381619"
"43529637","25717627","0","don't use inline click events. Bad practice and is not going to be supported in future iterations of all web browsers.","2014-12-18 04:54:29","2576539"
"58113391","23031015","0","Of course in a single-thread application it's not a problem. I've given that comment because sometimes it is a problem.","2016-02-04 10:34:10","718590"
"91210018","2590013","17","I tend to agree with Stijn de Witt. JSON is meant to be viewed and edited with a text-editor.","2018-09-01 03:59:36","1639918"
"122270168","8809472","0","Thanks @Briguy37","2021-09-14 01:54:40","11814996"
"91210151","477819","6","Imagine I have a document written by somebody which contains plain text. Now that plain text just happens to be valid JSON as well. Would I then be wrong to use text/plain as its mime-type? JSON is a SUB-TYPE of text. So I think both should be allowed. The question is which works better in practice. According to comment by codetoshare IE has problems with application/json.  But no browser should have problems with text/plain. If text/plain is unsafe then how can I serve text-files from my web-site?","2018-09-01 04:08:08","1639918"
"58114436","23031015","0","@pkalinow If you study this topic closer you will find out that Null Object design pattern won't fix the multithreading problems. So it's irrelevant.
And to be honest, I've found places where this pattern would fit in nicely, so my original answer is a bit wrong, actually.","2016-02-04 10:57:44","2000185"
"122272582","15789709","0","+1

Sometimes, it's good to just get a short one-liner like mentioned in this answer: ""In short, use this 'if __name__ == ""main"" ' block to prevent (certain) code from being run when the module is imported."". This is useful. Thanks!","2021-09-14 03:17:45","4726668"
"122276487","40493600","0","How do I destructure if the property name varies, i.e if I have it in a variable?","2021-09-14 06:02:50","12451222"
"43545462","244858","1","We can to select more unique comment keys format for this. Something like `{""<!-- glossary -->"": ""Comment text""}` looks ok. `""/* glossary */""` too.","2014-12-19 04:21:00","2110496"
"122283054","359509","0","Why would you ever need to use `-0`?","2021-09-15 02:06:29","1492485"
"122284062","57880896","0","Should be the accepted answer in September 2021!","2021-09-15 04:00:47","7660196"
"106203558","18243587","0","upvoted! curious question when you do insert on conflict do nothing, i am guessing post is what should be used since put would actually replace it","2020-02-04 04:02:17","5371505"
"122286474","61754517","0","@GlennMaynard - No, you check for file existence because you want to do something with the file (maybe read it, maybe create one). Having a like-named directory is a problem. You usually want to test both to avoid bugs.","2021-09-15 06:54:01","642070"
"122286514","82831","0","`my_path.exists()` is not sufficient. `my_path.is_file()` will tell you if its a file (could be good for reading). But if you want to create the file, you also have to check `exists` so exclude directories or other non-file things in the file system that will cause the fail.","2021-09-15 06:56:10","642070"
"91233931","630475","0","does idempotent mean that if a ressource already exist and is similar the PUT method preserve some ressource by overcome the point and go directly to the next point ? A kind of optimize save in other word","2018-09-03 12:44:08","9817602"
"58129889","52704","0","See also http://stackoverflow.com/questions/22620393/various-ways-to-remove-local-git-changes","2016-02-04 05:11:22","819417"
"58138452","34334339","0","Oneliners? Sure, extremely inefficient? No, regex is not cheap.","2016-02-04 09:08:11","1273239"
"122305702","40493600","0","See this answer below; https://stackoverflow.com/a/52301527","2021-09-15 07:48:36","189431"
"58148390","72156","0","**git checkout experimental origin/experimental** here drop ""-b"" and it will cover your need in one step","2016-02-05 05:05:23","2007944"
"43579243","27458534","55","I will say that while this doesn't work for me nearly as well as the Venn diagrams, I appreciate that people vary and learn differently and this is a very well presented explanation unlike any I've seen before, so I support @ypercube in awarding the bonus points. Also good work explaining the difference of putting additional conditions in the JOIN clause vs the WHERE clause. Kudos to you, Martin Smith.","2014-12-20 04:48:36","712765"
"43583640","27458534","26","@OldPro The Venn diagrams are OK as far as they go I suppose but they are silent on how to represent a cross join, or to differentiate one kind of join predicate such as equi join from another. The mental model of evaluating the join predicate on each row of the cross join result then adding back in unmatched rows if an outer join and finally evaluating the where works better for me.","2014-12-20 11:05:32","73226"
"43584473","19095988","83","It would be nice to have this as a standard git command. Something like `git rmignored`.","2014-12-20 11:59:05","439096"
"122309030","22610401","0","This comment worked for me, thank you!

`git checkout -b local_branch_name origin/branch_name`","2021-09-15 11:39:28","11062345"
"106231301","419185","6","Extremely minor point, but I believe python actually determines the `__name__` of an imported module from the import statement, not from stripping "".py"" off the filename. Because python identifiers are case sensitive but file names may not be (e.g. on windows), there isn't necessarily enough information in the filename to determine the correct python module name.","2020-02-04 08:43:56","450128"
"106233364","105421","1","@Barabas why not just do `Suits suit in Enum.GetValues(typeof(Suits))` ?","2020-02-04 10:15:05","9216472"
"43594277","27458534","19","The Venn diagrams are good for representing Unions and Intersections and Differences but not joins. They have some minor educational value for very simple joins, i.e. joins where the joining condition is on unique columns.","2014-12-20 10:28:49","344949"
"43594716","5036460","3","+ is unary mathmatic in this case.  typeof (+new Date()) evaluates to ""number"".  Basically it's shorthand for new Date().valueOf() -- without the javascript function call.  But don't write it this way, it looks like a typo.","2014-12-20 10:58:16","314752"
"106237799","41426583","6","are you sure about that output?  wouldnt that only be printed on a single line if you ran that print statement using `print(i, end=' ')`?  Otherwise, i believe the default behavior would put each number on a new line","2020-02-05 04:05:56","9074332"
"106248924","105421","0","@themadking oh, man! of course, using exact type looks better than this monstrous piece of _sh..._ code!","2020-02-05 11:41:44","2674033"
"122319542","1274447","0","**DOUBLE WARNING** It DOES delete the file locally, if you happen to have a stash with the file created from before, apply it and abort the merge by choosing 'Delete'. You may assume it only deletes the index, but it deletes the file.","2021-09-16 10:35:26","1052284"
"106249214","9180445","0","This is an amazing thing that I somehow didn't know up until now. Thank you, my good Sir.","2020-02-05 11:51:28","5234725"
"106250536","35152521","0","What I meant was that join is only an intersection of inputs when it is a natural inner join of inputs with the same columns. You are using the words ""intersection"" & ""union"" wrongly.","2020-02-05 12:34:46","3404097"
"91279596","51787897","2","Don't forget toLowerCase() the remainder of the word. Passing a word in all caps to this current solution would keep it in all caps.","2018-09-04 11:19:15","1510454"
"106255539","41426583","1","@user9074332, You're right, but it is written on one line to facilitate understanding","2020-02-05 02:58:14","5770004"
"91286491","6581949","1","@RenéNyffenegger Yes, you can have a metaclass of a metaclass of a metaclass","2018-09-04 02:10:08","3424423"
"14109678","60014","7","And in Busybox ash with default compilation options `[[ ]]` is supported, but doesn't in fact provide any different functionality to `[ ]`. If portability is a concern, stick with `[ ]` and use the necessary workarounds.","2012-05-31 03:34:48","272427"
"106261540","57510571","2","I agree with this suggestion, especially if you are not entirely comfortable with the git commands listed. This may be slower with more ""toil"", but if it doesn't come up much and you are concerned with losing your work, it's worth the effort.","2020-02-05 06:06:17","195395"
"91290795","67458","0","`IFS=""\t\n""` helps a lot in shell scripts when dealing with spaces in filenames/dirnames (where \t is an actual tab character and the \n is an actual LF, so this occupies two lines in the script :)","2018-09-04 03:59:41","6899"
"91290920","59969","1","@dolmen the `[ -d ""$DIR"" ]` is checked (followed by `&& echo Yes`), so I believe `set -e` makes no difference to the script behaviour (i.e if the test fails, the script continues normally).","2018-09-04 04:03:54","6899"
"14112086","246128","0","@ryran: yes, but beware that you cannot portably expect `local a=$x` or `export a=$x` to work the same way. I'm not sure about `a=$x foo`, where foo is some command or builtin, but I suspect that you can't portably rely on the assignment behavior you describe there either.","2012-05-31 05:21:15","272427"
"43617599","7077","47","Visual Studio 2015 says that String.Format should be changed to string.Format, so I guess Microsoft is going that way. I have also always used String for the static methods.","2014-12-22 05:21:27","1806780"
"122334245","122704","0","Lodash has deprecated per method packages: https://lodash.com/per-method-packages","2021-09-16 08:22:00","7503963"
"14113335","470376","20","It should be noted that what's within the `[]`s can be an arbitrary expression. Also, for safety you can explicitly test for truthiness by writing `[bool(<expression>)]`. The `bool()` function has been around since v2.2.1.","2012-05-31 06:20:15","355230"
"122335155","16317405","0","This was what I needed to prevent actual selection rather than just preventing the display of selection.","2021-09-16 09:12:43","2258390"
"122335349","927386","0","I keep forgetting, googling, and coming back to this answer.  I'm done! `git config --global alias.undo 'reset --soft HEAD^'` lets you just type `git undo`.  There are other answers with other reasons listed below, but this is by and far the most used one for me","2021-09-16 09:23:14","312072"
"122335381","59839","0","On the vein of teach a man to fish I rarely see anyone suggesting checking `man test` in the comments. Since it describes each test option I would suggest reviewing it as a fast way to determine comparisons you can perform.","2021-09-16 09:25:32","10317473"
"106270277","2590281","1","@skofgar In your scenario (clients know the ids and drive the creation). What about PUT to create and PATCH to partially update? You save some bandwidth and PATCH could fail if the resource is deleted.","2020-02-06 12:56:51","702199"
"14119751","246128","0","@dubiousjim: Hmm. What do you mean ""*portably* expect""? I don't see how you'd have any trouble with any of it -- local/export, whatever. It all works in every version of BASH (and we're only talking about BASH here).   

As far as ""`a=$x foo` where foo is some command or builtin"" ... I'm not sure what you're trying to say there.","2012-05-31 11:48:53","406281"
"14120017","246128","0","@ryran: By ""portably"" I did mean in other shells. Granted this discussion is bash-specific, but it's worth being aware of what idioms one is using that may unexpectedly break in dash, ash, etc. It's easy to remember that `[[ ]]` is non-portable; more suprising that `local a=$x` with no quotes around the `$x` is too. I just checked FreeBSD sh (a species of ash): here `local a=$x` only assigns the first word of `$x`'s expansion to a; similarly with `export`. But `a=$x ./foo` will (temporarily) assign the whole contents of `$x`'s expansion to a.","2012-06-01 12:15:18","272427"
"58191975","8888015","6","Little known fact - you can actually back up your whole git repo with good old fashioned `tar -czf myrepodir.tar.gz myrepodir/.`. If your repo gets all messed up due to git weirdness, delete it and restore from the `tar.gz` file to *ACTUALLY* get back to where you were before you tried this ill-fated experiment. Just make sure you have the `.` after `myrepodir/` or your `.git` and other hidden files won't be saved!","2016-02-06 08:19:17","631764"
"91306651","18243587","1","Of course you can POST an 'update'. If you keep prior versions around (and there are many reasons why you may want to do so) then your update is not idempotent and so cannot be expressed by PUT. (Or in other words everything turns into a collection when you stare at it hard enough)","2018-09-05 06:20:49","87206"
"43636223","27481639","4","this is far slower than the grep solution","2014-12-22 04:58:35","2561439"
"122346469","5767357","0","I do it allways like ```arrayWithoutRemovedItem = array.filter((item) => { return item != itemToRemove });``` which works fine. You can also remove items by a key like ```arrayWithoutRemovedItem = array.filter((item) => { return item.key != itemToRemove.key });```","2021-09-17 10:08:41","5611537"
"106285588","10757800","1","I'd use revert only if I've already pushed my commit. Otherwise, reset is a better option. Don't forget that revert creates a new commit, and usually this is not the goal.","2020-02-06 12:40:43","1615183"
"91314398","50955696","0","From many opinions I like your approach. It's very convenient and fast","2018-09-05 09:57:06","5124009"
"14144659","246128","1","@dubiousjim: I hear you and you're right that it's good to be aware. I don't care though, because I don't ever code shell scripts in anything other than bash since virtually every linux distro comes with gnu bash installed. (I don't mean as the default shell; I just mean installed and available for bash scripts.)","2012-06-01 11:36:22","406281"
"106289510","59920827","6","What does it have to do with the question asked?","2020-02-06 02:30:42","7556919"
"91320486","34504798","13","It's **not JSON** anymore if you extend the language in custom ways that require a special preprocessor to handle.","2018-09-05 12:41:56","229044"
"106291724","419185","1","@Ben Thanks. Post updated. I didn't bother finding the actual code for the logic you describe, but it rings true.","2020-02-06 03:30:05","25050"
"91320615","34504798","0","@meagar There was JSON5 spec, which supported comments, among other things. But in the end it never became standard.","2018-09-05 12:45:12","1102051"
"91321503","24618928","3","Regarding *""(there is no standard)""*, there most certainly *is* a standard that defines exactly what JSON is, and there has been since well before this answer was written.","2018-09-05 01:07:47","229044"
"106294206","2432764","0","in my case i need to check  my permission i have two private git repositories and this second account is admin of that new repo and first one is my default user account and i should grant permission to first","2020-02-06 04:35:03","308578"
"106305847","9401141","0","The only one that worked for me for a Motorola with Android 5.1","2020-02-07 01:48:12","3893550"
"43670376","373848","26","cannot use `git reset` to reset single file, you will get an error `fatal: Cannot do hard reset with paths`","2014-12-23 05:11:59","307157"
"43671399","8212184","0","Agree. But you'll not reduce 'checks for emptiness' in your code (the topic we are discussing), you'll be more safe though but it comes at a price.","2014-12-23 05:50:24","448078"
"106315536","417184","0","My old mobile provider used some MITM hackjob cache/gateway thing that prevened me from accessing certain websites, because the URL got too long. It was clearly not even close to 2000 charcters and worked fine over other internet connections. So there's that as well...","2020-02-07 10:26:13","7148080"
"106318992","522578","4","@TheRealChx101 according to my tests (Python 3.6.3) the difference is negligible and sometimes even in favour of `enumerate`.","2020-02-07 12:18:42","2897372"
"43682548","452820","3","Optional was added to Java8","2014-12-24 03:29:53","3705127"
"14201849","2866221","3","This won't work if you (or any plugin) modified Object.prototype.","2012-06-05 09:13:03","704894"
"106334403","50342967","2","👆👆👆.  The 2nd one seems dangerous. Since it creates the directory, it's not even true anymore that the dir is not present.","2020-02-07 09:38:28","142318"
"122398508","244777","0","If its jsonschema, a variant, use `{""$comment"" : ""My comment""}`","2021-09-20 07:36:44","3750381"
"91364782","80113","5","@JatinShashoo Java runtime, as bytecode interpreter, adds one more level of virtualization, so what you referred to is just Java application point of view. From operating system point of view all that is just a heap, where Java runtime process allocates some of its space as ""non-heap"" memory for processed bytecode. Rest of that OS-level heap is used as application-level heap, where object's data are stored.","2018-09-06 03:41:48","854291"
"91365001","80113","0","So, stack is ""set aside"" heap in OS-level terms. Stack is managed directly by thread using CPU instructions and heap is a region of regular memory mapped by OS.","2018-09-06 03:47:15","854291"
"122401065","40499","0","The operative implication: `f(x)` (passing a variable)  will never assign to `x` itself. There is no such thing as a variable address (_alias_) passed. _A solid language design decision._","2021-09-20 09:37:13","984823"
"43694808","67458","2","Directories on Unix/Linux should not have any whitespaces, and subsequently scripts should not be adapted to it. It's bad enough Windows supports it, with all consequences to Windows scripting, but please, for the love of whatever, no need to introduce unnecessary requirements.","2014-12-24 01:57:34","4282156"
"43701099","79936","2","Read it other answer ""Computer memory is just a series of addresses; ""heap"" and ""stack"" are inventions of the compiler."" is it true?","2014-12-24 07:03:08","2381544"
"106347331","2590281","0","Good idea, I haven't seen PATCH being used very widely, furthermore I want to keep the API's as simple as possible. But I think using PATCH would have made sense in this case.","2020-02-08 04:23:58","756976"
"122429868","68417609","0","@DavidW — hamilyon undertook a heroic edit of this post. It's now, in my opinion, quite a useful answer.","2021-09-21 11:53:37","13990016"
"91393111","16175525","0","Correcting a private branch in  remote repository can also be done by simply `git push origin (branch_name) --force`","2018-09-07 12:09:38","86967"
"106374648","47141245","4","@mckenzm: out-of-order speculative exec makes branch prediction even more valuable; as well as hiding fetch/decode bubbles, branch prediction + speculative exec removes control dependencies from critical path latency.  Code inside or after an `if()` block can execute *before* the branch condition is known.  Or for a search loop like `strlen` or `memchr`, interations can overlap.  If you had to wait for the match-or-not result to be known before running any of the next iteration, you'd bottleneck on cache load + ALU latency instead of throughput.","2020-02-10 04:03:19","224132"
"106374699","45503985","1","*While flushing pipelines is super fast*  Not really.  It's fast compared to a cache miss all the way to DRAM, but on a modern high-performance x86 (like Intel Sandybridge-family) it's about a dozen cycles.  Although fast recovery does allow it to avoid waiting for all older independent instructions to reach retirement before starting recovery, you still lose a lot of front-end cycles on a mispredict.  [What exactly happens when a skylake CPU mispredicts a branch?](//stackoverflow.com/q/50984007).  (And each cycle can be about 4 instructions of work.)  Bad for high-throughput code.","2020-02-10 04:07:48","224132"
"43726041","20030933","4","It can't possibly be ""good practice"" to use one type of join over another. Which join you use determines the data that you want. If you use a different one you're incorrect. Plus, in Oracle at least this  answer is completely wrong. It sounds completely wrong for everything and you have no proof. Do you have proof?","2014-12-26 08:51:00","458741"
"58292932","549","0","Good point @dzuelke, not to mention that the user has no direct way of checking that its sensitive data is going to be transmitted over a secure connection to a trustworthy server (i mean, checking the server certificate)","2016-02-09 12:05:29","4483113"
"43728372","20030933","0","1. I mean _try_ to use. I saw lots of people using LEFT OUTER joins everywhere without any good reason. (The joined columns were 'not null'.) In those cases it would be definitely better to use INNER joins. 2. I have added a link explaining the non-associative behaviour better than I could.","2014-12-26 11:01:45","1665673"
"91403898","37268543","5","do you have to pick the top one and squash the rest? You should edit your answer to explain how to use the interactive rebase editor in more detail","2018-09-07 05:35:51","5361412"
"14236570","9041949","0","+1 - If you want to start an activity with closed keyboard use this solution and add an onclicklistener which sets setEditTextFocus(true). Works like charme!","2012-06-06 02:36:15","745127"
"43740310","1845995","0","this is great for when you need to close the keyboard from a dialog, don't need to get an instance or anything and can assign this to all edit texts when user presses a button that closes the dialog","2014-12-26 09:38:05","3171509"
"122435418","48415961","0","I have a requirement to return some data after calculation from the callback function. How could i do that","2021-09-21 03:15:52","5662524"
"122436723","40523","0","@the_prole Yes, but just to be clear, the word ""Reference"" has a different meaning than as used by Java. Therefore pass by reference does not mean pass by pointer (although under-the-hood, pointers could be used to handle PBR, but not necessarily). It just so happens that java uses the same word for pointers. Please see my post for details ==>>  https://stackoverflow.com/questions/40480/is-java-pass-by-reference-or-pass-by-value/54373107#54373107","2021-09-21 04:04:29","1028560"
"122439128","68417609","1","@AlexWaygood I'd probably have rejected the edit (too big a change...) but I can see that it does clarify something that's a point of confusion so it probably is useful. With that in mind, I've removed my downvote.","2021-09-21 05:52:51","4657412"
"91415823","417184","0","Popular answer indeed... Google figures this post is the authority, based on the snippet provided *before* search results when searching for ""[maximum url length](https://www.google.com/search?q=maximum+url+length)"".  :)","2018-09-08 08:25:11","8112776"
"122440234","68417609","0","@DavidW yeah, I think you could argue it both ways. I wouldn't normally approve an edit that large. But I felt like it kept to the spirit of the original post, and it seemed like a fair amount of work had gone into a noble endeavour (clarifying a legitimate point of confusion), so decided to approve.","2021-09-21 06:45:07","13990016"
"58316810","16957078","0","Thanks for this answer. It seems like the only option that is really necessary is `-r`, though, if the argument is a directory. `grep pattern -r path/to/somewhere`","2016-02-09 10:12:27","3668527"
"43761611","14260056","2","The `-c` does a few things. It uses the old message by default, but it also copies authorship information (person and time). `-C` does the same thing except that it does not ask you to edit the message.","2014-12-28 02:55:53","4354956"
"43761622","20338254","5","This does the exact same thing as `git commit --amend` except that it is a 2-step process.","2014-12-28 02:58:00","4354956"
"122449713","1789952","0","includes return true for empty substring .","2021-09-22 07:01:54","9391318"
"106400446","246128","0","For many cases, `realpath` will work in place of all this; ex: `PATH_TO_SCRIPT=$(realpath $0)`. I found about `realpath` from here: https://stackoverflow.com/a/14892459/4561887. I also just posted this as a new answer here: https://stackoverflow.com/questions/59895/how-to-get-the-source-directory-of-a-bash-script-from-within-the-script-itself/60157372#60157372.","2020-02-10 07:49:58","4561887"
"91430251","105421","2","VB Syntax here:  [link](https://docs.microsoft.com/en-us/dotnet/visual-basic/programming-guide/language-features/constants-enums/how-to-iterate-through-an-enumeration)","2018-09-09 02:11:27","2567114"
"122453411","1125968","0","You might just want to delete your local folder and download it anew from your git repository by `git clone <http://github.com/your_user/your_repository.git>`","2021-09-22 09:39:43","7658051"
"122463223","4114122","0","@cascabel git revert -m <number> <full SHA1> worked fine for me! I prefer this over git revert <commit SHA1>","2021-09-22 03:38:43","4216987"
"122463231","1789952","1","@Aashiq: Yes, an empty string is a substring of every string.","2021-09-22 03:39:13","707111"
"43781497","388282","478","@G Rassovsky: All books which promise to teach X in Y hours. For example Learn C++ in 24 hours. I believe all such books are better avoided.","2014-12-29 04:47:55","1216775"
"91449133","37268543","2","Yes, leave `pick` in line 1. If you choose `squash` or `fixup` for the commit on line 1, git will show a message saying ""error: cannot 'fixup' without a previous commit"".  Then it will give you the option to fix it: ""You can fix this with 'git rebase --edit-todo' and then run 'git rebase --continue'."" or you can just abort and start over: ""Or you can abort the rebase with 'git rebase --abort'."".","2018-09-10 03:27:29","848668"
"122471890","33980745","0","@chovy I looked it up on npm and it has ~40,276,984 downloads within the past week and is a dependent of ~144k packages. I wouldn't say nobody uses it.","2021-09-22 11:02:04","2263631"
"58345266","1628584","0","After you're dun effin up `git push origin oldBranch --force`","2016-02-10 02:47:37","1266326"
"91457103","136097","4","Related talk by Raymond Hettinger on the topic: https://www.youtube.com/watch?v=HTLu2DFOdTg","2018-09-10 09:35:02","1025391"
"122474568","23839198","0","First line broken as of Git 2.32, use `git ls-files -c --ignored --exclude-standard -z | xargs -0 git rm --cached`","2021-09-23 04:00:23","909968"
"91461945","51346005","0","In JS, strings are immutable.","2018-09-10 12:05:09","2422887"
"91471252","27664932","0","git clean -f   is perfect add to the answer","2018-09-10 04:16:57","2150489"
"122482437","111119","0","Closure is just saving the outer lexical environment. if a function was created at some lexical environment that's mean its part of the memory of that lexical environment. when i will call the function a new execution context will be created and a new lexical environment will be created and it's outer reference will be point the the lexical environment which the function was created.","2021-09-23 10:39:38","8245170"
"122482521","111119","0","@NadavShlush That’s what my answer already says in fewer words, yes.","2021-09-23 10:42:59","1968"
"122482728","28507451","0","It’s true that this is a closure, but the answer doesn’t explain *anything* about how it works, or even *why* it’s a closure. In particular, the equivalent code would work e.g. in C, which doesn’t have closures.","2021-09-23 10:51:17","1968"
"91473976","50113060","5","Thanks, am so glad I read past/through so much to get to here, cause it's a pretty common use case for me as well.  Are we so atypical?","2018-09-10 05:58:03","953759"
"91474932","477578","0","@Webman: I think you're confused. That sentence continues ""then hash it, save the hash in your database -- and throw away the original"". It explicitly says to not store the plaintext code in the DB. As for captchas, yes many implementations are ineffective against half-decent pattern recognition software these days.","2018-09-10 06:31:57","57068"
"91475182","477578","0","okay I have understood that if you can send the plaintext code to user that would mean that you store this as plain in database because AFAIK it's impossible to reverse the hashing process but I can be wrong, okay for captcha I understand what you mean now","2018-09-10 06:40:08","9817602"
"91475323","477578","0","The point is that you'd generate a new random one each time. If there is a previous reset code hash still in the DB (these should expire automatically after a limited time, say, 30 minutes) you simply overwrite it. Another option is to create a payload and wrap it in something like a JWT which the server can validate upon receipt, but that's only really worth it if you're using JWTs elsewhere so you have that logic in place already.","2018-09-10 06:45:09","57068"
"14300015","271526","79","Not using null is superior to most other suggestions here. Throw exceptions, don't return or allow nulls. BTW - 'assert' keyword is useless, because it's disabled by default. Use an always-enabled failure mechanism","2012-06-08 07:40:14","1342121"
"43804155","26998181","0","This actually seems like a very good solution, thanks. I've replaced `href=""#""` with `role=""button""` everywhere and then stuck `*[role=""button""] { cursor:pointer; }` in the CSS and that seems to work very well without the need for unnecessary JS :)","2014-12-29 08:20:32","3593228"
"106468036","244777","1","if a .json file cannot support comments, perhaps there should be a parallel file with an extension (such as .jsondoc) to contain data descriptions/comments for the .json file of the same name.","2020-02-12 05:28:30","925592"
"122501568","49804612","0","This answer is similar to a detailed 2015 answer here - https://stackoverflow.com/a/31552759/984471","2021-09-24 02:45:17","984471"
"43829269","15762329","4","@RolandIllig Except the use of a `for in`-loop and the fact that the script could stopped earlier, by returning the result from the loop directly. The upvotes 	
are reasonable ;)","2014-12-30 04:13:41","1250044"
"122512322","46181","0","This kind of email foo@3.com is not validated by the regex from the answer.

I've tested this one and it worked:
^[\w.]+@[a-z]+.\w{2,3}$","2021-09-24 12:26:53","2638015"
"122515166","27571343","0","This definitely saved my day, never used git reflog before, thanks a million","2021-09-24 02:19:18","2917758"
"122520529","21718540","0","@yarin @timhc22

I am trying this but I want to restore the state after a prior merge. Any help is appreciated!

First I try:
`git revert --no-commit 5a7e223d6b2ffa5b26653e54db4644690731a7e2..HEAD`


error: commit 759cd2ae17703faa54e39cbf707c8aa86f1c8797 is a merge but no -m option was given.


I then try:
`git revert --no-commit 5a7e223d6b2ffa5b26653e54db4644690731a7e2..HEAD -m 1`

error: mainline was specified but commit bec2ac84669d0c5dfb57bc9e3eeabb225da7b685 is not a merge.","2021-09-24 06:17:34","8186068"
"122521594","1783426","0","`git fetch origin` fetches only a subset of the branches on the remote, not all of them. I have no idea how it chooses the branches it picks or what causes it to ignore a remote branch, but it only fetched about half the branches from my remote. To get the one I needed I had to specify it by name: `git fetch origin my-branch`. And then it wouldn't let me check the branch out.","2021-09-24 07:11:46","4230643"
"91512023","46342004","1","This is what worked for me once the remote server that hosted the original checkout was taken down. All the other attempts failed: `git remote get-url origin >> fatal: No such remote 'origin'`, `git config --get remote.origin.url >>`","2018-09-11 06:21:09","1330381"
"91514874","50113060","8","I think we're totally typical and ""oops I commited to master by mistake"" is the most common use-case for need to revert a handful or less of commits. Lucky this solution is so simple I have it memorized now.","2018-09-11 07:58:01","3399043"
"91515336","22021513","0","This answer is also nice because it works regardless of which branch you are on!","2018-09-11 08:14:56","7830612"
"106494598","12184274","0","sometime we need to keep test files so this solution is dangerous, we don't want to stash at all to keep stash and just need us to avoid stash command to pull the data.","2020-02-13 12:57:02","5687254"
"91523064","6989665","5","As mentioned in another answer, ""OWASP recommends the use of Argon2 as your first choice for new applications. If this is not available, PBKDF2 or scrypt should be used instead. And finally if none of the above are available, use bcrypt."" Neither MD5 nor any of the SHA hashing functions should ever be used for hashing passwords. This answer is bad advice.","2018-09-12 04:50:26","811240"
"91533298","46986753","1","reset = remove the file from stage however changes will still be there.
checkout = gets the updated file from the repository and will overrides the current file","2018-09-12 10:16:22","4380823"
"122544792","388282","0","What is your opinion on I think that Introduction to Programming with C++ for Engineers (http://home.agh.edu.pl/~cyganek/BookCpp.htm)? I think it could be added to the introductory list, in addition to C++ Primer and Programming: Principles and Practice Using C++. It is similar to PPP in spirit - focuses less on being a ""language lawyer"" and more on writing programs using the language, while introducing the necessary parts of the language. It uses/teaches (a subset of) modern c++ most of time and does pretty good job I think (similar to PPP).
It also uses some parts of recent standards.","2021-09-26 08:51:02","9423408"
"122558397","73021","0","""In C++, Ada, Pascal and other languages that support pass-by-reference, you can actually change the variable that was passed.""

Ada doesn't really depend on the actual passing mechanism (for most things) as it has parameter passing modes which have specific semantics. The modes are ""in"" (read only), ""in out"" (initial value passed in, modifiable) and ""out"" (initial value not necessarily passed in, can be updated).

For scalars the mechanism for ""in out"" is copy in/copy out which is much more cache friendly than C's pass by reference.","2021-09-27 04:09:37","1811855"
"122558737","35446009","0","Answers like this encourage new contributors like me to come up with more detailed, complete, and to-the-point answers. This is awesome !!","2021-09-27 04:46:04","5659521"
"43889048","26934693","5","This simply starts from the pwd, and will not return the path where the current script under execution is located.","2015-01-02 07:59:26","911550"
"91550091","3688108","0","Actually, `git stage` is the alias for `git add`, which is the historic command, both on Git and other SCM. It has been added in december 2008 with commit 11920d28da in the ""Git's git repository"", if I can say.","2018-09-12 06:13:20","7426932"
"58445859","901712","1","Starting jquery 1.6 there have been significant changes the way attributes and properties are dealt with. For your case following should work:
if($('#isAgeSelected').prop(""checked"")) {
    $(""#txtAge"").show();
} else {
    $(""#txtAge"").hide();
}

 The condition in if statement will simply return true or false depending upon the checked/unchecked state of the check box. For more details refer to attributes vs. properties section on [this](http://api.jquery.com/prop/) link.","2016-02-12 06:44:57","465053"
"106521655","105402","0","Well, I liked the fact that you pointed out that the `Suit[]` makes the code **0.5 ns faster** :)","2020-02-14 08:44:30","12068778"
"122569817","67976136","0","+1. Thanks for easy explanation, but request more as how in your or post's code, easy evaluation is being done. See no way how your two codes work differently.","2021-09-27 01:27:01","3693431"
"106523052","47475081","0","@user1529413 Yes. Uniqueness requires an index.","2020-02-14 09:37:50","402322"
"122572381","40523","0","if I change above example to pass hashmap of dog to foo() method add one more dog in foo method then without returning it. Call hashmap.size() in main method then it shows size increased by 1. How that works if we are working on different copies?","2021-09-27 03:00:11","5482591"
"106529903","28581216","0","This answer should not have any upvotes whatsoever. `isEmpty({})` will return `false`. `isEmpty({a: '', b: 'I am not empty'})` will return `true`","2020-02-14 01:33:19","3791358"
"106530269","47178103","0","That is not how destructuring works. This will only work for objects containing an entry with a key `'b'`","2020-02-14 01:44:08","3791358"
"58458433","34555013","2","Tail call recursion is actually very efficient in most implementations of JavaScript, and is required to be optimized in ES6.","2016-02-13 05:19:25","1078314"
"106536397","115983","1","As required targets for future file creation under various permission schemes, empty folders are clearly useful.","2020-02-14 04:56:57","303623"
"122583466","246128","0","This code fails if the directory is named `--`, as in `mkdir /tmp/--` put the script in `/tmp/--/foo.sh`, then run `cd /tmp; bash -- --/foo.sh`: this gives `dirname: unrecognized option '--/foo.sh'`.  Instead, use `SCRIPT_DIR=""$( cd -- ""$( dirname -- ""${BASH_SOURCE[0]}"" )"" &> /dev/null && pwd )""`","2021-09-28 01:48:29","377022"
"58460753","24179268","2","From version 4*, Lodash also lowercase() every other letter, be careful!","2016-02-13 08:33:28","2123547"
"14403312","1373724","94","NB: ""In actual use *today*"" may have been valid when the code was written, back in 200x. The code **will** likely remain in use beyond that specific year. (If I had a dime for every ""meh, no one will ever use a 4+-letter TLD except those specific ones"" I had to fix, I could corner the world's copper and nickel market ;))","2012-06-13 03:51:34","19746"
"122590898","11227902","1","This video is super helpful - [Branchless Programming: Why ""If"" is Sloowww... and what we can do about it!](https://youtu.be/bVJ-mWWL7cE)","2021-09-28 09:40:01","4162689"
"122592284","952946","0","simple is the best","2021-09-28 10:35:48","13726782"
"91581534","51013125","0","From mozilla's docs on it under Spread in object literals: ""Shallow-cloning (excluding prototype) or merging of objects is now possible using a shorter syntax than Object.assign()."" - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax","2018-09-13 03:31:36","3362191"
"122604857","53671249","0","I reckon you could also use a callback :D, but this is incredible.","2021-09-28 06:32:14","10177618"
"58495049","34998582","23","I think the picture got to show that it affects the local repo too.  That's is, Git pull is a combination of affecting the local repo and working copy.  Right now it seems it just affect the working copy.","2016-02-14 06:51:46","325418"
"122609834","912737","0","Using `-n` or `--dry-run` by themselves did nothing. As per @Ms01 and @Micer, you need to add `-d`, as in `git clean -nd` to show what it is going to remove.","2021-09-28 11:25:18","1337635"
"122616267","417184","0","Is this answer correct? The safest limit is 255 chars based on this. https://stackoverflow.com/questions/2659952/maximum-length-of-http-get-request","2021-09-29 08:41:40","665335"
"43936713","16956844","1","your right, `-i` slows it down what seems 10x slower at least","2015-01-04 05:58:45","629222"
"122620037","16016476","0","@pmiranda That *is* a valid email address.","2021-09-29 11:01:24","9835872"
"122620049","17642237","2","@Aravin Yes It is.","2021-09-29 11:01:48","9835872"
"122621373","16016476","0","@ruohola it has not top-level domain (separated by periods) https://datatracker.ietf.org/doc/html/rfc3696","2021-09-29 11:59:24","3541320"
"122622042","59498223","0","This answer - and a few others in this thread - do not escape the hyphen.  From what I can see (September 2021) this poses no problem in browsers - at least the Webkit variants.  However, this might change. At the time of writing PHP7.3 fails to compile the regex without escaping the hyphen. Future proof your browser side code by escaping the hyphen `\-` rather than just `-`.","2021-09-29 12:28:44","1077485"
"122622360","16016476","1","@pmiranda E.g. `http://ai` is someone's valid domain, so they could use e.g. `a@ai` as their email.","2021-09-29 12:40:25","9835872"
"122624807","16016476","0","Agreed with @ruohola – this is a valid address","2021-09-29 02:03:16","1501285"
"122629009","42622789","0","I wish you had put ConcurrentHashMap in your list of options.","2021-09-29 04:21:59","6169894"
"122631132","73021","0","@DaleStanbrough Didn't know about the cache-friendliness there for scalars; cool. 
Not sure what you mean by ""Ada doesn't really depend on the actual passing mechanism (for most things) as it has parameter passing modes which have specific semantics."" I was thinking about ""in""/""out""/""in out"" when I mentioned Ada (with ""out"" specifying update of a passed variable). Been a while since I've programmed in Ada, though, so I may be fuzzy on some of the ways terminology is used by the language nowadays","2021-09-29 05:48:15","12541"
"122632779","38987","0","if you want to merge namespaces (dot notation dicts) see this: https://stackoverflow.com/questions/56136549/how-can-i-merge-two-argparse-namespaces-in-python-2-x/69382005#69382005","2021-09-29 07:06:08","1601580"
"106605466","4456438","2","This employee has got to be a distant relative of [Little Bobby Tables](https://xkcd.com/327/).","2020-02-17 06:34:04","656243"
"43963209","16956844","0","@wired00 For sure, with `-i` it is definitely slower, but it is complicated to know how much: if you run the test with and without, probably the results of the first are cached and used while running the second. Also, it is more ""expensive"" to check a long word (`aBcDEFghIj`) than a short one (`aBc`), because there are way more possible combinations of upper/lowercase.","2015-01-05 09:13:11","1983854"
"91626634","24827594","2","As of today, September 2018, Array.prototype.some() is fully supported: [caniuse.com support table](http://kangax.github.io/compat-table/es5/#test-Array_methods_Array.prototype.some_a_href=_https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some_title=_MDN_documentation_img_src=_../mdn.png_alt=_MDN_(Mozilla_Development_Network)_logo_width=_15_height=_13_/_/a_nbsp;)","2018-09-14 10:03:31","4941356"
"91631122","22345808","0","The caret will NOT update to the most recent major version. Only minor and patch versions.","2018-09-15 06:48:24","3118684"
"43979326","52713","27","IMO this variant is imperfect, as it doesn't handle situation when your changed repository is not on the HEAD revision at the moment of  changes cleaning and you DO NOT want to update it to HEAD, and want to just clean the changes.","2015-01-05 05:27:44","1450663"
"122645128","8522874","0","This does a shallow copy, not a deep copy like OP is looking for.","2021-09-30 09:15:35","3599588"
"43985454","72156","1","If you cloned a bare repository, you may need to look at [Dave's answer](http://stackoverflow.com/a/7216269/1408717). When I cloned a bare repo, it didn't clone all of the branches. Dave's solution allowed me to clone with all of the branches.","2015-01-05 09:01:08","1408717"
"43985940","16956844","0","@fedorqui Ahh yep understood, actaully what I've been using though now is the `ack 'search text'` command, it works really nicely for what I needed it for and is very fast. Its nice because of the nice highlighting it uses.","2015-01-05 09:16:22","629222"
"58549734","31594643","14","Warning: ""git clean -x -d -f"" is irreversible and you may loose files and data in .gitignore","2016-02-16 06:20:21","1653870"
"122653013","48137430","0","Good lord, thank you. Been using git for a decade but was on a giant repo drowning all the sudden, just trying to check out a branch... This got me going!","2021-09-30 02:22:23","100258"
"106632484","5201642","0","Leaving this here in case it helps someone.  Using bash, I just define a function `squash() { git reset --soft HEAD~$1; git commit --edit -m""$(git log --format=%B --reverse HEAD..HEAD@{1})""; }` and then I can just say `squash 2` or `squash 3`.","2020-02-18 02:28:08","5074828"
"122664140","11828270","0","@adam-asdf It's not a shame. Vim is a powerful tool and it takes time learn how to use powerful tools correctly. The initial cost is more than offset over time. Not everything can be simple and obvious to users of all levels of experience.","2021-09-30 11:56:33","229044"
"106671620","417184","13","Mentioning any version of IE in 2020 update is ... strange.","2020-02-19 03:41:08","1515746"
"122694213","73021","0","""It doesn't depend"" mainly meant that when designing in Ada you think about the modes (information direction flow) rather than the mechanism - which is such a great way to design subprograms. Ada takes care of the rest.","2021-10-02 12:43:21","1811855"
"106682929","23826292","5","This definitely throws an exception if the file isn't there....","2020-02-19 10:06:50","186868"
"58595161","348234","2","So the opposite of ""add"" is ""reset""? What about ""remove""?","2016-02-17 05:53:02","129202"
"122701426","82852","0","@theX yes, the packages are very confusingly named.","2021-10-02 11:41:36","14473410"
"122701518","417142","0","It worth noting that except not all HTTP request to a web server are done via a web browser, so you can hit limits of the socket api or the web server restrictions, that also not all URL changes trigger an HTTP request (e.g. history push or hash change). So what really happens when you append 100k characters to the `window.location.href` and then try to use it in the JS engine as a value? Last time I did something closer to that, received way less characters in the `href` property that should have been appended (speaking about Chrome now).","2021-10-02 11:54:24","2216380"
"122701969","44917489","0","OP doesn't mention they want to use numpy. Python has good ways of doing this without relying on a library","2021-10-03 01:01:47","5823904"
"58596513","487300","2","The O(log n) Logarithmic complexity considered in this answer is of the base 10. Generally the standard is to calculate with base 2. One should keep in mind this fact and should not get confused. Also as mentioned by @ChrisCharabaruk the complexity denotes number of operations and not seconds.","2016-02-17 06:46:36","2720078"
"58598397","14586751","2","This is the *only* correct answer (I'm not saying this is the best answer - note the difference). Let's say, on master, I did 3 commits at t1, t3, and t5. Let's say, on branch1, I did 3 comments at t2, t4 and t6 (assume t1, t2, t3, t4, t5 and t6 are in chronological order). Any command similar to `git reset --hard HEAD~5` will only reset HEAD (may remove commits in both master and branch1). Only the `--merge` option removes the `merge`.","2016-02-17 07:51:18","495598"
"58599765","34544089","3","Does the remote branch deletion requires ""git push"" afterwards ?","2016-02-17 08:32:54","2829676"
"44050480","671132","0","As so many have mentioned it, here is a link to Roy Fielding's doctoral disseratation: http://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm","2015-01-07 03:09:22","1329426"
"106689658","58297948","0","remeber `space` after `[` -> **[` `-d**. i got error because of missing space","2020-02-20 06:00:02","6166406"
"44055387","5201642","3","`git log --one-line` or something like that will display a list of commit IDs and messages, one per line.  Very useful with this solution.","2015-01-07 05:12:26","1156377"
"44057353","59895","0","http://stackoverflow.com/questions/19313056/what-platform-independent-way-to-find-directory-of-shell-executable-in-shell-scr","2015-01-07 06:09:07","173149"
"122714977","59213597","0","Please try to read the question carefully.","2021-10-03 08:02:10","12255870"
"122718250","50053493","0","Underrated answer. I was going to post it myself but had to look through the existing 132 answers to see if anyone had said it already. If you want to remove elements by value instead of position from a collection, then that collection should probably be a Set instead of an Array.","2021-10-04 02:21:45","901641"
"106710282","58243103","1","Doesn't work for me: `user@host:/dir$ awk '/^(getCookie)/{print}' .
awk: warning: command line argument `.' is a directory: skipped`","2020-02-20 05:00:45","3980197"
"58626101","4799818","6","This answer misses the point of the OP.  Checking is a file exists is not the same as checking if you can open it.  There will be cases where a file does exist but for a variety of reasons, you can't open it.","2016-02-17 06:52:12","763269"
"58626329","29909391","3","The OP asked how to check if a file exists.  It's possible for a file to exist but for you to not be able to open it.  Therefore using opening a file as a proxy for checking if the file exists is not correct: will have false negatives.","2016-02-17 06:58:54","763269"
"106718686","60141523","5","Object references (i.e. pointers) are passed by value and primitives are also passed by value. Meaning everything is always passed by value. I think the operative term here is Pass-by-value.","2020-02-20 10:24:38","1028560"
"122735917","52704","0","Probably not what you are looking for, but of course if you are using GitHub Desktop app there is a menu item to do this.  Branch -> Discard all changes","2021-10-04 05:18:03","9545636"
"122736534","64526583","0","In fact, that's because the re-declaration of a JavaScript `let` **proposition** is not allowed.","2021-10-04 05:46:34","5896426"
"122738530","38257233","0","yes, it adds much more confusion than necessary and where there should be none.","2021-10-04 07:27:51","5896426"
"58638210","23961231","0","From your illustration, I can see there are local clone repo and remote origin repo. So there are at least two physical branches. Where is the third branch to delete? Is the third branch only a pointer pointing to a commit in the local clone repo?","2016-02-18 02:00:40","133747"
"106733423","47942152","1","Note that the OP is *not* including the time to sort in their measurement.  It's probably an overall loss to sort first before running a branch x86 loop, too, even though the non-sorted case makes the loop run a lot slower.  But sorting a big array requires a *lot* of work.","2020-02-21 11:34:19","224132"
"106733504","47942152","2","BTW, you could save an instruction in the loop by indexing relative to the end of the array.  Before the loop, set up `R2 = data + arraySize`, then start with `R1 = -arraySize`.  The bottom of the loop becomes `adds r1, r1, #1` / `bnz inner_loop`.  Compilers don't use this optimization for some reason :/  But anyway, predicated execution of the add is not fundamentally different in this case from what you can do with branchless code on other ISAs, like x86 `cmov`.  Although it's not as nice: [gcc optimization flag -O3 makes code slower than -O2](//stackoverflow.com/q/28875325)","2020-02-21 11:36:48","224132"
"106733620","47942152","2","(ARM predicated execution truly NOPs the instruction, so you can even use it on loads or stores that would fault, unlike x86 `cmov` with a memory source operand.  Most ISAs, including AArch64, only have ALU select operations.  So ARM predication can be powerful, and usable more efficiently than branchless code on most ISAs.)","2020-02-21 11:40:20","224132"
"58658010","33765206","1","`expression1 or expression2` being similar and with the same drawbacks/positives as `expression1 || expression2` in javascript","2016-02-18 01:05:59","1100265"
"122761010","1783426","0","Here, in the post-2019 future, this has become as simple as `git switch remoteBranch`. More [on switch vs checkout](https://stackoverflow.com/questions/57265785/whats-the-difference-between-git-switch-and-git-checkout-branch).","2021-10-05 04:16:08","5432315"
"106747965","51955426","0","--force is dangerous when multiple people are working on a shared branch as it blindly updates remote with your local copy.
--force-with-lease could have been better as it makes sure that remote has no commits from others since you last fetched it.","2020-02-21 07:30:50","6440463"
"122763227","46868431","0","I had about 20 images I wanted removed from various directories but `git stash --all` removed thousands of files and broke my project. What's up with that? It even removed vendor directory. I would be cautious using this. Luckily I am doing this in a local repo at home and not in production.","2021-10-05 05:56:21","1120276"
"122769789","1373724","1","Note that this doesn't catch some valid email addresses, like these emoji ones: https://mailoji.com/","2021-10-06 01:28:09","2691058"
"122770337","38257233","0","@Bekim Bacaj This is a contrived example illustrating a distinction between let and var. That is, at the end of the loop, the variable declared by let goes out of scope, whereas var remains.  It is up to the programmer to decide which constructs they opt to incorporate into their code, based on their intent, and prior experience. The intent of this example is not to cause confusion, but to give the reader a starting point to play with the let construct in creative ways to familiarize themselves with it.","2021-10-06 02:29:10","2012715"
"106763226","28072982","1","Does the ""*Getting a count*"" example work when `items` is empty?","2020-02-22 03:36:14","1048572"
"106765450","179147","0","It seems that I can amend only certain modified files into the original commit leaving any file not listed untouched: `git commit --amend -m ""New commit message"" some files`","2020-02-22 05:43:51","766233"
"122778595","68782282","0","using .jsonc extension for vs code is a great option for simple use cases","2021-10-06 10:35:46","6600269"
"122784271","9204568","0","Emails can contain multiple `@` signs (as comments), also an email doesn't have to contain a period.","2021-10-06 02:08:44","9835872"
"122784414","17642237","0","This is absolutely the best way to do the validation.","2021-10-06 02:14:03","9835872"
"122786939","10389086","0","Why all characters? Wouldn't just one be enough?","2021-10-06 03:47:05","366754"
"58691508","470376","0","Ugly is in the eye of the beholder, and I don't find this ugly at all.  It concisely make elegant use of the fact that bool is a subclass of int and that Python indexes are 0-based.  Admittedly, it's probably not the most efficient (as @SilverBackNet mentioned, both options are eval'd).  However, this works perfectly for deciding between 1 of 2 strings as @Claudiu said - I use it for this all the time.  For example: `'%d item%s to process!'%(num_items,('','s')[num_items > 1])` or `'Null hypothesis %s be rejected (p-val = %0.4f)'%((""can't"",'must')[pval<alpha],pval)`.","2016-02-19 07:49:50","1686236"
"122788572","7244456","0","> ""Remotes"" are like nicknames for the URLs of repositories - origin is one, for example. Blew my mind","2021-10-06 04:52:39","12096922"
"122789258","65855609","0","I was missing the input part, thanks a lot","2021-10-06 05:21:56","7032513"
"44145892","178325","60","It's worth mentioning (even after all this time), that `$(element).is("":visible"")` works for jQuery 1.4.4, but not for jQuery 1.3.2, under [Internet&nbsp;Explorer&nbsp;8](http://en.wikipedia.org/wiki/Internet_Explorer_8). This can be tested using [Tsvetomir Tsonev's helpful test snippet](http://stackoverflow.com/questions/178325/testing-if-something-is-hidden-with-jquery/178450#178450). Just remember to change the version of jQuery, to test under each one.","2011-02-01 03:57:34","343614"
"44146039","19572740","7","Note that `-D` *forces* the deletion. It's always better to use `-d`, which will remind if you need to do something dangerous.","2015-01-10 01:08:57","119527"
"44150841","2219560","0","@EarlJenkins Yeah, it's a little funny, but I'm glad they do go into depth even for the ""simple"" questions.","2015-01-10 09:04:48","152598"
"122796835","522578","0","Why does python not have a professional for loop syntax to perform this universally common operation?","2021-10-07 12:59:06","2585501"
"106795381","37561155","0","What about elements which are hidden beneath other items?","2020-02-24 07:58:27","7885300"
"58710122","21862907","0","And what if you want to return the ""responseObj"" outside of ""successCallback"" ... :) ... how will you do it ... ? ... cause a simple return will return it to the ""success"" callback of the ajax ... and not outside of ""successCallback"" ...","2016-02-19 04:02:57","813000"
"106803501","39437","6","Well, if people insist on making it a oneliner, you can always do `(lambda z: z.update(y) or z)(x.copy())` :P","2020-02-24 12:43:23","1961666"
"122809062","30180679","1","I like this, because you suggest return fetch, which uses promises already.","2021-10-07 12:35:48","2590616"
"122812529","46868431","0","`git stash --all` Will remove vendor directory, node_modules, .env and storage files in Laravel plus what ever else I missed. I had to composer install, recreate my .env file and recreate cache folders in storage. Terrible idea unless you want to remove untracked files plus everything that's inside your .gitignore file","2021-10-07 02:36:58","1120276"
"106811657","2079545","0","To drive the point home from @Dukeling, this answer is *not the same* as the original post. In the original post, `x` will be `-1` after it leaves the loop, while in this answer, `x` will be `0`.","2020-02-24 04:41:38","364818"
"122816025","338053","0","@EugeneLazutkin you are executing the function and trying to read the name of the result. Remove the '();' part  and yours example will e correct ;)","2021-10-07 04:51:50","453782"
"106817262","28441119","0","This works when the the accepted answer doesn't and error you're getting is ""warning: refname 'origin/master' is ambiguous."" Thank you!","2020-02-24 08:03:30","1167956"
"58727455","4682612","4","`git pull --all` or `git fetch --all` just does all ***remotes***, not branches.","2016-02-20 02:53:04","1429450"
"58727469","4754797","1","`git pull --all` or `git fetch --all` just does all ***remotes***, not branches. Your `bash` script worked, however.","2016-02-20 02:53:51","1429450"
"122832136","4682612","0","I can confirm that this command does not actually pull any additional branches","2021-10-08 10:18:07","7042795"
"44202169","4754797","5","if you run into issues with ""/"" in branch names there is a solution below using a git alias. see answer by ""nobody"" on ""answered May 15 '13 at 11:02""","2015-01-12 11:54:18","1048093"
"58756419","30479554","13","Indeed this is a common pitfall in Javascript and now I can see why `let` would be really useful. Setting event listeners in a loop no longer requires an immediatelly invoked function expression for locally scoping `i` at each iteration.","2016-02-21 08:12:08","1903781"
"58759754","35535226","15","Looking at it now, they do overlap. Only mine is succinct and tells you what to do rather than tell a story.  I assume it can be more useful therefore, especially for nowadays git versions. You can downvote it if you think it is a bad answer.","2016-02-21 11:34:02","1509695"
"58768651","122102","2","Possible duplicate of [Most elegant way to clone a JavaScript object](http://stackoverflow.com/questions/728360/most-elegant-way-to-clone-a-javascript-object)","2016-02-21 06:21:08","1946501"
"122867637","14260056","1","As @miguelmorin said, amending a commit that is not the last commit will roll back the commit tree to that particular commit and rewrite that tree. I.e., you will lose all the commits that came _after_ the comment that you edited. Have fun cherry-picking them to rebuild the commit history.","2021-10-10 08:56:23","6201440"
"122882729","16956844","0","Very slow though. Not recommended for large file systems.","2021-10-11 07:03:04","7841401"
"58801145","27664932","17","If you want exact copy of remote branch you have to follow by git clean -ffdx. Note that thare are two f.","2016-02-22 02:51:37","1169741"
"122893574","338053","0","@ikirachen I don't understand what you refer to. Could you provide a little context for your suggestion, so I can find what you are talking about?","2021-10-11 02:52:06","26394"
"122895282","179147","0","For simply rename the previous message:

`git commit --amend -m ""New commit message""`
`git push origin head -f`","2021-10-11 04:01:53","2462531"
"44262353","10757800","19","What does that mean, cherry pick the commit? In my case, I was on the wrong branch when I edited a file. I committed it then realized I was in the wrong branch. Using ""git reset --soft HEAD~1"" got me back to just before the commit, but now if I checkout the correct branch, how do I undo the changes to the file in wrong branch but instead make them (in the same named file) in the correct branch?","2015-01-13 10:05:57","943022"
"122896619","45323085","1","One option missed above which shows up faster for my particular case i just `items = []; for sublist in a: items.extend(sublist); return sublist`","2021-10-11 05:05:16","9450991"
"122908357","45323085","0","@Sara the solution fails in case the length of the elements list is not the same. For example: `[[1, 2], [3, 4], [5]]`","2021-10-12 07:28:10","10732351"
"106916508","23839198","0","TBH, this is the best answer for me, the `git rm -r --cached . && git add .` does a mess in my repo.","2020-02-27 04:13:57","236871"
"58848313","178386","4","The embedded presenation on the linked page no longer works, go to http://slideshare.net/AddyOsmani/jquery-proven-performance-tips-tricks/ instead.","2016-02-23 02:59:46","130121"
"44304779","11551718","1","Hmm.  This *could* be considered an answer, but it seems fairly clear that the OP was asking about URLs using the `http` or `https` scheme...","2015-01-15 12:20:42","294313"
"106950304","26853961","14","This may be changed when PEP-0584 is accepted. A new union operator will be implemented with the following syntax: `x | y`","2020-02-28 04:26:39","1998692"
"106950627","26853961","3","@cal97g yes, I addressed that in my answer about 10 days ago: https://stackoverflow.com/posts/26853961/revisions","2020-02-28 04:38:11","541136"
"58875997","7081","19","not sure where ""C"" came from here, since C# 5 language specification reads ""The keyword string is simply an alias for the predefined class System.String."" on page 85, paragraph 4.2.4. All high level languages are syntactic sugar over CPU instruction sets and bytecode.","2016-02-24 06:57:31","1637036"
"58877682","26744616","0","Hi Ethan, I would like to know if this workflow will hide possible conflicts on the merge. So please consider if you have two branches master and slave. If the slave has a conflict with the master and we use `git squash master` when we are checked out on the slave. what will it happen? will we hide the conflict?","2016-02-24 07:55:55","1823525"
"58884377","17972139","0","if you add -A3 is even better","2016-02-24 10:43:04","354881"
"106979231","40035233","0","Can you elaborate on how Immediately Invoked Function Expressions do not provide “code protection” and `let` does? (I assume you mean IIFE with “self invoking function”.)","2020-03-01 03:58:54","825924"
"44340893","18792061","2","Literally any construct in javascript can be returned","2015-01-15 10:20:07","122422"
"106984751","40035233","0","And why do you set `hiddenProperty` in the constructor? There is only one `hiddenProperty` for all instances in your “class”.","2020-03-01 12:52:29","825924"
"106986711","9180445","0","I actually wanted to move commits to a branch that is actually many commits behind the current branch. This answer helps in that case.","2020-03-01 03:07:55","11498773"
"122960724","58216558","0","Note that `this.checked` will **not work on a Jquery object** as outlined [here](https://stackoverflow.com/a/21123921/1526703). [This](https://stackoverflow.com/a/58215046/1526703) would work (i.e `$(this).is("":checked"")`)","2021-10-14 06:49:31","1526703"
"122961760","682343","0","if it was your first commit Just remove the .git directory and init again.","2021-10-14 07:40:05","7082956"
"44359878","13308092","1","@SnowCrash one question about your picture - how do I access `i` after allocating `y`? Do I have to pop up `y`? Swap them? What if there are a lot of local variables separating them?","2015-01-16 12:53:59","3909469"
"122965723","9329476","0","None of these options address traversing associative arrays in which the index names are just as important as the values.","2021-10-14 10:29:52","3462615"
"122965867","9329476","0","@PeterKionga-Kamau - JavaScript doesn't have associative arrays. But re indexes, three of the TL;DR ""best bets"" provide them: `forEach`, a simple old-fashioned `for` loop, and `for-in` with safeguards.","2021-10-14 10:36:58","157247"
"107004171","46961177","0","git reset [file name]

ex :  git reset  src/main/java/com/dao/ImportCsvDataDaoImpl.java","2020-03-02 10:10:47","11323252"
"107005649","22345808","0","It would be better to say ""^version Will update you to the next minor version. See semver. ^1.2.3 will use releases **from 1.2.0 up to <2.0.0.**"" so that the comparison with ~ is easier. However I realise this is a quote from npm docs - which are also confusing!","2020-03-02 11:01:16","470014"
"122972388","26410745","0","URN's should be unique, which is not the case for any subset of URLs. Misleading, if not wrong.","2021-10-14 02:49:19","3424423"
"122972439","34435000","0","A precise spatial position is both an URN, an URL and an URI. Your answer is incorrect and obscure. If you need 20 examples to exemplify a definition, your definition is not clear.","2021-10-14 02:51:08","3424423"
"58927132","35602588","4","May I ask: What's the advantage of using the module 'pathlib' instead of the module 'os' in python3 for this checking?","2016-02-25 08:55:33","2004651"
"122973870","901753","0","This is the best answer for selecting ONLY those that are checked in the first place.
$('#isAgeSelected :checked')","2021-10-14 03:41:23","26151"
"58930996","14586751","0","@Manu The `--merge` option doesn't actually remove the merge, you can use `--hard` it will also work well.  It's the reference ORIG_HEAD that's the clue here, it is set before you do a merge to where you are standing at that point. :)","2016-02-25 10:26:30","179978"
"58931770","35602588","4","`pathlib` is python's OOP solution for paths. You can do a lot more with it. If you just need to check existance, the advantage is not so big.","2016-02-25 10:44:49","5968477"
"122978535","522578","0","@user2585501. It does: `for i in range(5)` or `for i in range(len(ints))` will do the universally common operation of iterating over an index. But if you want both the item ***and*** the index, `enumerate` is a _very_ useful syntax. I use it all the time.","2021-10-14 07:10:29","9705687"
"107013732","178450","0","In the off chance it helps anyone: If you're using an animation, such as `toggle(""slow"")`, you need to use the callback option and check the visibility there.","2020-03-02 03:20:51","2957232"
"107014132","1669579","0","Isn't there an error in docs? Shouldn't be at staticmethod: ""The instance and its class are both ignored."" instead of ""The instance is ignored except for its class.""?","2020-03-02 03:33:14","2520298"
"107015531","60492563","0","One important thing more to classmethods: If you modify an attribute in the class method, all existing objects of this class which do not explicitly set this attribute will have the modified value.","2020-03-02 04:14:36","2520298"
"122990035","33273256","0","Problematic for data types like `Date`","2021-10-15 09:31:21","2572967"
"122991241","8888015","0","The question is ""How do I force how to do something"". The answer is ""how to do something else instead"". Downvoted with a vengeance.","2021-10-15 10:23:16","1885442"
"107036974","35732111","1","Note that since python 3.6, you can use `__set_name__(cls, name)` in the descriptor (`ValidateType`) to set the name in the descriptor (`self.name` and in this case also `self.attr`). This was added to not have to dive into metaclasses for this specific common use case (see PEP 487).","2020-03-03 09:56:33","1023470"
"107039506","244777","1","Officially, JSON standard doesn't support comments. In practice, most actual implementations do support comments (but in some this needs to be explicitly enabled). So: if you control the application which reads your JSON file, and only use it within that application, and the file is meant to be human-readable, and your JSON library supports them, then by all means use comments. If the file is meant to be sent to another application, e.g. over the web, and especially if it is meant to be machine-written and machine-read, then don't use comments (they are non-portable and serve no purpose).","2020-03-03 11:08:34","8278466"
"44402883","12184274","1","How to understand this command? `-- .`? Does it say checkout current last commit to current folder?","2015-01-18 05:09:42","906945"
"122996186","14220321","0","Is it time to get rid of the jQuery in this question? It's pretty legacy in 2021?","2021-10-15 02:10:37","542251"
"122996255","14220321","1","@Liam: It's just an example for an asynchronous function that accepts a callback.","2021-10-15 02:13:20","218196"
"122996853","14220321","0","Makes sense, I've made a tweak to the title to de-emphasise the jQuery","2021-10-15 02:36:10","542251"
"122997203","14220321","0","@Liam: Thank you!","2021-10-15 02:49:36","218196"
"123001765","5767357","0","Using `index !== -1` is a bit more performant than using `index > -1`.","2021-10-15 06:17:35","2808572"
"58970100","35644413","3","Can you explain how your answer improves upon the other answers, or how it is sufficiently different from them?","2016-02-26 06:10:08","983430"
"58970254","35644413","0","not much complex to remember, will cover all patterns(case-senstivity -> off, includes file-names and line number and will do recursively search etc) and using ""*"" in the end will search all directories (no need to specify any path or directory name).","2016-02-26 06:15:40","4699129"
"58970748","35644413","0","Sorry, I should've been clearer: it would be great if you could include that explanation in your answer. As it stands, especially with so many other similar answers already, it is hard to see from such a short answer what the benefit of trying _it_ over the accepted answer or one of the upvoted ones would be.","2016-02-26 06:35:01","983430"
"44422472","9113274","4","James, I would discourage your class because clever is nice to write but in production code that many people will maintain and update, clever is extra work. If it makes a major saving or will be used a lot  - so the savings is big and people will become familiar with it - it is worth it, but in most cases it slows down people trying to read and update the code and introduces a possible source bugs in the future. Less code is better :) less complexity is even better.","2015-01-19 04:00:32","292896"
"123014206","60987167","0","this will also update *git status*  **Your branch is ahead of 'origin/master' by n commits** to the new one","2021-10-16 01:26:22","8682074"
"123015773","35066091","0","This should be the accepted answer","2021-10-16 03:14:00","27658"
"107074017","1026069","1","```str.toLowerCase().replace(/\b(\w)/g, s => s.toUpperCase())```","2020-03-04 11:17:20","11468327"
"44449986","2633580","0","@konsolebox, what are you trying to defend against? I'm generally a fan of inlining logical conditionals, but what was the specific error that you were seeing in the pushd? I'd match rather find a way to handle it directly instead of returning an empty SCRIPT_DIR.","2015-01-19 08:03:31","315943"
"59017181","18287583","0","in java we can do: `someArray = InitArray(someArray)` assuming we have this:  `static int [] InitArray( int[] arr){ ... return ...}`","2016-02-27 11:06:27","3613893"
"107095249","662454","0","I liked this answer the best. Just the stack of papers alone helped my mind form a link to what is going on, so thanks for using simple analogies.","2020-03-04 11:06:33","118191"
"107096055","26853961","1","Ah yes, the union operator! If it works for sets, why shouldn't it work for dicts? Really looking forward to PEP 584.","2020-03-05 12:08:07","7212563"
"107097684","2389423","0","This only reset the local copy.  When you then try to push to apply the change to GitHub you get an error: ""Updates were rejected because the tip of your current branch is behind.""  This message suggests gt pull. If you follow the suggestion the you end up right where you left off. Thus this answer is incomplete. What magical incantation do you need to push to GitHub?","2020-03-05 02:20:56","2532437"
"59020460","244858","13","When JSON is used for human-intended configuration files, they should be annotated for humans to understand better. Annotated, such file is no longer valid JSON, but there are solutions. For example, Google's GYP supports #-style comments. JSON.Minify will help you discard C/C++ style comments from your input file.","2016-02-27 01:59:59","625904"
"59021207","19873535","0","Honestly, if that's the route you wanted to take, I'd avoid the (IMO confusing and potentially dangerous if you don't know what you're doing) jaunt through .git directory in the first place, and just do it with some normal commands with some ""git log"" parsing (using appropriate flags to show branches, and to figure out which shasum you want to checkout a new branch from), and then do it.  Then, remove the wonky-named branch.  I _despise_ that git insists that you need to understand all of its inner workings to do some things, but greatly appreciate that you _can_ do those things.","2016-02-27 02:37:58","588204"
"59021273","30437750","1","Note that this situation might also arise on a Mac, which is _also_ (exceptionally annoyingly) case insensitive in its file system.","2016-02-27 02:41:07","588204"
"44472836","541672","6","How does this differ from other answers?","2015-01-20 12:18:20","151019"
"59023423","18287583","0","You are correct. That's a possible alternative for a simple pass-by-reference. But pass-by-reference can do more powerful things. e.g. it could assign multiple values: e.g. `int[] array1; int[] array2; InnitArrays(out array1, out array2);` assuming that you create a method `static void InitArray(out int[] a1, out int[] a2){...}`","2016-02-27 04:28:14","1833961"
"59032089","176264","10","Well, URI and URL look the same in some fonts.","2016-02-27 11:20:26","1172541"
"107109933","23961231","1","For the sake of future readers: What @Kermit_ice_tea is talking about above is a *local branch* (as described in this answer), not a *remote-tracking branch*. When a *local branch* has an ""upstream branch"" configured for it, it will by default pull from and push to that remote branch.

A *local branch* that has an ""upstream branch"" set on it is [referred to as a ""tracking branch""](https://git-scm.com/book/en/v2/Git-Branching-Remote-Branches#_tracking_branches), so it's easy to confuse with *remote-tracking branches* due to the similar terminology.","2020-03-05 11:21:50","1009155"
"107113496","29505062","0","How is this any better than the accepted answer from 2008, aside from going off-topic with the file switches?","2020-03-05 01:14:07","1269037"
"107113546","26749299","0","[AGAIN](https://stackoverflow.com/questions/59838/how-to-check-if-a-directory-exists-in-a-bash-shell-script#comment107113517_23077923), this answer was already given in 2008. What's the point in repeating it?!","2020-03-05 01:15:36","1269037"
"107113580","58297948","4","[AGAIN](https://stackoverflow.com/questions/59838/how-to-check-if-a-directory-exists-in-a-bash-shell-script#comment107113517_23077923), this answer was already given in 2008, with more useful explanations. The only new thing here is the online playground.","2020-03-05 01:16:21","1269037"
"44488816","2633580","0","@Fuwjax Natural practice to avoid doing `popd` in cases (even when rare) where `pushd` fails.  And in case `pushd` fails, what do you think should be the value of `SCRIPT_DIR`? The action may vary depending on what may seem logical or what one user could prefer but certainly, doing `popd` is wrong.","2015-01-20 07:21:28","445221"
"107118069","19506355","0","For those of you following the instructions, you can then run ""git commit"" then ""git push"" to see the fork changes on your forked GitHub repo","2020-03-05 03:14:28","2799707"
"107119451","6376039","6","If Git asks you ""More?"" when you try these commands, use the alternate syntax on this answer: https://stackoverflow.com/a/14204318/823470","2020-03-05 03:50:09","823470"
"107119592","40938883","0","If you can afford adding a package to your project - this answer is best","2020-03-05 03:53:44","3844376"
"107120483","12791414","0","For those reading this long after the answer was posted, at the time, the (now accepted) answer did not have this content in it; later on this answer's content was (very narrowly) suggested edit'd in to the accepted one. This is one of those weird edge cases where Stack Overflow's ""the best answer rises to the top system"" kinda fails, on one hand I'm happy the accepted answer has the right information because most readers won't look past the top answer, but I'm not thrilled as to how we got here... I hope future readers will not think this answer is just a copy/paste.","2020-03-05 04:17:36","4975230"
"107141759","417142","0","@o0'.A good example of a long URL is when I'm asking Clickatell to send a message.  I have to include the message itself in URL format (e.g. space is %20) as well as the other parameters.","2020-03-06 09:41:56","1695672"
"59077086","20195320","0","@Martin One of the projects I'm working on is +8 years old with +80 developers actively coding. Git sometimes fails to clean it on the first pass.","2016-02-29 01:10:37","1074245"
"44533649","237104","1","IE9 supports `indexOf()` as per http://www.w3schools.com/jsref/jsref_indexof_array.asp. If older browser better approach is to define `prototype` for `indexOf()` function as given in [Array.indexOf in Internet Explorer](http://soledadpenades.com/2007/05/17/arrayindexof-in-internet-explorer/)","2015-01-21 09:42:49","696627"
"44534280","21232996","2","This command sets up tracking to the correct branch without the need to push anything. Thank you.","2015-01-21 10:03:14","3291846"
"107158523","16047306","0","Elasticity & Automation","2020-03-06 07:06:58","10315369"
"59090977","1473742","2","now 2016, and i still can't use .include and .indexOf properly on `non primitive` type.","2016-02-29 06:47:38","2368696"
"44548771","22343224","56","FYI you can prevent prefixes or use a custom one by doing: `npm config set save-prefix=''`. (Stick `~` in the quotes if that's what you prefer.) I personally do this and shrinkwrap for things in production.","2015-01-22 09:48:35","455581"
"107166537","59905307","0","And for a full, 100% clean repo folder with no extra files, run `git clean -xdf`. This will delete any and all files that git is not aware of, and will make your folder match what is in git's object list exactly. Note that you can add `-n` (e.g. `git clean -nxdf`) to perform a ""what-if"" and it will tell you what it will delete without actually doing anything. ([git clean](https://git-scm.com/docs/git-clean))","2020-03-07 05:56:35","334053"
"59107881","35539401","3","At least this is a different approach. :) Another way, that would remember the deleted files in the reflog but not in any branches, would be: `git add .` `git commit -m 'about to delete'` `git reset --hard HEAD~`","2016-03-01 06:10:30","99777"
"107193093","59406346","0","Perhaps qualify *""all browsers""*?","2020-03-08 05:25:17","63550"
"107194077","56052581","0","@aabbccsmith: In what way? Can you elaborate?","2020-03-08 06:26:53","63550"
"44575624","19670755","0","@Joshcodes can you say more about the conflict resolution process? In this case, if the username already exists is the client expected to prompt the end user for a different username?  What if the client is actually trying to use POST to change the username?  Should PUT requests still be used for updating parameters, while POST is used for creating objects whether it be one at a time or several?  Thanks.","2015-01-22 10:41:13","1424669"
"44578382","19670755","0","@BFar2 if the username already exists then the client should prompt the user. To change the username, assuming the username is part of an already created resource which needs modified, PUT would be used because you are correct, POST is used for create, always and PUT for updates.","2015-01-23 01:09:44","965382"
"59131545","32108184","35","`Object.keys(new Date()).length === 0`; so this answer can be misleading.","2016-03-01 04:34:38","271351"
"59131693","19813797","4","`Object.getOwnPropertyNames(new Date()).length === 0`; so this answer can be misleading.","2016-03-01 04:37:31","271351"
"59131807","10375211","0","`Object.keys(new Date()).length === 0`; so this answer can be misleading.","2016-03-01 04:40:09","271351"
"59131816","7954503","2","`Object.keys(new Date()).length === 0`; so this answer can be misleading.","2016-03-01 04:40:21","271351"
"59132166","2064441","0","Guava's `Optional` is not good in this case as `transform` throws an NPE when the function returns `null`.","2016-03-01 04:48:00","180719"
"59136440","470376","13","I've done a similar trick -- only once or twice, but done it -- by indexing into a dictionary with `True` and `False` as the keys:  `{True:trueValue, False:falseValue}[test]`  I don't know whether this is any less efficient, but it does at least avoid the whole ""elegant"" vs. ""ugly"" debate.  There's no ambiguity that you're dealing with a boolean rather than an int.","2016-03-01 06:43:37","1905392"
"44588641","16957078","0","It works nice, but if i add ""-i"" to ignore case, it return some fake result. Anybody encountered the same problem?","2015-01-23 09:53:55","988900"
"107213307","56052581","0","The edit certainly cleared it up. Regardless, loops on strings like this shouldn't be endorsed as they are rather slow and could cause major lag on the main thread in large scale applications where this is ran multiple times per second.","2020-03-09 01:13:28","7450752"
"107229324","394814","1","Nice explanation, but short circuiting doesn't mean what you think it means - it means that the rest of the *condition* isn't evaluated if the 'truthiness' of the entire condition can be decided early. Statement 'b' is never evaluated even in languages without short circuiting.  Ex: if (arr != null && arr[0] = 1)...","2020-03-09 11:35:39","1331672"
"107229466","67458","2","Spaces in filenames are evil, I'm currently on a mission, with Wowbagger the Infinitely Prolonged, to insult all those who use them :-)","2020-03-09 11:46:00","14860"
"44605254","19506355","2","This updates my local fork, but my fork on Github.com still says ""43 commits behind"". I had to use lobzik's technique to create a pull request for myself to merge the master changes into my Github.com fork.","2015-01-23 05:38:08","1584531"
"44606228","27664932","105","also, `git clean -d -f` if there are untracked directories present.","2015-01-23 06:09:14","155"
"44637050","27608651","1","You can only define one class per file.  This is not including nested and inner classes.  Considering this will be something a new programmer will be reading, you should explain this to the user; allowing them to duplicate the code on their machine.","2015-01-25 01:30:21","1684768"
"44643356","25476365","3","You probably meant `obj2 = Object.assign({}, obj1)`. Your current code is equivalent to `obj2 = obj1`.","2015-01-25 11:10:53","1529630"
"107283350","8888015","0","Mecurial has `hg update` yet there is no equivalent in git...","2020-03-11 03:42:53","1255427"
"107283560","33735369","1","`function contains(arr, obj) { return new Set(arr).has(obj); }`","2020-03-11 03:48:45","2288986"
"107286634","38990","8","Don't use this as it is very inefficient.  (See the timeit results below.)  It may have been necessary in the Py2 days if a wrapper function was not an option, but those days are now past.","2020-03-11 05:22:45","450917"
"107286917","26853961","0","@GringoSuave Are you saying that it needs a summary? Because I would characterize the first part as a summary. If you say it's too long, what would you like to cut from this answer, that you think, in the cutting, would create value for users? Cheers!","2020-03-11 05:32:55","541136"
"107295632","57880896","1","Worked fine for me.","2020-03-12 12:18:28","1191147"
"44670903","11828270","127","It's really easy to learn the basics of vim, and it's built right into your system. In terminal type ""vimtutor"". 25 minutes later you will be going faster than your usual text editor!","2015-01-26 12:11:06","1141160"
"107297856","8888015","0","It would be more consistent if you could do `git pull --force` and it would just overwrite your local branch. Seeing as you can do the opposite, overwriting the remote by `git push --force`","2020-03-12 03:34:17","129202"
"59225753","31869042","2","This will overwrite modified files (files that were previously checked in) and it will remove untracked files (files that have never been checked in). Exactly what I was looking for, thanks!","2016-03-03 04:01:46","266535"
"59226136","406408","35","I would not go so far as to say that this is something regex is bad at. The convenience of this solution is pretty obvious and the performance hit compared to a programmatic search is often going to be unimportant.","2016-03-03 04:09:36","1250422"
"107311480","1026069","8","Capitalize every word: `str.replace(/(^\w|\s\w)/g, m => m.toUpperCase())`","2020-03-12 01:14:26","1602301"
"44686309","12946734","1","True good point Steve. What I often do is have that value as a constant, e.g. public static final String UNSET=""__unset"" ... private String field = UNSET ...   then   private boolean isSet() { return UNSET.equals(field); }","2015-01-26 07:45:50","1342121"
"44700424","59916","4","@T.J.Crowder @VolodymyrM.Lisivka you could also use `$(realpath ""$0"")` but note that neither readlink nor readpath will work on Mac OSX.  http://stackoverflow.com/questions/3572030/bash-script-absolute-path-with-osx","2015-01-27 07:04:14","99777"
"107329096","26853961","11","Hi, the top is a summary, yes.  Up to you.  The whole thing would be a great blog post.  Note Py 3.4 and below are EOL, 3.5 approaching EOL in 2020-09.","2020-03-13 02:09:26","450917"
"59263070","35288","9","An additional note to Mikko's comment: `--` is not a git command and not special to git. It is a bash built-in to signify the end of command options. You can use it with many other bash commands too.","2016-03-04 01:04:33","1283512"
"107342297","58197087","2","So, what exactly is the advantage of this method?
What I see is that it's a terribly inefficient and error-prone method of performing a simple task. The result is not parsed again so it returns an array of strings instead of the input type. Even if it was parsed, on arrays of objects it would remove all function members.
I don't see any good reason to ever do something like that but given that there are two people who thought this was a good idea, there must be something I'm missing.","2020-03-13 01:38:07","3314225"
"44716482","11828573","25","Remember you can use ctrl+c if you can't use Esc (like me because my shell is in TotalTerminal). http://vim.wikia.com/wiki/Avoid_the_escape_key","2015-01-27 03:12:09","205696"
"59274789","35288","18","@matthaeus it's also neither specific to bash nor a shell feature at all. It's a convention implemented in many different commands (and supported by getopt).","2016-03-04 05:47:19","893"
"59287166","26802255","1","I've had the same problem. On Mac Chrome 48.0.2564.116 and on Mac Safari 9.0.3. Notably, Mac Firefox 43.0 doesn't copy the character, but sticks extra endlines between them.

What should be done about this?","2016-03-05 01:34:58","751061"
"107362753","59620663","5","But keep in mind that --hard will completely discard all the changes that were made in the last commit as well as the content of the index.","2020-03-14 11:58:44","5923488"
"44757399","12184274","91","Be careful running git clean -df. If you don't understand what it does, you might be deleting files you mean to keep, like robots.txt, uploaded files, etc.","2015-01-28 02:57:56","1492261"
"59317179","394814","150","Be careful with order of operations when using this. For example, the line `z = 3 + x if x < y else y`. If `x=2` and `y=1`, you might expect that to yield 4, but it would actually yield 1. `z = 3 + (x if x > y else y)` is the correct usage.","2016-03-06 09:23:11","359340"
"59321377","5189560","2","For squashing upto THE first commit see this - http://stackoverflow.com/questions/1657017/how-to-squash-all-git-commits-into-one/9254257#9254257","2016-03-06 01:26:26","3285138"
"107400466","16957078","0","I have tried and I do not get any filename, only content being displayed, any idea what I am doing wrong ?","2020-03-16 09:28:22","2127277"
"44771401","14206538","4","I wonder where ""78"" comes from? Maybe that original 1999 article was written under the assumption that people are reading their email in 80x24 terminal windows?  Still, good advice!","2015-01-28 09:23:16","12484"
"44771869","14206538","4","Well. IBM punch cards were also 80 columns.  With two characters taken up by a carriage return and a line feed you get 78.","2015-01-28 09:39:28","16322"
"44772001","14206538","2","Haha. :-) I was actually considering referencing 1981-era 80x25 CGA monitors in my comment, but you reached even further back! ...I wasn't around for the punch card era, but were they 80 bytes across, or only 80 bits?","2015-01-28 09:43:22","12484"
"59340057","16957078","4","You can add --colour/--color to highlight your search term as well. Eg `grep -rnw --colour . -e ""terminal""`","2016-03-07 05:27:46","2570775"
"44785100","14206538","2","Not exactly a byte (8 bits).  It encoded one character in each column.","2015-01-29 08:44:09","16322"
"44787455","10976934","5","Not having comments in JSON feels wrong. Formatting (spaces, linefeeds) _are_ allowed in JSON and there is no fundamental difference between formatting and comments.","2015-01-29 09:55:56","2205033"
"107416113","6117092","0","great,  Ive using this :)","2020-03-16 07:07:39","7724301"
"107432482","3674520","0","This does not work if the last part of $0 is a symbolic link pointing to an entry of another directory (`ln -s ../bin64/foo /usr/bin/foo`).","2020-03-17 11:20:54","601203"
"107432507","35374073","0","You should add double quotes surrounding all the right hand side: `DIR=""$(dirname ""$(readlink -f ""$0"")"")""`","2020-03-17 11:22:08","601203"
"107451079","2432799","1","When I tried this I got `fatal: No such remote 'origin'`  I could only get it to work after running `git remote add origin new.git.url/here` then `git push --set-upstream origin master`","2020-03-17 11:49:14","442665"
"44826814","2590281","5","I'm trying to understand, but using PUT to create something would only make sense if the client knows for sure that the resource doesn't exist yet, right? Following the blog example, say you have created hundreds of blog posts in a couple of years, then accidentally pick the same title as you did for a post two years ago. Now you have gone and replaced that post, which wasn't intended.

So using PUT to create would require the client to track what is taken and what is not, and could lead to accidents and unintended side effects, as well as having routes that do two entirely different things?","2015-01-30 09:01:22","1663043"
"107461589","7244321","1","Here you go - https://github.com/KirstieJane/STEMMRoleModels/wiki/Syncing-your-fork-to-the-original-repository-via-the-browser. Simple and easy","2020-03-18 10:40:38","3158217"
"107470790","26043320","0","One line solution.","2020-03-18 03:33:54","1324366"
"59417010","34283281","94","This doesn't recursively copy so doesn't really offer a solution to the problem of cloning an object.","2016-03-08 07:56:53","373514"
"107506081","53185164","0","I used the correlated sub query","2020-03-19 06:14:48","1195946"
"44907343","244777","22","JSON5 supports comments: http://stackoverflow.com/a/7901053/108238","2015-02-02 11:13:53","108238"
"59472189","2003515","23","I had to run `git branch -D Branch_Name` to get rid of the local branch","2016-03-10 01:32:06","5361412"
"59478322","35020326","2","_git checkout . --theirs_  resolved my problem thanks","2016-03-10 06:53:00","5404301"
"44936962","2590281","5","You are correct. PUTting a blog post at the same url as an existing one would cause an update to that existing post (although you could obviously check first with a GET). This indicates why it would be a bad idea to use just the title as the URL. It would however work anywhere there was a natural key in the data... which in my experience is rare. Or if you used GUIDs","2015-02-03 05:20:12","23963"
"59516639","21393658","2","Could you please consider a different analogy for O(1)?  The engineer in me wants to pull out a discussion about RF impedance due to obstructions.","2016-03-10 11:02:28","512923"
"44969642","26299506","12","I love the ability to see the actual change before it's discarded.","2015-02-03 09:42:30","814145"
"59537188","10113231","5","Best answer. The highest accepted answer left me in my case on detached head. I switched back to local master branch and ran `git merge -X theirs origin/master`","2016-03-11 12:46:21","1310375"
"44981688","178450","2","Not working for element that have parent  `overflow: hidden;`","2015-02-04 08:03:57","3034747"
"44999339","2386013","2","Arguments against `@Nullable`/`@NotNull` for ""compatibility"" are missing the point. They are only there to help tools (from a static analysis) ensure that these basic contracts are met - they do *not* replace proper null handling, when such is appropriate per the contract (or possible per the input source). While it would be *awesome* if Java and C# (and the run-times) actually supported not-null reference types in the Type System, using better static analysis tooling (and explicit annotated contracts) goes a long way to reduce the 100 trillion dollar mistake that is Algo, is Java, is C# ..","2015-02-04 04:05:06","2864740"
"59554871","27727752","2","Also relevant, the [ES7 compatibility table](http://kangax.github.io/compat-table/esnext/#test-Array.prototype.includes) (looks like chrome supports it now)","2016-03-11 08:25:10","266535"
"45014661","23905052","4","unless the script was sourced with . or 'source' in which case it will still be whatever script sourced it, or, if from the command line, '-bash' (tty login) or 'bash' (invoked via 'bash -l') or '/bin/bash' (invoked as an interactive non-login shell)","2015-02-05 12:07:46","549506"
"45014740","59895","28","anyone who lets people sabotage their system in that way shouldn't leave it up to bash to detect such problems... much less hire people capable of making that kind of mistake. I have never had, in the 25 years of using bash, seen this kind of thing happen anywhere....   this is why we have things like perl and practices such as taint checking (i will probably be flamed for saying that :)","2015-02-05 12:12:36","549506"
"45014978","11828573","27","`:x` == `ZZ` but `:x` != `:wq`. `:x` write file iff file has changed, `:wq` write file always (matter i.e. when using `inotify`).","2015-02-05 12:27:13","1017941"
"45022009","25119481","0","This IS the answer. Only method that works cross version. I came back to this question to post this answer cause I didnt think anyone else knew","2015-02-05 07:23:10","1476099"
"45030097","8212184","0","""Even the man that invented null considers it his ""billion-dollar mistake"" - null was there before anything was invented. One can invent set of rules to deal with it in specific way but this will be 'just another functionally complete system'. I would like to know how much would it cost to deal with subtle bugs in such non fail fast system. May be we are close to compare such systems because of new trends.","2015-02-05 11:32:25","448078"
"45051712","25446740","2","As your fiddle notes, #inner has to have a width set on it.","2015-02-05 09:06:57","274561"
"45053519","167365","0","Also check out the ""-m"" option to ""git checkout -m"" - it allows you to extract the different flies back out into your workspace","2015-02-05 10:06:41","468252"
"45055624","21890252","0","you might like to count to the branch or commit with something like `git rev-list @{1}..head --count`","2015-02-05 11:36:01","1240268"
"59623150","34531722","3","According to your regex ""_..............kamal@gmail.com"" is valid, which should not be!","2016-03-14 10:38:41","4414367"
"59623439","31311899","0","Nice try: 2 updates here: For match ranges, we provide `{min,max}`. A blank `min` is error, but can have a blank `max`. I mean `[a-z]{,2}` is wrong, write as `{0,2}`. Moreover: your regex shows `kamal@_gmail.com` as valid which is not!","2016-03-14 10:46:14","4414367"
"59634405","8525002","36","This answer should be up top. If you are having this dilemma, chances are you are actually in need of a `button`. And IE9 is quickly losing market shares, fortunately, and the 1px active effect should not prevent us to use semantic markup. `<a>` is a link, it's meant to send you somewhere, for actions we have `<button>`'s.","2016-03-14 03:00:15","416714"
"59642270","417184","95","Note that IE11 [won't bookmark URLs longer than 260 characters](https://connect.microsoft.com/IE/feedbackdetail/view/837865/issue-with-add-to-favorites-in-ie10-and-ie11).  I'm unsure if Edge has the same limitation.","2016-03-14 06:05:26","18192"
"59671213","79936","2","So stacks and heaps are abstractions apparently created with real data structures. But you're missing one point, who creates and is responsible for the lifecycle of a stack and heap? Is it the operating system? And how exactly are these stack and heap created? If you don't want to include this information directly in your answer, can you please link to a book or a source where this is explained in detail? Also, your enumerations could be better and the points of the enumerations could be ordered in a more logical way!","2016-03-15 11:24:03","3924118"
"59720203","348234","23","@Jonny, the index (aka staging area) contains *all* the files, not just changed files.  It ""starts life"" (when you check out a commit or clone a repo) as a copy of all the files in the commit pointed to by HEAD.  So if you *remove* a file from the index (`git rm --cached`) it means you are preparing to make a commit that *deletes* that file.  `git reset HEAD <filename>` on the other hand will copy the file from HEAD to the index, so that the next commit won't show any changes being made to that file.","2016-03-16 12:27:34","5419599"
"59722056","14206538","4","@JonSchneider - 78 is quite specific, and may relate to readability of text (from a usability perspective given Nielsen's background), which is best between [50-60, and a maximum of 75](http://baymard.com/blog/line-length-readability).","2016-03-16 01:06:54","1401200"
"59745537","7866699","0","I don't think this is true at least for App with database ... so if I have a POST  */createUser/diego  and PUT */createUser/jose ,  and I clicked twice  and both with the method persisted() , it will insert 4 records.","2016-03-16 10:58:26","3739258"
"59757940","7866699","0","@diegomatos-keke: You are not supposed to PUT or POST to a verb URI like ""createUser"". You are supposed to POST to '*/users' to create Diego and PUT to '*/users/diego' to update Diego. If you click twice for the POST, you will create 2 Diegos. But if you click twice for the PUT, you will update Diego twice, but not create 2 Diegos.","2016-03-17 08:42:32","83741"
"59805330","23886515","11","The question was about list indexes; since they start from 0 there is little point in starting from other number since the indexes would be wrong (yes, the OP said it wrong in the question as well). Otherwise, calling the variable that is tuple of `index, item` just `index` is very misleading, as you noted. Just use `for index, item in enumerate(ints)`.","2016-03-18 09:18:40","918959"
"59865857","477578","0","@JensRoland Thanks for the great answer! Can you please elaborate on this - ""The delay is not a delay before returning the response to the browser. It is more like a timeout ... during which login attempts to a specific account ... will not be accepted or evaluated at all."" - I understand you're basically saying that using something like sleep(30) before the ""invalid login details"" response is sent won't do, since the bot/hacker can continue submitting login attempts with separate requests executed in parallel; but how do you suggest enforcing a timeout then? Disabling the form's login button?","2016-03-20 10:06:20","993623"
"59867155","7954503","3","Depends if you consider a date being always ""full"" despite never exposing keys. But I agree that if that's your plan, adding some supplementary instanceof check for Date constructor is a good option.","2016-03-20 11:31:55","330911"
"59926666","6591218","0","interesting, it seems that the rename is temporarily case insensitive, even on OSX.  Starting from **FB12.show_hide_cols**, **-m fb12.show_hide_cols** got me an existing branch error.  But **-m fb12.show_hide_col**, then **-m fb12.show_hide_cols** got me where I wanted.  afterwards, **git branch** only shows the one renamed branch, just like I wanted.","2016-03-22 01:01:27","1394353"
"59936411","1125968","161","`git reset --hard origin/branch_to_overwrite`","2016-03-22 08:37:48","744975"
"59963798","178325","4","This is related although a different question: http://stackoverflow.com/questions/17425543/difference-between-hidden-and-notvisible-in-jquery/17426800#17426800","2016-03-22 07:20:54","125981"
"60056835","16956844","3","@Nathan after all this time (and more than one million views!) I noticed you can add the parameter `-I` (capital i) to exclude binary files. I think this was the key point here, instead of `exclude` or `include`. Better late than never :D","2016-03-24 11:47:20","1983854"
"60081951","36177142","29","This doesn't address deep merges. https://gist.github.com/jimbol/5d5a3e3875c34abcf60a","2016-03-25 06:10:03","965352"
"60088610","33275647","3","The git command for deleting a remote branch sucks and I tend to forget it (both new and old). Luckily there are GUI tools that have the option. Git Gui, TortoiseGit and GitHub Desktop have it - I wish Git Extensions had this functionality too. Anyway, what I remember is to start Git Gui from within Git Extensions when I need to delete a remote branch.","2016-03-25 09:59:21","1025264"
"60092279","826814","0","Make the things you want selectable - selectable... and nothing else.","2016-03-26 01:28:06","1399456"
"60135173","487278","0","lets calculate this `""By the time you get to 200 towns there isn't enough time left in the universe to solve the problem with traditional computers.""` if you were using a 2.8 GHz computer it would take 26.3 - isch towns to span the current age of the universe and 45.2 - isch towns to span till a time where the last black hole has evaporated(10^40 - isch years). So 200 towns is a little bit overkill :/","2016-03-27 09:15:07","5937365"
"60153643","14889969","42","@MooingDuck 'Cause it won't make a difference - that value can be anything, but it still will be in the bounds of these thresholds. So why show a random value when you already know the limits? Although I agree that you could show one for the sake of completeness, and 'just for the heck of it'.","2016-03-28 12:58:51","4037019"
"60164274","14889969","44","@cst1992: Right now his slowest timing is TTFFTTFFTTFF, which seems, to my human eye, quite predictable. Random is inherently unpredictable, so it's entirely possible it would be slower still, and thus outside the limits shown here.  OTOH, it could be that TTFFTTFF perfectly hits the pathological case.  Can't tell, since he didn't show the timings for random.","2016-03-28 06:27:16","845092"
"60167708","36269686","0","Won't this result in ""the Eiffel Tower"" being turned into ""The eiffel tower""? The original question involved _not_ changing the case of the other letters.","2016-03-28 08:12:57","5764553"
"60207450","163659","1","IMO This answer could be improved by adding detail about [setting the tools](https://git-scm.com/book/en/v2/Customizing-Git-Git-Configuration#External-Merge-and-Diff-Tools), and if you describe what happens if you start using the wrong gui and need to switch (does that ruin the merge?)","2016-03-29 05:27:45","573778"
"60217046","16956844","0","@fedorqui Thanks! And I know, 1.5 million views.. pretty crazy, right? I appreciate the answer you gave 2 years ago :)","2016-03-29 10:11:45","954986"
"60219105","23277075","0","That's cool and all but suppose o has a property a.  Now does oo.hasOwnProperty('a')?","2016-03-29 11:54:35","420667"
"60221588","23277075","0","No -- o is essentially added as a prototype of oo. This is likely not going to be the desired behavior, which is why 99.9% of the serialize() methods I write use the JSON approach mentioned above. I basically always use JSON, and there're other caveats exposed when using Object.create.","2016-03-30 02:30:18","1153121"
"60248968","36269686","0","Yes @AndrewMyers i made the edit which wouldn't change the case of the other letters","2016-03-30 03:10:12","4841641"